<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建参考</title>
      <link href="/posts/9eb9.html"/>
      <url>/posts/9eb9.html</url>
      
        <content type="html"><![CDATA[<p>博客主题采用butterfly，参考了数位大佬的教程，以jerry大佬的主题为基础<a href="https://butterfly.js.org/">https://butterfly.js.org/</a><br>参考了安知鱼大佬的方案<a href="https://blog.anheyu.com/">https://blog.anheyu.com/</a><br>连带着还有heo大佬的部署教程</p><p>即刻短文的构造参考了heo大佬的文章：<a href="https://blog.zhheo.com/p/557c9e72.html">https://blog.zhheo.com/p/557c9e72.html</a><br>算是一步过吧，中途出现了加载缓慢的问题，尝试重新退回重试后正常，虽然还想更好一些，但是碍于技术有限，暂时就不考虑了。</p><p>留言板是参考安知鱼大佬的方案：<a href="https://docs.anheyu.com/page/message.html">https://docs.anheyu.com/page/message.html</a></p><p>音乐馆则是弄了我好长时间，搞不懂一些文件到底如何连起来，以及代码要放在什么位置，最后是参考了b站一位大佬的视频才终于弄懂，只能说，门外汉想要做出一些东西来，一定要有一个可以学习参考的地方。<br>b站——赵才猷<br><a href="https://www.bilibili.com/video/BV1c64y1V7yX/?spm_id_from=333.999.0.0&vd_source=e6a1786a3956c7d48f292f680fd9c41e">https://www.bilibili.com/video/BV1c64y1V7yX/?spm_id_from=333.999.0.0&amp;vd_source=e6a1786a3956c7d48f292f680fd9c41e</a></p><p>相册集则是参考了jerry大佬的教程，但是我一直没搞懂那些md文件的代码是啥意思，一直到看到某位b站up主发出的教程视频才知道具体的构筑方案，虽然很朴素，但对我而言的确是一个巨大的突破了。<br>b站——程序员朱永胜<br><a href="https://www.bilibili.com/video/BV1Fw411Q7pS/?spm_id_from=333.880.my_history.page.click&vd_source=e6a1786a3956c7d48f292f680fd9c41e">https://www.bilibili.com/video/BV1Fw411Q7pS/?spm_id_from=333.880.my_history.page.click&amp;vd_source=e6a1786a3956c7d48f292f680fd9c41e</a></p><p>参考anzhiyu大佬的文章波浪效果<a href="https://blog.anheyu.com/posts/98c4.html">https://blog.anheyu.com/posts/98c4.html</a></p><p>以下是我改动的地点：</p><p><img src="/./../assets/blog_res/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%82%E8%80%83.assets/image-20240116113716365.png" alt="image-20240116113716365"></p><p>添加了pug里面的代码，注意，格式不要错，有一行没对齐都有可能失败</p><p><img src="/./../assets/blog_res/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%82%E8%80%83.assets/image-20240116113813437.png" alt="image-20240116113813437"></p><p>新建了一个css文件，并粘贴了大佬给的代码，在主题配置文件之中引用了这个css文件</p><p><img src="/./../assets/blog_res/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%82%E8%80%83.assets/image-20240116113909253.png" alt="image-20240116113909253"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建心得</title>
      <link href="/posts/51833.html"/>
      <url>/posts/51833.html</url>
      
        <content type="html"><![CDATA[<h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><h5 id="这里是记录一些搭建这个博客的心得体会，不存在什么经验，纯粹就是记录表达作用"><a href="#这里是记录一些搭建这个博客的心得体会，不存在什么经验，纯粹就是记录表达作用" class="headerlink" title="这里是记录一些搭建这个博客的心得体会，不存在什么经验，纯粹就是记录表达作用"></a>这里是记录一些搭建这个博客的心得体会，不存在什么经验，纯粹就是记录表达作用</h5><hr><p>最开始的时候是找到b站的一个大佬搭建的一分钟速建blog教程，其实就是直接将大佬的github的项目复制到自己的github上，然后通过github的软件下载到本地之后，添加文档之后再次上传。</p><p>现在想来其实也挺简单易懂的，但是对于那个时候的我可谓是天书一般的设计。</p><p>无论是上传还是下载，都摸索了许久，直到后来自己尝试将一些文档上传上去的时候，软件一直报错。</p><p>因为不懂这块的原因，所以折腾了很久，最后察觉到是图片地址问题，但是并不具备解决问题的技术，所以我放弃了。</p><p>第二次的时候，也是从b站看的，某位大佬发的搭建blog的教程，搭配着github的部署，实现了比较简单的博客。</p><p>以hexo为基础，使用了火狐大佬的matery主题，然后书写了不少我自己的文章，但是后来发现自己搭建的博客总是不够令人那么满意，许多功能上，错落百出。</p><p>再然后，所幸再次尝试搭建一个全新的博客，这次，我选择了b站anzhiyu大佬的主题博客，一款同为hexo的博客网站模板。</p><p>建立的还算顺利，话费一天的时间，我成功在本地搭建出大佬的博客模型。</p><p>但是也就是在这个时候，我反而遇到了我难以解决的问题。</p><p>本地加载正常，但是已上传到github之后，网站的构造就发生了变化，原本的格式全部丢失，所有的东西乌泱泱的堆在一起，令人厌恶。</p><p>虽然尝试了百度问题来源和加入qq群询问大佬，但是很可惜，依旧没能解决这个问题。</p><p>重新搭建一个博客对我来说，虽然时间充裕，但是耗费心力反而令我更难受。</p><p>恰好，还是anzhiyu大佬的视频。</p><p>虽然是前年的，但是搭建的butterfly主题反而令我更加喜欢，简洁化的布局，以及各种简单的插件，于是我开始将目光转向butterfly主题上。</p><p>跟随着原作者的教程一步步的搭建起来。</p><p>这个时候，反而因为之前遇到的那么多错误，能够让我更加轻松的搭建起来这个简单的博客，并尝试以自己的爱好去调整其中的内容与插件。</p><p>虽然依旧是遇到了不少的问题，但是起码还处于我能够解决或者问题尚未爆发的阶段，对于此种情况，现在的我已然是比较满意的了。</p><p>算下来，这次搭建博客，差不多也是在一天的时间，但是感觉学到的知识反而更多了不少。</p><hr><p>有一句话想要留给未来的自己，AI这个东西，虽然只是近几年才出现在普通人视野之中的工具，但是能够在短时间内增加到现在的大众知名程度，绝对说明了其中对于普通人的效果是十分便捷的。</p><p>你可以不懂AI的运行原理，但是绝对不能不使用AI。</p><p>因为很多问题，有些跨行的内容别人可以不给你解释，但是你去问AI，它绝对能够给出一些建议，即使这些建议只是基础之中的基础，但对于你一个外行人来说，也绝对是足够消化的。</p><p>不如说，正是因为给出的建议是外行人都有可能理解的基础，AI才具备这么大的传播速度。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-15</title>
      <link href="/posts/41553.html"/>
      <url>/posts/41553.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-15"><a href="#NO-15" class="headerlink" title="NO.15"></a>NO.15</h1><p>舍沙失业了……</p><p>才怪。</p><p>只是莫名其妙的被拉娜安排了两天假期，这让他一时之间有些摸不着头脑。</p><p>不知道这位黄金公主在打什么注意。</p><p>但应该不是针对自己的坏事，毕竟并未感受到从对方身上传来的恶意。</p><p>不过也可能存在是拉娜的表演能力太过厉害，自己一个普通人无法察觉的可能性。</p><p>一边用力挥舞着手中的武器，舍沙一边猜测着有可能到来的危险。</p><p>越练越不对劲，所幸干脆放弃了今天训练的计划，转头离开了训练场，奔着自己的房间走去。</p><p>狡兔三窟，说什么也要趁着这两天的时间给自己安排一个窝点，也就是魔术工坊出来。</p><p>既可以在遇到危险的时候，有个躲藏的地方。</p><p>也能为后续的研究提供场地和设备。</p><p>至于花费的金钱从何而来，感谢晚上跑图的时候遇到的野生小怪爆的钱袋。</p><p>这极大地缓解了舍沙之前的经济危机。</p><p>推开门，舍沙径直走到房间正中央的位置，伸出手，一条白蛇就从衣袖中钻出，随后弹射到吊在天花板上的灯上。</p><p>窸窸窣窣的声音响起。</p><p>不一会儿，白蛇将咬着一袋鼓鼓囊囊的钱袋子落了下来，舍沙顺势一接，完美收回自己的小金库。</p><p>来了一场说走就走的冒险。</p><p>……</p><p>「既然大家都到齐了，那么——」</p><p>一名大约五十来岁，颈上戴着水神圣印，眉目间有着几分慈眉善目的男性先是环顾了场地一圈，确认该到达的人员都已经集齐，于是，继续开口起来。「——会议正式开始！」</p><p>伴随着他的话音落下，原本还稍微有些动静的空旷大厅之中，身边变得更低了一些。</p><p>这里是位于王都的一处隐秘建筑，每年也只有几次才会有人出现在这栋建筑之中。</p><p>但，来此的人物均是在王国之中，恶名远扬的人物。</p><p>王国地下势力地下社会猖獗的犯罪组织头目们，也是被称作【八指】的组织。</p><p>据说这个名字源于六百年前降临的六大神之中土神的从属神——盗贼之神，因其具有八指，故而取此称谓作为组织的名称。</p><p>而刚才说话的那名中年男性，便是这地下社会八个犯罪组织的整合者，当然，谁也不相信一个人就可以整合这些犯罪组织，多半是某位大贵族推到台前的傀儡罢了。</p><p>但不得不说，即使是傀儡，现场的八指部长也需要给对方几个面子。</p><p>在冷场了大约几分钟之后，那名男子看见这个情况，也知道需要由自己率先发起话题才行，于是从手中翻阅的文件之中，挑出一份文档，看向在场众人之中，一名看上去软弱无力的纤细男子。</p><p>开口道：「苛可道尔，关于《废除奴隶交易制度》法案，你那边影响很大吧，需要组织帮助吗？」</p><p>听到提起组织帮助这一词汇，原本漫不经心的苛可道尔眉头立刻皱在一起，无视聚拢在自己身上带着侵略感的视线，带着几分尖锐的腔调回应起来。</p><p>「——不需要！」</p><p>似乎觉得自己的举止有些激动，苛可道尔随后又补充了一句：「只是一些小问题而已，我自己能解决！」</p><p>面对苛可道尔强调自己可以解决这件事的谎言，其他几名八指部长纷纷露出一丝冷笑起来。</p><p>解决，来自王国正式发行的法案，哪有那么好对抗，如果是还未发行，兴许还能通过贿赂当地贵族来获得支持，但是发行之后，所有的奴隶交易行为都将被视为非法交易，一旦出事，第一时间就会被贵族抛弃。</p><p>同时，该交给贵族的利益一分也不能少交。</p><p>否则……哼哼……</p><p>「小问题吗？听说这个法案可是出自那位『黄金』之手，呵，话说你手下胆子也太大了，居然敢对王族动手……」</p><p>说话的是一名全身都很白皙的女子。</p><p>肌肤色泽病态地发白，身上的衣服也是白色的。</p><p>从持着冒出艳紫烟雾的烟管的手到肩窝，刺着蜿蜒向上的蛇。与紫色眼影同色的口红。以轻薄衣物裹身的姿态蕴藏着高级娼妓的颓废氛围。</p><p>——希尔玛·叙格纳斯</p><p>八指八个部门之中，毒品交易的部长，虽然出身只是一介高级娼妇，但是能做到这个地位，不可谓不励志的身份逆袭。</p><p>面对希尔玛有些阴阳怪气的言语，苛可道尔脸色一黑，但没有表现出任何生气的地方，只是有些无语起来。</p><p>「那群对黄金公主动手的根本就不是我的手下，不知道是哪个嘎达里面出来的『乡下人』，赚了点钱，有了点本事就开始飘到找不着北了，我可是让地下所有人都记住了王族的相貌，为的就是怕遇到这种情况……」</p><p>听到苛可道尔的说辞，其他几个部门长虽然不屑于相信这个男人的借口，但为了维持最低程度的交际，还是表示了对苛可道尔的同情。</p><p>「既然苛可道尔不需要组织的帮助，那这个话题就先结束，有关于最近的生意，你们其他几个部门有没有需要与其他部门交流的地方？」</p><p>领头的男子将关于奴隶交易部门的文件放下，转头拿起其他的纸张，询问起来其他几名未曾发言的八指部门长来。</p><p>只是依旧没人主动发言，看到这个情况，男子脸上也浮现出些许疲惫。</p><p>这群家伙。</p><p>八个部门虽然的确隶属同一组织，相互有着合作关系，但实际上却常常互相侵占权益，偶尔才会产生所谓的合作关系。</p><p>如果不是有着背后可能存在的大贵族的身份来镇压这些恶人，恐怕第二天，这八个部门就会产生火拼，而不是像这样友好的坐在一起商量着对王国的生意如何瓜分。</p><p>事实上，这八个部门已经是经历过许多次厮杀吞并后才保留下来得部门了，分别掌握着不同的交易内容。</p><p>但人性终究是贪婪的，这些恶人则是贪得无厌的程度，不仅像是护食的野兽一般警惕着其他的部门，还时不时觊觎其他人碗里的伙食。</p><p>啧……</p><p>不愧是精挑细选出来，用来管控王国地下交易的野兽。</p><p>男子随意挑了一份文件出来。</p><p>「诺亚，你在「里·洛贝尔」的生意最近似乎收到影响，上交给组织的资金也出现了不同程度的降低，这件事你怎么解释……」</p><p>……</p><p>这场会议持续了接近大半天时间，直到落日余晖之后。</p><p>终于在大家都感到不耐烦的情况下，男子宣布了这场会议正式结束。</p><p>一群心思各异的部门长带着自己的手下纷纷乘坐隐秘工具远离此处。</p><p>只留下几名定居附近的下属过来打扫残局。</p><p>「哦吼，没想到挑选位置还能遇到这种惊喜。」舍沙不由得有些感慨，自己只是觉得这个地方看起来非常隐蔽，周围也没有多少活人。</p><p>是个改造成魔术工坊的好地方。</p><p>却没想到里面居然藏了这么多厉害角色。</p><p>也幸亏自己是先派出使魔白蛇前去侦察情况，身为冷血动物与小型生物的优势，十分轻而易举的就突破了外围人员的守卫，还没引起里面人的警觉。</p><p>如果是本体过去的话，恐怕现在应该要思考如何躲避对方派来的追杀人员吧。</p><p>披着斗篷，将身形全部隐藏在其中的舍沙，默默地回忆着刚刚通过使魔看到的景象。</p><p>这群人，虽然实力参次不齐，但是无一例外都掌握着大量的资源。</p><p>如果自己能够借鸡下蛋的话，或许……</p><p>◤有人靠近◥</p><p>来自【羽斯缇萨】的提醒让舍沙快速警觉起来，轻轻一跃借助高超的体力将自己悬挂于房梁之上，屏息凝神的看向房门。</p><p>——吱呀</p><p>木制的门把手被拧动，进来的是一位身穿王国常见服装的壮硕男子，大约一米八的个头，腰间还悬挂着一把短刀。</p><p>正当舍沙思考着要不要先下手将对方解决掉的时候，那名壮硕男子却只是一言不发的走到一张桌子旁，拿起桌子上的水壶，随后又重新走了出去。</p><p>——咔嚓</p><p>房门被带上。</p><p>舍沙皱了皱眉。</p><p>算你这家伙走运。</p><p>根据刚刚短暂的观察，那名打扰他的男人最多也就金级冒险者的实力，如果是一个月前的他可能还会感觉棘手。</p><p>但是现在，如果不是担心会惊扰到外面其他八指的手下，他恐怕在对方推开门的瞬间就解决对方了。</p><p>根本都不用等到对方进来之后在动手。</p><p>不过尽管中途被打扰了一下，但是舍沙的心情还是十分愉悦的。</p><p>因为根据从周围八指驻扎的下属交流内容来看，只要没有出什么大事，那个用于专门交谈的建筑多半一年内是不会有人继续进入的。</p><p>这样看来，完全可以作为他临时的据点使用。</p><p>至于一年后，八指再次聚集的会议？</p><p>那就不用担心了，一年的时间，足够他成长到轻松解决这些麻烦的程度。</p><p>兴许也用不了那么久呢。</p><p>毕竟还有一个拉娜在盯着自己。</p><p>确认了接下来的方案之后，舍沙便指挥着使魔白蛇把屋子里里外外检查了一遍。</p><p>确认没有隐藏的机关后，舍沙这才放下心来。</p><p>安心等待打扫的人员全部离开，随后留下使魔在这边盯梢，自己则是去将建造工坊所需要的材料，以及自己这段时间囤积的物资转移过来。</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-14</title>
      <link href="/posts/25232.html"/>
      <url>/posts/25232.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-14"><a href="#NO-14" class="headerlink" title="NO.14"></a>NO.14</h1><p>翌日。</p><p>清晨。</p><p>沉眠的意识从深远的暗黑世界浮上表面时，思考立即变得清晰，肉体功能几乎完全转为正常运作状态。</p><p>不知何时，舍沙已然赶在太阳升起之时，睁开了那双精神十足的三白眼。</p><p>「唔——」伸了个懒腰，舍沙看向怀里的异物，说道：「早上好！」</p><p>◤早◥</p><p>白蛇朝着舍沙吐了吐蛇形，但是声音却是从舍沙脑海之中响起。</p><p>「不管看多少次，总觉得这样还是很有趣。」舍沙笑了笑，翻身下床，顺手将怀里的白蛇放在肩膀上，任由对方缠绕住自己脖颈。</p><p>◤你最近的变化越来越大了，不打算伪装一下吗◥</p><p>白蛇抬起头，那双蛇瞳之中倒映出眼前少年的身影。</p><p>她并非是说心态或者学习进度，单纯指的是舍沙的外表。</p><p>「……我又不会幻术，更何况我不觉得瞒得过那位少女，与其偷偷摸摸引起对方注意，不如大大方方展现出来，兴许她只是以为我青春期到来了呢……」</p><p>与一个月前，刚刚取代了克莱姆的身份的模样相比，现在的舍沙虽然变化不太明显，但已经出现趋势了。</p><p>首先是发色，原本属于王国人的金发出现了夹杂在其中的黑发，只是很不明显，再加上可以利用染发的技术掩盖，所以才没被立刻发现。</p><p>然后是身高，原本由于过早在幼年时期进行锻炼并且长期负重训练，导致原先的肉体身高一直停留在一米六五出头一点，但是这段时间，舍沙的身高已经增长到了将近一米七。</p><p>就连外貌似乎也有了些柔和起来。</p><p>这一切的变化全部都要归结于第三法——灵魂物质化的效果。</p><p>自从原本停滞的进度开始出现提升的趋势，这段时间内，舍沙的努力修行、『魔术基盘』的修习、位阶魔法的学习，无一不在促进舍沙实力的增加。</p><p>根据【羽斯缇萨】的观测，目前灵魂物质化的进度大概在百分之五左右。</p><p>这具肉体正在由内而外——从灵魂开始改变肉体形态，逐渐朝着舍沙原本的形象发展，直至变回原先的模样……那是不可能的。</p><p>因为灵魂已经与克莱姆发生了融合，这场灵魂物质化最终的结果多半会是舍沙原本的灵魂形象占据主导地位，同时也会拥有克莱姆的部分特征。</p><p>但显而易见的是这场肉体的蜕变是不可能倒退回来的的了。</p><p>如果是换成其他人的话，可能还不会发觉这些发生在短时间的细微的变化，但是有个人绝对瞒不过。</p><p>——拉娜。</p><p>「黄金」公主，拥有着超乎寻常人类难以理解的才能的存在，绝对会注意到舍沙的变化。</p><p>尤其这具肉体的原主人还与对方有些难以割舍的牵连。</p><p>事实上，这几天，拉娜就已经注意到了舍沙身上的异常情况。</p><p>舍沙也能在不经意间看到少女脸上一闪而逝的异常神色——那似乎并不是怀疑，更像是某种疑惑与忧愁。</p><p>但也代表着自己的变化已经被拉娜注意到了。</p><p>兴许自己离开这里的时候也快到了吧。舍沙默然，随后释怀。</p><p>本就不是真正的克莱姆，只是夺取对方的身份活在这个世界而已，有什么好在意的。</p><p>现在的当务之急是赶在身份彻底暴露之前，拥有即使离开人类王国也能在这个世界站稳脚跟的底气。</p><p>魔术、魔法、武技以及外界的各种知识，这些都是必须的。</p><p>一想到要学那么多东西，舍沙就感觉脑袋痛起来了。</p><p>「算了，尽力就行，没有人能一直完美的一直走下去。」</p><p>安慰了几句自己，舍沙从衣柜之中取出今天更换的衣物，顺手将替换下来的衣物挂在一旁。</p><p>一件散发着金属独有气味的旧衣服，一条膝盖处磨损严重但依旧可以继续穿着的裤子以及套在衣服上的链甲衫（Chain　Shirt）。</p><p>结束了。</p><p>本来要穿王室发放的制式轻甲的，但是因为这个时间还不用去王宫值班，所以其实舍沙这番穿着是去一楼的训练场用的，所以暂时没将轻甲套上。</p><p>「你要呆在这里，还是？」</p><p>临出门之际，舍沙看向盘旋在脖颈处，冒出一颗脑袋的使魔白蛇。</p><p>◤还是待在你身上吧，万一要是有人过来打扫……◥</p><p>虽然【羽斯缇萨】的本体一直都在他的脑海之中，根据『她』的说法，这具使魔只是用以承载她的精神在物质世界行动的载具而已。</p><p>但看起来，似乎【羽斯缇萨】还蛮喜欢这具肉体的。</p><p>常常操控着使魔白蛇到处游走。</p><p>只是他后续要去的地方是「里·耶斯提杰 王国」的王宫，一旦被发现使魔的存在，说不定会引起骚动，进而加快自己身份的暴露也有可能。</p><p>这么一想，还是尽快拥有一座属于自己的魔术工坊比较安全。</p><p>以后实验术式的时候就不用跑那么远的距离了。</p><p>【羽斯缇萨】操控着使魔白蛇从脖颈游走到腰间的位置便停了下来，静静地待在那里。</p><p>依赖着衣物与链甲衫的遮挡，单从外表上看的话，根本无法发现舍沙随身携带了一条白蛇。</p><p>收拾妥当之后，舍沙便继续出发赶往训练场所在。</p><p>……</p><p>「……」拉裘丝好奇的打量着自己这位公主闺蜜，有些不明白最近为什么拉娜的心情变差了许多。</p><p>「你最近怎么了吗？」</p><p>出于关心，拉裘丝还是将自己的疑惑吐了出来。</p><p>拉娜也没有隐瞒的打算，说道：「之前不是委托你们小队一件事吗……」</p><p>听到拉娜说起这件事，拉裘丝也点点头，之前她两说悄悄话的话题，就是关于这件事情的结果。</p><p>拉娜此前就跟她提到过，打算收集一些珍贵的秘银金属作为材料打造一件防御力极佳又十分轻便的铠甲来着。</p><p>至于用途，肯定是送给那位少年了。</p><p>对于这件事，拉裘丝也是抱着十分赞成的想法。</p><p>对于这位好友的恋情，她可是一直都看在眼里的，虽然两人的地位不平等，但是拉裘丝衷心希望自己的好友可以获得幸福。</p><p>对于拉娜的委托也是十分努力的去完成，只是很可惜，作为稀有材料，秘银并不是那么好收集的。</p><p>秘银是一种贵金属，不仅具备魔法亲和性，还如同优质钢一样的坚硬，重量很轻的优点。</p><p>也正是因此，秘银这类金属材料，很少在市面上流通，即使有少量出手，也很会快被人买走。</p><p>即使是王国唯二的精钢级冒险者小队，苍蔷薇之中的秘银存量也不多。</p><p>如果拉娜是为了这件事情而头疼的话，那她还真没什么办法……</p><p>「不是秘银的问题啦——」似乎是看出了拉裘丝的想法，拉娜不满地撇撇嘴。「我又不是那种无理取闹的公主……」</p><p>「嘿——」拉裘丝见自己的想法被拆穿，不好意思的露出一个笑容，随后反应过来。「那你在烦恼什么呀？」</p><p>「唔——」</p><p>拉娜靠在桌面上用双手撑起脑袋，脸颊被挤出婴儿肥的形状，显得极为可爱。</p><p>「是克莱姆啦。」</p><p>「克莱姆？他怎么了嘛……」</p><p>「克莱姆最近好像变了不少，而且好像又长高了不少。」</p><p>「诶——有吗？」</p><p>兴许是有的吧。</p><p>拉裘丝蹙眉思考了片刻，这几天见到的少年似乎的确是比记忆中模样稍稍高了一点……吧，但好像也没什么太大变化。</p><p>但如果是拉娜的话，或许能看出这样微弱的变化，也是很正常的事情。</p><p>毕竟在拉裘丝认识的认知中，拉娜是她所知中最有智慧的人选。</p><p>「可能是开始发育了，按照王国的平均标准，克莱姆不还是很年轻吗，说不定会长到格格兰那种高度哦！」</p><p>「——！」似乎是在脑海之中想象了一下长到格格兰身高的克莱姆的模样，拉娜的脸色变得惊讶起来。</p><p>「真的会那么高吗？」</p><p>「呃……」看着一脸已经相信克莱姆未来会长那么高的拉娜，拉裘丝反而有些不好意思了，刚刚那也只是她的夸张假设而已。</p><p>格格兰那家伙能够变得那么壮，那么高，多半是因为疯狂锻炼加上战士职业与个人体质结合的原因。</p><p>克莱姆估计是没办法长那么高了。</p><p>当她也没有直接否定面前少女的幻想，委婉的解释起来。</p><p>「格格兰是特例，但是如果克莱姆营养跟得上的话，兴许也有可能……」</p><p>……</p><p>两人就着克莱姆未来的身高展开了一番天马行空的猜测，但很快又拉回初始的话题了。</p><p>「那这样说，拉娜你是担心克莱姆以后长高了，现在打造的铠甲尺寸不合适的情况咯。」</p><p>「嗯嗯。」</p><p>原来是这样吗，拉裘丝也明白了好友的顾虑。</p><p>「本来我以为克莱姆不会继续长高了，毕竟已经好几年都是这个身高了，所以才没把这个问题考虑在里面的。」</p><p>「的确，虽然铠甲这东西有一定的冗余空间，但是偏差过大的话，不合身还是很难受的。」</p><p>拉裘丝不由得想起了还在王都旅馆的格格兰，以她的体型，穿戴不合适的护甲也一定很难露出笑容吧。</p><p>「如果有传说之中的铠甲就好了。」</p><p>「那是什么？」</p><p>「拉娜你没听过吗，有关于十三英雄的故事。」</p><p>「有是有啦。但是王室的书籍大部分都是一些歌颂的词汇，关于十三英雄的描写很少的。」</p><p>「这倒也是，传说十三英雄之中的成员，他们很多都是穿着合身的高级装备乃至于传说装备，而那些装备可不是工匠量身打造的，据说是装备会根据原主人的体型自动发生适应呢！」</p><p>……</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>型月世界五大魔法</title>
      <link href="/posts/43378.html"/>
      <url>/posts/43378.html</url>
      
        <content type="html"><![CDATA[<p>作者：暗影裂眼<br>链接：<a href="https://www.zhihu.com/question/383465359/answer/1337473790">https://www.zhihu.com/question/383465359/answer/1337473790</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>——————————</p><p>【关于魔法】</p><p>在人类文明尚在婴童时期时，所有的魔术皆为魔法。</p><p>然而，在人类文明的不断进步下，科技所能做到的事情慢慢变得多了起来。</p><p>绝大部分魔法都在历史的长河下逐渐变为了魔术，或是说弱化成为了魔术。</p><p>于是，现存的魔法变成了尤为稀少的存在，只留下了五大魔法，这五大魔法都与根源有关。</p><p>现今所存的五大魔法皆为这个世界法则以外的法则，而其中第一法和第五法是必须接触根源通道才能知晓所用的存在。</p><p>而其他三法则是为了达到根源而开辟的道路。</p><p>魔法是比魔术更强大，更神秘的存在。</p><p>魔法只能由一人持有。 第二位就算是完全复制了第一位的做法，走了同样的路线也无法再获得魔法。</p><p>无论如何，只有魔法使才可以使用魔法，而驾驭一种魔法的魔法使只能拥有一名。苍崎的祖父并没有走向第五魔法使的道路，而是将路的传承留给了苍崎青子。 </p><p>——————————</p><p>【五大魔法】</p><p>初始之一：变更全部。</p><p>后续之二：蕴盖更多。</p><p>承接之三：展示未来。</p><p>维系之四：隐藏自身。</p><p>终结之五：早已经失去本有的意义。</p><p>～～～～～</p><p>第一魔法：</p><p>最为古老的魔法之一，但是详细不明。其内容对于一部份特权阶级的魔术师来说似乎是常识。虽然第一魔法的使用者已经去世，但据传他的直系人物仍然勉强存在中。</p><p>久远寺有珠的三大PLOY之一的月之油，设定上是由第一魔法中分离出来的，这个世界上最大的虚构。能够自产出大量太古魔力。以太块似乎为第一法的产物。从中推断出，第一法可能与星球的生命力、大源的起源有关。</p><p>《时钟塔年表》中提到，第一魔法的掌握者诞生于公元元年前夜（这个时间点，会是谁呢？嗯……令人浮想联翩啊）。</p><p>～～～～～</p><p>第二魔法：</p><p>观察无数存在的平行世界，任意在世界间往来的魔法。使用者是基修亚・泽尔里奇・修拜因奥古（称为宝石翁）。他应用这个魔法，制作出从其他世界吸取魔力的宝石剑，和内部能装进大量物品的箱子等等。</p><p>第二法的魔法使能够穿梭并干涉无数（并非无尽）平行世界。也因此能够获得近乎无限的魔力。曾经宝石翁与月之王朱月的战斗中，就是利用第二魔法展开的术式，聚集无数平行世界的魔力所产生的无尽以太炮，与朱月释放的月落相对抗*1。</p><p>第二法的持有者能够保持多个平行空间的唯一性，在所有平行空间中只有一位第二法持有者。</p><p>第二魔法也能够赋予建筑、空间等同样的效果。Ahnenerbe*2就是一个例子，多个平行世界的人能够聚在一起。</p><p>*1访谈出处：</p><p>イクラ（オランジーナらぶ）：</p><p>请务必告诉我朱月VS全盛期宝石翁的详细情况！</p><p>奈须きのこ：要我将如此诱人的伏笔从点子库里揭露出来吗？嗯…相似的场景有在魔夜里使用过了、差不多就那感觉吧。将月亮镜像化使之坠落（すべらせてくる、シンカー！）的朱月 vs 型月世界里只限宝石翁能办到的、透过展开特殊魔方阵展开的【术式】所击出、名副其实的无尽以太炮，大致是这般感觉。倘若预算有魔夜的五倍、应该有办法呈现那场面吧。</p><p>*2注：一家在《空之境界》和《幻想嘉年华》里都出现过的咖啡馆，设定上由宝石翁所建造，可以连接不同的平行世界</p><p>～～～～～</p><p>第三魔法：</p><p>灵魂的物质化，换言之是实现完全的不老不死的魔法。在完成之日，将会因灵魂的永动机化，而得到无尽的魔力源。这个魔法是爱因兹贝伦家传的，圣杯战争这个系统是为了将其实现而被构筑出来。 </p><p>将灵魂永动机化，从而获得无尽的魔力源。</p><p>魔力代表着生命，魔力无尽则代表着生命无尽，生命无尽则代表了不老不死。</p><p>灵魂物质化后的身体能够自由变成任何样子、形状、物体。</p><p>当人类被灵魂物质化后，便会变得无欲无求（《fate&#x2F;apocrypha》是这样说的，燃鹅，在从者宇宙的设定出来后，就显得很尴尬了……）。</p><p>《魔法使之夜》里的金狼就相当于第三魔法完成的产物，实现了灵魂物质化（是否所有幻想种都有着灵魂物质化的BUFF？尚不清楚）。从者宇宙的世界观设定是第三魔法得到实现，并影响全宇宙的产物，人人都实现了灵魂物质化，人人都相当于英灵。</p><p>～～～～～</p><p>第四魔法：</p><p>和第一魔法一样，其详细不明。内容也没有流传开来。不过，现存的魔法使们，都对此第四魔法异口同声地说道「那确实存在」而承认它的存在。另外，使用者的名字也不清楚。 </p><p>设定最少的魔法，就如同那句简短的“隐藏自身”的描述一样，大概效果就是没有存在感吧（笑）。</p><p>～～～～～</p><p>第五魔法：</p><p>流浪魔法使・苍崎青子继承自祖父的魔法。别名“魔法・青”。身为使用者的苍崎青子，虽然作为魔术师的能耐很平凡，但在破坏上则很卓越。街谈巷议「从她的特性看来，“魔法・青”可能也是跟破坏有关的魔法。</p><p>由肩负着消费&#x2F;消灭之法则的最新魔法使苍崎青子使用的魔法，本质似乎是时间操纵。未提及过多，多为猜测：</p><p>能够将量子记录固定带（世界线收束）作为基础点，将其抛向未来，抛向过去。这个行为对世界的影响非常之大，每次使用近乎都是在破坏、重置着世界。如果说第一法是创造一切的话，那么第五法就是破坏一切。</p><p>根据苍崎橙子的说法和第五法的逆行运河&#x2F;创世光年来讲，第五法应当是与第一法敌对的。</p><p>魔神王盖提亚的人理烧却计划的正式名称乃是逆行运河&#x2F;创世光年，恰好，青子于MBAACC中Last Arc招式的名字也是逆行运河&#x2F;创世光年。盖提亚的宝具会不会就是第五魔法的衍生物？或是类似第五魔法的神秘？实际情况待蘑菇后续补完设定。</p><p>～～～～～</p><p>掌握五大魔法的五位魔法使，除了第一魔法使是在设定里明确写道已经死去，其余四位都还存在着，只是第三魔法使很早以前就失踪了（爱因兹贝伦家族是他的弟子们创造的人偶所组成的魔术家族），第四魔法使啥设定也没有，只有第二魔法使和第五魔法使在作品里有出场。</p><p>——————————</p><p>上述的五大魔法，是在神话时代结束后，仅有的五种能够被称为“魔法”的神秘*1。而在古老的神话时代，在魔术王所罗门并没有诞生的时代，只有神灵、精灵、幻想种、恶魔等大能才掌握了行使神秘的权能，现如今的魔术师所使用的魔术，在神话时代皆属于魔法（但是由于星球大源的不断衰竭，因此即便是从古流传下来的神秘，现代魔术师所能发挥的力量都远远不及神代魔术师），神灵、精灵、幻想种、神代魔术师等古老的大能，在如今的时代都是相当于魔法的存在，位格高于现代魔术和现代魔术师。</p><p>此外还有一些等同于魔法的特殊存在，比如亚瑟王的宝具：遥远的理想乡，能够创造出连五大魔法都无法干涉的结界，其存在本身就相当于魔法（这个效果的本质其实是把呆毛带到位于星球里侧的星之内海里）。还比如佐佐木小次郎的宝具：燕返，无视时间与空间之概念完全同时地重叠两闪，从而产生的来自三方向的斩击。超越了速度、精巧以及虚攻等要素的“多重次元曲折现象（Kischur Zelretch）”。魔术和魔法也不知道的无名武艺者，虽有限制却到达了“第二魔法”的高领域。</p><p>*1注：根据《魔法使之夜》里的描述，五大魔法是本不属于地球的神秘，独悬于天外的孤独，因此可以推测出，五大魔法即便在神话时代，也是逼格极高的神秘。</p>]]></content>
      
      
      <categories>
          
          <category> 网文 </category>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 型月 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-13</title>
      <link href="/posts/41169.html"/>
      <url>/posts/41169.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-13"><a href="#NO-13" class="headerlink" title="NO.13"></a>NO.13</h1><p>昏暗的夜晚，寂静的森林深处。</p><p>这里是王都——「里·耶斯提杰」的外围森林，复杂的树林之中隐藏着位数众多的动物生存在其中。</p><p>只是现在，某一处区域之中。</p><p>原本该在夜晚中肆意鸣叫的虫雀，此刻却安静的出奇。</p><p>周围的生物也下意识的避开了这个静谧的地方，只剩下微风吹拂过枝头，树叶响起的沙沙声。</p><p>……</p><p>【满盈吧，满盈吧，满盈吧，满盈吧，满盈吧】</p><p>【周而复始，其次为五】</p><p>……</p><p>怪异的腔调声从原本寂静的树林之中响起，随之而来的淡淡的微光，如果此刻刚好有误入其中的路人的话，兴许会见到这神奇的一幕吧。</p><p>但那是不可能的，因为在这附近，已经被舍沙检查了一遍，。</p><p>如果不是特意赶来这个地点，或者运气差到一定程度，基本上是不会有人在这个时间段靠近这个地方。</p><p>舍沙自然不可能是闲的大晚上出城来吹风，之所以来此，则是为了一个实验。</p><p>伴随着有些拗口的咒语声响起，围绕在舍沙脚下的奇异魔法阵也开始逐渐发出更加耀眼的光芒。</p><p>周围的动物似乎也感受到了某种恐怖的气息，原本寂静的森林彻底死寂下来。</p><p>……</p><p>【然满盈之时便是废弃之机】</p><p>【宣告——！】</p><p>……</p><p>伴随着「宣告」二字出口，原本平静的周围开始出现莫名的狂风，将地面上的枯叶与尘土掀了起来。</p><p>似乎在宣告着某种事物即将降临。</p><p>……</p><p>【汝身听吾之号令，吾命与汝剑同在】</p><p>【应圣杯之召，若愿顺此意此理便回应吧】</p><p>……</p><p>ben——</p><p>像是某种紧绷的丝线断掉的声音响起，原本还在持续运转的魔法阵此刻瞬间失去光芒，犹如失去了能源供给一般，变成一副普通的古怪图案。</p><p>「失败了……」</p><p>舍沙轻叹了口气，开始清理起地面上留下的召唤魔法阵来。</p><p>「不是早就猜到了吗，这也是必然的结果，毕竟——」熟悉的声音这次却从身下响起，舍沙低头看了一眼开口的生物，脸上无悲无喜，对方接着道。</p><p>「——这个世界可没有过圣杯系统，也不存在这些魔法，倒不如说，前面仪式居然可以运行起来，着实有些出乎我的预料。」</p><p>舍沙伸手抚摸了一下它的脑袋，掌心处传来一股冰凉如玉的触感。</p><p>「我也只是试试看，反正如果成功了，那就赚到了，失败了也不亏，材料费也不贵，还能积攒一下经验。」</p><p>「话说——」舍沙低头看着面前的生物，脸色变得有些古怪：「你突然不在我脑子里说话，我总感觉怪怪的。」</p><p>◤是吗，我还以为你对面对面交流应该更有兴趣◥</p><p>脑海之中，关于【羽斯缇萨】的声音，再度响起。</p><p>舍沙咧嘴笑了一下，他是挺感兴趣，如果不是一条蛇，而是一个漂亮的大美人就好了。</p><p>那只纯白色的蛇，仿佛是从冬季的雪花中走出来，全身没有一丝杂色。</p><p>浑身的鳞片犹如精工细琢的瓷片，光滑而坚硬，每一片都反射出微弱的光。</p><p>一尺出头的身躯线条流畅，像是大自然的完美艺术品，处处流露出优雅与高贵。</p><p>似乎是比较喜欢温暖的环境，原本游走在地面上的白蛇抬起蛇头，直接顺着舍沙的手掌盘旋前进，直到顺着袖口进入到舍沙的怀中。</p><p>「嘶——」冰冷的触感瞬间带走了舍沙皮肤上的体温，随后寒冷与体内涌出的热量重新对抗起来。</p><p>「这感觉和我想象的魔术师生涯有些不同，人家都是玩猫玩鸟，到我这里就只能玩蛇了……啧」</p><p>快速的将地面上的仪式痕迹清除干净，避免被人意外发觉。</p><p>做完这一切，舍沙才重新将视线放到远处的城市之中。</p><p>在这个时间段，唯有较为繁华的中心区域地带与一些涉黑组织所在的方向才闪着光亮，其他平民居住的街道基本上都是乌漆嘛黑的一片。</p><p>零星有几个火光刚刚亮起，又很快熄灭。</p><p>「真没想到啊。」舍沙走出森林边缘，站在一处较高的山坡上，俯视着这座具有数百年历史的古城镇，心情格外舒适。</p><p>「有朝一日，我居然真的实现了童年的梦想，成为一名魔法师。」</p><p>◤准确的说——是魔术师，还称不上魔法的程度◥</p><p>「别扫兴啊，千里之行始于足下，这不是代表着我已经朝着魔法师的道路上迈进一大步了嘛。」</p><p>◤你乐意就好◥</p><p>……</p><p>时间往回调整。</p><p>距离舍沙从苍蔷薇小队之中获得记录着魔法知识的书籍已经过去半个月的时间了。</p><p>而这段时间里，舍沙也并非原地踏步、一无所获。</p><p>从伊比鲁艾手中获取的书籍，成功填补了【羽斯缇萨】对这个世界魔力体系的基础认知。</p><p>也正是因此，原本的『魔术基盘』转译——或者说重构其实更为正确——已然完成，这也就宣告了一个事实。</p><p>刻录了属于自己的『魔术基盘』之后，现在的舍沙已经可以算是正式迈入魔道，成为一名入门级别的魔术师了。</p><p>当然这也代表着他还有很长的路要走。</p><p>仅仅只是踏入门槛而已。</p><p>虽然很想一下子就学会魔法，但是目前还是遇到了不少难题。</p><p>之前提到过，两个世界的差异，让不同系统下的程序（术式）无法正常运行。</p><p>【羽斯缇萨】所持有的术式大多都需要经过转译或者重构才行。</p><p>当前的难题是，虽然从伊比鲁艾手中获取到了记载知识的书籍，但是大多都是介绍魔法的种类、知识以及如何应对的方法，在推进了一部分术式的转译后便后继无力，再次陷入停滞。</p><p>如此，则是需要获取更多更高深的相关书籍知识。</p><p>在这一点上，舍沙的确要感谢伊比鲁艾，这份人情实实在在的承受下来了。</p><p>对方挑选出来的书籍，的的确确是可以给原先的克莱姆提供相当大的帮助的。</p><p>同时对于舍沙来说，这些书既可以作为开拓视野使用，也为他的魔道之路奠定下了基础。</p><p>但目前舍沙陷入了一个困境，就是他短时间内无法从伊比鲁艾手中获取更加深入的魔法知识。</p><p>因为他打的幌子是了解魔法知识来应对可能存在的敌人，且借阅书籍的时间太短。</p><p>以他目前的身份与学习能力，不可能去找伊比鲁艾说一个月的时间，你给的书籍与知识我都看懂了。</p><p>那不符合当前的人设。</p><p>陷入了空窗期——舍沙那时的状态，直到【羽斯缇萨】给出了一个好消息。</p><p>◤虽然我所知晓的术式大多暂时无法使用，但有一个术式兴许还能使用，而且应该也很符合你的胃口◥</p><p>「什么？」</p><p>这里不得不提到一下爱因兹贝伦家族的背景。</p><p>第三魔法使离去之后，祂的弟子们建立了名为【爱因兹贝伦】的工房，意图制造出于师傅相似的个体，并重现第三魔法。</p><p>很可惜，虽然意外出现了名为【羽斯缇萨·里姿莱希·冯·爱因兹贝伦 】的人造人，但只拥有了不完全的第三魔法，绝望的弟子们自杀的自杀，离去的离去，留下一群被他们创造出来的人造人继续着第三魔法的研究，企图实现主人的梦想。</p><p>后续由于一些总所周知的故事，爱因兹贝伦最终来到了位于日本的冬木市，并于两位合伙人创建了‘大圣杯’计划——也就是后来的圣杯战争。</p><p>因此，爱因兹贝伦家族的魔术其实都是围绕着「第三魔法」展开的研究，以及曾经的弟子们遗留下来的一些技术体系。</p><p>后来的爱因兹贝伦是擅长于炼金术的魔术名家，尤其擅长于制造人工生命体。</p><p>但也有不属于炼金术的技术——由「第三魔法」中的技术结合「使魔」魔术而诞生的存在——被称为『英灵』亦或者『从者』。</p><p>而现在【羽斯缇萨】所说的便是名为「使魔」的技术。</p><p>所谓「使魔」，便是魔术师将身体的一部分改造成拟似生命，或者改造已经存在的生命。</p><p>或者和某种存在签订契约，从而拥有驱使对方的能力。</p><p>建立契约后，该存在就能从主人身上得到维持生命的能量。</p><p>这一类存在，都被称为「使魔」。</p><p>其中尤以历史&#x2F;神话之中的名人最强，被称作『英灵』亦或者『从者』。</p><p>而听到了【羽斯缇萨】的好消息之后，舍沙第一时间便想到了是否可以召唤出位于月世界的英灵前来帮助自己。</p><p>……</p><p>但在展开召唤英灵的仪式之前，舍沙先利用「使魔」术式与【羽斯缇萨】正式签订了契约。</p><p>这位继承了爱因兹贝伦家历代亡者的残念的存在直到那一刻，才正式称为一个真正的生命。</p><p>只是每当舍沙回想起与对方签订契约之前的事情时，内心多少有些尴尬。</p><p>因为属于刚踏入门槛的魔术师，很多相关的知识舍沙都只是一知半解。</p><p>前面也提到过「使魔」的召唤方式，舍沙当前实现的只有将魔术师身体的一部分改造成拟似生命的办法。</p><p>舍沙是经过第三法改造后的产物，所以肉体也是天然的魔术材料。</p><p>在【羽斯缇萨】说出要求之后，舍沙第一时间纠结住了，最后狠下心来，不就是十八厘米嘛！</p><p>……</p><p>险些成为异世界第一个太监的舍沙最后通过【羽斯缇萨】才知道，原来其实体液与头发也都是可以的。</p><p>这就闹了一个大乌龙。</p><p>幸好【羽斯缇萨】不具备正常人的情感，没有因此嘲笑舍沙。</p><p>这也让舍沙下定决心，好好向对方讨教魔术相关的知识。</p><p>最后的结果以一部分的血肉与体液作为魔力材料，通过「使魔」术式，成功塑造出一具可以承载【羽斯缇萨】的身躯。</p><p>最终的成品是一具尽可能高效利用的外表类似冷血类动物的白蛇。</p><p>接下来的日子舍沙一边学习着关于这个世界的位阶魔法，一边向【羽斯缇萨】请教月世界的魔术体系知识。</p><p>白天还要去拉娜身旁值班，中午抽空进行武技训练，晚上挑灯夜读。</p><p>时间可谓是安排的满满当当。</p><p>一直到过了半个月后，感觉学有所成的舍沙再也按捺不住心中的激动，大晚上跑出王城，前往无人的森林来施展召唤英灵的仪式。</p><p>但是结局一如预期。</p><p>失败。</p><p>虽然早就有所预料，但此刻不免仍有些许失望。</p><p>只是他却没有表露出来。</p><p>毕竟，比起以前，现在的生活无比充实，这才是他想要的、真正证明自己活着的人生。</p><p>失败？</p><p>不过些许风霜罢了。</p><p>拭去便是。</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-12</title>
      <link href="/posts/24592.html"/>
      <url>/posts/24592.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-12"><a href="#NO-12" class="headerlink" title="NO.12"></a>NO.12</h1><p>「速度太慢，等你砍过来的时候，敌人早就已经做好防御了！」</p><p>……</p><p>「挥砍的幅度太大了，你是挥剑，不是抡锤子，幅度那么大是留给敌人躲猫猫的吗！」</p><p>……</p><p>「很好，这才像样一点——下肢要一起用上，你的腿不是只用来走路的，动起来！动起来！」</p><p>卧槽，跟条狗一样趴在地上的舍沙十分后悔自己为什么要答应格格兰的邀请。</p><p>这家伙，完全不顾及自己的感受，每一次攻击都是冲着自己的薄弱点而来。</p><p>没交手几分钟，舍沙就被一锤子抡到地上。</p><p>然后格格兰会将刚才舍沙在战斗之中犯的错误口述一遍，随后留给舍沙思索一会儿的时间，紧接着又开始下一场对战。</p><p>不过也是托格格兰的指导。</p><p>舍沙才发现原来自己在战斗方面居然还有这么多的错漏之处。</p><p>如果真的遇上久经战场的敌人，恐怕自己的下场就没那么幸运了。</p><p>所以，即使这场战斗每次都是以舍沙狼狈到底作为结尾，但是舍沙依旧没有提出停止战斗的想法。</p><p>即丢不起这个人，也舍不得这么好的导师。</p><p>可以感觉得出来，格格兰的指导水平比王国战士长葛杰夫不知道高多少倍，一番指点下来，之前在于葛杰夫对战之中的薄弱之处全部得到了点明。</p><p>这让舍沙心生喜悦的同时，也不由得暗叹自己还是没能摆正心态。</p><p>这可不是月世界了，有着现代枪械的加持可以尽量避免近战，在这个文明水平堪比中世纪的国家乃至于整片大陆之中，恐怕近战格斗都是一门十分重要的技术。</p><p>于是对于能够如此尽心尽力的教导自己的格格兰，舍沙也表示一万分的感谢。</p><p>倒下的下一刻便重新爬起，然后根据格格兰的指导挖掘自己身上不足的地方，渐渐地，伴随着倒地的次数越来越多，间隔的时间也越来越长，有时候即使不用格格兰提醒，在战斗之中舍沙也会自觉发现自己身上的不足之处，并尽量的去弥补。</p><p>一时之间无法改正的，也会尽量将其掩藏起来，防止被格格兰找到机会。</p><p>而在格格兰的感觉之中，眼前的舍沙好像换了一个人一样，与以前见过的那名平庸的少年相比，仿佛开了挂一样，不仅悟性变好了不少，就连力气也有了不少的增加。</p><p>这个发现不经没让格格兰疑惑，反而令她更加兴奋起来。</p><p>施展手中战锤的速度和力量也逐渐往上增加。</p><p>一时之间，原本还能游刃有余的招架攻击的舍沙再次回到了刚开始的狼狈时刻。</p><p>而在后院训练场的围墙上，两个完全一致的身影就那样静静地坐在墙头，目光不断跟随在训练场中游走的两人身上。</p><p>「缇娜，你有没有感觉克莱姆速度变快了一些？」</p><p>「嗯，的确，并不是错觉，不是说克莱姆没有什么战斗才能吗？」</p><p>「谁知道……不过还是大了些」</p><p>「……」</p><p>缇亚也知道自己姊妹的XP是什么类型，所以并不意外，只是没想到会在这个时候蹦出这句话，一时之间还有点小无语。</p><p>不过她自己也不是什么正常审美就是了。</p><p>只能说从暗杀组织【伊杰尼亚】培养的忍者三姐妹都已经不具备正常人类的审美了吧。</p><p>此时的缇亚响起了自己不知道在何处的姐姐。</p><p>……</p><p>随着时间的流逝，训练场之中的两人的速度也开始降了下来。</p><p>并不是累了，反而是训练进入到下一个阶段。</p><p>比起一开始急匆匆举剑就上的舍沙，此刻的舍沙更像是一个稳扎稳打的战士，一步步逼近格格兰的防守线圈，随后展开试探性的进攻。</p><p>虽然终会被格格兰挥舞的战锤给逼迫撤退，但是能够拉进的距离越来越多了。</p><p>两人都十分默契的只使用招式，没有开启武技。</p><p>否则，舍沙早就被格格兰一锤头抡到隔壁街去了，哪里还有勇气尝试突破一位精钢级冒险者的防守圈。</p><p>感受着逐渐变得笨重的喘息声，舍沙也知道自己的体力越来越少了。</p><p>比起精钢级的战士，自己目前最多不过攻击在武技加持下到达白金级的水平，体能可能还在金级巅峰水平。</p><p>所以，如果是持久战的话，一定会是自己率先败下阵来，到时候也只能将问题归咎在实力方面，而无法提升自己的技术。</p><p>但格格兰的防守又是严丝合缝，根本找不到半点进攻路径，这就让舍沙的心情变得有些焦虑起来，尽管努力劝说自己并不可能一朝一夕之间就抵达人家拥有才能还习练多年的水平，只不过内心终究无法像最开始那般冷静。</p><p>攻敌自救？不行。</p><p>唯快不破？想屁吃，即使是精钢级之中的重装战士，速度也不一定比自己慢。</p><p>等级带来的优势，在这一方面体现的真是淋漓尽致，要不是自己有第三魔法可以变强，否则作为原本的普通人克莱姆，面对这种自己一辈子也无法追上的对手，不产生绝望的情绪已经是内心强大了。</p><p>垃圾世界。</p><p>还在苦苦寻找突破口的舍沙无意间瞥见了坐在围墙上，把自己两人当成免费表演的节目看的盗贼双胞胎。</p><p>脑海中顿时闪过一道灵光，随即眼神就开始集中起来，握持训练剑的手掌也加重了几分气力上去。</p><p>舍沙的异常表现没有逃过格格兰的关注。</p><p>虽然她确定以舍沙现在的水平能够做到这个地方，已经是远超之前的水平了，但她还不认为舍沙有能力可以突破自己的防守圈。</p><p>如果对面的敌人是一名同为精钢级的冒险者，又或者是山铜级的亚人种的话，兴许还会对她造成几分威胁。</p><p>也就是在格格兰这样想着的时候，原本还在原地的舍沙迅速的拉开了距离。</p><p>在格格兰的战锤够不到的圆圈外，以极快的速度绕起圈来。</p><p>这家伙，想干嘛？格格兰有些不解，但是握着武器的手也收紧了起来，随时准备发动反击。</p><p>一圈……</p><p>两圈……</p><p>三圈……</p><p>不知道几圈之后，舍沙还没有发动进攻，格格兰还以为舍沙想要依靠转圈圈来干扰她的感官，不由得有些想笑。</p><p>这家伙，难道不知道何谓精钢级冒险者吗。</p><p>对比普通人来说，从白金级开始，冒险者的身体素质基本上就已经属于进化后的人类了。</p><p>区区转圈圈，除非一次性的数量上升到一个十分夸张的程度，否则也只是轻微影响而已，只需要稍微缓解一下或者交由神官一类的职业者施加解除负面状态的魔法就可以轻易破解。</p><p>小子，还是太年轻了啊！</p><p>见到格格兰嘴角扬起的笑容，舍沙心头大定，成了，对方出现小瞧自己了。</p><p>虽然这是应该的，区区精钢级如果对战金级还要万分小心的话，那种人就属于有些过于谨慎的类型了。</p><p>感受着身体为数不多的体力，舍沙也放弃了继续绕圈圈的打算，默算了一下现在的位置，确认无误之后，左脚一蹬，凭借着还在移动的优势率先突入了格格兰的防守圈。</p><p>「来的好！」格格兰一声大喝，双臂发力，肌肉块顿时鼓了起来，一击横扫带着嗖嗖的风声直接朝着逼近的舍沙身体袭去。</p><p>就是现在！</p><p>舍沙眼中精光一闪，尚未用力的右脚往前踏出一步，强行止住向前冲击的身体趋势，随后用力一蹬，竟是直接斜斜地跃了起来。</p><p>「格格兰大意了呢……」</p><p>「的确，不过这也很正常，毕竟是在面对不如自己很多的对手，难免会出现这样的情况。」</p><p>坐在围墙上的提亚缇娜两人也察觉到了舍沙的路线，露出了有些惊讶的表情。</p><p>但却没有任何想要出口提醒格格兰的想法。</p><p>完美的做好了观众的本分。</p><p>「格格兰大人，小心了。」</p><p>话未出口，舍沙就已经可以感知到自己跃在半空之中本该不受力的脚底传来了敦实的触感，一个借力硬生生的从半空之中转了一个角度朝着尚未回防的格格兰砍下。</p><p>「什么！！」</p><p>格格兰大吃一惊，不明白发生了什么，但是当她注意到舍沙跳跃的那个地方留下一道脚印之后，顿时醒悟了过来。</p><p>什么时候跑到这来了。</p><p>原来是舍沙借助之前转圈圈的时机，不断地利用格格兰的轻视心理与有意无意的攻击迫使格格兰所在的位置发生变动，朝着训练场左侧的围墙逐渐接近。</p><p>等到了附近之后，在诱骗格格兰挥出武器，趁着间隙跃起，在墙壁的帮助下硬生生表演了一波空中拐弯。</p><p>醒悟过来的格格兰当即展开了应对方式，只是很可惜，已经挥出去的战锤可没那么好收回来，不仅仅要对抗挥舞时候的力量，还有旋转的惯性。</p><p>也就是这点收回来的时间，足够舍沙发起突进杀入毫无防守的格格兰近身之中了。</p><p>——赢了！</p><p>舍沙内心踊跃出一股兴奋，似乎已经看到了下一刻的胜利景象。</p><p>只是……</p><p>‘铛——’</p><p>伴随着武器之间接触发出的有些沉闷的声响，一根棍子横栏在舍沙与格格兰面前，硬生生的挡住了舍沙从上而下的一击。</p><p>WHAT！！!</p><p>看着挡住自己精心设计的招式的棍子，舍沙眼中露出些许迷茫。</p><p>这棍子——哪来的？</p><p>不过很快，他就知道是哪里来的了。</p><p>伴随着一股破风声袭来，迎面而来的黑影惊得舍沙立刻握剑格挡，但是最终那股冲击力没能落在舍沙身上。</p><p>原本袭来的战锤直直的立在半空，尾端则是被格格兰轻松的握住。</p><p>而阻拦舍沙那一击的正是这把战锤的锤身——一截长长的圆柱形辊体。</p><p>「哼哼，挺有一套的嘛，差点就给你得手了！」对于刚才的失误差点被舍沙击中的事情，格格兰反而表现得十分开心，声音之中带着喜悦，空着的手掌用力拍了拍舍沙满是尘土的肩膀。</p><p>「还是没能突破格格兰大人的防守……」舍沙也回过神来，放下手上的武器，一脸遗憾的表情。</p><p>「那是当然的，你也不想想，我可是王国之中为数不多的精钢级战士，要是能这么简单被你打中，那你还向我请教什么——哈哈哈哈哈。」格格兰脸上浮现粗犷的笑容，嘴里的笑声也没停。</p><p>「也是。」舍沙很快就调整好心态，接受了自己的失败。</p><p>「哼哼，小子，你也不要失落，能够做到这一步已经是相当了不起的程度了。」随后，格格兰又反应过来，问道。「你的力气好像比起之前增加了不少，头脑也比之前灵活了，遇到什么高人指定了吗？」</p><p>「哦，你说这个啊。」舍沙也没想到自己这番战斗居然如此忘我，以致于没有保持住原本的人设，不过他也不担心，早就准备好了应付的借口，回应道。</p><p>「之前不是因为拉娜大人被绑架的事情嘛，陛下派了战士长大人前来指导了我一段时间，也多亏战士长大人的指导，我才有了不小的提升。」</p><p>「……葛杰夫•史托罗诺夫」格格兰听到战士长的称呼立刻想到了脑海之中的那个男人的身影，了然的点了点头。「如果是他的话，的确可有可能，老子当初可也是败在他手上的，是条汉子！」</p><p>对于格格兰与葛杰夫•史托罗诺夫的交际，舍沙也偶尔耳闻，大概是三年前，王国举办了一起传的沸沸扬扬的御前比武大赛，获胜者将会会获得十分优渥的报酬，还有机会成为国王的随从。</p><p>想来就是那个时候，格格兰与战士长葛杰夫有过一战，并且还败给了对方。</p><p>「真是一场酣畅淋漓的战斗。」</p><p>格格兰对于这场战斗十分满意，尤其是舍沙的表现，完全超出了她先前的评价，这点就很不错。</p><p>看了看已经汗流浃背的舍沙，格格兰摆了摆手，打算结束今天的训练。</p><p>舍沙也正巴不得早点休息，一番剧烈的交战下来，浑身的骨头架子都快散架了。</p><p>于是当即找了一个角落，倚在墙上休息起来。</p><p>至于格格兰，开玩笑，精力充沛到可以再打十几个舍沙，像个没事人一样回去打了一壶水递给舍沙。</p><p>舍沙也不在意什么卫生，接过来便‘咕咚’‘咕咚’的喝了起来。</p><p>没一会儿，小半壶水全部进入腹中，整个人才缓了过来。</p><p>「谢谢，格格兰大人。」</p><p>十分有礼貌的将水壶杯口擦拭了一下，舍沙才将其递还给站在一旁的格格兰。</p><p>「哈哈哈，小问题，下次有时间你随时来找我，我玩的也很开心。」</p><p>格格兰知道，舍沙是跟随在公主拉娜身边值班的私兵，一般没有那么多时间走出王城前往王都，加上今天的训练量足够舍沙接下来一段时间好好反复咀嚼消化一番，所以也没让他明天过来训练。</p><p>又继续休息了一会儿之后，舍沙才一瘸一拐的离开训练场。</p><p>只不过抬头查看天色的时候，原本来时的艳阳高照，现在已经有落下的趋势了。</p><p>惨了，光顾着思考战斗方案了，忘记时间。</p><p>拉娜那边没啥问题，因为今天已经跟她说过了，所以明天再去值班也行。</p><p>现在舍沙担忧的事伊比鲁艾那边，自己才刚刚拜托人家来教导自己魔法知识，结果转头一个猛子就扎进与格格兰的对战之中。</p><p>这一来一回，就是一个下午。</p><p>估摸着今天是没戏了，只能等下次有机会出城的时候再来打搅对方？</p><p>那也太倒霉了吧。</p><p>舍沙感觉自己是不是有点不务正业了，好好地一个魔术师，怎么开始练起肉体来了……</p><p>但是那种实力不断增加的真实感，实在是令他有些欲罢不能。</p><p>……</p><p>希望【羽斯缇萨】不要怪我吧。</p><p>就在舍沙打算离开的时候，身后传来一道模糊难辨性别年龄的声音，将他的步伐停住了。</p><p>「小子，你是不是忘了什么！」</p><p>舍沙整个身子一僵，一点点的将正面挪移过来，然后将目光看向站在旅馆楼梯上的小小身影，露出不好意思的笑容。</p><p>「不好意思，今天和格格兰大人训练的太晚了，也不好意思打扰您的休息，所以原本打算下次再过来请教的。」</p><p>「哼——」伊比鲁艾发出微微的鼻音表示不满，但是在经过面具的改变之后，显得不是那么可爱，舍沙也只能默默等待这位导师的教育。</p><p>见到舍沙这幅认错认罚的态度，伊比鲁艾的心情也好了几分，说道：「算了，反正我们之前也没定下具体的时间。」</p><p>呼——</p><p>噢耶，这关过了，舍沙突然有一种上学时被老师抓到逃课，但是老师大发善心放过自己的庆幸心情。</p><p>正打算离开旅馆的时候，一个四四方方的包裹从伊比鲁艾从斗篷下提出，随后径直抛向舍沙。</p><p>舍沙一个走位，精准的借助了伊比鲁艾丢来的物件，当然代价就是原本酸涩的肌肉又开始酸痛起来。</p><p>嘶——</p><p>深吸一口气，舍沙没有打开包裹，而是将目光移到伊比鲁艾身上，等待着对方的解释。</p><p>伊比鲁艾也没有想要隐瞒的意思，直接开口说道：「这是我整理出来的有关于基础魔法的一些书籍，你拿回去好好翻阅记忆，等下次来的时候再还给我。」</p><p>哇，突如其来的幸福感差点冲垮舍沙的内心大坝。</p><p>看着站在楼梯口的小个子也带着滤镜，这黑黑的斗篷，真漂亮啊，当然，人美心更美。</p><p>感谢伊比鲁艾，感谢emmm——感谢我自己。</p><p>「谢谢。」朝着伊比鲁艾所在的位置，舍沙微微鞠了一躬，表情十分诚恳。</p><p>「哼，记得别把书本弄坏——」交代完这句话之后，伊比鲁艾便匆匆的回到二楼的房间之中。</p><p>舍沙只听到楼上传来轻微的房门关闭的响声，估计是伊比鲁艾关门回房了。</p><p>便不再停留，转身趁着现在还是太阳未落山的时间，打算去一趟位于王都之中的一家杂货铺。</p><p>之前打听过，那边有售卖一些关于魔法的材料。</p><p>价格也不贵，刚好也顺路回去。</p><p>不会浪费太多时间。</p><p>……</p><p>也就在舍沙离开之后，倚靠在紧闭房门后的伊比鲁艾才重新回到床上，脱下面具，捂着脸一脸无语的翻滚起来。</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-11</title>
      <link href="/posts/24912.html"/>
      <url>/posts/24912.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-11"><a href="#NO-11" class="headerlink" title="NO.11"></a>NO.11</h1><p>两人打闹了一番，重新恢复会刚才的模样，只是伊比鲁艾有着面具遮挡所以看不出来什么，但是缇娜脸上的红晕却是迟迟未曾消退……</p><p>舍沙：？</p><p>为什么缇亚你脸上也出现红晕？</p><p>地铁、老人、手机.jpg</p><p>你们这只小队是不是太怪了一些。</p><p>舍沙总感觉自己今天想要吐的槽好多，但是只能憋在心里。</p><p>「呼——你没有才能。往别的方向努力吧。」</p><p>「天赋异禀的人是从一开始就拥有才能……有人说才能是开花前的蓓蕾，每个人都有……哼。让我来说的话，那只是愿望。是才智劣弱的人用来安慰自己的好听话。过去那十三英雄的领袖也是如此。」</p><p>「但那家伙只是有才华但没开花罢了。这点跟你不同。因为你已经很努力了，但还是只有这点本事……对。才能不是人人皆有，而且差异再明显不过了。有的人就是有，没有的人就是没有。所以……我不会叫你放弃，但你还是该知道自己的斤两。」</p><p>依比鲁艾坐回属于自己的座位上，说了一大堆话，但还是没有松口的想法。</p><p>舍沙觉得这回不能等机会上门，要主动出击试试了，在刚刚的那段时间里，他也仔细思考了一下，伊比鲁艾无非是因为克莱姆本身不具备才能，所以不想浪费时间，因为就算教导了他到最后无非也是失望结局而已。</p><p>「伊比鲁艾大人，我知道您的好意，但是能否听我说几句……」</p><p>「嗯，你说吧，不过事先说明，任凭你浪费口舌我也不会同意的。」</p><p>阿这，真是令人不快的回复，你是哪里来的老小孩吗？这么幼稚与固执。</p><p>不过舍沙得到了回应之后，还是继续开口起来。</p><p>「我知道我是一个普通人，既不具备练剑的天赋，也没有魔法的才能，但是没有天赋的人也有着一些想要守护的事物……」</p><p>「真是愚蠢。实在是太蠢了。」舍沙还没说完就被伊比鲁艾气的直接打断，「用愚蠢都不足以形容你这个男人。，你是会早死的那种类型！」</p><p>旅馆之中还在闲谈的冒险者顿时被这边传来的争吵声给吸引了目光，见到这个情况，伊比鲁艾稍微收了收声，随后在长袍底下做了一些动作。</p><p>随即舍沙就感觉到周围的声音似乎飘远了，这种感觉有些难以形容，就像是从闹市之中突然进入一间空荡荡的鬼屋之中一样。</p><p>「别紧张，只是一点隔绝声音的措施而已。」一旁的格格兰给出了解释。</p><p>「嗯……谢谢。」明白这是对自己好——身为拉娜的唯一私兵，如果被传出去在旅馆与人争吵，恐怕也会丢了身为公主的面子吧。</p><p>即使只是为了维护自家领队拉裘丝的面子，又或者不被其他人看热闹。</p><p>伊比鲁艾的这个行为也充分表现了她的立场，也体现了她的性格——刀子嘴豆腐心。</p><p>而且舍沙也听的出来，眼前这个小不点，虽然一直在贬低自己，但是却并非看不起自己，更多的是出于长辈的劝告。</p><p>恐怕伊比鲁艾存活的两百年间也曾有过类似的经历也说不定，所以才会如此激动。</p><p>见到道具效果发动成功，伊比鲁艾也重新开口讲刚才未说完的话继续：「……你死了，有人会为你哭泣，不是吗？」</p><p>是啊，如果是克莱姆的话，恐怕这个世界上也唯有一个人会为其落泪吧。</p><p>伊比鲁艾想要以其珍视的那个人为理由，阻止眼前的少年步入深渊之中。</p><p>可惜，舍沙并非克莱姆，伊比鲁艾这番苦口婆心的劝告算是喂了狗了。</p><p>但是舍沙也不可能直接反对对方的说法，这与他当前的人设不服，不过他也早已有了对策。</p><p>先是沉默了片刻，随后重新抬起头来，看向伊比鲁艾的位置，那股坚定的目光仿佛可以透过面具看到隐藏在其下的那张稚嫩的脸颊一般，让伊比鲁艾差点没抵挡住想要扭头的冲动。</p><p>反应过来的伊比鲁艾连忙控制住刚才的冲动，装作若无其事的样子，心里却在暗暗吃惊舍沙的决心。</p><p>这家伙，恐怕比石头还难说服——石头是没有语言的，也正是因为如此，伊比鲁艾才意识到眼前少年的难缠之处。</p><p>顿时原本还算高昂的心情变得低迷起来。</p><p>却不料舍沙画风一转，让伊比鲁艾更加郁闷起来。</p><p>「谢谢，伊比鲁艾大人，您的善良令我荣幸，我知道我没有魔法的才能，也不愿意有人为我哭泣，如果可以的话，我想向您请教有关于魔法的知识，并非学习如何成为施法者，只是想要更多了解相关的知识，如果将来遇到施法者职业的敌人，我也可以更好的做出应对的方案。」</p><p>呼，终于把话题引到这一方面上来了，舍沙暗暗松了口气。</p><p>既然无法直接从伊比鲁艾身上习得魔法，那么以退为进，将重心放在获得有关魔法的知识上。</p><p>这才是舍沙最终的目的。</p><p>导师，他已经有一个人，现在缺的是教科书，而伊比鲁艾丰富的魔法知识，就是一座藏书众多的爆赞图书馆！</p><p>……</p><p>啪啪啪~</p><p>围观的盗贼双胞胎为舍沙鼓起了掌，好久没有见到有人能把伊比鲁艾逼到这个地步了。</p><p>一旁的格格兰也投来了【不愧是老子看上的处男！】的眼神。</p><p>伊比鲁艾只是发出了有些不爽的啧声一下，便干脆利落的同意了舍沙刚才的要求。</p><p>「既然如此，我也就不多劝你了，你有空随时都可以来我这里询问有关魔法的问题，不过——」</p><p>伊比鲁艾话锋一转，让舍沙刚刚展露的笑容僵在脸上，似乎只是为了报复刚刚的对话的小小为难，伊比鲁艾见到舍沙的表情也没有太过为难他，接着道。</p><p>「克莱姆。不过希望你可别因为想得到力量，就做出舍弃人性的行径喔。」</p><p>「舍弃人性？」</p><p>舍沙眯了眯眼，有些惊讶伊比鲁艾的说法，只是学习魔法知识而已，未免说的也太过严重了吧。</p><p>「别不放在心上，魔法这东西，可不是那么简单的东西。」伊比鲁艾罕见地显露出有些迷惘的表情，只是戴着面具没有被人发现，开口道：「人类做不到的事情，但是其他种族就可以轻易做到……」</p><p>「而魔法，就是通往那样的捷径。」</p><p>格格兰等人似乎也没听过这样的说法，纷纷收回看戏的目光，神情认真的听着伊比鲁艾接下来的话。</p><p>「人类这种生物，在这片大陆上，属于十分平庸的生物，不管是肉体还是魔法乃至于其他方面的才能，都很难和一些种族抗衡……」似乎是想到了什么，伊比鲁艾在这里补了一句。「……就像是龙族。」</p><p>「于是，没有才能、缺少才能的生物不可避免的会想要成为更加强大、优秀的生物，比如不死者或是魔法生物之类的。」</p><p>「一般人是不可能做得到那种事的吧。」格格兰反问了一句，得到了伊比鲁艾的肯定。</p><p>「一般人的确是做不到，但是有些魔法确实具备做得到的能力，也有人成功过了就是……」提到有人成功过的时候，伊比鲁艾含糊几句糊弄了过去，随后接着道。</p><p>「……变成不死者后，心智往往也会跟着扭曲。原本只是为了实现热情理想的手段……肉体上的变化有时会影响心智，把一个人变成骇人怪物。」</p><p>舍沙：这我知道，某位不愿意透露姓名的虫爷就是类似的存在。</p><p>「的确，要是那位公主一觉醒来，发现克莱姆变成了不死者，恐怕会无法接受吧，即使是为了守护她。」</p><p>舍沙：我感觉你们都在点我啊，有什么意见吗……</p><p>不做人是挺爽的，像是某个又吃又肏面包的吸血鬼一样。</p><p>不过也仅仅只是想想而已，如果能以人类之身登临顶端的话，没人会愿意舍弃自己的身份变成异类。</p><p>更何况，舍沙注定将来会成为完美的人类——不死之身、不老不死……就差一个替身能力就可以cos迪奥了。</p><p>美滴很~</p><p>「的确，这听起来挺恐怖的，恕我敬谢不敏。」感觉刚刚中二度爆棚的舍沙尽量控制外溢的羞耻心。</p><p>「所以啊，如果是学习魔法的话，一定要坚持自己的本意——即使只是学习知识也要克制自己，知道吗？」</p><p>「嗯嗯，受教了。」</p><p>「嗯嗯」*3</p><p>「……你们三个就别来瞎参和了。」说了这么多，伊比鲁艾也有一点口渴了，拿起桌上的水杯，将脸上的面具掀开一点角度，随后小口小口的抿了起来。</p><p>由于身高的问题，所以很好的隔绝了比她高的人看到她的长相的可能。</p><p>即使舍沙眼睛很尖，也只能依稀看到伊比鲁艾一闪而逝的白皙下巴。</p><p>「好了，接下来克莱姆你还有什么打算吗？」格格兰摸了摸她线条分明的下巴，询问起舍沙接下来还有什么需要帮助的地方吗。</p><p>无视那位眼中仿佛有着诡异光芒的盗贼少女，舍沙摇了摇头，表示接下来没有其他事情了。</p><p>说实话，今天能够一次性搞定苍蔷薇之中两位小队成员，舍沙都不由有些佩服自己了。</p><p>「格格兰女士接下来有空吗？」压下迫切想要从伊比鲁艾身上获取魔法知识的冲动，舍沙将目光放到格格兰身上。</p><p>打算先磨炼一下自己的实力再说。</p><p>只要苍蔷薇小队还在王都之中，那么到手的魔法知识就跑不了。</p><p>而且自己第一个请教的人是格格兰，跨过对方直接去进行魔法知识学习的话，多少显得有些古怪。</p><p>对于舍沙的内心活动，格格兰并不清楚，但是对于舍沙的邀请，她确实十分高兴。</p><p>脸上的笑容变得更加爽朗起来，声音十分响亮。「当然有时间，既然选择了这条路，那你可得加倍努力啊，处男！」</p><p>O-0姐，咋能不提这个外号吗？</p><p>舍沙无语，但也无可奈何。</p><p>「刚好这家旅馆的后院就有训练场，我们先打上一场，看看你现在的水平。」</p><p>格格兰向你发出了战斗邀请——</p><p>——是否接受</p><p>——确认or同意——</p><p>事情虽然是按照舍沙希望的那般发展，但总感觉哪里不对劲呢……</p><p>无视掉身后依旧不断盯着自己的目光，舍沙很快便跟随着格格兰前往后院的训练场进行指导训练了。</p><p>圆桌旁就只剩下三人依旧在做着，只是没有了活动气氛的格格兰，一时之间显得有些安静起来。</p><p>伊比鲁艾默默地看着窗外的景色，不知道在想些什么。</p><p>而缇娜与缇亚则是进行着激烈的手语交流。</p><p>「没被拜托呢」</p><p>「虽然盗贼的技术也不是谁都可以学的」</p><p>「就是，就是」</p><p>「但就是有一种被小瞧了的感觉」</p><p>「你也察觉到了嘛」</p><p>「去看看」</p><p>「去看看」</p><p>……</p><p>等到伊比鲁艾回过神来的时候，才发现原本四人的团队，瞬间只剩下自己一个人孤零零的坐在桌子旁，显得格外凄凉。</p><p>伊比鲁艾：∑(っ°Д°;)っ</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-同人设定</title>
      <link href="/posts/27400.html"/>
      <url>/posts/27400.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overlord与型月世界相似设定"><a href="#Overlord与型月世界相似设定" class="headerlink" title="Overlord与型月世界相似设定"></a>Overlord与型月世界相似设定</h2><h3 id="——超凡力量"><a href="#——超凡力量" class="headerlink" title="——超凡力量"></a>——超凡力量</h3><p><strong>overlord</strong>——拥有两种魔法体系，一个是原统治者（龙族）掌握的始源魔法体系（现已绝代），另一个是玩家从Yggdrasills的游戏变为现实之后带来的位阶魔法（现代魔法），共计10+1阶位。</p><p><strong>型月世界</strong>——也拥有两种魔法体系，一个是自遥远的神代时期，存在着【真以太】的神秘物质，神灵们直接联通根源施展的魔术与魔法无异，而神代的魔术师们也理所应当的施展着名为魔法的能力，神代断绝之后，神秘逐渐消退，而后第一魔法使诞生，【以太】架空元素诞生，魔术、神秘通过改变形态的方式获得延续。</p><blockquote><blockquote><p><strong>【以太】</strong> 是神代结束以后的玛娜\魔力，属于人工魔力。</p><p><strong>以太块(其他)</strong></p><p>以太，是在魔术协会被称为第五架主要素的东西，被作为与四大要素相互融合，形成形体的必要媒介。</p><p>本身无形，但又是魔术成立必不可少的要素。</p><p>本来应成为水火风其中之一的以太，</p><p>会有因为不熟练的术者而没有成为四大元素的任何一个，失去成型的方向而物质化的情况。</p><p>将这种东西称作以太块。</p><p>以太块没有任何用途。</p><p>某种意义上是做出无一样。</p><p>这样说起来好像“魔法”</p><p>其实以太块原本就是第一魔法的——</p></blockquote></blockquote><h3 id="——可能的未来"><a href="#——可能的未来" class="headerlink" title="——可能的未来"></a>——可能的未来</h3><p><strong>型月世界——钢之大地</strong></p><blockquote><p>在遥远的未来世界，行星的死期到了。</p><p>大陆上的大部分都是龟裂的荒野，被灰色与白浊的云所覆盖，所以生存于荒废的大地上的“人们”之间常用“钢之大地”来形容那时候的世界。</p><p>植物不会生长，大气不再像过去那样适合动物。</p><p>地球上的环境已经变得难以让旧人类生存。</p><p>大部分人类已然灭绝，幸存者也无法适应弥散于大气中的真以太（Sin）。</p></blockquote><p><strong>overlord——前传2138年</strong></p><blockquote><p>在2138年的世界，由于加速进行的环境破坏，地表彻底遭到污染，美丽的自然只存在于游戏世界里。</p><p>天空总是被黑色烟雾覆盖，太阳只有非常短暂的时间会露面。</p><p>由于含有有害物质的浓雾频繁地覆盖整座城市，很少有人不戴防毒面具出门。</p><p>理应会把二氧化碳转换成氧气，并吸收氮氧化物的植物，由于缺乏日照而枯萎，导致空气污染持续恶化。</p><p>随着植物减少，以植物的叶子和果实为食物的鸟类与虫类也急速减少当中。</p><p>污染当然也波及到水源，所有河川都染上丑陋的颜色，化为浊流。</p><p>由于污染实在过于严重，净水场无法彻底发挥作用，纵然是从水龙头流出的水，也变得必须经由滤水器凈化后才能饮用。</p><p>仰赖雨水与阳光的旧有农耕法逐渐衰退，蔬菜与谷类都是在温室里栽培出来的。</p><p>食品价格理所当然地水涨船高，新鲜蔬菜与水果变成不会流通到一般庶民手上的高级品。</p></blockquote><h3 id="——根源"><a href="#——根源" class="headerlink" title="——根源"></a>——根源</h3><p><strong>型月世界</strong></p><blockquote><p>　　世间万物，都是从一个叫“根源”的地方出来的。<br>　　当任意某物从根源出来的时候，就已经有一个“起源”，不论此物如何转世轮回，如何变为竹石草木飞禽走兽亦或人类，此物的“起源”始终不改。<br>　　与之相比，人生短短几十年，所形成的人格，是脆弱的。<br>　　故而，一个人一旦觉醒了“起源”，这渺小的人格就可能被吞没。<br>　　不过，也可能获得与起源相关的强大力量。<br>　　比方说，一个人的起源是剑，但他从小就是个木匠。如果他不觉醒，可能一辈子都是个木匠。但当他觉醒了起源，他说不定就抛弃了所有，一心钻研无上剑道，甚至连身体都变成了剑，终成一代剑圣。又或者，成为了铸剑师，在铸剑一道上有所成就。但也有可能，这个人没有彻底觉醒起源，只是受到了一定的影响。他并没有为了剑道而抛妻弃子，仅仅是对剑更感兴趣了，并且在剑道上有了一定造诣，然后该干嘛干嘛。<br>　　因为我不能剧透，所以上面的只是个比喻，而不是实际存在于作品中的例子。你会在这部作品中见到各种觉醒起源的人。其中有连人格都几乎被吞噬的人，有凭意志力克服问题的人，也有只是被起源轻微影响的人。<br>　　如上所述，有各种各样的不普通的人，而这些不普通的人往往被男主角这个最普通的人所吸引，或者就算藏起来也会被男主角找到。<br>　　注：剧中并非所有人的故事都和起源有关。</p></blockquote><p><strong>overlord</strong></p><blockquote><p>玩家来源未知，从幸存下来的真龙王口中被称为“龙帝的污秽”</p><p>这个世界存在名为【天生异能】的独特能力，并非源于Yggdrasills的体系，更像是本土自然诞生的能力。</p><p>武技——也是这个世界本土生物特有的能力，被称为战士的魔法。</p><p>自八欲王那代开始，原本属于始源魔法的时代彻底断绝，世界被位阶魔法占据，所有后出生的龙族一出生就只会位阶魔法而无法学会始源魔法</p><p>根据以上推测，该世界也存在类似“根源”的概念，“根源”之中属于【真以太】的概念被【以太】所覆盖，造成了始源魔法的断代，但不影响已经学会始源魔法的存在继续使用，就像是风力发电、火力发电一般，虽然能量来源不一样，但转化之后依旧可以使用</p></blockquote><h3 id="——法则"><a href="#——法则" class="headerlink" title="——法则"></a>——法则</h3><p><strong>型月世界</strong></p><blockquote><p>　　【<strong>居民</strong>】<br>　　世界的里侧：神代结束，幻想种进入了里侧，表侧留给了人类。<br>　　世界的表侧：现今人们居住的世界。<br>　　世界的外侧：英灵座的所在，英灵座和时间轴切离。<br>　　【<strong>法则</strong>】<br>　　世界的里侧：过去曾被称之为「世界」的法则所支配的地方。<br>　　世界的表侧：现今人类和物理法则存在于此，像是包覆住了星球表面的薄纱。</p></blockquote><p><strong>overlord</strong></p><blockquote><p>　　<strong>宇宙空间</strong>：</p><p>　　能看到星星，应该代表还有很多天体存在。</p><p>　　和地球一样，这个世界也有一个太阳和月亮。</p><p>　　<strong>自然环境</strong>：</p><p>　　海水是淡水。</p><p>　　有部分和原本世界的一样的生物存在，特别是牲畜。也有很多原本世界不存在的小动物或植物。</p><p>　　某些地区会有特殊的魔法地貌，这些自然景观完全无视原来世界的一般物理常识。</p><p>　　比如逆流而上的瀑布。</p><p>　　<strong>化学</strong>：</p><p>　　黑火药在此无法燃烧，因此无法诞生热兵器。</p><p>　　即在这个世界： 2KNO3+S+3C≠K2S+N2↑+3CO2↑（无法反应）</p><p>　　<strong>物理法则</strong>：</p><p>　　热力学三定律与原来的世界完全不一样。</p><p>　　<strong>否定第一定律</strong>：</p><p>　　由于没有能量守恒定律，像不死者那样的物种可以永恒的运作而无需能量供给，某些魔法道具也可以无限运作，不需要能量补给。</p><p>　　完全否定了熵定律</p><p>　　物体下落会因为加速度不断提升速度，似乎完全不受空气阻力的影响，但目前只是猜测，或许是阻力极小几乎为0，奇怪的是下雨的雨滴不会砸伤人。</p><p>　　即使达到超音速，也不会产生音爆。</p><p>　　<strong>特殊法则</strong>：</p><p>　　<strong>语言自动翻译</strong>：</p><p>　　语言不同的生物交流时，这个世界的语言经过自动翻译之后，再传达给对方。</p><p>　　如果可以知道对方说的话，那么也可以和人类以外的生物沟通，比方说狗和猫。</p></blockquote><h3 id="——特殊存在"><a href="#——特殊存在" class="headerlink" title="——特殊存在"></a>——特殊存在</h3><p><strong>型月世界</strong></p><blockquote><ol><li>两大抑止力<br>    由集体无意识所做的安全装置。<br>   　身为|人类愿回避破灭的祈祷的阿赖耶，<br>   　　身为|星球想延长生命的祈祷的盖亚，<br>   　　分为这样两个。<br>   　　无论哪个都将现在的世界的延长作为目的，在毁灭世界的重要因素发生的瞬间出现，抹消这个因素。<br>   　　因为是无意识，即使发生也不会引人注目，不会被任何人意识到。<br>   　　——空之境界附录用语集<br>   　　《空之境界》说的比较玄乎，就像冥冥之中的干涉。<br>   　　《Fate&#x2F;stay night》里就说的比较简单粗暴。阿赖耶跟卫宫士郎签订契约，卫宫士郎死后成为守护者，由守护者出战。</li><li>神、精灵</li><li>冠位七骑</li><li>人类恶 Beast</li><li>UO (Ultimate One）</li><li>吸血种、吸血鬼（真祖→死徒）</li></ol></blockquote><p><strong>overlord</strong></p><blockquote><ol><li><p>人类种</p><p>​人类 精灵 矮人 的统称。不具备种族等级，且都有寿命限制。基础能力上低于 亚人种和异形种。但能习得的职业等级更多，更具多样化。</p><p>​人类种 之间可以杂交后代。但几乎不能与其他种进行繁殖，龙族除外。</p></li><li><p>亚人种</p><p>​和人类种外观相差巨大，有种族等级。会随着成长而强大，拥有特殊的种族能力，但也具有寿命限制。多数以肉食为主。智力水平上与人类无异，但更看重武力，因此智慧没有得到有效开发。</p><p>​一般的亚人群落文明程度较低，停留在部落时代，不具备较高技术。但也存在文明程度超过人类的亚人类国家。中部大陆的亚人类六大国，正在霸权竞争中。</p><p>​亚人类种 与 人类种 无法诞生后代。</p></li><li><p>异形种</p><p>​具体的分类方法不明。不符合人类人种、亚人种的人。不死族和史莱姆等种族。成长到一定程度停止老化，无寿命限制。</p><p>​与人类种，亚人种相比能力值的很高，能取得怪物般的耐性和特殊能力，不过，明确的弱点很多。</p><p>​目前这个世界发现的异形种文明极少。</p><p>​龙族作为异形种存在，白金龙王则是自称世界守护者，维护世界秩序，对付为恶的玩家</p></li><li><p>玩家</p></li></ol></blockquote><h2 id="Overlord世界二设"><a href="#Overlord世界二设" class="headerlink" title="Overlord世界二设"></a>Overlord世界二设</h2><h4 id="剧情相关"><a href="#剧情相关" class="headerlink" title="剧情相关"></a>剧情相关</h4><h4 id="六大神"><a href="#六大神" class="headerlink" title="六大神"></a><strong>六大神</strong></h4><blockquote><p>​曾经六大神和白金龙王达成了交易，与教国达成了某些不为人知契约。</p><p>​六大神是带着公会穿越的，公会据点就在卡兹平原所占的区域，六大神的公会据点里都是猫，因此那片平原被命名成了卡兹（Katze）平原。（世界法则自动翻译的直接音译）</p></blockquote><h4 id="魔神之乱"><a href="#魔神之乱" class="headerlink" title="魔神之乱"></a><strong>魔神之乱</strong></h4><blockquote><p>​200年前的不明原因导致公会解散，失去了主人和公会的六大神的属神开始暴乱，因此就是魔神之乱。而「猫様大王国」是不重视战力的公会，因此造成的破坏并没有过于严重。<br>　　然后公会据点本身又恢复到了原来的那个不死者都市的副本，导致原本的人类大国被这片诅咒之地腰斩而最终导致毁灭分裂。<br>　　由于异世界没有像游戏里那样的自动修复和不可破坏地形，随着时间的流逝，原本的都市只剩下了残垣断壁。<br>　　只剩下诞生不死者的机制还在运行，另外由于城市据点是一个低级副本，又因为在不同世界发生异质化的原因，所以周边生成的不死者也就不会太强 。<br>　　这个诅咒之地卡兹平原就如此诞生了。<br>　　随后白金龙王或许是因为和六大神交易的某种条件被因此触发，于是就来到西北角建立了评议国。</p></blockquote><h4 id="不明原因导致公会解散"><a href="#不明原因导致公会解散" class="headerlink" title="不明原因导致公会解散"></a><strong>不明原因导致公会解散</strong></h4><blockquote><p>​这个“不明原因”难道是猫樣大王国的公会武器被破坏了？<br>　　猜测破坏猫樣大王国公会武器的可能是朽棺龙王，原著外传因为有乱入的铃木悟存在，所以导致朽棺的死亡。<br>　　正传故事之中，安兹出现的时间点，卡兹平原已经出现，且朽棺龙王不见踪影。<br>　　在根据朽棺对玩家的厌恶，为了寻找玩家的弱点，也有可能是对当年龙族战争的报复，优先对已经失去了玩家主力，只剩下工会npc和雇佣兵存在的猫樣大王国发动了偷袭。<br>　　并使用灭魂吐息以此摧毁了工会武器的存在，导致工会解散，加上朽棺作为不死族的身份，抢夺了工会据点因此影响了据点刷新的怪物都变成不死生物。<br>　　再猜测，当年作为六大神之一的死神，根据教国记载可能是死于八欲王之手，但也只是丢失了携带的装备。<br>　　斯尔夏那死于鲅鱼王之手的最大疑点在于教国只损失了死神所携带的道具，以玩家的行为逻辑来说，绝对会来抢夺倾国倾城和剩下的五柱神道具，用阴谋论来解释的话更有可能是土著里的反鲅鱼王势力不希望他们这些玩家联合起来，所以暗杀了死神并嫁祸给鲅鱼王，甚至鲅鱼王都未必知道西北角有个由六个玩家建立的教国。<br>　　故此推测，当时杀死死神的凶手是伪装成玩家的龙族，有可能是想要从死神口中获悉一些八欲王的弱点，但被拒绝之后，为了削弱玩家的力量，从而实施了这个计划。<br>　　暂不确定是否有白金龙王的参与</p></blockquote><h4 id="十三英雄的故事与结局"><a href="#十三英雄的故事与结局" class="headerlink" title="十三英雄的故事与结局"></a><strong>十三英雄的故事与结局</strong></h4><blockquote><p>　　十三英雄的百年期间，是出现的低级玩家替自己的伙伴或前辈清理遗留祸害的故事，魔神之乱导致本土人类的生存空间收到挤压，同样也是人族职业的玩家开始聚集新的伙伴展开冒险。<br>　　但是在不断的击杀发狂的魔神之后，玩家也就是里克了解了事情的缘由，集结的小队最后也以击杀神龙——朽棺作为目标。<br>　　但是在最后的与神龙的战斗之中，白金龙王却站在了神龙一边。<br>　　正是这一意外导致玩家的死亡。</p><p>​——【在想是否要击杀阿兹斯，抢夺强化铠的时候回忆起曾经的十三英雄领队·里克。<br>　　表示曾经自己做过这样的事情，在某次与强敌的战斗后，杀人夺物，对外宣称队友是战死，并托付给自己东西，这种合情合理的欺骗。<br>　　考虑到十三英雄最后的敌人被称作神龙，并且回来后所有成员的气氛消沉，沉默不语，之后便解散了。<br>　　所以推测是这里白金龙王背刺把里克击杀了。】</p></blockquote><h4 id="龙帝的污秽"><a href="#龙帝的污秽" class="headerlink" title="龙帝的污秽"></a><strong>龙帝的污秽</strong></h4><blockquote><p>　　作为overlord世界龙族至强者的龙帝到达了始源体系的顶峰，无法突破上限的他开始展开对『根源』的研究，企图到达根源获得新的力量，但也因为疯狂的举动，致使召唤而来的「Yggdrasills」虚拟游戏污染了overlord世界的『根源』。</p><p>​千年前，大量的「Yggdrasills」怪物通过『根源』获得实体降临到这个世界之中，引起了剧烈的动荡。</p><p>​虽然彼时的龙族将流出的怪物击杀或封印，但是未能阻止「Yggdrasills」对『根源』的污染。</p><p>​每隔百年就会从中流出属于「Yggdrasills」游戏的玩家与怪物，对世界造成威胁。</p><p>​也正是这样的原因，才使得原本属于这个世界的始源魔法被「Yggdrasills」的位阶魔法取代。</p><p>​因此玩家也被称作‘龙帝的污秽’</p></blockquote><h4 id="百年余震"><a href="#百年余震" class="headerlink" title="百年余震"></a><strong>百年余震</strong></h4><blockquote><p>「Yggdrasil」在于『根源』融合之后产生的余波，就像是一滴墨水落在水盆之中溅起的涟漪一般，每隔百年就会出现一次</p></blockquote><h4 id="玩家的本质"><a href="#玩家的本质" class="headerlink" title="玩家的本质"></a><strong>玩家的本质</strong></h4><blockquote><p>「Yggdrasills」融入根源之中后流出的数据获得了以往留存的记忆，本质上是角色+玩家精神的存在。</p><p>具体可以参考型月世界的人可以分成三部分：肉体、灵魂、精神。</p><p>玩家是由角色的肉体、从根源诞生的灵魂、原玩家的精神，这三个部分组合而成的存在。</p></blockquote><h4 id="原作者说法"><a href="#原作者说法" class="headerlink" title="原作者说法"></a><strong>原作者说法</strong></h4><blockquote><p>　　第一，在2011年时丸山肯定了读者关于八欲王是根据YGGDRASIL的魔法书探索魔法原理施加改造，从而造成了位阶魔法的扩散。</p><p>　　第二，被丸山表示『要是把她逮住让她把她知道的话全部吐出来的话，大半OVERLORD的伏笔都会暴露了呢』的灭国，甚至言及无铭咒文书是一切的答案。</p><p>　　第三，丸山在杂感中表示『OVERLORD中的上位者都有相应的智慧，没有笨蛋。倒不如说这是作为一个规则而存在』，因此可以断定八欲王绝对不蠢，不至于蠢到主动扩散位阶魔法。</p><p>　　就连安兹都不想扩散知识进而威胁到自身，更何况是扩散位阶魔法这种异世界原本没有力量。</p><p>　　能在八欲王时期扩散，根源基本上只能说是某件世界级道具的被动效果造成的，接着就是八欲王由被动转向主动。</p><p>​（二设推测：位阶魔法的扩散，源自于无铭咒文书的出现，其不仅记录了这个世界的所有魔法技能，同时也具备根绝获取到位阶魔法的个体学习其他体系魔法的可能）</p></blockquote><h4 id="武技"><a href="#武技" class="headerlink" title="武技"></a><strong>武技</strong></h4><blockquote><p>overlord原住民特有的技术，被称为战士的魔法，属于特殊技能，消耗名为集中力的能量。</p><p>实质上与灵魂与精神有着密切的关系，过度消耗精神力不仅会导致感到难受，也会影响到肉体存在。</p><p>原著之中的克莱姆在超越了个体的极限之后，便达到了人体的自灭。</p><p>二设消耗spirit Point（精神值）发动武技</p><p>spirit Point（精神值）与个体的等级与灵魂状态有关，等级高的个体spirit Point（精神值）也高，可以施展更多的武技。</p></blockquote><h4 id="武技参考例子"><a href="#武技参考例子" class="headerlink" title="武技参考例子"></a><strong>武技参考例子</strong></h4><p>——葛杰夫持有武技</p><blockquote><p>可能性察觉、弱点感知、战气集中、即刻反射、流水加速、四光连斩、六光连斩。</p><p>名字未知，效果肉体强化。</p><p>名字未知，效果提升集中力。</p><p>名字未知，效果魔法抵抗强化。</p><p>名字未知，需要消耗4份集中力。</p><p>名字未知，葛杰夫的绝招，目前最强的单体武技。</p></blockquote><p>——参考规则</p><blockquote><p>假设参考魔法位阶，每7级提升一个阶位。</p><p>每提升一级能新学习一个，即一般个体达到百级能使用的武技数量为100个（但是武技发展出来还没达到这个数量）。</p><p>葛杰夫等级为28Lv，共计可以施展至第四阶位的武技，学习28个武技，设定中提到使用始源戒指之后到达英雄领域，葛杰夫可以施展一次绝技，判断为第五阶位的武技。</p></blockquote><p>——武技阶位</p><blockquote><p>目前发动的武术技能为肉体强化、精神强化、魔法抵抗强化、暂时魔法武器化，还有攻击时使用的武术技能等五种</p><p>1-7级：要塞、疼痛钝化、感觉强化、防御强化</p><p>8-14级：斩击、能力上升、可能性察觉、弱点感知、战气集中、回避、防御超强化、</p><p>15-21级：能力超上升、四光连斩、脑力解放</p><p>22-28级：六光连斩、流水加速</p><p>29-35级：闪光烈斩、</p></blockquote><p>——武技消耗</p><blockquote><p>葛杰夫通常可以同时发动6个武技，王牌(龙的秘宝）使用的情况下可以同时使用7个武技。</p><p>推测：第一阶位武技消耗为1-7，二阶为8-14，顺延下去，每提升1级，sp值增加10</p></blockquote><h4 id="魔法体系解析（待增加）"><a href="#魔法体系解析（待增加）" class="headerlink" title="魔法体系解析（待增加）"></a><strong>魔法体系解析</strong>（待增加）</h4><blockquote><p>魔法无吟唱化&#x3D;高速神言</p><p>召唤魔法&#x3D;使魔魔法</p></blockquote><h4 id="英灵系统（改造）"><a href="#英灵系统（改造）" class="headerlink" title="英灵系统（改造）"></a><strong>英灵系统（改造）</strong></h4><blockquote><p>型月世界之中具备传说度的英灵，但是在overlord世界之中反而不具备相应的故事，本地流传的故事某种意义上也十分零散，通过转译成overlord世界的仪式之后，虽然不能召唤出原有的英灵，但舍沙却可以借助英灵召唤仪式强化现存的传说之人的属性。</p><p>因为第三法的结果就是将人类变成英灵一样的存在。</p><p>也许未来的某一天，能够真正的召唤出历史上的英灵角色吧。</p><p>与之对比一同发生变动的，则是英灵的职介。</p><p>战士、施法者、盗贼、神官等等职业</p></blockquote><h4 id="守护者"><a href="#守护者" class="headerlink" title="守护者"></a><strong>守护者</strong></h4><blockquote><p>白金龙王，身为龙帝的儿子，也知晓这个世界的核心所在，为了阻拦玩家，守在根源的门口。</p></blockquote><h2 id="同人剧情碎片"><a href="#同人剧情碎片" class="headerlink" title="同人剧情碎片"></a>同人剧情碎片</h2><h4 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h4><h4 id="碎片一"><a href="#碎片一" class="headerlink" title="碎片一"></a><strong>碎片一</strong></h4><blockquote><p>龙王国龙王女持有天生异能【始源再现】（根源皇女那样直接联通根源的类型？通过支付相当数量的代价（灵魂）就可以发动），通过献祭庞大数量的生物的灵魂释放一招威力巨大的始源魔法（或许是类似灭魂吐息那种），始源魔法疑似与根源存在关联，位格上可能与【魔法】有所挂钩，所以舍沙将会把龙王女作为目标，已知龙王国一直遭受周边兽人国家的迫害，国内的经济十分低迷，如果想要搞定龙王女，不妨可以从这一方面下手，以交易的方式将其纳入麾下</p></blockquote><h4 id="碎片二"><a href="#碎片二" class="headerlink" title="碎片二"></a><strong>碎片二</strong></h4><blockquote><p>记忆修改魔法，位阶魔法之中高位的魔法，使用会消耗大量的MP，即使是铃木悟也无法小觑消耗量，可以设计一个剧情，在铃木悟降临之初派一名人造人前往卡恩村\要塞都市附近，在遇见铃木悟之后，尝试改变一些原著之中关于人类的毁灭结局</p><p>因为担心会遭遇到记忆修改与窥探，所以安排人造人，记忆中交代对方的样貌也是伪装的，且如果铃木悟通过记忆修改魔法窥探，还可以看到人造人记忆之中，某人用写着日文的牌子与其对话的场景。</p></blockquote><h4 id="碎片三"><a href="#碎片三" class="headerlink" title="碎片三"></a><strong>碎片三</strong></h4><blockquote><p>以原著之中雅儿贝德对飞鼠的情感，稍加改编便可以嫁接到舍沙身上。</p><p>雅儿贝德&#x3D;扭曲的爱情&#x3D;拉娜</p><p>飞鼠&#x3D;追求幸福&#x3D;舍沙</p></blockquote><h4 id="碎片四"><a href="#碎片四" class="headerlink" title="碎片四"></a><strong>碎片四</strong></h4><blockquote><p>死灵宝玉也就是原著之中要塞都市大坟场搞事情的那个人手上的魔法道具，里面蕴藏着数量众多的负能量，如果剧情前期需求大量能量才能施展的魔法的话，可以将其考虑纳入囊中，以及是否与灵魂类魔法有所牵连的剧情也以开拓思路</p></blockquote><h4 id="碎片五"><a href="#碎片五" class="headerlink" title="碎片五"></a><strong>碎片五</strong></h4><blockquote><p>在具备充足的实力之后，舍沙将会与拉娜展开一次摊牌对谈，讲话的内容围绕着灵魂与肉体之类的话题（内容可变更，暂无更好灵感），随后正式与克莱姆这个身份实现切割，改名为——舍沙·阿南塔·冯·爱因兹贝伦</p><p>该段剧情可以参考原著铃木悟改名安兹那一段进行改编，尽量不要过于出戏即可</p></blockquote><h4 id="碎片六"><a href="#碎片六" class="headerlink" title="碎片六"></a><strong>碎片六</strong></h4><blockquote><p>改造魔法，这个世界有传送类的魔法，且该世界物体下落似乎不受空气阻力影响，故将无法飞行的敌人传送到天上，将其摔死</p></blockquote><h4 id="碎片七"><a href="#碎片七" class="headerlink" title="碎片七"></a><strong>碎片七</strong></h4><blockquote><p>背地里组建一支冒险者小队，逐步提升到精钢级等阶，取名『冬之城』\『雪之城』之类的。（原因见英灵系统改）</p><p>初期剧情展开可以让原著之中挑衅铃木悟的那个混混铁牌冒险者出来刷个过场</p></blockquote><h4 id="碎片八"><a href="#碎片八" class="headerlink" title="碎片八"></a><strong>碎片八</strong></h4><blockquote><p>你是生长在稻田里的树苗，注定与周围的存在不同，我是不甘平凡的稻苗，追逐毫无实际的太阳，如今的我依然挣脱枷锁，而你还被囚在其中。</p><p>克莱姆已经死了，如今站在你面前的是全新的个体，来追逐吧，像你这样的天才不该困于此处，来恨我！来报复我！</p><p>从你自己搭建的这个——禁锢自己的牢房中——走出来，朝我发起你的复仇！</p><p>我就在前面等你——</p><p>希望你不要让我失望，我的公主殿下。</p></blockquote><h4 id="碎片九"><a href="#碎片九" class="headerlink" title="碎片九"></a><strong>碎片九</strong></h4><blockquote><p>拉娜正式加入苍蔷薇小队之中，开启了属于自己的魔法之旅，在旅途之中，收集着来自舍沙的各种消息。</p></blockquote><h2 id="同人角色卡"><a href="#同人角色卡" class="headerlink" title="同人角色卡"></a>同人角色卡</h2><h3 id="角色卡"><a href="#角色卡" class="headerlink" title="角色卡"></a>角色卡</h3><hr><table><thead><tr><th align="center">名称</th><th>舍沙·阿南塔·冯·爱因兹贝伦</th></tr></thead><tbody><tr><td align="center">身份</td><td>魔术师</td></tr><tr><td align="center">种族</td><td>人类</td></tr><tr><td align="center">等级</td><td>战士13Lv、守护者3Lv、魔术师3Lv</td></tr><tr><td align="center">武技</td><td>要塞、回避、斩击、感觉强化、能力上升、超斩击</td></tr><tr><td align="center">魔法</td><td>「使魔」、</td></tr><tr><td align="center">实力评定</td><td>秘银</td></tr></tbody></table><hr><table><thead><tr><th align="center">名称</th><th>拉娜·提耶儿·夏尔敦·莱儿·凡瑟芙</th></tr></thead><tbody><tr><td align="center">身份</td><td>王国公主</td></tr><tr><td align="center">种族</td><td>人类</td></tr><tr><td align="center">等级</td><td>公主（一般）5Lv、天才5Lv</td></tr><tr><td align="center">实力评定</td><td>金</td></tr></tbody></table><hr><table><thead><tr><th align="center">名称</th><th>拉裘斯·亚尔贝因·蒂尔·艾因多拉</th></tr></thead><tbody><tr><td align="center">身份</td><td>苍蔷薇领队</td></tr><tr><td align="center">种族</td><td>人类</td></tr><tr><td align="center">等级</td><td>祭司、圣殿骑士、神官……</td></tr><tr><td align="center">实力评定</td><td>英雄</td></tr></tbody></table><hr>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-10</title>
      <link href="/posts/41361.html"/>
      <url>/posts/41361.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-10"><a href="#NO-10" class="headerlink" title="NO.10"></a>NO.10</h1><p>「艾因多拉大人，不知您的同伴是否现在王都之中呢？」</p><p>舍沙的话问的有些奇怪，但是拉裘丝却是反应了过来他的意图。</p><p>因为她回想起了前几个月时她来拜访拉娜的时候，眼前这名少年曾经拜托自己询问自己小队成员的问题。</p><p>「叫我拉裘丝就好了……」拉裘丝看向舍沙，「果然还是有些不太适应这种太过正式的称呼。」</p><p>「至于你之前的事情，我也问过了我的队友，她们都说没有什么问题，而且我们小队刚完成一个委托，未来一段时间都会待在王都之中，你应该知道我们小队的住址吧，到时候你直接过去就好，想必格格兰她们也不会介意。」</p><p>说道最后，似乎是想到了什么，拉裘丝转头看向已经忙活完的拉娜，小声说道。</p><p>「拉娜，你之前拜托我们的事情也弄好了，你看打算什么时候……」</p><p>看起来是属于少女之前的私语时间了啊。</p><p>舍沙识趣的从座椅上站起，然后朝着两人说道：「拉娜大人、艾因多拉大人，还请容许在下失陪，有一些私事需要单独出去一趟。」</p><p>也许是感觉到舍沙口中的正式，也许是早已有所了解缘由，所以拉娜这回也没有阻拦舍沙的离去。</p><p>只是点了点头，嘱咐了几句注意安全的话语之后，便继续和拉裘丝说起悄悄话来。</p><p>……</p><p>咔哒。</p><p>房门被舍沙轻轻关上，发出些微的响动声。</p><p>再确认周围没有其他女仆和骑士的踪迹，舍沙这才慢悠悠的朝着王宫唯一的出口走去。</p><p>一边走，一边在脑海之中呼唤着还在研究如何转译魔术基盘的【羽斯缇萨】。</p><p>很快，沉寂许久的女声便再次出现在舍沙脑海之中。</p><p>◤怎么了，遇到什么突发情况了吗◥</p><p>似乎是不理解舍沙呼叫自己的原因，【羽斯缇萨】语气之中带着些许疑惑。</p><p>对此，舍沙只是将刚才在房间里面几人的交谈与【羽斯缇萨】简单提了一下，然后才说出呼唤出她的原因。</p><p>他现在要去的地方就可以获取到相当数量的这个世界的魔法知识。</p><p>但要如何传递给【羽斯缇萨】呢？</p><p>如果只是纸面信息的话，他也无法一次性借阅太多，毕竟自己只是打着过去请教的借口，而并非深入学习。</p><p>如果有其他的方式，那自己又该如何配合【羽斯缇萨】？</p><p>这一点必须要提前弄清楚，因为接下来他就会接触一位存活了两百年以上的魔力系魔法咏唱者，换成月世界的说法就是一位神代的魔法师。</p><p>不排除可能被对方发觉自己是假的克莱姆的可能性。</p><p>所以行事必须更加小心一些。</p><p>在确定【羽斯缇萨】可以通过感知舍沙周围一定范围内的情形之后，舍沙也终于放下心来。</p><p>在出城门之前，他先回了一趟自己在石塔的房间取了为数不多的钱财，待会既然出城也顺带采买一些以后使用的物资。</p><p>希望这点钱能够作为初始资金发挥作用吧——舍沙看着袋子里那为数不多的混杂着铜币、银币以及零星几枚的金币。</p><p>有点像是直面自己的贫穷的落魄汉。</p><p>确认没有遗落的物品之后，换上一身简装随后大踏步的沿着出城的通道走了出去。</p><p>不过这一回，没了拉娜的带领，他可没有那么好的待遇乘坐马车前往王城，只能依靠自己的双腿来前进。</p><p>不过幸好二者之间的距离也不算远，倒也不是什么难题。</p><p>……</p><p>王都的街道一如既往的普通，但气氛上比起上次跟随拉娜出来的时候要更加热闹一些。</p><p>也许是前不久的清剿活动让原本活跃在王都的黑恶势力都开始安静起来的缘故吧。</p><p>不过，这种情况舍沙也不讨厌。</p><p>或者说，如果都能保持着这种水准的生活。</p><p>也许王国还能继续持续个数十年，乃至上百年也说不定。</p><p>只是很可惜，这是有些痴心妄想的事情。</p><p>人性的贪婪永远不会让人失望，总会有一些害群之马会不定时的冒出来，就像田地之中割不完的野草一般。</p><p>野火烧不尽，春风吹又生……</p><p>好像用在这里有些侮辱这首诗了……</p><p>舍沙停下了脚步，并非已经到达此行的目的地，只是见到了一个手脚不太干净的盗贼。</p><p>啧，坏人心情。</p><p>刚打算过去教训一下对方，却发现已经有几名冒险者打扮的路人已经将那名盗贼给包围了起来。</p><p>看着那几名年轻的冒险者教训了盗贼一顿，随后又在赶来的卫队士兵面前解释的局面。</p><p>年轻真好，还相信正义的存在。</p><p>舍沙摇了摇头，无视刚才发现的那一幕——盗贼与士兵之间的眼神交流。</p><p>重新迈动脚步，朝着此行的目的地——【琉璃居】——出发。</p><p>至于那几位年轻的冒险者，恐怕要吃一回年轻的苦了，不过这和舍沙又有什么关系呢，也许等他以后成为像是铃木悟那般强大的人物之后可以改变这一切吧。</p><p>但现在——还是处理好自己的事情为先。</p><p>……</p><p>走了不久后，舍沙就看见大道一侧有家冒险者的旅店。</p><p>当中具备住宿设施与马厩，以及足够用来练剑的宽广庭院。</p><p>美轮美奂的外观不难想像内部装潢必定同样华美，客房的窗户镶嵌着澄澈透明的玻璃。</p><p>这便是这座王都——「里·耶斯提杰」之中最豪华的旅店了。</p><p>唯有对自己本领有自信，且付得起高昂的住宿费用的冒险者居住聚集的地方。</p><p>至于同样付得起费用的贵族，他们通常都居住在自己的豪华府邸之中，不屑于冒险者这种下等人住在一起。</p><p>无视于站立左右的警卫兵，舍沙直接打开旅馆的门。</p><p>初一进门，映入眼中的是使用了整个一楼空间的宽敞酒店兼餐厅。</p><p>只是以它的宽敞程度而论，视野之中正在交谈休憩的冒险者的人数寥寥无几——并非是恰好错开人流，只是因为高级冒险者的数量十分稀少，且大部分都在其他城市执行委托。</p><p>毕竟虽然是王都，但是论起冒险者眼中的繁华，「里·耶斯提杰」根本比不上位于交战边界上的要塞都市「耶·兰提尔」。</p><p>舍沙的出现吸引了旅馆内为数不多的冒险者的注意，一瞬间原本还在交谈的人声就停止了下来。</p><p>所有人都将实现投到这位新来的年轻人身上。</p><p>带着好奇、疑惑、打量地看着舍沙。</p><p>没有理睬这些无关人员的打量，舍沙扫视了大厅一圈，在旅馆大厅最里侧的一张餐桌上，寻找到了自己此行的目标。</p><p>围坐在一起交谈的四名冒险者。</p><p>那是一名强壮到难以界定性别，只能依靠服装来分辨的女性战士，以及一名始终将自己的面貌与身体隐藏在面具与斗篷下的小个子。</p><p>还有两名身形外貌几乎一致的双胞胎盗贼女性。</p><p>找到了。</p><p><img src="/./../assets/blog_res/Overlord-10.assets/65f82cf6ff9242dbaeed43c311badd17.jpeg" alt="苍蔷薇"></p><p>就舍沙所知的信息来看，精钢级冒险者小队「苍蔷薇」，是由身为领队的信仰系魔法吟唱者拉裘丝、战士格格兰、魔力系魔法吟唱者伊比鲁艾，然后是修习了盗贼系技术的缇亚、缇娜这五位女性组成。</p><p>整个小队他从克莱姆的记忆之中只见过三位了——拉裘丝、格格兰以及依鲁比艾。</p><p>现在，还是他头一次在现实见到这几位以及剩下的两位。</p><p>抬起脚步，舍沙目标明确的朝着自己此行的目标人物走去。</p><p>只是……</p><p>还没等他走到半路，记忆之中令人有些无奈的声音就响了起来，根本没给他提前开口的机会。</p><p>「唷，处男！」</p><p>谢特！舍沙感觉整间一楼冒险者的目光全部集中在自己身上，面色不自主的抽动了几下，但还是装作没听到一样，继续迈动步伐朝前走去。</p><p>不是说我，你们不要乱看——虽然很想这样说，但是无论是克莱姆还是舍沙都还是不折不扣的处男，这是不争的事实。</p><p>只不过与克莱姆不同的是克莱姆是因为身心全部都交付给了拉娜的缘故，所以对其他女性没兴趣，而舍沙只是在本该对女性十分感兴趣的年纪，沉迷上了虚构的魔法之类的力量。</p><p>导致焕然醒悟之时，周围已经没了合适的女孩子愿意与他接触。</p><p>再然后，就是穿越去打圣杯战争了，好不容易赢了之后就被一个女汉子给干趴下了。</p><p>诶——</p><p>舍沙无奈的叹了一口气，无视那些目光之中携带的同情之意，看向叫他处男的那名女性。</p><p>「久违了，格格兰女士，还有伊比鲁艾大人，还有——初次见面，提亚缇娜两位小姐。」</p><p>而目睹这一切的冒险者也知道没有好戏看了，于是纷纷收回目光，继续闲聊自己的话题去了。</p><p>「哦，好久不见了。怎么，你是来让老子上的吗？」</p><p>望着礼貌鞠躬行礼的舍沙，被叫做格格兰的女性脸上浮现出不怀好意的猛兽狞笑，如果忽略掉对方的性别的话，舍沙一定会狠狠一拳打过去吧。</p><p>那股从心底里涌出来的恐惧感——某种类似猎物遇上猎食者的颤抖。</p><p>倒并不是说舍沙厌恶这位叫格格兰的女性，只是说大部分的人类都是视觉动物，对于格格兰这位女性，给人的第一印象并不是「美丽」、「可爱」，而是「安全」，因为的确会让人脑中浮现出「巨石」这个字眼——全身以某种意味来说很粗壮：</p><p>粗大臂膀让人联想到圆木。用以支撑头部的脖子，直径大概有女性一双大腿那么粗。在这脖子上的脑袋呈现四方形。为了灌注力道而咬紧的下颚横向发展，窥视周围情形的眼瞳宛如肉食猛兽。金色头发剃得短短的，完全只重视实用性。</p><p>被衣服辽蔽的胸膛故意炫耀似的向前隆起。立刻能想像到经过彻底锻炼的胸肌。说得明白点，那已经不是女性的酥胸了。</p><p>身为正常人类的舍沙已经接受度很广了，但还是无法欣赏对方的美，不过听说有个帝国人十分热衷于格格兰这身肌肉来着。</p><p>虽然记不得对方的姓名，但是此刻的舍沙心中依旧升起一股敬佩之意。</p><p>——实乃真男人也！</p><p>咳咳。</p><p>想的有些远了。</p><p>舍沙收回注意力，拒绝了对方的邀请。</p><p>「不，只是从艾因多拉大人那边得知几位刚好在王都，向拉娜大人求得一些时间来请教的。」</p><p>不敢应，不敢应，即使格格兰是带着开玩笑的语气，但是如果舍沙刚同样开玩笑回复「是」的话，下一刻他就会被身强力壮的格格兰带进二楼的单人房。</p><p>在她无人能及的臂力下，现在的舍沙根本没有抵抗的余地。</p><p>大言不惭地宣称自己爱吃处男的格格兰，就是这么一号人物。</p><p>……</p><p>「啧。」似乎是没有得到满意的回复，格格兰咂了咂舌，但还是跳过了这个有些恐怖的玩笑，继续开口道。「听说你小子前些日子不得了，英雄救美——」</p><p>舍沙脸上露出一分无奈回答：「格格兰大人你就别笑话我了，如果不是刚好那些罪犯的实力比较平庸，而我又打了他们一个出其不意……」</p><p>随后又接着露出一丝后怕：「如果我的实力不是恰好比敌人强一些，而是弱于对方的话，恐怕我这辈子都会后悔，所以——」</p><p>舍沙重重的弯下腰。</p><p>「——拜托了！格格兰大人。」</p><p>——己身全为公主。为了这份心意——</p><p>也许是从舍沙身上感受到某种近似殉教者的气息吧。</p><p>格格兰收回了脸上嬉笑的表情，严肃的回应了舍沙的请求。</p><p>「小子，虽然不知道你为什么这么渴望变强，但是——」脸色瞬间变回嬉笑的格格兰用力的拍了拍舍沙的肩膀，「这样的你正和老子的胃口！」</p><p>感受到肩膀上那股属于独属于精钢级战士的力量，舍沙也不由得想要龇牙咧嘴来缓解疼痛，但为了保持人设，还是硬生生的忍住了。</p><p>姐姐，你这么大力气，以后可没有人娶你啊！</p><p>舍沙只能在内心不断用吐槽来缓解肉体上的疼痛。</p><p>这时候，原本一直坐在一旁看戏的盗贼两姐妹开口了，似乎也为舍沙的勇气所感动。</p><p>「很棒哦——」</p><p>「的确，即使实力一般，但是却给人一种安全感呢……」</p><p>呃。</p><p>姑且认为是夸赞，我就心安理得的收下吧。</p><p>虽然有些冒昧，但是这两人的声音果然是称得上表里如一的平板声音。</p><p>「感谢两位的夸奖，也很荣幸见到声名远播的缇娜大人和缇亚大人——」</p><p>舍沙对着两位几乎一模一样的双胞胎盗贼露出感谢的笑容。</p><p>话说到底哪位是缇亚，谁又是缇娜？</p><p>双胞胎真的可以这么像的嘛？舍沙以前也见过双胞胎，但从没有这么像的例子。</p><p>还有、其中一位，为什么一直盯着自己看，是哪里的伪装暴露了吗？</p><p>应该不可能吧，毕竟自己与对方也才是头一次见面而已。</p><p>与其考虑自己暴露的问题，倒不如有可能是衣着不得体的冒犯？</p><p>舍沙仔细地打量了一下自己现在的穿着——以轻松的简装搭配上合脚的皮靴。</p><p>虽然衣物布料不怎么样，但起码没有破损之类丢人的事情发生，看上去也很整洁。</p><p>被盗贼盯到怀疑人生的舍沙头次怀疑其自己的审美来，不过很快就有人帮他解围了。</p><p>「不好意思，缇娜第一次见到你，可能比较好奇——」说这话的是没有一直盯着自己看的双胞胎盗贼的其中一位，听这个说法的话，那她应该就是缇亚了。</p><p>在向舍沙解释了一下缇娜的行为之后，一直揣着手的缇亚用手肘捅了捅一旁的缇娜。</p><p>「也不是不可以。」缇娜被缇亚捅了一下，也收回一直盯着舍沙的视线，不过最后还是补了一句奇怪的话。</p><p>「……嘎？」</p><p>有听但没有懂，舍沙一头雾水，不理解对方的意思。</p><p>「没什么，只是我们自己的事，不用在意。」</p><p>「哦……」</p><p>就当是这样好了。</p><p>舍沙就目光放到小队四人里一直默默不说话的最后一位成员身上。</p><p>「如果可以的话，我还希望可以向伊比鲁艾大人学习一些有关魔法的知识——」舍沙的表情很认真，应该说，这是他此行之中最真的一句话了。</p><p>被他称为『伊比鲁艾』的队员是四人中唯一将自己的面貌与体型隐藏起来的——以漆黑长袍滴水不漏地盖住全身，脸看不见。</p><p>不是因为光线不足，而是额上镶着朱红宝石的怪异面具，完全遮掩住了那张脸。</p><p>只有眼睛部分裂开一道细缝，连细缝底下的瞳眸颜色都无法辨认。</p><p>对于这位活了两百多年的魔法吟唱者，舍沙是真的希望可以从对方身上获得有关于这个世界魔法体系的知识。</p><p>因为在整个王国之中，伊比鲁艾可以说的上是数一数二的存在了。</p><p>而且——</p><p>（【羽斯缇萨】，你真的从她身上感知到了『魔法』的气息吗？）</p><p>脑海之中，从刚才见到对方的时候，【羽斯缇萨】就蹦了出来，说了一句让舍沙有些吃惊，但细想又觉得十分合理的话。</p><p>◤的确，我并没有弄错，那个躲在斗篷里面的小个子似乎也具备和你一般残缺的『魔法』气息◥</p><p>如此这般言论，怎能让舍沙不在意这位合法的金发萝莉吸血鬼。</p><p>要知道，【羽斯缇萨】口中的魔法可不是这个世界的所谓位阶魔法，而是月世界之中仅有一掌之数的存在。</p><p>即便是残缺的第三魔法，凭借其为基础也可以缔造出一个豪华的【圣杯战争】仪式来抵达根源。</p><p>而他现在面前就有着这样一个类似的存在。</p><p>由不得不令人在意。</p><p>面对舍沙的请求，一直沉默的伊比鲁艾则是正式将视线放在面前的少年脸上。</p><p>而舍沙也感觉到了那股有些冷漠的视线。</p><p>「——我拒绝！」</p><p>传来一个听不太清楚的声音。</p><p>撇开戴着面具不说，那声音依然非常不可思议。她戴着的面具并不是那么厚，应该能分辨出某种程度的音质才是。然而，从伊比鲁艾的声音中听不出年龄与感情等性质。至多只能勉强判断出是名女性。</p><p>既像年事已高，又仿佛还年轻。听来像是不带感情的【平坦】声音。</p><p>「誒！伊比鲁艾，你这也太无情了吧，难得人家都这样请求了，明明你不是这样的性格的。」</p><p>「啰嗦！我又不是不想教他——」似乎是被自己的同伴戳穿了营造起来的高冷人设，伊比鲁艾的语气也变得比刚才缓和了许多。</p><p>重看了一眼面露期待的舍沙，随后接着道。</p><p>「没才能就是没才能，这一方面我也无法改变，从第一次见面的时候，我就察觉到了，这家伙虽然比起普通人强点，但也就这样了，根本就不具备任何才能，与那位『黄金』想比，简直天差地别。」</p><p>姐姐，你再看一遍啊，这回换人了，换人了啊，我比原来的强的！</p><p>但舍沙终究还是没敢说出来，默默的流露出失望的神色。</p><p>「好伤人的说法，伊比鲁艾，你这样子难怪会交不到朋友——」</p><p>「无路赛，你这家伙，从刚才开始就在这里帮他说话……」似乎是缇娜连续的助攻惹恼了伊比鲁艾，原本坐着的小个子起身就朝着双胞胎之中的一人抓去。</p><p>「你抓错人了，我是缇亚！」</p><p>「你骗骗别人还行，别把自己骗了，看招！」</p><p>「呀——」</p><p>看着像是朋友间打闹玩笑的两人，坐在一旁的格格兰和缇亚没有任何制止这场打闹的想法，脸上反而流露出一种舍沙许久未曾见过的笑容。</p><p>那是唯有关系很好的朋友之间，偶尔才会见到的笑容。</p><p>舍沙一时之间也被勾起了回忆。</p><p>嘴角勾起一抹弧度。</p><p>……</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-9</title>
      <link href="/posts/5810.html"/>
      <url>/posts/5810.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-9"><a href="#NO-9" class="headerlink" title="NO.9"></a>NO.9</h1><p>舍沙每天的工作量其实很少。</p><p>仅仅就是跟随着拉娜的身边，保护少女的安全的同时，也要听从对方的吩咐。</p><p>这件差事很轻松，但也很枯燥。</p><p>幸运的是，他要面对的对象是个漂亮的美人，而不是像老国王那样的老爷爷又或者二王子萨纳克那种肥仔。</p><p>正当他打算移动到他的固定位置——拉娜的右后方，却被少女叫住。</p><p>「克莱姆，不是那里，是这里。」</p><p>拉娜指着她右边的椅子。</p><p>舍沙：？</p><p>又要搞什么幺蛾子吗？今天的拉娜似乎特别积极的与自己互动，真奇怪。</p><p>舍沙抬头看了一下还在喝茶的拉裘丝，没有从对方的脸上看出什么端倪。</p><p>「不用在意我哦，我个人是不太习惯这些礼仪的，而且我今天也是客人呢。」说着客随主便的话语，拉裘丝并未出现任何不悦的情绪，该说真不愧是从小就叛逆的贵族少女嘛。</p><p>从她的身上完全看不出记忆之中那些贵族丑恶的嘴脸。</p><p>这也许也是名为拉裘丝的少女的魅力点之一吧。</p><p>「拉裘丝不是外人哦，克莱姆也一样。」说着这样的话的拉娜很自然的讲放在右边的椅子拉开了一些位置，方便舍沙坐下来。</p><p>舍沙倒想要看看对方葫芦里卖的是什么药，于是稍稍抗拒了一下便就坐了下去。</p><p>看到这一幕的拉娜也感到十分开心，随后将话题拉到了拉裘丝的身上。</p><p>「听说你们小队最近刚从南边回来，是叫——亚伯利恩丘陵的地方是吗？」</p><p>拉娜似乎对于外界的信息十分感兴趣的模样，露出一副好奇宝宝的神情。</p><p>拉裘丝也没有遮掩的打算，又或者说她们二人聊天的话题也大多都是这样的信息，而不是像其他贵族小姐那般——聊天内容围绕着王都之中那家甜品好吃、新品的口感又或者对立贵族的丑闻之类的话题。</p><p>拉娜与拉裘丝的话题显得更加轻松与漫无边际，大多时间都是由拉裘丝讲述在王国以外的冒险故事。</p><p>「没错，你们从地图上应该也能看到那块区域，虽然备注上是一片广袤无垠的丘陵地带，非常适合人类居住，但由于其他种族的存在，那边对人类的危险性一点也不低。」</p><p>「其他种族？就是书中提到的那些半兽人嘛。」</p><p>「也有吧，半兽人属于亚人类种的其中一个族群，通常是拥有人与兽的双重特征，个体的实力也比普通人要强不少，在那边也建立了不少的村落。」</p><p>「真是可怕呢。」</p><p>「还好吧，半兽人的个体实力虽然比普通人类强上一些，但也并不会对人类聚落产生太大的威胁，我们这次去的地方，离半兽人的部落还是比较远的。」</p><p>「是什么委托呢？方便透露嘛。」</p><p>望着一脸【我很好奇】的拉娜，拉裘丝脸上浮现一抹宠溺。</p><p>「当然，并不是什么保密的委托，而且也已经完成了，雇主现在应该也收到东西了。委托是王都的一个商人发起的，内容是要求夺回远行的商队被抢走的货物，其中还包括了一件珍贵的『魔法道具』……」</p><p>魔法道具嘛。</p><p>听到这里，舍沙的兴趣也不免被勾起了几分。</p><p>月世界也是存在着类似的魔法道具功能的物件，被称为【礼装】。</p><p>可用来辅助魔术（比如增幅）的辅助礼装，或者本身具有特定效果（比如回能）的限定机能礼装。</p><p>其中不乏有些珍品级别的存在。</p><p>比如最出名的【送谁谁被捅】的弑师剑——AZOTH剑。</p><p>以及另一个平行世界的魔法少女伊莉雅之中的魔杖露比。</p><p>都是十分有名的礼装道具。</p><p>这个世界的魔法道具，舍沙也有所耳闻，虽然比起月世界数量要多上不少，但是价格依旧十分昂贵，并非寻常平民可以接触的存在。</p><p>拉娜似乎对于魔法道具有所了解，小嘴轻启：「能够让委托人发布精钢级级别的委托，恐怕这件魔法道具的价值十分惊人吧。」</p><p>「里·耶斯提杰 王国」虽然是附近有名的人类大国，但是国内的精钢级冒险者团队也只有两队，分别是拉裘丝领导的【苍蔷薇】以及拉裘丝叔父的【朱红露滴】。</p><p>可想而知，想要雇佣起王国唯二的精钢级冒险小队，所需要的花费有多么惊人了，而这位商人居然舍得花这笔钱，恐怕那个魔法道具的确具有相当的价值。</p><p>面对拉娜的疑惑，拉裘丝轻点脑袋表示肯定，然后继续讲述关于委托的内容。</p><p>「的确，当工会找到我们的时候，我们也挺惊讶的，没想到居然会有人专门发布这样的任务，还要求精钢级小队的实力，但后来我们得知具体委托内容之后就理解了，这的确是只有少数人才能做到的事情。」</p><p>「因为劫走的货物的与当地最大的一支亚人种群有所牵扯，拉娜，克莱姆你们听说过【兽身四足兽】这个种族吗？」</p><p>拉裘丝似乎有意想要考考两人的知识储备，抛出了一个有些偏门的问题。</p><p>舍沙皱眉思考片刻，并未在克莱姆的记忆之中搜寻到任何有关【兽身四足兽】的只言片语，不过也不奇怪，毕竟之前的克莱姆不是在训练自己的路上，就是待在拉娜身边，根本就没有多少学习的时间。</p><p>只得摇了摇头，表示自己孤陋寡闻，没听过这个名字。</p><p>估计拉裘丝也没有觉得舍沙会知道这个问题的答案，很是理解，随后将目光放到拉娜身上。</p><p>果然，拉娜只是思索片刻，便很快的给出了她翻阅过的一本书籍之中的答案。</p><p>【兽身四足兽】，一种具有兽人的上半身与肉食动物的下半身，近似于半人马或半人兽的种族。</p><p>他们虽不具特别力量，但拥有野兽般的凶暴性情与臂力，个体常有如人类的重装甲骑兵那种强大的程度。</p><p>而且不光是个体实力有这么强悍，还经常与其他半人兽组合出没，关系上如同常见的亚人种之中的哥布林与巨型哥布林一般，传言即使是山铜级冒险者小队如果正面遇上这种亚人种生物，也很难避免苦战。</p><p>最好的办法就是利用对方无法飞行的特点进行狙杀。</p><p>拉娜的一番解说得到了拉裘丝的证实，她们的那场委托所要直面的对象就是一支与 【兽身四足兽】共存的亚人种半人兽部落。</p><p>接下来，拉裘丝大致讲述了一下她们小队是如何取回委托目标的。</p><p>也许是情报工作比较过关，又或者是根本没把人类放在心上，拉裘丝领导的苍蔷薇小队很是轻松地靠近了那个劫走商人货物的部落。</p><p>根据拉裘丝的说法，因为有着那个商人提供的货物清单与魔法道具的外貌特征，所以凭借着队伍里的盗贼，小队几人很快就找到了那个存放被抢走的魔法道具的地方。</p><p>接下来只要将魔法道具拿回来就行了——如果事情可以这么轻松结束的话。</p><p>那就不需要委托人邀请精钢级冒险小队去执行这个任务了。</p><p>存放魔法道具的地方被施加了警戒魔法，并且有数只半人兽巡逻队伍不定期的轮班，防守的力度远超其他的区域。</p><p>苍蔷薇小队的诸人商议了一番之后，最后还是确定下了速攻方案。</p><p>「有个麻烦的敌人出现了」——提到这个敌人的时候，拉裘丝原本还算平静的表情瞬间严肃起来，看得出来她对于那个敌人十分忌惮与看重。</p><p>而看到拉裘丝这幅模样，两人也默默降低呼吸，等待拉裘丝继续讲述后续的故事。</p><p>「那是一个棘手的家伙，明明体型那么巨大，但是速度却不比缇娜缇亚慢上几分，而且实力也远超寻常的精钢级亚人。」拉裘丝的眼神变得有些空洞，似乎是在回忆当时那场战斗的细节。</p><p>「而且当时还有好几只半人兽的高手牵扯住小队里的其他队员，一时之间有些难以脱身。」</p><p>……</p><p>「不过最后还是依比鲁艾发动了大范围的五阶魔法迫使对方不得不散开包围圈，我们才能加速撤退出来……」</p><p>说到这里，拉裘丝的脸色泛起笑容，也许是为完成任务二感到高兴，亦或者是与强敌对战的喜悦，舍沙看不出来。</p><p>「那你们这次委托可真是凶险。」拉娜脸上泛起淡淡的红晕，似乎也从拉裘丝的描述之中觉察到了当时的危险程度。</p><p>「的确危险——」拉裘丝点了点头，但又摇了摇头，语气里带着揶揄，还有一丝微不可察的担忧。「但不如你的胆子……」</p><p>「唔？」拉娜疑惑。</p><p>「我一回来就听见某位公主殿下私自出宫玩耍被抓住差点被奴隶商人卖了的消息……」拉裘丝没好气的瞪了一眼自己这个美貌与智慧并存的闺蜜，「如果不是克莱姆救援的及时，要是真出问题你该怎么办？」</p><p>「诶呀，这都不是过去了嘛。」露出有些不好意思的表情，拉娜端起手上的红茶假装喝茶，却突然发现杯子里的红茶不知道什么时候已经见底了。</p><p>手边也没有茶壶，毕竟这位好友来的匆忙，她也只能临时吩咐女仆准备到这个程度。</p><p>拉娜起身就要去准备新的红茶，被一旁的舍沙及时制止了这个行为。</p><p>「交给我吧。」这样说着，舍沙从椅子上站起，走到一旁摆放茶具的木柜旁，取出新的茶包，随后拿起摆放在中央位置的保温壶重新走了回来。</p><p>这个保温壶并非普通的器具，而是被施加了某种魔法工艺的魔法道具，具有轻松在一小时之内保持里面的饮料温度与品质不变的效果，是拉娜特别中意的道具之一。</p><p>平时很少拿出来，只有当她要招待重要客人的时候才会取出来。</p><p>开盖检查了一下里面的水温，确认是刚刚更换没多久的热水，满意的点了点头。</p><p>看来那些女仆也不是一无是处，起码最基础的服务做得十分周到。</p><p>省去了自己再跑一趟的时间。</p><p>将取回的茶包与保温瓶交给拉娜，舍沙重新做回原来的位置。</p><p>什么，你问为什么不顺手泡茶。</p><p>拜托，你怎么可能指望一个整天都在训练和想公主的士兵会这么精致的技术，作为现代人的舍沙更不会了。</p><p>他会的泡茶就是直接将茶包丢到开水之中，等一会儿喝的程度。</p><p>哪里敢拿出来显摆。</p><p>拉娜接过递来的保温瓶与茶包，十分娴熟的表演了一波什么叫做公主级别的泡茶技艺。</p><p>而在拉娜泡茶的期间，舍沙恰好也有几个问题想要从拉裘丝那里得到答案。</p><p>「艾因多拉大人……」</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-8</title>
      <link href="/posts/54899.html"/>
      <url>/posts/54899.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-8"><a href="#NO-8" class="headerlink" title="NO.8"></a>NO.8</h1><p>原本以为是过来找茬的，没想到对方是来通知他上班的。</p><p>MMP，还不如来找茬呢。</p><p>拉娜结束禁闭的速度比想象中的快。</p><p>距离事情发生也才过去两周不到的时间，刚感受到修行的魅力，舍沙就被迫中止了训练。</p><p>不由得感慨着属于自己的快乐的摸鱼时间结束了。</p><p>……</p><p>王城内。</p><p>名为弗蓝西亚的宫殿，由三座分开的巨大建筑构成的。</p><p>其中之一，用来作为王族居所的、最大的建筑物。</p><p>也是舍沙此行前往的目的地——拉娜的房间所在的区域。</p><p>只是现在，走到半路的舍沙被一个熟悉的面孔给拦了下来。</p><p>「二王子殿下，有什么事吗？」</p><p>「哦呀，这不是克莱姆嘛，最近没怎么见到你呢，是打算去那个怪物那里吗？」</p><p>见到站在自己面前的一位‘微胖’体型的男子，舍沙有些疑惑对方的举动，不着痕迹的打量了一下对方的外貌。</p><p>王国人特有的金色头发，暴食加上缺乏运动导致的肥胖体型，再加上个子似乎不是太高，这些元素组合在一起，给人的第一印象并不是很好。</p><p>其实遇见这位二王子，舍沙并不感到意外，印象中似乎对方也挺经常来看望自己的妹妹，也就是第三公主——拉娜。</p><p>只是就原身的记忆来看，对于二王子的印象极差，因为总是会说一些令人不太开心的话，比如现在。</p><p>额，舍沙思索片刻，还是按照记忆之中原身的说话方式进行回复对方。</p><p>「殿下，虽然惶恐，但拉娜大人绝对不是什么怪物之类，而是温柔美丽、可以称得上是王国的珍宝宝的人物」</p><p>完美！</p><p>虽然对于这位二王子——萨纳克·瓦尔里昂·伊加纳·莱儿·凡瑟芙针对拉娜的评价，舍沙也表示认同，但他此刻的身份可不允许他点头。</p><p>必须要保持原本的人设，进行据理力争一波。</p><p>「虽然不知道殿下对于拉娜大人有什么误解，但是我坚信，拉娜大人是王国的珍宝——这点在我心中绝对不会动摇！」</p><p>二王子萨纳克的表情变得微妙起来——那是类似无信仰者看见狂信徒才会露出的无奈。</p><p>「真不知道那家伙给你灌了什么迷药，让你这么维护她这个怪物。」</p><p>说着这样的话，但萨纳克也并没有其他的举动，似乎只是见到舍沙顺手拦下来说个话而已。</p><p>在又针对拉娜说了一些不太友好的话语之后。</p><p>见到舍沙一副‘不听不听王八念经’的状态，这个原著之中算得上是王室之中难得的好人终于是放弃了纠缠，无趣的摆了摆手，放舍沙离开。</p><p>被萨纳克这么一纠缠，舍沙又浪费了好几分钟时间，距离被拉娜传唤的时间已经没几分钟了。</p><p>有心想要跑动起来，但立刻反应过来。</p><p>我急什么，这不是现成的用来敷衍上司迟到的借口嘛。</p><p>而且，王宫之中也禁止士兵奔跑，除非是紧急事件，要不然随意奔跑一旦被发现进行处罚。</p><p>尤其是舍沙目前这位被全体士兵孤立的个体，那就更不好特立独行了。</p><p>于是舍沙一边感谢着萨纳克送来的借口，一边放慢步伐朝着拉娜所在的区域走去。</p><p>……</p><p>望着眼前熟悉的房门，舍沙本该打开门把的手掌却停在了半空。</p><p>并不是想到什么遗漏的东西，而是从里面传来了女性对话的声音。</p><p>身为公主，拉娜的房间里面存在女性对话的声音很正常，因为平时拉娜也会通过魔法摇铃来呼唤待在隔壁房间的值班女仆，从而进行交流之类的举动。</p><p>但是——</p><p>里面的氛围不同了。</p><p>与平日里女仆与公主的对话的氛围不同，里面正在交流的两人明显是属于闺中密友的关系。</p><p>交谈之中没有明显的隔阂，发出的笑声清脆悦耳，让即使是让站在门外的舍沙也能感受到那是一种轻松愉悦的氛围。</p><p>于是，舍沙便直接收回停在半空之中的手掌。</p><p>随后默默地站在门口等待里面两人的话题结束之后再进去。</p><p>至于与拉娜对话的那名女性，舍沙心中也有了猜测。</p><p>或者说是答案其实也并无错误。</p><p>根据记忆之中的信息来看拉娜虽是王国公主，但是碍于立场问题如果过于亲近某一派系的女性，可能会造成王国内两大派系的闲言碎语的传播，同时也可能受到王室另外两位拥有王位继承权的王子殿下的忌惮。</p><p>毕竟，现如今虽说有两位王子，但都远远说不上优秀，如果老国王打算禅位的话，多半下任国王就从两位王子之中挑选一位出来，但前提是没有拉娜的存在。</p><p>被称为「黄金」的智慧，是双方都不愿意放弃的，也是双方都忌惮的存在。</p><p>因此其实拉娜在贵族之中本该没有一位能够称得上好友的存在。</p><p>但，唯有一人例外。</p><p>幼年之时便不顾父母反对，脱离贵族家庭独自外出展开被贵族瞧不起的冒险者生涯，现年18岁就已经成为王国之中最出名的精钢级冒险者小队之一——【苍蔷薇】的领队，据说还完成了几项可以值得被普通人称颂的伟业，并且还能使用极其稀有的复活魔法。</p><p>可谓是天才少女的人物。</p><p>——拉裘斯·亚尔贝因·蒂尔·艾因多拉</p><p>正是因为幼年便已经离家出走，所以也不被认作是某个派系的存在，这才成了拉娜仅有的闺中密友。</p><p>……</p><p>站在门外等待着的舍沙很快就察觉到原本的交谈声消失了，意识到两人的对话已经暂告一段落。</p><p>于是也不继续在门口停留，走到门前，轻轻的敲了敲房门。</p><p>「请进——」</p><p>里面传来了主人家清脆的声音。</p><p>舍沙推开门，走了进去，首先映入眼帘的就是两位堪称王国双花的少女。</p><p>一位是熟悉的王国公主拉娜，另一位则是只在克莱姆记忆之中见过的拉裘斯。</p><p>那是一名尚且稚嫩却以有了几分成熟气质的女性，无论是绿色的眼睛还是粉红色的嘴唇，都发出健康的光辉。</p><p>虽然美貌并不及拉娜，但毫无疑问也是魅力四溢的女性无疑。</p><p><img src="/./../assets/blog_res/Overlord-8.assets/1000.jpeg" alt="拉娜与拉裘斯"></p><p>如果说拉娜闪耀的是宝石的光辉的话，那么拉裘斯闪耀的应该就是生命的光辉吧。</p><p>这并非夸大，而是事实。</p><p>「是你啊，克莱姆，不是都说了嘛，下次直接推门进来就好，不用敲门的。」</p><p>似乎是对于舍沙没能遵守之前约定的方式有些不满，拉娜用充满少女心的嘟嘴宣泄了不满。</p><p>而目睹这一切的拉裘斯则是露出淡淡的微笑，显然对于自己的这位公主好友对眼前少年的那股心思早已了解，甚至还尝到些许甜意。</p><p>害，又整这一套。</p><p>察觉到身体又隐隐出现幻痛，舍沙不由得感慨原先的克莱姆究竟是经历了多少这种惨无人道、惨绝人寰的PUA啊。</p><p>只得假装没听见拉娜的话，将刚刚没说的话补了过来。</p><p>「早上好，拉娜大人、艾因多拉大人」</p><p>「早上好，克莱姆」</p><p>感觉已经有点习惯这个世界的敬语口气了，舍沙做起这一切来比起之前感到更加得心应手，当然也可能是面对两位美女，所以心情格外舒畅的缘故。</p><p>「克莱姆和拉裘斯的关系这么好了嘛，都已经开始无视我这个正主了。」</p><p>拉娜似乎因为收到了舍沙的无视而不满，故意用着小孩子生气一样的行为像两人发泄情绪。</p><p>舍沙将视线看向坐在一旁一脸看戏的拉裘斯，再得到对方【吃瓜群众】一般的眼神回应之后，无奈的打消了让她出面的想法。</p><p>重新将目标放回拉娜身上，开口道。</p><p>「拉娜大人，再怎么说，那样逾越的举动也未免太……」</p><p>话没说完，但是意思已经传达出去了，这样应该可以跳过这件事情吧，舍沙这样想着。</p><p>但是似乎得到回复的拉娜并未感到满意，而是露出了【如果不同意的话，我就要哭出来】的表情。</p><p>——biu~</p><p>即使知道对方是个病娇公主，但是面对那张堪称绝世的容貌，舍沙的确抵抗力很差。</p><p>默默地在心底用【不答应的话会有违克莱姆的人设】的借口说服了自己。</p><p>无奈的点了点头，表示自己应承下了这个约定。</p><p>随即原本还一脸作势欲哭的拉娜瞬间恢复成晴天般的笑颜起来，让舍沙感慨不愧是出身王室的女子，演技不是他这种非科班出身的可以比拟的水准。</p><p>这一场久违相见的闹剧最终就这样以舍沙的认输落下帷幕。</p><p>而作为观众一直欣赏两人之间的奇妙较量的拉裘斯则是一脸的满足，愉悦的端起桌上的红茶抿了一口。</p><p>而作为当事人，舍沙也并不讨厌这种互动。</p><p>因为他清楚一个事实，他待在这个世界的时间既长也短。</p><p>作为舍沙的时间很长，有着第三魔法作为阶梯，还有【羽斯缇萨】的引路，将来一定成就非凡。</p><p>扮演克莱姆的时间很短，一旦成功将月世界的体系知识转译应用到这个世界之后，打好了基础的舍沙自然不可能一直停留在王国之内，陪着拉娜玩过家家的游戏。</p><p>而且，那位即将到来的原主角也是一个大麻烦，没有一定的实力之前，舍沙其实并不想与对方碰面。</p><p>王国注定会成为一个漩涡，汇集诸多的麻烦到来。</p><p>但在此之前，也许是出于对倒霉蛋克莱姆的愧疚，又或许是真的被拉娜的魅力所吸引，又或者只是一时兴起，总之他也说不清楚具体的缘由，这场扮演游戏他还是会继续下去的。</p><p>直到坦白的那一天到来。</p><p>到时或许会让一位失去宠物的少女陷入绝望也说不定。</p><p>但，舍沙不后悔。</p><p>姑且就让她继续沉浸在虚假的美梦之中吧。</p><p>愿你玩得开心，也愿我终达根源……</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-7</title>
      <link href="/posts/53811.html"/>
      <url>/posts/53811.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-7"><a href="#NO-7" class="headerlink" title="NO.7"></a>NO.7</h1><p>所谓的『魔术基盘』</p><p>是现代魔术师研发的技术。</p><p>基盘是基础架构，事先以学问或宗教、文化、历史等形式刻在世界上，相当于某种环境。</p><p>魔术师开发的魔术，是以其为基础开发的。</p><p>换了环境可能就无法行使了，至少也会效果下降。</p><p>换个简单的例子的话，术式是编辑好的魔法程序，而魔术基盘则是运行程序所需要的环境。</p><p>魔术师事先以学问或宗教、文化、历史等形式在世界上构架出运行魔术的基础环境（Windows系统环境），随后以魔术回路（发电机）产生魔力（电力）通过魔术基盘（Windows系统）运行已经学会的术式（程序）。</p><p>这一套流程下来就算是月世界魔术师最基础的入门套装了。</p><p>至于构筑魔术基盘的不同方式、魔术回路的质与量、术式的优劣程度以及衍生出的各种系统魔术、礼装、魔眼、使魔（英灵）等等</p><p>都属于这套基础下的拓展，类似显卡、显示器、鼠标、键盘之类的电脑外设。</p><p>虽说如此介绍有些过于偏颇，但基本的理念大差不差。</p><p>而【羽斯缇萨】遇到的事情是：运行程序包之后，发现电脑换了一个Linux系统，但是程序还是基于先前的Windows系统开发的，幸运的是程序的兼容性很高，初始运行没问题，不幸的是程序里面的代码缺失了很多，跑着跑着，程序卡死了。</p><p>这才有了后续【羽斯缇萨】感知到根源气息，突然下线的剧情。</p><p>『她』去重新安装Windows系统了。</p><p>但目前的情况是，【羽斯缇萨】作为爱因兹贝伦家族的残念结合圣杯、舍沙的起源为契机而诞生的存在，并不具备开发系统的能力。</p><p>如果有系统备份的话，『她』兴许还能重新覆盖回来，但是想要从无到有制作出一个Windows系统，已经超过『她』的能力范畴了。</p><p>正当一筹不展的【羽斯缇萨】思考着如何推进进度的时候，意外发生了。</p><p>某个瞬间，【羽斯缇萨】重新感受到了第三魔法的气息。</p><p>至于来源，便是舍沙！</p><p>……</p><p>「居然是这样吗……本该已经结束的第三魔法却奇迹般的再次出现……」</p><p>通过【羽斯缇萨】的详细说明，舍沙也明白了为什么她会突然出现了。</p><p>在施展出——【&lt;超斩击！&gt;】的那个瞬间，原本停滞的灵魂物质化进度居然出现增加，又或者是进度先增加了所以才能施展出原本无法学会的武技？</p><p>舍沙不清楚，但【羽斯缇萨】猜测大概率是与魔力有关。</p><p>神代与现代，虽然理念有所差别，使用的魔力来源有所差异，但仍旧不会脱离魔力的本质。</p><p>不过是魔力的来源从自然产生的供给方【真以太】，改变成人工创造的【以太】架空元素。</p><p>终究不会太过偏离。</p><p>而这个Overlord世界想来也是相同的原理。</p><p>这也给了【羽斯缇萨】灵感，既然不能重新安装系统，那就基于新系统的环境，将原本的程序转译过来即可，这一方式要比重新搭建一套系统简单不少。</p><p>即使是完全无法兼容的术式，说不定也能以这个世界的知识进行重构。</p><p>但这需要充足的有关于这个世界的有关魔法信息的样本。</p><p>于是压力转移到了舍沙身上。</p><p>……</p><p>「那按照你的说法，如果我们能获取到充足的有关这个世界魔法体系的知识，就可以继续变强，学会魔法，同样停滞的第三魔法也会继续发动，直到有一天我就会完成真正的灵魂物质化，达到真正的不老不死、无限魔力……」</p><p>◤根据现有的信息推测的确是这样没错。◥</p><p>突如其来的喜讯让舍沙有点难以释怀，既然解决方案如此简单的话。</p><p>那自己刚才那般小丑的表演岂不是成了笑话。</p><p>怪不得，【羽斯缇萨】对自己入魔的情况十分讶然。</p><p>明明是可以轻松解决的问题，结果到了自己身上，却差点让自己崩溃。</p><p>自己还是太年轻了啊，舍沙这样想着，却又觉得理所应当。</p><p>自己未曾接受过系统性的魔术教学，也没有丰富的阅历，能够仰仗的不过是身为穿越者的身份。</p><p>以往遇到困难，也成功凭借着对于剧情的熟知而已做出准确的应对方式，但也因此养成了有些自傲自负的心理，虽然没有表现出来，但是内心深处对于自己穿越者的身份有着一种天然的优势。</p><p>觉得自己做什么都行，自己是天命所归。</p><p>即使是冬木市圣杯战争后被时钟塔的执行者毒打了一顿，却也因此获得了一位堪称魔法使的金手指老奶奶。</p><p>又再次不可避免的膨胀起来。</p><p>呵呵，不料只是一个如此轻易可以解决的难题，就让自己丑态毕露。</p><p>真是一场难以忘怀的教训啊。</p><p>舍沙想到个人。</p><p>同为穿越者，这个世界的原剧情男主角——铃木悟。</p><p>穿越过来就名为异形种的存在，先天就没有寿命限制……</p><p>一开局就是百级玩家的实力；</p><p>随身还带着比魔术工坊还要豪华不知道多少倍的工会据点——纳萨力克大坟墓。</p><p>如果是昨天的自己，兴许还会对对方拥有的豪华礼包产生羡慕、嫉妒的情绪。</p><p>现在却反而没有那种负面想法了。</p><p>有什么好嫉妒的呢？</p><p>是啊。</p><p>又有什么好担忧的呢，沿着这条路慢慢走下去，舍沙相信自己未来的成就不会比对方差多少。</p><p>至于这段到达根源之前的旅途所发生的一切，则会成为自己成长的资粮而已。</p><p>以平常心行走在这条魔道上，直到抵达终点。</p><p>一切磨砺都只是留待那时的丰收的肥料而已。</p><p>……</p><p>◤你好像变得不一样了◥</p><p>对于舍沙的这一番头脑风暴，【羽斯缇萨】自然无从了解。</p><p>但在她的感知中，这位原本还在情绪低迷的宿主，一瞬间又恢复了最初的平静。</p><p>似乎刚才发生的一切，只不过是梦境而已。</p><p>真是奇怪。</p><p>「没什么，只是想通了一些东西而已。」</p><p>收回发散的思绪，舍沙重新面对试衣镜整理了一下自己的衣物之后，方才慵懒的伸了一个懒腰。</p><p>……</p><p>收回发散的思绪，舍沙重新面对试衣镜整理了一下自己的衣物之后，方才慵懒的伸了一个懒腰。</p><p>「我该去训练了，太晚的话就不好训练了。」</p><p>通过昨天与葛杰夫的对战之后，舍沙突然发现自己有些爱上了这种不断挥洒汗水的举动。</p><p>兴许可能也有被克莱姆记忆影响的一面也说不定，但是舍沙却不介意，这种正面的影响贼好。</p><p>加上训练也可以帮助自己提升实力，进而加快灵魂物质化的进度。</p><p>所以舍沙已经没了刚开始时的嫌弃，反而还有些感到跃跃欲试。</p><p>「至于如何获得有关这个世界的魔法知识我也有点头绪了，不过还需要一些时间，刚好我还需要你来证实一些我的猜测……」</p><p>◤好◥</p><p>王国作为一个国家，国内对于勇猛骑兵的憧憬根深蒂固于大部分王国人心中。</p><p>对于魔法则是兴趣缺缺，这也导致国内没有任何隶属于国家的魔法战备力量。</p><p>如果舍沙只是作为一个普通士兵，想要获取有关魔法的知识的话，基本上是不可能的。</p><p>最多也不过是流通在平民百姓间的零阶位魔法而已，那种可以被称为魔术&#x2F;戏法的东西能够带来的信息实在过于空洞。</p><p>但他不是一个普通士兵，是跟随在王国的第三公主，享有「黄金」美誉的少女——拉娜身边的私兵。</p><p>凭借这个的身份，的确可以轻而易举的从拉娜那里获取到大量有关魔法的书籍，但同样的也有可能暴露自己的异常的可能。</p><p>所以他需要一个机会，也想到了一个‘熟人’。</p><p>但在此之前，老老实实的锻炼增强自己的实力也是不能落下的。</p><p>……</p><p>不过事实上，在与【羽斯缇萨】的对话之中已经过去了不少的时间了。</p><p>等到舍沙赶到训练场的时候，里面已经充斥着男性发出的呐喊与充盈室内的热气。</p><p>而之所以说太晚就不好训练的原因也立刻体现了出来。</p><p>当舍沙迈步进入这间处于由巨塔的整个第一层的构成的训练场时，原本热火朝天的场面瞬间安静了下来。</p><p>安静的有些诡异。</p><p>这是必然的结果，同时也是舍沙为什么选择较早的时间段或者较晚的时间来进行单独训练的原因。</p><p>还是因为立场与身份问题。</p><p>在这个罗·伦提城里做警卫的士兵并不单单是士兵。<br>王国的士兵，是由持有领地的贵族将领民武装起来的民兵、由都市统治者支付工资的有着私兵意义的士兵、以都市巡逻为主要工作的卫士之类全部包含在内的称呼。</p><p>但是所有这些都有着一个共同点，那就是皆为平民出身。</p><p>但是因为是平民，所以必然存在参差不齐的素质水准，所以想要在这里任职，需要获得一位贵族的举荐，一旦举荐的士兵犯错，那么同样那位贵族必然也要负起责任。</p><p>于是，【派阀】这一概念诞生了。</p><p>负责推荐的贵族原本就属于某个派阀。那么被贵族所选出来的士兵，自然也是属于那个派阀的阵营。</p><p>反之，非派阀的士兵根本不存在被选中进入王城任职的可能。</p><p>但往往不可能总会伴随着可能，舍沙这具肉体的原主人——克莱姆就是这样一个特例。</p><p>由王国公主拉娜强力要求，老国王同意之后，进入王城任职，并担任公主身边唯一的男性随从。</p><p>于是就有了这样一个情况，谁也不沾边，谁也不敢沾边。</p><p>如果换做是现代的话，这就是传说中的职场冷暴力霸凌吧。</p><p>不过舍沙乐的如此，没有乱七八糟的人际关系，反而帮助降低了夺取肉体初期被发现的概率。</p><p>不得不说，现在想来，克莱姆简直就是为穿越者量身打造的一个人设啊。</p><p>没有理会那些注视自己的目光，舍沙走到一个远离人群的角落，拿着刚刚路过摆架上取的训练木剑，一下一下认真地比划起来。</p><p>很快，原本集中在舍沙身上的目光逐渐散开。</p><p>训练场之中重新恢复热闹的场景，唯独舍沙所在的方向声音要比其他几个位置低上几度。</p><p>时间一分一秒的流逝，陆续有训练完毕的士兵立场，也有新来的士兵加入，但全都有意无意的避开了舍沙所在的区域。</p><p>「五百九十九……」</p><p>「六百！」</p><p>一直到临近傍晚时分，舍沙反复挥剑的次数，已经超过了六百回。</p><p>距离此前一周的极限次数多了一百回。</p><p>虽然只是普通的训练方式，但架不住舍沙隔一段时间就施展一次武技。</p><p>发动武技需要消耗集中力，即精神的专注度，连续使用会造成巨大的精神负担，使大脑疲劳。 </p><p>但似乎归功于之前推进的第三魔法的效果，他现在能够施展的武技次数也大大增加，负担也减少了很多。</p><p>如果只是类似斩击这类较为基础的武技，他隔一段时间就可以发动一次而不会造成任何影响。</p><p>至于为什么他要这样训练，一方面是之前与战士长葛杰夫的对战之中发觉了自己的不足之处，打算弥补。</p><p>另一方面也是想要尝试一下通过不断训练，是否可以促进自己实力的再次增长，从而推动停滞的第三魔法继续运作起来。</p><p>不得不说，唯独在这一方面，舍沙的精力满满，好似有花不完的气力一般。</p><p>可能这就是独属于现代社会穿越者对超凡力量的渴求吧。</p><p>呼~</p><p>伴随着一口热气吐出，身上紧绷的肌肉也在缓缓放松，汗水开始不断地从周身的毛孔快速溢出，汇集在一起，滴落到已经湿了大片的地面上。</p><p>周围还在坚持训练的人已经寥寥无几，且大多都是中途加入，根本没有像舍沙这样自虐式锻炼的人存在。</p><p>舍沙闭目站立，在外人看来他是因为训练累了而正在休息，其实他是在联系【羽斯缇萨】询问刚才训练的成果。</p><p>「如何？」</p><p>◤你的猜测并没有错，根据我的观察，原本停滞不前的进度又往前增加了一点，虽然很少，但的确证实了可行性◥</p><p>听见【羽斯缇萨】的回复，舍沙原本紧闭的双眼骤然睁开，眼中流露出喜悦之色。</p><p>果然如此。</p><p>武技作为这个世界原生的技艺，的确存在可取之处。</p><p>被称为战士的魔法！</p><p>要知道就连这个世界的魔法——位阶魔法也做不到叠加同一种效果的能力，下位技能只会被上位技能的效果替代。</p><p>但武技不会，反而可以同时存在上下位同属武技的加成。</p><p>如果说在这个融入了【YGGDRASIL】游戏的现实世界之中，生命是HP，魔力是MP。</p><p>那武技就是属于特殊技能的类型，不需要HP和MP就可以发动，但是需要消耗名为‘集中力’的能量，姑且将其定义为SP吧。</p><p>意味——spirit  Point（精神值）</p><p>同时也代表着舍沙的某种猜测，毕竟 spirit也具备灵魂的含义。</p><p>而自己突然实力增加也与第三魔法有着密不可分的关系。</p><p>◤似乎有人来找你了◥</p><p>听到【羽斯缇萨】的提醒，还在思索当中的舍沙回过神来，看向朝自己走来的士兵。</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神秘学常见符号</title>
      <link href="/posts/29668.html"/>
      <url>/posts/29668.html</url>
      
        <content type="html"><![CDATA[<h1 id="常见符号介绍"><a href="#常见符号介绍" class="headerlink" title="常见符号介绍"></a>常见符号介绍</h1><ol><li><p>一条大蛇形成了圆圈并且吞下自己的尾巴，也被称为「衔尾蛇」。</p></li><li><p>一个双三角形，其中白色的三角形指向上方，而黑色的指向下方。事实上就是六芒星，也被称为六角星和大卫之星。</p></li><li><p>卍字形。</p></li><li><p>古埃及的十字，被称为「安卡」或「有柄的十字」（crux ansata）。</p></li></ol><p>我们来简单探讨这六个组成部分，看看它们在历史上所象征及主要代表的含义。</p><p><img src="/./../assets/blog_res/%E7%A5%9E%E7%A7%98%E5%AD%A6%E5%B8%B8%E8%A7%81%E7%AC%A6%E5%8F%B7.assets/17ac309e19ec509058d177d7b1e39eb5a53210c2.gif@!web-article-pic.webp" alt="img"></p><p>首先，形成巨大圆周或包含一切的环形蛇。<br>这象征和代表着：</p><p>(1) 永恒：例如在印度教中，大蛇阿南塔·舍沙（Ananta-Shesha）被一些人描绘成有七个头，或是有一千个头，他代表着永恒和无限。</p><p>(2) 在永恒内永不停息的进化循环。</p><p>(3) 埃及人「必然的循环」：代表灵魂在其轮回旅程中的无数次转世，而定期离开其临时的身体，就像蛇定期脱去其皮肤一样。</p><p>(4) 智慧：蛇在所有国家历史上，一直是智慧的主要象征。除了基督教神学以外，世界上所有的宗教和哲学都崇敬它。据记录，基督本人在说： 『你们要像蛇一样有智慧，像鸽子一样无害』时，使用了古老的象征意义。这是整个中东地区都知道的象征意义。在梵语中，「那伽」（naga）这个词的意思是蛇，也是开悟的同义词，即已经获得神秘智慧的人。</p><p>(5) 圆也是古代「完美」的象征。</p><p>第二，两个交错的三角形。<br>双三角符号。这个符号在西方被称为「所罗门之印」，这是因为人们普遍认为，所罗门在与听命于他的灵体或「精灵」打交道时，使用的就是这个符号。而它的真正来源是印度，对许多印度人来说，它是毗湿奴的标志。它也被称为六芒星、大卫之星和六角星。它构成了印度神秘学的室利查克拉 (Sri Chakra) 的基础，也被称为室利延陀罗(Sri Yantra)。</p><p>它象征和代表着：</p><p>1）人和万物的七重组成，即微观世界和宏观世界的七项原则。而在宏观世界有时被称为七个层面。如果你仔细观察，你会发现它实际上是六个小三角形，围绕着一个「中心空间」，并从「中心空间」发出第七原则。第七原则是通过六个三角形的一面，或称六个原则来接触所有事物。所有六个三角形顶点都接触到蛇的侧面 ，也就是伟大的循环进化转轮。</p><p>人是由七个原则或七个部分组成的，即神性部分（阿特曼 Atman）、精神部分（菩提 Buddhi）、心灵部分（意 Manas）、情欲部分（欲乐 Kama）、生命部分（气 Prana）、星光体部分（林加-沙里拉 Linga Sharira）和身体部分（肉体 Sthula Sharira）。阿特曼是我们的真我，是一个永恒的神性原则。但它从自己身上出现了六个下面的原则，以达到显现和进化的目的。阿特曼是源头，是种子，是其他六个的综合体。</p><p>(2) 精神和物质（梵文Purusha和Prakriti）在显现宇宙中的结合。上面的三角形是白色的，代表精神；下面的是黑色的，代表物质。这种形式的双三角是白魔法的象征，表明精神高于物质。但如果黑三角指向上方，白三角指向下方，则是黑魔法的象征。伟大的二元性和相反对立，是使显现宇宙存在所需的要件，并体现在这两个连接在一起的三角形中。</p><p>(3) 精神和物质这两者，在永恒中的最初状态原本是一体的，就像神智学所讲的梵(Parabrahm)&#x2F;原质(Mulaprakriti)。</p><p>K.H.大师曾说过：『犹太卡巴拉主义者视双三角为所罗门之印，正如你们中的许多人知道的那样，是古雅利安神庙的室利-安塔拉(Sri-antara)，是 「神秘中的神秘」，是整个神秘教义的几何综合体。这两个交错的三角形揭露了万物是如何产生的。它们包含了 「化圆为方」、鍊金术「哲人之石」、生与死的伟大问题，以及关于「邪恶」的奥秘。在所有古老的梵文作品中—吠陀和密教—你会发现数字 6 比 7 更经常被提及。 7 是由六芒星的中心点来暗示，它是  6 的种子和它们的基质。』</p><p>第三，卐字形。<br>正如布拉瓦茨基正确的描述，卐（svastika）是 『印度最神圣和神秘的符号』。它是一个纯粹的精神象征，几乎在每个国家的历史遗迹和文献记载中都能找到。最初起源于印度，这个现代文明的古老母亲。它也是早期基督教徒的一个重要和非常珍视的象征，它被称为「十字锚」，并经常刻有「生命的生命」(Vitalis Vitalia) 的铭文。他们使用卐字已经有几个世纪了，并且早在十字架的形式被发明出来之前就已经在使用了。</p><p>我们必须反复强调的是，在希特勒将其盗用为纳粹主义的象征之前，从来没有人以任何方式认为卐字是一个邪恶或「黑暗」的符号。可悲的是，由于现代人不了解卐字的真正精神渊源和含义，纳粹党的形象继续在许多人的心中造成恐惧。</p><p>卐字符号象征和代表：</p><p>(1) 吉祥：因为梵语 卐 字 (Swastika) 的真实和字面意思是「一切都好」。</p><p>(2) 宇宙无形力量持续运动和转动，也代表时间的循环。可以看出十字上有四个弯曲成直角的手臂，象征运动和旋转。</p><p>(3) 佛教的心印。在世界各地的许多佛像中，可以看到它被镌刻在佛祖的胸前。</p><p>(4)  宇宙电 (Fohat)。</p><p>『应用于微观世界—人，卍字是天堂和地球之间的联系：右手在水平臂的末端举起，左手指向地球。……它同时也是一个炼金术、宇宙学、人类学和魔法的标志，有七把钥匙可以打开它的内在含义。说这个极为普遍与最具暗示性的标志，其中的复合象征包含了通向宇宙七大奥秘的钥匙也不为过。……它是普遍创造性力量的起点和终点，呼应演化始于纯粹的精神，而终于粗糙的物质。它也是科学上、神圣上和人类循环的关键；谁能理解它的全部含义，谁就永远的从伟大幻觉和欺骗性苦难中解放出来。……这个符号是如此古老，如此神圣，以至于几乎在所有古老城市遗址上都会发现它。』- 布拉瓦茨基《秘密教义》第二捲。</p><p>第四，安卡。<br>安卡（生命之符）象征并代表着：</p><p>1）生命：因为在埃及象形文字中，这个符号的字面意思是 「生命」。有些人把它解释实际上是「生命之钥」。</p><p>2）灵性重生的人：符号的上环和横线对应人的头部和手臂。而在上方的复合标志中，它出现在双三角或六芒星的最中心，其代表的含义我们在六芒星那里探讨过了。</p><p>(3) 「金星」的标志：安卡和金星的标志几乎是相同的。金星的奥秘意义对应到「心灵」(Manas)，即人类内部的心灵原则。也有人说，金星是地球的「精神原型」，是「地球和人类的守护神」，是『在物质和神秘意义上，是我们地球的光明使者。』而且它是『所有行星中最神秘、最强大的行星；是对地球产生影响和关系最显着的一个。』这在很大程度上必须保持神秘。</p><p>第五和第六，座右铭和嗡（OM）。<br>这句座右铭是翻译自贝拿那斯大君家族（Maharajahs of Benares）的座右铭 - 『没有比真理更高的宗教』（Satyat nasti paro Dharmah）。</p><p>这句话指出精神性真理是普遍的，并且认为真理超越并早于所有人造的宗教。宗教有一定的作用，但没有一种宗教包含全部的真理，尽管所有的宗教都包含其中的一部分。虽然在宗教的言语下，真理可能变得多么扭曲和混乱。</p><p>嗡（OM），有时被写成AUM，既是一个视觉符号，也是一个神圣的OM声符或咒语。它是印度教神圣的话语和神圣的象征，也被印度的其他三个主要宗教，即耆那教、佛教和锡克教所采用。印度教经文教导说，OM是梵（Brahman）的象征。</p><p>梵是最高真我、无限、绝对、神圣的所有性、终极现实的术语。梵是一切，也在一切之中。没有任何东西不是梵。《奥义书》写道，梵是「无二的一体」，它不是一个存在，而是「神圣的存在原则」。它是合一生命，是最高的纯洁的神性意识。</p><p>OM符号放在最顶端是理所当然的，因为神圣的OM是所有的东西。一切都来自于它，存在于它，并在宇宙生命周期结束时，被重新吸收到它之中。这是不二一元论 ，也就是非二元性或普遍的一体性的本质。 </p>]]></content>
      
      
      <categories>
          
          <category> 神秘学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-6</title>
      <link href="/posts/4850.html"/>
      <url>/posts/4850.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-6"><a href="#NO-6" class="headerlink" title="NO.6"></a>NO.6</h1><p>里·耶斯提杰 王国、王都。</p><p>位于其最深之处的罗·伦提城周围有着包围大片土地、外周长达到一千四百米的城墙以及十二个圆筒状的巨塔所形成的防御网。</p><p><img src="/./../assets/blog_res/Overlord-6.assets/d529660fec7310153bd130db792d18510e065d75.jpg@1256w_612h_!web-article-pic.webp" alt="王城「罗·伦特」">而这十二座巨塔则是进行防御作用，同时也是作为服饰于王城之中的骑士与女仆的住所。</p><p>而此刻，舍沙正在某座巨塔之中的一间小房间中醒来。</p><p>——完全没有光亮、并不宽敞的房间里，家具也少的可怜，充其量只有经常使用的床铺还算可以。</p><p>对此，舍沙也没有太过在意，毕竟这是一个中世纪类型的国家。</p><p>能够在王城这种地方分配到一间房屋，其艰难程度就相当于现代社会在首都的核心地带有一间独属于自己的厕所一样珍贵。</p><p>这么一想，舍沙突然觉得自己真是特别满意这个房间。</p><p>虽然并不是依靠自己获得的。</p><p>但仔细想想，吃软饭也是一种不是谁都行的本事。</p><p>这股莫名的自豪是闹哪样啊！</p><p>◤早上好◥</p><p>脑海中响起了独属于【羽斯缇萨】的声线，舍沙开心的回应起来。</p><p>「早……你似乎并未入睡。」</p><p>◤是的，目前这个状态的『我』并不存在睡眠这一概念◥</p><p>好吧。</p><p>舍沙耸了耸肩，晚上有个人盯着自己入睡，属实想想就挺带劲的。</p><p>不过却没有感觉到任何不适，可能是这些天的孤独有些让他渴望一位可以与自己尽情交流的对象。</p><p>毕竟，在这个世界里，如果暴露自己穿越者的身份，不具备自保能力的他恐怕下场都不会是太好。</p><p>但【羽斯缇萨】不一样，同为异界来客，二者先天就具备一种熟稔。</p><p>「发光。」</p><p>舍沙嘶哑的嗓音一开口，从天花上吊下来的煤油灯就发生了变化。</p><p>似乎是对这个关键词产生了反应，煤油灯立刻发出白色的光芒、点亮了这个有些阴暗的室内。</p><p>魔法道具啊，每一次见都有些好奇，究竟是什么样的原理才能制造出这种道具。</p><p>舍沙看向那个煤油灯，那是一种被付予了&lt;永续光&gt;的魔法道具。</p><p>正常来说，即使是最低级的魔法道具，其价格都不是一般人所能够负担得起的，但因为这里是王城，所有的物品某种意义上归属者都是这个国家的王室，所以为了解决石塔的照明，而专门购买了这样的一批用于日常生活的魔法道具。</p><p>该说是钱大气粗嘛。</p><p>「对了，昨天忘了问了——」舍沙这才想起来，之前【羽斯缇萨】下线可是去处理第三魔法的事情，而这次对方重新上线，应该是把问题处理好了……吧。</p><p>大概。</p><p>「——你事情处理完了嘛？」</p><p>对于舍沙的提问，【羽斯缇萨】给出了否定的答复，这让他不由有些郁闷起来。</p><p>这到底是什么情况？</p><p>◤问题找到了◥说这话的时候，舍沙可以清楚地感觉到【羽斯缇萨】语气之中的迷茫。</p><p>那为什么问题找到了，却还未能解决掉？</p><p>随后【羽斯缇萨】的话语便给舍沙解答了这个疑惑。</p><p>◤世界的法则发生了变动……◥</p><p>……</p><p>【羽斯缇萨】认为，当前所在的被舍沙称为【Overlord】的世界，在『她』的认知中更接近于月世界的神代时期。</p><p>天地之中存在无穷无尽的大源魔力，是一个视魔法为理所当然的时代，也是魔术师与『根源』最接近也是最遥远的时代。</p><p>拥有着轻易可以抵达魔法使的实力的存在，但也正是因为如此，这个世界的人绝对无法取得像五大魔法使那般的成就。</p><p>正是因为理所当然，所以根本不会去在意这些。</p><p>也不会有神代魔术师去闲得无聊研究月世界的现代魔术与五大魔法的技术。</p><p>同样的，基于现代的魔术师也很难理解神代的知识，只能通过不断破译与衍化新的术式。</p><p>也正是因为两个世界之间的不同，才导致了【羽斯缇萨】预期的计划发生了意外，出现了舍沙没能通过第三魔法完美取代克莱姆的事故。</p><p>也许完全的第三魔法并不会收到这方世界的干扰，但是『她』的不完全的第三魔法却做不到那样的程度。</p><p>按照预期计划，本该在取代克莱姆之后，舍沙的灵魂将会逐步取代肉体存在于物质世界，从而获得不老不死的寿命来开展第三魔法的研究。</p><p>……</p><p>嗯嗯，这个预期的确很符合自己的期待——舍沙点头。</p><p>……</p><p>但是受到不明的干扰，不完全的第三魔法再次出现了劣化。</p><p>干扰……听到这里，舍沙眉头开始不由自主的皱了起来，这是一个对于任何一种展开的实验都不友好的词语。</p><p>当他还是耐住自己的性子没有打断【羽斯缇萨】的解说，越发专注的倾听起来。</p><p>……</p><p>原本的第三魔法——灵魂物质化（天之杯），是灵魂的物质化，换言之是实现完全的不老不死的魔法。</p><p>同时在完成之日，将会因灵魂的永动机化，而得到无尽的魔力源。</p><p>但是——</p><p>名为羽斯缇萨·里姿莱希·冯·爱因兹贝伦的人造人重现的第三魔法却是并不完整。</p><p>那是“仅限一次，仅限一代的魔法”。</p><p>只用第三魔法来救济一名人类都要花费很多年时间，更不用说要达成“第三法”的成就。</p><p>于是就有了后来的『圣杯战争』的基石——大圣杯。</p><p>而作为冬之圣女——羽斯缇萨·里姿莱希·冯·爱因兹贝伦的残念，其实【羽斯缇萨】的第三魔法更加残缺。</p><p>甚至只能达到“仅限一次，仅限一人”的程度，无法实现长久以来的夙愿。</p><p>但若只是如此，其实并无多大影响，这本就是交易之中的一部分。</p><p>以此为基础，获得永生的舍沙总有一天也能与【羽斯缇萨】一同研究出完全的第三魔法，完成二者的交易。</p><p>但是再次出现劣化的第三魔法……或者已经有些称不上第三魔法了。</p><p>继舍沙取代肉体出现偏差之后，灵魂物质化的开展也陷入了停滞。</p><p>随后出现的陌生的『根源』的气息，与只有在神代时期或是现代特殊位置才会存在的【真以太】的魔力的出现，让【羽斯缇萨】明白了问题因何而生。</p><p>两个世界现存的魔法体系存在差异，这也导致了原本是建立在现代魔法体系上的第三魔法出现了劣化。</p><p>并且，【羽斯提萨】发现了另一件更重要的事情，那便是——</p><p>魔法的基石——『魔术基盘』</p><p>不见了。</p><p>……</p><p>不见了？</p><p>为什么？</p><p>舍沙的双眼变得茫然起来，有些不太理解【羽斯缇萨】口中表达的意思。</p><p>为什么会不见，是因为自己是个外来户吗？</p><p>是自己不具备魔术资质吗？</p><p>舍沙的身体止不住的颤抖起来，脑海的声音也逐渐变得模糊。</p><p>明明自己为了魔法吃了那么多的苦头，冒了那么多风险，就连原本属于自己的肉体也因此丢失。</p><p>如今，明明第三魔法就在眼前，而你告诉我脚下的路断了？！</p><p>舍沙不甘心，不甘心自己的付出，也不甘心现在的结局……</p><p>然后他想到了这个世界的位阶魔法，对他而言那也是属于魔法啊。</p><p>不同世界的超凡力量体系是否通用，舍沙不得而知，但是想来同为魔法的体系，至少也存在共通之处吧。</p><p>此前自己在【羽斯缇萨】下线期间也尝试过学习这个世界的位阶魔法，结果却也是一无所获。</p><p>也许……</p><p>如果……</p><p>但是……</p><p>……</p><p>伴随着舍沙的杂念越来越多，现实世界里原本平静的表情越发狰狞起来。</p><p>◤——醒来！◥</p><p>◤——醒来！◥</p><p>◤——醒来！◥</p><p>连绵不绝的温柔呼唤却响彻灵魂深处，将舍沙从这股疯狂的杂念之中拉了出来。</p><p>嗬——嗬。</p><p>原本就沙哑的嗓音艰难地发出十分沉重的喘息。</p><p>舍沙狼狈翻了个身，从床上摔了下来，感受着石头带来的冰冷刺激，原本的杂念也在此刻逐渐散去，理智逐渐回归。</p><p>「我……这是……怎么了？」</p><p>后知后觉的舍沙惊出一身冷汗，也察觉到了自己刚才的异常表现。</p><p>◤你入魔了，为什么◥</p><p>得了【羽斯缇萨】的提醒，舍沙才明白刚才自己的状态究竟是什么情况。</p><p>月世界的入魔说法与舍沙穿越前的入魔有些出入但也差距不大。</p><p>所谓【魔】本质上是异常的代指，比如非人生物这种异于普通人的存在，又或者魔法这种超出人类想象的能力，以及精神方面的异常这种都可以称为【魔】。</p><p>舍沙从来没觉得自己会入魔，与其说他会入魔，不如说继承了冬之圣女的夙愿的【羽斯缇萨】才是入魔几率最大的那位。</p><p>魔术师在追求神秘的道路上，通常会陷入某种偏执，铸造出不可挽回的错误。</p><p>就像某位不愿透露姓名的虫爷！</p><p>这也是为什么追求魔法的道路又被叫做【魔道】的原因之一。</p><p>根源就在那里，它既不远离人类，也不靠近人类，当人类妄图追求它的时候，也必然遭受它的影响。</p><p>「哈哈哈哈哈——当你凝视深渊之时，深渊也在凝视着你。」</p><p>舍沙发出愉悦的笑声，让旁观的【羽斯缇萨】有些不解起来，但也并未出声打断他释放的情绪。</p><p>「还没踏入魔道，就被上了一课啊，哈哈哈哈……谢谢了。」</p><p>◤不客气，需要休息一会儿吗◥</p><p>「嗯，让我好好休息一下」</p><p>舍沙没有逞强，刚刚那番意外虽然没有让他的肉体受伤，但是精神消耗却是不小。</p><p>以致于现在刚刚醒来没多久的他居然感到一丝疲惫。</p><p>静静地感受着来自石头传来的凉意，舍沙的内心也逐渐平静下来。</p><p>【入魔】</p><p>还真是可怕的事情。</p><p>原来不知不觉之中，自己的执念已经深到这个地步了嘛……</p><p>后悔吗？</p><p>脑海中闪过穿越前的画面，如果自己没有穿越的话，也许还在那个平凡但安全的世界之中过着一个平头老百姓的生活吧。</p><p>舍沙眼底泛起一丝涟漪。</p><p>也许有一点吧，但再来一次，恐怕我还是会做出一样的选择。</p><p>……</p><p>◤不继续休息一会儿吗◥</p><p>「没事，继续说吧，我已经恢复过来了。」</p><p>舍沙从地上爬起，拍了拍因为刚才滚动而褶皱且沾染灰尘的衣物，整个人显得有些狼狈，但嘴角始终挂着淡淡的微笑。</p><p>走到一旁的衣柜处，伸手打开柜门，从中挑选出整齐叠放的备用衣物。</p><p>◤好◥</p><p>……</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-5</title>
      <link href="/posts/5042.html"/>
      <url>/posts/5042.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-5"><a href="#NO-5" class="headerlink" title="NO.5"></a>NO.5</h1><p>——dan！</p><p>舍沙举剑横档架住了攻来的长剑，随后快速抽身后退，拉开距离重新将视线放在眼前的强壮男子身上。</p><p>距离黄金公主被绑架的事情已经过去一周的时间了。</p><p>因为这起绑架风波，导致老国王少见的大发雷霆，为了躲避老国王的怒火，原本还打算针锋相对的贵族派一时之间全部选择了退避三舍。</p><p>于是《废除奴隶交易制度》法案成功的通过推行。</p><p>然后便是通过抓到的史塔凡·黑委士，成功的捣毁了王都之中将近七成奴隶贩子的地下交易据点。</p><p>一时之间，王国之中都是赞颂黄金公主与老国王的美誉的声音。</p><p>当然，地下交易市场背后的贵族派的脸色可就不怎么好看了。</p><p>如此巨大的损失，恐怕是这些年来他们遭遇到的最大的变故了，不过他们此刻却不敢站出来发表意见。</p><p>否则绑架王国公主的罪名就有可能落在他们头上，这是他们谁也扛不起来的巨石。</p><p>一时之间，王都居然陷入了短暂的和平与宁静之中。</p><p>各路混混与黑心商人全都缩了起来。</p><p>当然，作为涉事人之一的舍沙也好不到哪里去。</p><p>虽然他作为拉娜的随从，救驾有功，但也难逃一个渎职的罪名，不过由于当事人拉娜的极力夸赞，最后也没有被惩罚就是了。</p><p>倒是王宫之中的那些骑士和女仆因此对舍沙又多了几丝恶意。</p><p>对此，舍沙表示小case。</p><p>你们恨的是克莱姆，管我舍沙什么事。</p><p>有能耐去下面找克莱姆报仇去。</p><p>当然，舍沙也并不是全然无事。</p><p>就比如这几天，因为老国王觉得作为随从，舍沙的武力可能还不够合格的缘故。</p><p>于是直接安排他的左膀右臂——战士长葛杰夫抽出时间开始亲自指导舍沙的武艺。</p><p>一连一周下来，舍沙除了在训练场和战士长对练，就是去干饭拉屎的路上，至于去拉娜的房间报道。</p><p>别想了，拉娜因为私自（替侍卫顶罪）溜出去的缘故，被老国王关禁闭了，暂时还没收到解禁的通知。</p><p>苦鲁xi~</p><p>舍沙一边感受着身体传来的疲累与酸痛，一边还要集中精神关注葛杰夫的攻击方向。</p><p>一不小心就是一击毒打，然后晚上为了维持人设还要跟着对方加练。</p><p>MMP。</p><p>这几天整个人都瘦了好多。</p><p>简直是热烈的马啊！</p><p>「咕哇~！」</p><p>腹部突兀遭受猛烈打击，舍沙一口气差点没接上来，紧接着整个身体被重重击飞，背部狠狠地撞上了硬硬的石板地面，肺部的空气一下就被吐了出来。</p><p>葛杰夫把那只造成这一切的罪魁祸首收了起来。</p><p>「战斗的时候不要分心，否则正式战斗的时候可没人会等你爬起来。」</p><p>葛杰夫的语调很慢，留给舍沙足够恢复从地上爬起来的力气。</p><p>「是！」</p><p>舍沙再也不敢胡思乱想了，努力调整着已经跑调的呼吸节奏，重新抬起手上的长剑。</p><p>另一只手也没有闲着，握拳收臂作格挡状，这是因为上面佩戴了一副小小的木盾，专门用来抵挡敌人的砍劈。</p><p>见到舍沙重新摆好架势，葛杰夫满意的点了点头，再次发动了猛烈地进攻。</p><p>对于与舍沙的这场训练，身为王国战士长的葛杰夫抱有相当大的兴趣，因为之前也曾听过有关于拉娜公主唯一私兵的传闻。</p><p>出身不详，是拉娜在离开城堡外出时捡到的贫民之子。</p><p>刚发现的时候是个骨瘦如柴，几乎快要饿死的小孩，为了保护救命恩人不断努力。</p><p>不对，光是努力还不足以形容吧。<br>因为他根本没有剑术才能，也没有魔法才能，更是没有任何得天独厚的身体能力。<br>但却毫不气馁的坚持每日锻炼，对方如今的实力都是一点一点积累起来的。</p><p>就是在这一点上，给葛杰夫的感官就非常棒。</p><p>——但是这还不够啊、</p><p>葛杰夫想到了之前老国王的那一番话语，以及从不知名处听来的风言风语，不由得发出感慨。</p><p>如果想要一直追随在自己心爱的主人身边的话，想要不被抛弃的话，想要获得追寻幸福的资格的话。</p><p>这可远远不够啊！</p><p>毕竟，拉娜公主身为人的价值非常高，只是单凭努力就可以取得的成绩根本迎不来那样的一天。</p><p>虽然很可悲，但是在这个王国，这样的事情实在太过常见。</p><p>「——来吧、克莱姆！」</p><p>带着呐喊，葛杰夫原本克制的实力又释放了几分出来，那凌冽的破风声让舍沙眼眸都剧烈收缩了几分。</p><p>神经病啊，不是训练吗，怎么突然下死手了。</p><p>——不是对手！</p><p>第一时间身体便做出了这样的判断，接下来应该选择翻滚来躲过这一击才是最好的选择。</p><p>但是舍沙没有。</p><p>他直接选择迎了上去。</p><p>被连续虐了一周，连佛都会有几分火气，更何况是舍沙一个普通人。</p><p>更何况，舍沙也不想一直躲避下去，来到这个世界之后，【羽斯缇萨】沉寂之后，其实他一直都没啥安全感。</p><p>这个世界的现实残酷可是远比月世界来的更加赤裸。</p><p>月世界尚且可以躲在幕后，依赖现代社会的规则获得短暂的安宁，但是在这个犹如封建社会般人吃人的世界，如果不能取得实力上的增长。</p><p>那么迟早会沦为别人的口粮。</p><p>一直到拉娜被绑架之后，那股从肉体传来的情感也让舍沙明白，自己只不过是夺得了肉体的使用权而已，还未获得真正的掌控权，克莱姆残留的意识一直都在影响着自己。</p><p>一味的抵抗并不得取得掌控，偶尔顺从肉体的本能，反而可以更加得心应手。</p><p>这也是为什么，那个时候舍沙会选择跟随着肉体的本能行动，而不是去抗拒他。</p><p>但宣誓主权也是十分必要的——告诉它，你现在是我舍沙的肉体！</p><p>【回想起来啊！那个时候的感觉！】</p><p>以生死之间的压力来刺激肉体的本能，舍沙此刻忘记了自己穿越者的身份，不断追寻着当时杀戮混混时出现的那股悸动。</p><p>找到了，就是这个手感。</p><p>——【&lt;要塞&gt;！】</p><p>——【&lt;感觉强化&gt;！】</p><p>——【&lt;能力上升&gt;！】</p><p>回来了，全都回来了。</p><p>这些原本属于克莱姆日积月累积累的武艺，此刻在生死之间的压力下，全部被舍沙掌握。</p><p>迎着战士长葛杰夫的斩击，舍沙提前一步，将自己送到对方的剑下，借助这一优势有效的降低了对方劈砍的威力。</p><p>这也是刚从战士长那边学到的技巧，此时却被舍沙充分利用起来。</p><p>‘嗡’</p><p>如同老牛哞叫又好似水底暗雷一般。盾牌与木剑接触的瞬间发出令人不适的撞击声，舍沙成功的抵挡下了这记来自战士长的强力斩击。</p><p>——还没完。</p><p>接下这一击之后，舍沙的身体已经出现失衡，毕竟肉体素质完全跟不上位于精钢级冒险者顶点的战士长，强行碰撞的结果最好也会失去平衡。</p><p>如果这时候，战士长再继续追击的话，恐怕下场依旧是舍沙落败。</p><p>但前提是之前的舍沙，现在已经完全掌握住肉体所有权的舍沙在武技的强化下可以清晰的感知到身体各个部位的运动轨迹。</p><p>没有任何抵抗，任由身体失衡，甚至还助推了一步，让失衡来的更加猛烈，整个人像是旋转起来一样，借助旋转的惯性，重新将正面推了回来。</p><p>下一刻，训练木剑上闪过一道光芒。</p><p>——【&lt;斩击&gt;！】</p><p>快速挥舞的攻击被葛杰夫轻而易举的躲避了过去，但是下一刻，葛杰夫的眸子里也难得露出了一份诧异，似乎没有料到现在的情况。</p><p>在攻击被躲过去的下一瞬，舍沙并没有结束他的攻势，而是再度反转，又使出了一门武技。</p><p>同时还是葛杰夫之前从没见过对方施展成功的武技。</p><p>——【&lt;超斩击&gt;！】</p><p>斩击的上位版本武技，是克莱姆都未能完全掌握的一门技术，此刻却被舍沙成功施展了出来。</p><p>同时这也代表了一件事情，那就是舍沙超越了克莱姆原本的潜力。</p><p>将曾名克莱姆的这具肉体的潜力重新推上了一个巅峰。</p><p>‘轰’——</p><p>伴随着木剑与地面碰撞，材质较差的训练木剑直接炸裂开来，碎成一小片的木块。</p><p>啧，准头歪了。</p><p>舍沙无力的躺倒在地面上，尽管浑身都充斥着酸痛的感觉，但心里却被一股奇妙的情绪充盈。</p><p>太爽了!</p><p>这就是力量吗？</p><p>原本因为【羽斯缇萨】离去，独自扮演原主的不安感逐渐散去。</p><p>取而代之的是一种萦绕胸膛的满足感。</p><p>此刻的舍沙忽然有一种即使失去了【羽斯缇萨】，自己有能力独自生活下去的错觉。</p><p>但旋即反应过来，这种想法有些极端了，真正的主角是不会放弃自己的金手指的。</p><p>‘啪啪啪’</p><p>空旷的训练场之中响起来自战士长葛杰夫的鼓掌，舍沙扭头看去，此刻的葛杰夫正带着一脸的笑意，挥动双手为他刚才的表现表示赞扬。</p><p>「克莱姆，你超出了我对你的预期标准，这一击恐怕已经达到了白金级战士中上的水平，很不错！很不错！」</p><p>连续说了两个很不错。</p><p>听得出来，葛杰夫的心情很好，就连说话的语气之中也透露出些许的喜悦。</p><p>毕竟舍沙也算是从他手下教出来的战士，能够达到如此成就，实在是令同为战士的他感到开心。</p><p>「……谢谢，葛杰夫大人。」</p><p>舍沙瞧见葛杰夫那毫发无伤的外表，顿时也知晓刚才的对战恐怕依旧掌握在对手能够游刃有余的指导范围之中。</p><p>心中也多了几分感激，如果不是葛杰夫的帮助，恐怕他还没能这么快的完全掌握克莱姆的肉体。</p><p>「谢我干啥，都是你自己努力的成果。」</p><p>话虽如此，但葛杰夫的笑容明显又多了几分。</p><p>就像是父亲看到儿子成长了的时候所浮现出来的那种模样一般。</p><p>舍沙顿时不清楚自己到底是是占了便宜还是亏了。</p><p>「好了，今天的训练就到此为止吧。」</p><p>葛杰夫看了一眼躺在地上起不来的舍沙，也知道刚才对方连续发动的武技有多消耗精力，况且今天舍沙的确展现出了非常不错的表现。</p><p>于是大方的表达训练到此结束，明天舍沙自己恢复正常的联系就好，他要去和老国王交差了。</p><p>「葛杰夫大人，再见。」舍沙挤出笑容，目送对方离开。</p><p>妈了个巴子，再也不见！</p><p>◤看来你这段时间过的还不错◥</p><p>突然脑海之中响起一道女声，舍沙瞬间反应过来，久违的【羽斯缇萨】终于上线了。</p><p>舍沙心中莫名的产生一股激动。</p><p>「你还知道出来啊，我差点以为你跑路了呢。」</p><p>久违的露出放松的笑容，舍沙将断裂的木剑拿来充当简易的枕头，开始与【羽斯缇萨】诉说起最近发生的事情。</p><p>……</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-4</title>
      <link href="/posts/54131.html"/>
      <url>/posts/54131.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-4"><a href="#NO-4" class="headerlink" title="NO.4"></a>NO.4</h1><p>　　王都——「里·耶斯提杰」</p><p>　　作为「里·耶斯提杰王国」的都城，但其实并不算是什么特别出彩的城市。</p><p>　　可以说除了主街以外都没有好好铺路，整体都是低矮老旧的建筑，看上去感觉就和现代的小村庄一个德性。</p><p>　　或许更差一点也说不定。</p><p>　　八成是因为身处王国领地内部的原因，导致修建的时候觉得敌人也不会打到这里面来，于是就按照一般标准修建。</p><p>　　兴许还有建造城市的贵族中饱私囊的原因也说不定。</p><p>　　不过起码来说，没有欧洲中世纪那种街边随处可见大小便的情况，已经是大大超过舍沙的心理预期了。</p><p>　　如果穿越到欧洲中世纪的话，建议做个宅男会比较好一些，要不然出门就踩狗屎运。</p><p>　　只不过这一切和舍沙并无半毛钱关系，充其量也只是因为走到小巷附近的时候因为地面不平整而感到不适。</p><p>　　现在的他本该因为出城而感到愉悦的，但是实在是开心不起来。</p><p>　　因为拉娜正跟在他的旁边。</p><p>　　「诶，克莱姆，你看——」</p><p>　　「拉娜大人，请不要乱跑——啊。」</p><p>　　连忙跟在到处溜达的拉娜身后，舍沙护着对方尽可能地避开街上的行人。</p><p>　　「这是什么——小吃？」</p><p>　　此刻的拉娜就像是一个好奇宝宝一样，东瞧瞧细看看，一副天真浪漫的神情。</p><p>　　但是要真的被她这幅表情欺骗的话，那可真就倒霉了。</p><p>　　舍沙依稀记得一小时前，自己跟随对方打算回到拉娜所在的房间之时，对方说的话。</p><p>　　「克莱姆，最近待在王宫里面好无聊喔，我们去王都逛一逛吧，顺便看看现在民众过得怎么样！」</p><p>　　「不过在此之前，我们要先换一身朴素一点的打扮呢，要不然会被商贩『欺骗』的吧……」</p><p>　　如果换成真正的克莱姆的话，多半是绝对不接受拉娜这种奇怪的要求的吧，但是闹到最后肯定也没法拒绝拉娜的请求就是。</p><p>　　所以舍沙也就半推半就的答应下来。</p><p>　　换了一身十分朴素的衣服跟随着拉娜一同坐车出了王宫。</p><p>　　顺便一提，即使拉娜也同舍沙一样换了一身较为廉价的衣物出来，但是给人的气质依旧是那么高贵。</p><p>　　这就不得不让舍沙佩服起来，果然人啊，长得好看一些，穿啥衣服都好看。</p><p>　　随后马车从大道经过主街道，然后停留在一处分叉口附近，拉娜便叫停了赶车的士兵。</p><p>​拉着舍沙一同下了马车，吩咐好士兵待在原地等待，两人便消失在了街角小巷之中。</p><p>　　随后便是现在，如同天真烂漫的少女形态的拉娜登场，然后舍沙在身后不停地追赶、护卫。</p><p>　　刚开始的时候舍沙单纯的以为拉娜是想要培养与自己的感情，不过到现在他也慢慢的回过味来。</p><p>　　以他认知中的那个黄金公主的本性来看，应该不至于会做这样的事。</p><p>　　那就是个粉切黑呀。</p><p>　　不，倒不能说不至于，只是会换一种更为隐晦、高效的办法，如此这般直接多半是有着另外的想法藏在其中。</p><p>　　绝对存在某种舍沙没想到的不明因素。</p><p>　　但舍沙也只能根据现有的信息，推测出几个可能。</p><p>​其中最大的可能性就是与之前从战士长葛杰夫口中听到的《废除奴隶交易制度》法案可能存在有所关联。</p><p>　　如果他没有猜错方向的话，这次出城，多半是打算对目前僵持的局面做出一个切入口。</p><p>　　至于如何切入，舍沙现有的情报都是从克莱姆的记忆与穿越前看的动画之中延伸的，信息量太少，倒也无法猜中名为黄金的少女心。</p><p>　　不过此行八成会遇到麻烦吧。</p><p>　　想到这，舍沙就开始头疼起来了。</p><p>　　【羽斯缇萨】已经下线很久了，直到现在还没有冒泡的趋势。</p><p>　　舍沙有时候都在忧虑，自己是不是被这位美丽（曾经）的金手指老奶奶抛弃了。</p><p>　　不过忧虑归忧虑，舍沙还是相信【羽斯缇萨】不会随意离开自己。</p><p>　　所以在【羽斯缇萨】出现之前，舍沙只能尽量保持着原身的人设，避免因为暴露而失去现有的铁饭碗。</p><p>　　力量啊！</p><p>　　如果现在的舍沙有原著男主铃木悟的力量，早就开启【我不吃牛肉】模式了。</p><p>　　贪婪，永远是驱动人类前进的动力。</p><p>　　这也是当初为什么舍沙一个普通人就敢冒险参加圣杯战争的原因。</p><p>　　……</p><p>　　「克莱姆，这——这里。」</p><p>　　一不小心又差点跟丢拉娜，舍沙充分发挥自己的优势，在人群之中辗转腾挪，死死地咬在身后。</p><p>　　看着拿起一枚银制玫瑰头花饰品呆在头上，正一脸喜悦朝着舍沙分享的拉娜。</p><p>　　舍沙艰难的挤出一抹微笑。</p><p>　　果然，不管是哪个世界，陪女人逛街都不是一件轻松的事情。</p><p>　　当然，也不分年龄。</p><p>　　「真好看。」</p><p>　　得到了舍沙的肯定，拉娜似乎倍感鼓舞，随后又继续尝试了几种不同样式的配饰，都得到了肯定的赞赏。</p><p>　　纠结了好一会儿，最后还是全部买了下来，舍沙付钱，当然钱是从拉娜那边拿的。</p><p>　　就他这点微薄薪水，还真不够人家霍霍的。</p><p>　　作为王国公主，拉娜可是有着属于自己的领地税收来源作为日常的零花钱的。</p><p>　　不是一个穷逼私兵可以碰瓷的。</p><p>　　也就在两人游玩之时，阴暗的小巷之中，几道目光不断地游走在活泼好动的拉娜身上。</p><p>　　「大哥，是条大鱼耶！」</p><p>　　「看穿着和神态，估计是某个外来富商的千金，大哥怎么说？兄弟们盯好久了。」</p><p>　　「再等等——最近上头关注的紧，让我们不要闹出大问题。」</p><p>　　「欸，大哥，这么多年下来，哪里出现过问题，要是真的错过了，到时候可没得后悔，依我看啊，起码值2K。」</p><p>　　「2K？别逗我了，你要真不懂的话，以后钱财还是我来给你保管，最少这个数起步！」</p><p>　　看着手下伸出的五根手指头，领头的男子不由自主的舔了舔唇角，似乎被说动了。</p><p>　　王都的小巷四通八达，如果不是常年居住的本地人，一旦迷失在其中，就很容易丧失方向感。</p><p>　　这也是这群混迹王都的混混打手经常出没的地方，平日里一旦有合适的目标，就会安排人手盯梢。</p><p>　　等到合适的时机之后，这群人就会出手，快速的劫走目标然后借助小巷错综复杂的地理优势快速的躲开追击的人员。</p><p>　　最后成功的绑票成功。</p><p>　　这一套下来，经常可以换来小半年的收益，对于这群底层混混来说已经是非常大的诱惑了。</p><p>　　更别提这次的目标，起码价值5K王国金币。</p><p>　　要知道王国居民的平均的工资是一月1金币左右，换算下来，嘶。</p><p>　　领头的混混大哥瞬间红了眼。</p><p>　　「先说好，下手干净利落点，别让人抓到尾巴。」</p><p>　　「好嘞大哥，放心大哥。」</p><p>　　留下一人继续负责盯梢，其他手下则是快速分散开来，逐渐包围目标所在的街道。</p><p>　　接下来只要等着合适的时机到来，一击命中，远遁千里。</p><p>　　而其他的人手则是负责阻拦可能到来的卫队或是目标的随从。</p><p>　　舍沙自然不知道小巷之中发生的事情，但真要知道了，兴许还会感到兴奋。</p><p>　　毕竟按照猜测，接下来就应该进入拉娜安排的故事剧情了。</p><p>　　……</p><p>　　「拉娜大人，我们该回去了。」</p><p>　　「可我还想在玩一会儿。」</p><p>　　面对着少女形态的拉娜表现出来的可怜楚楚的表情，舍沙眼里露出些许纠结之色，最后还是选择在让拉娜继续停留一会儿。</p><p>　　当然这是在【欺骗】拉娜。</p><p>　　舍沙巴不得赶紧把这个小祖宗送回王宫之中，但想到如果对方这次不成功，下次不知道会不会有更加大胆的算计，那目前身为对方随从的自己恐怕也脱不了干系。</p><p>　　烦。</p><p>　　不过好在，各怀心思的两人成功等来了意外情况。</p><p>　　正在不紧不慢的跟随着拉娜身后的舍沙突然感觉被人撞了一下，随后几位男性刻意的遮挡住舍沙的视线。</p><p>　　就在舍沙心生警惕，立刻摆脱前面阻挡之人之后，下一刻就猛然发现一直跟随的拉娜已经消失在视线之中。</p><p>　　快速打量了附近的小巷路口一眼，拉娜已经被几个混混模样的男子紧紧拽住，朝着深处跑去。</p><p>　　明明知晓这是拉娜已经预料到的剧情，但是舍沙在这一刻依旧产生了异样的情感。</p><p>　　一股无名怒火从胸口迸发而出，随之而来的是一股懊悔与冲动。</p><p>　　【去救她！】</p><p>　　肉体发出了这样的命令。</p><p>　　艹，阴魂不散的执念啊。</p><p>　　舍沙立刻反应过来，这股怒意从何而生，脸色迅速变化了几下，但还是没有抵抗那股本能，任由肉体先于意识冲向拉娜消失的方向。</p><p>　　迟早弄死你这条舔狗！</p><p>　　不对，他已经死了。</p><p>　　艹啊！</p><p>　　身体的运动功率一瞬间飙到最大化，舍沙的脸色也变得通红起来，凭借着远超普通人的身体素质紧紧咬住对方离去的身影。</p><p>　　但是最后还是让对方消失在拐角深处。</p><p>　　「呼——哧<del>呼——哧</del>」</p><p>　　剧烈运动带来的后遗症瞬间上头，整个人像是被泡在水里一样，双眼布满血丝，宛若被抛弃的小狗一般。</p><p>　　这时候舍沙才重新占据肉体的主导权来，控制住呼吸逐渐平稳下来，面色也逐渐平静。</p><p>　　「麻烦。」</p><p>　　舍沙现在的心情很不好，肉体不断传来不安、愤怒、恐惧之类的负面情绪，不断干扰着他的理智。</p><p>　　尽管不断催眠自己，这只是拉娜的一项谋划，她肯定不会出事。</p><p>　　但依旧压抑不住心底的那股负面情绪。</p><p>　　妈了个巴子，迟早NTR你。</p><p>　　呼，吸。</p><p>　　凭借着起源带来的强大加成，舍沙开始分析起拐角处的轨迹，趴近地面之时一股淡淡的香味被他抓到了。</p><p>　　真「忠犬」的嗅觉发动！</p><p>　　沿着淡淡的气味，舍沙不断穿行在平矮建筑间的过道之中。</p><p>　　七拐八拐之后，最终停留在一条还算宽敞的街道附近。</p><p>　　这是位于王都偏西的地域，根据克莱姆的记忆显示，这里背地里有不少实力在此进行地下交易。</p><p>　　奴隶、毒品、违禁品……</p><p>　　种类很多，但是因为传说与大贵族有千丝万缕的关系，所以一直没有人来管这种情况。</p><p>　　就连王都的卫队也对这边视而不见。</p><p>　　啧，你可真能挑地方。</p><p>　　到了这里，舍沙就算再迟钝也反应过来了，怕是拉娜特定挑选的地方来上演一场好戏吧。</p><p>　　至于目的，显而易见了。</p><p>　　背靠着墙壁，舍沙将手掌摸向腰间佩戴的长剑。</p><p>　　根据刚才的探查，目标门口站着有两名身强力壮的护卫，应该只是普通人，而非职业者。</p><p>　　也是，职业者之中哪怕是战士，一般也很少做这种看门的工作。</p><p>　　那既然如此，就必然不是自己的对手。</p><p>　　现在要担心的，就是直接动手会不会打草惊蛇。</p><p>　　不过很快，舍沙就找到了机会。</p><p>　　一名脑满肥肠、臃肿如肥猪，穿着打扮十分整齐的男性胖子就在门口一人的迎接下走了进去。</p><p>　　现在守门的就只剩下一人了。</p><p>　　趁着对方扭头的瞬间，舍沙暴起发难，在对方的视线死角处快速接近对手，捂住口鼻，手起刀落，直接抹了对方脖子。</p><p>　　全程没有发出半点声响。</p><p>　　呼，我可真棒。</p><p>　　自我夸赞了一句，舍沙内心居然还有一点小激动。</p><p>　　悄悄推开一条门缝，探头观察了一下，昏暗的过道之中并不存在其他的守卫身影。</p><p>​看起来内有乾坤的样子。</p><p>　　估计之前的人是去内部更深处了。</p><p>　　以防万一，舍沙将那名守卫的尸体拖了进来，挡在门后，避免被外面路过的行人发现。</p><p>　　随后握着剑柄，压低脚步，小心翼翼的继续朝前推进。</p><p>　　……</p><p>　　与此同时，内部深处的房间之中，已经被掳走的黄金公主拉娜半昏迷着被关押在牢房之中。</p><p>　　送来的那几名小弟本该欢喜的去领赏钱，但此刻却是冷如死灰，腿抖得筛糠一样。</p><p>　　「我们真不知道她是王国公主啊。」</p><p>　　「我们才刚来王都几天……」</p><p>　　……</p><p>　　领头的老大一脸的铁青，手里的短刀提了又放，放了又提。</p><p>　　想要一刀把这群渣滓解决，但是又担心解决完之后，没人替自己背锅。</p><p>　　绑架王国公主这一项罪名，可不是他一个小队长可以顶得住的，恐怕就连幕后的大佬也顶不住。</p><p>　　一旦被丢出去，只有死亡一个下场。</p><p>　　而且恐怕死亡都还算是最幸福的结局，那种求生不得求死不能的场面，他年轻的时候也曾见到好几例。</p><p>　　都是碰了不该碰的人。</p><p>　　「老大，这不能怪我们啊，谁知道公主穿的那么普通，大家都以为只是商人千金而已。」</p><p>　　此刻的小弟还在努力地做最后的挣扎。</p><p>　　只是老大却没有心思听他们废话了，挥了挥手示意旁边的小弟就把人带出去处理。</p><p>　　正在老大思考之时，身后却传来了略显沉重且急促的脚步声。</p><p>　　「杰克，听说你搞了一条不错的大鱼，在卖回去之前不如让我好好……」</p><p>　　史塔凡·黑委士兴致勃勃的在身前的守卫引导下赶来，一双绿豆大小的眼眸不停地打量起牢房内关押的女性。</p><p>　　正当他盘算着今晚要带哪个美人回去潇洒的时候，瞥到一位金色长发的少女身影躺在一侧的身影，瞳孔顿时震了一下。</p><p>　　紧接着又似乎是不太确定，凑近几步借着火把的光亮终于看清了金发少女的全貌。</p><p>　　砰！</p><p>　　屁股与地面碰撞发出略显沉闷的声音，史塔凡·黑委士感觉自己心脏都快要跳出来了，想要说些啥，嘴巴却不听使唤的开始打颤。</p><p>　　「这……这——不是黄金……黄金公主吗？」</p><p>　　扭头看向平日里经常光顾的老伙计杰克的方向，却发现对方平日里熟悉的笑容早已消失，取而代之的是一脸踩了狗屎的表情。</p><p>　　「喂！你这家伙想找死干嘛拖着我！」</p><p>　　「你以为我想自找麻烦嘛！」</p><p>　　「到底怎么回事！」</p><p>　　「我他娘的也想知道……」</p><p>　　史塔凡·黑委士休息了一会儿之后，总算是缓过劲来，一脸愤怒的朝着那位名叫杰克的男子怒骂起来，圆润的肥脸此刻涨的通红，额头的汗珠顺着肥肉划出一道轨迹，滴落到由石板铺陈的地面上。</p><p>　　……</p><p>　　似乎是被两人的争吵声给吵醒了，被绑架的少女睁开了双眼，环顾自己所处的环境，露出了惊恐的表情。</p><p>　　「你们是什么人？为什么要绑架我？」</p><p>　　拉娜的声音一出，牢房外还在争吵的两人瞬间止住声音，然后身材肥胖的史塔凡·黑委士有些僵硬的转过身体来，露出谄媚的笑容，只是这幅嘴脸在外人看来，实在太过恶心。</p><p>　　「公主殿下，误会，误会——我是听说有人绑架了王国的子民，于是就派人前来救援，恰好遇到了被绑架的殿下。」</p><p>　　史塔凡·黑委士已经明白了，既然自己撞上了这件事情，多半是跑不掉了，那就只能尽可能的挽救自己处于悬崖口摇摇欲坠的未来了。</p><p>　　于是他尽可能的将自己包装成为一位听闻有人绑架良家少女，特地前来救援的英勇官员。</p><p>　　而他的职位也恰好是王都巡视官，说是履行职责也不为过。</p><p>　　现在只要能把这位傻白甜的公主殿下忽悠过去，兴许还能看到明天的太阳。</p><p>　　「你是？」</p><p>　　「在下王都巡视官——史塔凡·黑委士，曾经有幸见过公主的画像，所以立刻就认出了您。」</p><p>　　史塔凡·黑委士尽可能的让自己看起来和蔼可亲一些，虽然这和他的肥硕体型一点也搭不上边，但此刻他也管不了那么多了。</p><p>​尽可能的展现出自己的谄媚与恭敬。</p><p>　　拉娜听着对方的介绍，天真的点了点头，似乎是相信了对方的谎言。</p><p>　　看到拉娜这幅模样，史塔凡·黑委士顿时内心狂喜，感觉自己度过一切，岂料少女的下一句话，让他心情顿时跌到谷底。</p><p>　　「那边那几位是您的下属吗？为什么打扮成这样？」</p><p>　　……</p><p>　　一滴冷汗从史塔凡·黑委士的额角滑落，糟糕了，忘记杰克这群家伙了。</p><p>　　如果不能想个借口，恐怕刚才的谎言就要被拆穿了。</p><p>　　幸运的是杰克也不算是没脑子的打手，立刻就给自己加了一层身份。</p><p>　　「见过殿下，我们是史塔凡大人打入这里的暗子，忍辱负重这么多年就是为了将这个地方一网打尽！」</p><p>　　「是极是极，这些都是我最忠诚的部下，如果不是他们帮助，恐怕我还没办法端掉这处窝点。」</p><p>　　「这都是大人的栽培！」</p><p>　　史塔凡·黑委士借坡下驴，赶紧给杰克几人安排了一个临时的身份。</p><p>　　争取把这场难关度过去，一时之间原本争吵的两人的关系堪比亲生父子般坚韧。</p><p>　　……</p><p>　　剧情发展到这，拉娜也打算暂时放过眼前的这群‘罪魁祸首’，毕竟她的目的只是想要给之后的会议加一份筹码，还不打算把自己置身险境。</p><p>　　如果把两人的伪装挑破，危险程度也会随之上升。</p><p>　　虽然有携带王室专用的防护道具与魔法道具，但还是不要冒这个险了。</p><p>　　不知道克莱姆现在是不是急的要死了，等回去之后可要好好补偿一下我的克莱姆。</p><p>​少女的心中不断编织着自己想要的剧情，但面上依旧维持着天真的表情，想要张口说些什么的时候，眼神中映射出一个人影，旋即话锋一转。</p><p>　　「那为什么地上跪着的那几人我那么眼熟……」</p><p>　　「我记起来了，就是他们绑架的我！」</p><p>　　艹，感觉马上要功亏一篑的史塔凡·黑委士与杰克两人将目光看向地上跪着的小弟，眼里闪过一丝狠辣。</p><p>　　注意到老大的目光变得阴狠起来，跪着的小弟哪里不知道老大的打算。</p><p>　　抱着同归于尽的想法，用尽全力抢在杰克动手之前发出声音。</p><p>　　「老大，这都是你让我们干——」</p><p>　　咯~咕噜</p><p>　　下一刻，还不等几名小弟说完，杰克的短刀就已经割破了他们的喉咙，让他们再也说不出话来，只能发出咕噜咕噜的气泡声。</p><p>　　随后不甘心的瞪着双眼看向两人，倒地身亡。</p><p>　　该死，还是让他们开口了。</p><p>　　杰克脸色变得阴狠毒辣起来，将目光看向拉娜所在的位置，‘天真’的拉娜被他的目光一看，顿时脸色就变得‘害怕’起来。</p><p>　　「呃，殿下别怕，他们、他们——」</p><p>　　史塔凡·黑委士还在绞尽脑汁的寻找借口，但是杰克却出口打断了他的举动。</p><p>　　「史塔凡，别找借口了，既然事情败露了，那就不能放公主殿下离开了。」</p><p>　　杰克也醒悟了，反正他就是烂命一条，卖掉王国公主之后大不了直接卷家当跑帝国去。</p><p>　　到时候，王国也找不到他，他还能凭借着得来的钱财在帝国继续潇洒快活。</p><p>　　也就是在杰克幻想着未来的美好生活之时。</p><p>　　身后传来的闷哼声终于引起了他的注意。</p><p>　　「你是谁！？」</p><p>　　等到杰克转过身来的时候，顿时气的目眦欲裂起来。</p><p>　　只见一名金色短发的少年将长剑从自己小弟的身上缓缓拔出，另一只手还死死捂住死去的小弟的口鼻。</p><p>　　也正是这个举动，让那名小弟死前根本发不出太大动静。</p><p>　　舍沙见到自己已经暴露，索性也就不继续捂着身前那人的口鼻了，而是甩了甩手中的长剑，将沾染在其上的血迹抖落大半。</p><p>　　随后看向被关在牢笼之中的公主拉娜，长出一口气。</p><p>　　「看到您没事，我就放心了。」</p><p>　　——好帅！</p><p>　　拉娜感觉自己眼里都快冒出小星星了。</p><p>　　这才刚刚一会儿没见，自己可爱的克莱姆就成长到这么帅气的地步了嘛！</p><p>　　但该伪装的还是要伪装的，于是拉娜脸上带着三分恐惧、三分惊喜、三分感动的看向舍沙。</p><p>　　「克莱姆，小心啊。」</p><p>　　——【&lt;要塞&gt;！】</p><p>　　一声呐喊，跟随着身体本能的舍沙发动武技抵挡了来自杰克的偷袭之后，立刻迅速展开了自己的反击。</p><p>　　——【&lt;斩击&gt;！】</p><p>​又一门武技施展开来。</p><p>　　得到了武技强化的长剑闪着微弱的光芒，出其不意之下径直砍断杰克还在抵抗的手臂。</p><p>　　失去了武器与手臂的杰克勉强支撑了两招之后，无奈地被舍沙一剑枭首！</p><p>　　——结束了。</p><p>　　不对，还有一位。</p><p>　　舍沙将目光投向躲在一旁桌子下瑟瑟发抖的肥猪，本打算挥剑了结对方的性命，却被拉娜给打断。</p><p>　　「克莱姆，先别杀他。」</p><p>　　舍沙：？</p><p>　　虽然不知道这位黄金公主想要搞什么幺蛾子，但是舍沙还是停下了手上的动作，转而不去理睬那只肥猪，而是将牢房之中的拉娜救了出来。</p><p>　　「谢谢你，克莱姆，你救了我！」</p><p>　　拉娜像是童话故事之中被骑士拯救的公主一样，扑到舍沙怀中，紧紧地抱着舍沙。</p><p>　　舍沙可以感觉到胸口那一处的温热感，那是来自拉娜的呼吸带来的热气。</p><p>　　「拉娜大人没事了，一切有我呢。」</p><p>　　假模假样的安慰了一下怀里正在演戏的少女，舍沙将视线转移到牢房之中。</p><p>　　这是一间不大的牢房，但是里面却不止拉娜一名少女，起码还有四五名躲在角落瑟瑟发抖的女性。</p><p>　　年纪层次不齐，大多都是13-18岁左右，估计也是被这群人拐来，打算当做货物出手的吧。</p><p>　　因为一直不出声的缘故，舍沙差点没有注意到她们的存在。</p><p>　　此刻似乎是因为看到了拐卖关押自己的坏人都被杀死，所以压抑不住的发出呜咽的哭泣声。</p><p>　　啧，无论那个时代，人贩子都该死。</p><p>　　舍沙心情又变坏了几分。</p><p>　　然后察觉到怀中的少女蠕动了一下，连忙将视线收回来。</p><p>　　「拉娜大人，接下来该如何处理？」</p><p>　　按照正常流程，其实到这里把坏人都杀完，然后找卫兵过来接手处理最后的结尾就好。</p><p>　　不过因为目前在场有一位是属于王国的公主，所以舍沙还是要听拉娜的意见的。</p><p>　　看看对方打算如何处理。</p><p>　　埋头感受来自心爱小狗健壮肉体的拉娜听到舍沙的询问，只好依依不舍的放开，随后将视线放在房间内的惨状上。</p><p>　　脸色变得冷静起来，咬了咬自己的下嘴唇，然后思考了一会儿，这才装作记起什么似的。</p><p>　　从怀中掏出一个小小的圆筒状道具，递到舍沙面前，开口道。</p><p>　　「这是王室特有的通讯道具，克莱姆你出去找个空地直接释放出去，然后等待侍卫赶来，应该不会太久。」</p><p>　　舍沙接过道具，将目光看向拉娜。「那拉娜大人您呢？」</p><p>　　「我就呆在这里就好，她们还需要人安慰呢，难不成你要让我一个人出去吗。」</p><p>　　拉娜露出一个安慰的笑容，指向牢笼之中的那几名拐来的女性。</p><p>　　舍沙点点头，然后将目光放到还在缩着的肥猪——史塔凡·黑委士身上。</p><p>　　走过上，伸手直接抓住对方的后脖颈。</p><p>　　嗯？肥肉太滑，差点没抓住，艹。</p><p>　　感觉自己丢了面子的舍沙发动强劲的握力，直接扯起一块带皮肥肉，在史塔凡·黑委士‘诶哟哟’的痛呼声中把人带了出去。</p><p>　　这个据点他刚刚观察了一下，是单向的，虽然不确定有没有密道存在，但是人基本都被他杀光了。</p><p>　　想来应该没有哪个傻大胆敢偷偷进来。</p><p>　　所以拉娜的安全他也不太担心。</p><p>　　再说了，作为原著之中人类顶尖的天才，估计拉娜单纯的武力比现在的舍沙还要强也说不定。</p><p>　　垃圾克莱姆，害的继承肉体的自己也感觉丢脸。</p><p>　　呵——忒！</p><p>　　【——咻——BOOM】</p><p>　　看着天上爆开的信号弹，舍沙点了点头，然后静静等待援兵到来。</p><p>　　至于史塔凡·黑委士?</p><p>　　在他脚下踩着呢。</p><p>　　啪叽啪叽。</p><p>　　脚感真不错！</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-3</title>
      <link href="/posts/4402.html"/>
      <url>/posts/4402.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-3"><a href="#NO-3" class="headerlink" title="NO.3"></a>NO.3</h1><p>　　　“吱呀”</p><p>　　大门从内打开，陆续走出一位位穿着华丽服装的贵族。</p><p>　　舍沙跟着拉娜默默站在一旁看着人流逐渐减少，随后又等了一会儿之后，从里面一前一后走出两名男性。</p><p>　　一人年轻，一人老迈；一者强壮，一者衰弱。</p><p>　　年轻而强壮的人，舍沙从克莱姆的记忆之中看到过，也是一个“熟人”。</p><p>　　——葛杰夫·史托罗诺夫</p><p>　　王国最强的战士长，也是国王的左右臂。</p><p>　　既然他出现在这，那另一位年迈的老者想必就是「里·耶斯提杰王国」的国王陛下——兰布沙·三世了。</p><p><img src="/./../assets/blog_res/Overlord-3.assets/07f8b0c2bb89be9d011b222bcce83ef82873.png" alt="国王与战士长"></p><p>　　只是——</p><p>　　舍沙默默地打量了一下那名老者的模样。</p><p>　　瘦削的身体，花白的头发，脸色不好，手细如枯木。</p><p>　　种种迹象表明这位国王的寿命已经不多了，而且如果没记错的话，老国王应该已经将近六十岁了吧。</p><p>　　那按照拉娜现在的年龄反推一下……</p><p>　　我擦，这老头可以啊。</p><p>　　「父王，战士长。」</p><p>　　拉娜见到两人出来，脸上挂起笑容，一路小跑着朝着两人所在的位置跑去。</p><p>　　「喔，是拉娜啊，怎么今天有空来父王这里。」</p><p>　　还在交谈的两人被拉娜的声音吸引，将视线转了过来。</p><p>　　见到来人是自己最疼爱的小公主，老国王的脸上瞬间挂上笑容，一脸慈祥的看着拉娜。</p><p>　　战士长见此也露出灿烂的微笑。</p><p>　　作为王国最出名的女性之一，他也早就见过拉娜，并为眼前这么美丽少女的聪明才智所折服。</p><p>　　偶尔还曾冒出「如果对方不是女性的话，恐怕自己会直接投入对方的麾下吧。」</p><p>　　不为其他，目前表现出来的拉娜就是这样一个优秀的人。</p><p>　　「会议终于结束了呢。」</p><p>　　「嗯，因为讨论了很多议题。」</p><p>　　「这样啊。女儿稍微想了一下，想让父王听听女儿的意见才会在这里等您。」</p><p>　　「是吗，是这样吗。那还真是抱歉呢。」</p><p>　　「不，应该是女儿抱歉才对，打扰了父王与战士长的交谈。」</p><p>　　「都是一些小事，哪里有我的宝贝女儿重要——」</p><p>　　十分轻松的插入话题了呢，该说真不愧是拉娜嘛。</p><p>　　舍沙站在后面默默地充当起背景板，尽量降低自己的存在感，希望不要被交谈的几人注意到。</p><p>​以前在职场上班的时候，就因为路过正在交流的老板身边看了一眼，莫名其妙就多了几项工作……</p><p>​想想都是泪啊，那时候应该避着走的……</p><p>　　不过很可惜，尽管他已经尽量不让自己引起注意了，但现场之中还是有一个人将视线集中到他身上。</p><p>　　「这位便是公主殿下的随从吧。」</p><p>　　「是哦，战士长以前也有见过的，克莱姆，你不是经常说战士长是你的偶像嘛，快来打个招呼。」</p><p>　　牙疼……</p><p>　　我怎么没从记忆里翻到你说的这个事情？</p><p>　　感觉拉娜瞬间变成了一个看热闹不嫌事大的小恶魔，舍沙嘴角轻微抽搐了几下，努力表现出喜悦的情绪回应起来。</p><p>　　「毕竟战士长大人是王国士兵的公认偶像嘛。」</p><p>　　……没了。</p><p>　　鬼知道该怎么继续话题啊。</p><p>　　所幸战士长葛杰夫也看出拉娜找国王有事，所以打着指导舍沙的借口，将现场留给他们父女二人。</p><p>　　舍沙顺水推舟的也离开了现场。</p><p>　　「史托罗诺夫大人，最近安好？」</p><p>　　舍沙与战士长两人结伴走到不远处的一处花园便停了下来，随后舍沙尝试主动开口拉进关系。</p><p>　　他们二人挑的位置很讲究，距离老国王与拉娜交谈的地方不远也不近，即听不到二人交谈的内容，又能在出现问题的第一时间赶过去。</p><p>　　该说不愧是有受过专门的训练嘛。</p><p>　　葛杰夫回头看了看还在交谈的两人，随后也放松了一些，脸色有着些许无奈。</p><p>　　「叫我葛杰夫就行，说实话，不算太好。」</p><p>　　呃，这话差点让舍沙接不上话茬，斟酌了一会儿继续开口道。</p><p>　　「是因为那些贵族嘛？」</p><p>　　「是拉娜公主和你讲的吧，的确，这些王国的蛀虫干啥啥不行，但是对陛下的法案却是不余遗力的阻拦。」</p><p>　　葛杰夫没想到舍沙居然会猜到他的烦恼是啥，但旋即反应过来，估计是那位聪明的黄金公主跟他说的吧，也没多想，就把刚刚在会议室之中发生的事情稍微讲了一下。</p><p>　　……</p><p>　　「这些贵族，真是该死啊！」</p><p>　　听完葛杰夫的描述，舍沙也是颇有一种义愤填膺的感觉，但却又对此无可奈何。</p><p>​有人努力拯救腐朽的国家，但总有一些败类占据着祖宗的遗荫来阻挡革新。</p><p>​这让舍沙想起了曾经自己的国家，不也曾发生这样的事吗。</p><p>　　「只是可惜，王国目前还需要这些贵族，即使是陛下，也对这些贵族头疼……算了，陛下他们一定会有办法的，我们只需要做好侍卫的本分就行。」</p><p>　　与舍沙交谈了一下关于之前的会议，葛杰夫发现自己的心情也好了几分，果然，将烦恼分享出去是一个不错的解压方式。</p><p>　　只是很可惜，做到他这个位置，能够倾诉的对象却没有几个，大多都是一些地位与他相差无几或是比他要高的存在。</p><p>　　贸然倾诉烦恼，即得不到缓解，还会让贵族派的人看轻自己。</p><p>　　看轻自己葛杰夫倒是觉得没多大关系，但是因此丢了陛下的面子的话，深受恩典的葛杰夫可不能接受这种情况的发生。</p><p>　　不过现在却没这个问题，因为在他面前的舍沙同为王室的随从人员，从性质上二人的工作都十分接近。</p><p>​就算是进行交流，也不会被人指指点点。</p><p>　　也就在二人继续有一搭没一搭的闲聊的时候，拉娜与老国王的交谈也告一段落。</p><p>　　「走吧，我们该回去了。」</p><p>　　「嗯。」</p><p>　　……</p><p>　　「那父王，女儿就先离开了。」</p><p>　　「去吧，注意安全。」</p><p>　　舍沙和战士长走过来的时候，拉娜走了过来，朝着战士长点头致谢，感谢他给出时间让她与父王交谈。</p><p>　　对此，葛杰夫也只是轻轻点头，并没有太多情绪变化。</p><p>​毕竟在他的认知之中，这也同样是身为下属的本分。</p><p>　　「那么走吧，克莱姆。」</p><p>　　「是的，拉娜大人。」</p><p>　　舍沙也是巴不得赶紧离开这个场合，这种地方真不适合自己这种社恐。</p><p>　　不过他也知道此时不能直接离开，而是转头看向那名似乎在打量自己的老国王，板着脸面无表情的恭敬行了一礼。</p><p>　　「陛下，属下告退。」</p><p>　　然后才跟随着拉娜的背影，亦步亦趋的离开这个地方。</p><p>　　两人走后，老国王这才收起脸上的笑容，只是此时也没了刚才那般烦恼，眼神也变得平和许多。</p><p>　　「陛下看起来心情好了不少。」</p><p>　　葛杰夫也敏锐的察觉到了老国王的变化，笑着问询起来。「看来都是拉娜公主的功劳呢。」</p><p>　　「只是一些小小的建议而已。」话虽如此，但是提到自己的小女儿之时，老国王那张遍布皱纹的老脸上又再次浮现一抹微笑起来。</p><p>　　葛杰夫笑而不语。</p><p>　　小小建议吗。</p><p>　　黄金公主的意见可不是什么小小的建议。</p><p>　　拉娜公主之所以被称为「黄金」，除去超越凡尘的美貌之外，另一个原因就是她那灵活头脑与令人敬佩的精神。</p><p>　　不但设立并推行了划时代的机构，还屡次提出新的法案。</p><p>　　而这些法案几乎都是为那些社会底层的平民所规划的救济措施，而且并非以施舍的方式，而是筹备好援助政策，让那些有意愿自助的人民，有机会可以自食其力。</p><p>　　与那些光吃饭不干实事的贵族形成鲜明的对比。</p><p>　　一方面改善平民的地位，提高他们对王室的忠诚，另一方面也可以强化王国的基础生产力，促进王国实力提升。</p><p>　　也正是因为有这般美貌与智慧，才会备受老国王的宠爱。</p><p>　　「对了，拉娜身边的哪个随从是叫——克莱姆，对吧。」</p><p>　　老国王突然冒出来的询问让葛杰夫愣了一下，然后立刻反应过来给出了回答。</p><p>　　「的确是这个名字没错，怎么了么？」</p><p>　　葛杰夫有些疑惑老国王为什么突然提到这位少年，难道有什么不妥之处吗？</p><p>　　「没，只是听拉娜讲到这个名字的时候……算了，也不是什么大事，诶——」</p><p>　　葛杰夫：？</p><p>　　望着突然陷入惆怅的老国王，葛杰夫也迷茫起来了，不知道老国王到底在卖什么关子。</p><p>　　也只有老国王才清楚，自己女儿提到那名随从的名字时，眼里那道光芒令他有些熟悉，但也因此才让身为国王，也同时是拉娜的父亲的自己感到怅然若失。</p><p>　　身为王室，必然难以让她追求自己想要的幸福。</p><p>　　但身为父亲，又希望自己女儿找到心仪的对象。</p><p>　　「虽然自知愚蠢，但还是至少想要让一个女儿……能够得到自由。不行，这样会被其他女儿骂呢……真的老了啊，竟然会想到这些事情。」</p><p>　　国王望着空中，彷佛那里有谁一样：</p><p>　　「说不定，我也必须让这个女儿陷入不幸呢。」</p><p>　　好像听到了不适合自己听的消息呢，葛杰夫决定就当自己刚才聋了算了。</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-2</title>
      <link href="/posts/53747.html"/>
      <url>/posts/53747.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-2"><a href="#NO-2" class="headerlink" title="NO.2"></a>NO.2</h1><p>　　「拉娜大人，预定的时间到了。」</p><p>　　似乎是拉娜提前与女仆订好了某个时间段要做什么事，所以推门进来的女仆施了一礼，说了这样一段没头没尾的话。</p><p>　　似乎是看到了房间内站着的舍沙，女仆的表情轻微变化了一下，随后又立刻恢复回恭敬。</p><p>　　被厌恶了吗？</p><p>　　拥有克莱姆记忆的舍沙自然没有忽略这个细节。</p><p>　　并非原来的他做了什么惹人讨厌的事，倒不如说他现在的身份对于这些服侍于王室的女仆与骑士来说，是个令人厌恶的家伙。</p><p>　　因为一个事实——在这座王宫之中工作的女仆大都有着贵族的女儿的身份。</p><p>　　某种意义上，女仆的身份比起舍沙还要高。</p><p>　　特别是在王族身边工作的女仆、几乎都是上位贵族的女儿。</p><p>　　因此，对不得不向平民以下的男人低头的耻辱，化作了不满表现了出来。</p><p>　　（说实话，这个国家糟透了，怪不得在原著之中会被毁灭）</p><p>　　舍沙眯了眯眼睛，心里莫名有些不舒服起来，习惯于现代社会的人人平等，面对旧社会这种分明的阶级制度，十分有九分的不满。</p><p>　　但他也知道自己没什么资格评价，因为他的不满多半也是建立在自己处于低地位的情况下，一旦他成为统治阶级，指不定也会成为其中欺压下等人的一份子。</p><p>　　但心情不好是事实，所以这个仇他记下了。</p><p>　　在内心的小本本上给这个女仆记了一笔，舍沙就收回视线，不再留意对方。</p><p>　　而房间内的其他两位女性，则是根本没有留意到舍沙的这个细节，毕竟在他们认知当中，这具身体的原主人给人的印象还停留在是个老实人上。</p><p>　　「都已经到这个点了嘛。」</p><p>　　拉娜眼里流露出一丝小小的惊讶，樱桃小嘴微微张开，似乎是没想到这么快就到达预设的时间了一样，随后将目光看向女仆。</p><p>　　「谢谢你的提醒啦！」</p><p>　　「拉娜大人客气了，有什么需要请随时吩咐！」</p><p>　　面对拉娜的感谢，女仆表现得十分得体，并未露出任何骄傲的表情，但是眼中的喜色还是没有逃脱拉娜的观察。</p><p>　　真单纯呢。</p><p>　　……</p><p>　　舍沙笔直的站在门外，静静等待里面的人出来。</p><p>　　因为拉娜要去面见这个国家的国王，也就是她的父亲，所以必须要保持最基本的礼仪。</p><p>　　即便国王很喜欢她这个女儿。</p><p>　　大约是每个世界的女性对于装扮都会花费相当的功夫在上面，一直到舍沙已经无聊到开始数墙壁上的花纹之后，紧闭的房门从里面被打开了。</p><p>　　从里面走出一位堪称宝石一般的女子，正是打扮一番的黄金公主-拉娜。</p><p>​淡绿色的精致礼服上点缀着华丽却不累赘的小小饰品，更加凸显出拉娜的白皙肤色，头上还顶着一个小小的头冠用来装饰单调的头部……</p><p>​不得不说，即使是经历过现代社会的照骗技术，舍沙仍旧被眼前的少女装扮给惊艳了一下，但很快又恢复平静。</p><p>　　而舍沙眼中的惊艳赞叹自然也被一直关注他的拉娜收入眼底，少女满意的眨了眨眼睛，看起来这番打扮的效果的确不错。</p><p>　　「我们走吧，克莱姆。」</p><p>　　「是！」</p><p>　　留下几名女仆将房间整理干净，舍沙不紧不慢的跟在拉娜身后大约一臂左右的距离，朝着远处的另一座宫殿建筑方向走去。</p><p>　　……</p><p>　　走在宽敞清洁的走廊之上，舍沙跟随着拉娜的步伐，尽可能的目视前方，避免发生碰撞之类的意外。</p><p>　　意外的轻松。</p><p>　　身体似乎已经形成肉体记忆，即使舍沙有事会被外面的景象吸引走神，却还能走出十分顺畅的步伐。</p><p>　　周围不时会走过穿着宫廷女仆服装的女性，朝着两人——准确的说是前面的拉娜公主，行了一礼。</p><p>　　当然，拉娜也会适时的停下来，随后优雅的回礼。</p><p>　　两侧偶尔还在看见整齐站立着，装备了全身铠、保持着一动不动姿势的进行警备工作的精锐士兵。</p><p>　　毕竟是皇室居住的宫殿，守卫力量可不低。</p><p>　　会议室离拉娜的卧室距离可不近，走了约莫半个钟头的时间，两人才看到远处会议室的大门。</p><p>　　以及周边紧紧护卫的骑士团。</p><p>　　又继续往前走了大约四五十米的距离后，两人便停下了脚步，找了一个还算空旷的位置等待。</p><p>　　等待里面的人开完会议然后出来。</p><p>　　至于在开什么会议，这个舍沙就没兴趣了，他现在正在思考，今天到底什么时候下班？</p><p>　　没想到穿越异界，依旧要苦逼的上班上岗。</p><p>　　不过因为算是一个铁饭碗，上司还是一个漂亮女孩，所以舍沙也没有如同以前那般对工作产生厌恶的心理。</p><p>　　现在的待遇比穿越前要好太多了。</p><p>　　……</p><p>　　「我反对！」</p><p>　　会议室之中，一名大贵族伸出手，表达了自己的意见。</p><p>　　而坐在他身边，都是属于这个国家的大小贵族。</p><p>　　坐在高台上的，则是这个国家的国王——兰布沙·三世。</p><p>　　在「里·耶斯提杰王国」之中权势最大的是谁？</p><p>　　如果是以前，那当然是王族，毕竟是执掌王国两百多年的掌权者。</p><p>　　但是最近几十年，王族的衰弱，也让贵族之中的另外一个派系占据了一席之地。</p><p>　　国内的贵族总体分成两大派系，支持国王政策的拥王派和维护贵族权益的贵族派 ，以前王族势力昌盛只是，贵族派基本没有，一直到现任国王——兰布沙·三世上位之后。</p><p>　　已经逐渐腐朽的王国渐渐被贵族派占据了主导权。</p><p>　　王国的大小贵族总共占有全国7成的土地，且大部分贵族都是腐败无能的货色，长期压榨平民放任犯罪。</p><p>　　如果不是有着相邻的帝国存在的威胁，兴许已经有人想要推翻王族，翻身坐主人也说不定。</p><p>　　此刻，作为王国仅有的六名大贵族之一的李顿伯爵皱着眉，举手示意自己不认可会议上拥王派提出的法案。</p><p>　　——《废除奴隶交易制度》</p><p>　　【奴隶交易】是从「里·耶斯提杰王国」建立之初就存在的法案，其存在的意义就是为了给王国提供充足的劳动力与奴役的对象。</p><p>　　但是由于这些年来，王国腐败不堪的情况愈加严重，导致很多平民都成了奴隶贩子下手的对象。</p><p>　　下套、诈骗、威胁……</p><p>　　无所不用其极，虽然极大地促进了奴隶交易市场的收益，但迎来的却是王国基础经济的跌落。</p><p>　　内有腐朽的制度拖后腿，外有强大的帝国侵略国土，所以当自己最喜爱的女儿提出这项法案的时候。</p><p>　　身为国王的兰布沙·三世就察觉到了其中潜藏的好处。</p><p>　　即打击了王国内部日益猖獗的地下势力，还能让衰弱的王国恢复一些生机，尽管会触动许多贵族的利益蛋糕，但是兰布沙·三世还是决定推行这项法案。</p><p>　　但是没想到，才刚打算推行法案，就遇到了来自大贵族的阻力。</p><p>　　年迈的兰布沙·三世将目光投向那名出声抗议的大贵族——李顿伯爵。</p><p>　　这是一名第一印象和狐狸十分相近的男人，也是与拥王派作对的贵族派之中的中坚力量之一。</p><p>　　人品低劣，只要是为了扩大自己的力量，别人如何受苦都不关他的事，所以其他贵族对他都没多少好感。</p><p>　　但这些都构不成对兰布沙·三世的威胁，唯一能够让兰布沙·三世感到棘手的，就是这李顿伯爵是依附于另一名大贵族——博罗逻普侯爵的麾下。</p><p>　　而博罗逻普侯爵才是令兰布沙·三世感到头疼的，如果是这家伙命令反对自己提出的法案的话，恐怕说不得还真就无法推行出去。</p><p>　　想到这里，兰布沙·三世将目光从李顿伯爵身上挪开，看向站在他身边的一名脸上有着许多伤疤，犹如战士一般的男性贵族。</p><p>　　（会是你的意思吗？博罗逻普侯爵。）</p><p>　　面对老国王投来的目光，博罗逻普侯爵只是摆出一副闭眼沉思的模样，一点都没有想要开口的意思。</p><p>　　麻烦了，如果继续这样僵持下去的话，恐怕最后也只能当做废案处理了吧。</p><p>　　这是很常见的情况，自从贵族派的势力压过拥王派之后时常发生。</p><p>　　尤其是有身为贵族派的博罗逻普侯爵参加的宫廷会议，多半会是一团糟的结局。</p><p>　　正在想着应对方案的兰布沙·三世、闭目养神的博罗逻普侯爵以及其他围观看戏的中小贵族。</p><p>　　一时之间，会议室之中陷入了死寂之中。</p><p>　　「我支持废除奴隶交易制度。」</p><p>　　有人率先打破了僵局，同时也吸引了其余众人的目光。</p><p>　　看到开口之人的模样，一些经营许久的贵族顿时露出了然的神色，随后将目光转向博罗逻普侯爵和李顿伯爵的方向，想要看看他们怎么应对。</p><p>　　毕竟这家伙，可同样也是一名大贵族啊！</p><p>　　佩斯培亚侯爵，大贵族当中最年轻，也是最俊美的青年，前些年娶了国王的长女，在结婚的同时继承了家业。</p><p>　　也算是正式成为拥王派的中坚力量。</p><p>　　「哼——」李顿伯爵发出只有周围人才能听到的冷哼，表达了自己的不满，但也没有多说什么。</p><p>　　出头鸟他之前已经做了，现在应该是别人的回合了。</p><p>　　佩斯培亚侯爵没有在意其他人的表情，继续开口道。「这些年来，奴隶交易虽然给王国带动了不少经济，但是就我所知，这些奴隶之中不乏王国的平民，且数量不少。」</p><p>　　说到这，佩斯培亚侯爵顿了顿，将视线转向那位李顿伯爵，才继续说起来。「听说有些贵族领地之中，贵族与贩子相勾结，迫使领民活不下去只能贩卖孩子才能维持生活。」</p><p>　　「你TM——！」</p><p>　　李顿伯爵脸色顿时大变，张口就想要反击，想把事情搞混，毕竟佩斯培亚侯爵说的可不是谎言，而是真实发生的事情。</p><p>　　只不过因为他把兵力部署在领地附近，镇压了那群想要动乱的平民，这才没有闹出太大动静。</p><p>　　没想到依旧有消息泄露出去。</p><p>　　「哼！」</p><p>　　似乎是被李顿伯爵的行为激怒了，在场众人之中年事最高的一名老者冷哼了一声，表达了自己的不满。</p><p>　　听到老者的声音，即使是势力最大的博罗逻普侯爵也只能睁开双眼，先是瞪了李顿伯爵一眼，表达自己心里的不满，随后开口安抚起那名老者起来。</p><p>　　「乌洛瓦纳边疆伯爵，事情还没有确切定论还请不要生气，保证领地的繁荣是每个贵族应尽的义务，我相信没有一个贵族会这样霍霍先辈留下来的家产。」</p><p>　　说完，博罗逻普侯爵难得挤出一抹弧度，只是搭配着满脸的伤疤，显得有些渗人。</p><p>　　乌洛瓦纳边疆伯爵，六大贵族之中最年长的一位，头发花白，发量稀少，看起来像个光头老者。</p><p>　　手臂与身体如枯树般细瘦，但整体给人的感觉就像是十分有威严的德劭年高之人。</p><p>　　即使对方属于拥王派，但是若是论资历的话，在场每一个人可以比拟。</p><p>　　如果自己想要与对方碰一碰的话，还没出手恐怕麾下就会有不少的贵族就会跳出来反对。</p><p>　　真是个麻烦的老家伙，怎么还不死！</p><p>　　早晚爆你的金币！</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-1</title>
      <link href="/posts/53427.html"/>
      <url>/posts/53427.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-1"><a href="#NO-1" class="headerlink" title="NO.1"></a>NO.1</h1><p>　　叩叩叩~</p><p>　　舍沙按照记忆之中的习惯，敲响了面前房间的大门。</p><p>　　「请进。」</p><p>　　从里面传出了一个可以称得上【好听】的女性声音。</p><p>　　得到回复之后，舍沙径直将手掌握在实木制成的门把手上，然后用力一推，房门便被直接打开。</p><p>　　入眼是一扇半开的窗户，将屋外的阳光引入室内，照亮了这不大的空间。</p><p>　　房间布局整体处于豪华但却不会太过奢侈的程度。</p><p>　　其中虽然摆放着一些名贵的家具，但却是全都用得上的物件。</p><p>　　这也侧面表现房间主人的一些性格。</p><p>　　在舍沙观察房间的时候，屋内的主人似乎也察觉到了异样，回头看了一下来人，脸上瞬间展露出令人迷醉的微笑。</p><p>　　「克莱姆，你身体好一些了吗？」</p><p>　　「托拉娜大人的福，已经没事了。」</p><p>　　「那就好，以后可不能这么过度运动了，身体会吃不消的……」</p><p>　　「可是，拉娜大人……」</p><p>　　「克莱姆也不听我的话了吗……呜……」</p><p>　　拉娜·提耶儿·夏尔敦·莱儿·凡瑟芙。</p><p>　　里·耶斯提杰王国的第三公主，拥有『黄金』美称的女性。</p><p>　　也是这具身体原主的主人。</p><p><img src="/./../assets/blog_res/Overlord-1.assets/17ea3d6bc11187af33e62d2725901fb8df0851e8.jpg@1256w_724h_!web-article-pic.webp" alt="拉娜·提耶儿·夏尔敦·莱儿·凡瑟芙"></p><p>　　见到面前少女做出悲伤的表情，即使知晓对方是伪装出来的，舍沙仍旧内心不由自主的生出心疼，但旋即反应过来，自己不可能这么庸俗到被美貌欺骗。</p><p>　　果然即使夺舍肉体成功，但是残留在肉体与灵魂之中的本能与记忆仍旧时刻影响着现在的自己。</p><p>　　不过这对于舍沙来说，反而算得上是一件好事。</p><p>　　毕竟他可不是什么表演大师，没信心可以在一个王国的『天才』面前蒙混过关。</p><p>　　但有了原主的记忆与身体本能加持，不说十有八九，也应该像个七七八八吧。</p><p>　　「我知道了，以后会好好注意的，拉娜大人还请你不要这样。」</p><p>　　真不愧是忠犬嘛，舍沙已经感觉到了身体的胃部隐隐在幻痛。</p><p>　　接下来是有些漫长且无聊的值班时间，站在拉娜身后，舍沙好奇的打量着少女的行为，见到对方游刃有余的处理着桌上的一份份文件，也是不由得生出佩服的情绪。</p><p>　　他自认为是做不到少女这般轻松的程度。</p><p>　　即使这只是一个欧洲中世纪文明程度水平的王国，但有些东西，没有才能就是没有才能。</p><p>　　但眼前的少女却是可以轻松解决绝大部分问题的天才，尽管因为女性的身份以及排位第三，而无缘王位，没有实权。</p><p>　　但也不会因此降低对方在外界的评价。</p><p>　　性格温厚仁慈，会考虑国家和民众，根据被统治者一方的国民制定政策、法律，所以在有见识的人和受到恩惠的人当中评价和人气很高。</p><p>　　前提是你并未发觉这名少女的真实面貌。</p><p>　　了解剧情的舍沙自然知道拉娜隐藏的面貌，但也正是这个原因，他也不得不佩服对方。</p><p>　　按照对方的逻辑来思考，现在的拉娜一直都处在类似生活在猴子组建的文明之中的人类。</p><p>　　换成舍沙的话，恐怕打心里就没法接受这个事实吧，一开始就会陷入疯狂，但是这个少女就做到了，尽管已经是个变态了。</p><p>　　但真的很厉害。</p><p>　　如果忽略掉对方变态的一面，单看外表，其实已经十分戳中舍沙的好球区了。</p><p>　　一头金色的头发又长又有光泽。</p><p>　　嘴唇就像带着微笑的樱花一样，肤色是很淡的奶白透红。</p><p>　　深邃的蓝色眼睛让人联想到蓝宝石，充满柔和的色彩。</p><p>　　而且还刚好是西方女性最美好的年龄段……</p><p>　　唔~</p><p>　　拉娜慵懒的扭动身体，少女正在发育的身体显得那么具有魅力。</p><p>　　站在身后的舍沙不由得移开视线，尽可能的让自己刚刚剧烈跳动的心脏恢复平静。</p><p>　　（该死的克莱姆，到这个时候还在影响我吗！）</p><p>　　舍沙绝不承认，这是出于自己的原因。</p><p>　　「克莱姆。」</p><p>　　「——我在。」</p><p>　　突然的呼唤让舍沙回过神来，连忙回应了一下，正疑惑对方喊自己是有什么事情吗。</p><p>　　正好自己一直呆在这里也有些累了，赶紧派我出去吧。</p><p>　　美色虽然好看，但是一直站着也是真的无聊。</p><p>　　不过在【羽斯缇萨】下线的现在，尽量维持现状已经是舍沙最好的选择了。</p><p>　　拉娜随意地丢下一份足够影响一个村子的报告，有些疲倦的躺在沙发靠背上，随后才继续开口。</p><p>　　「有点累了，帮我按摩一下。」</p><p>　　这是相当逾越阶级的请求，本该交由女仆完成，但可能是因为拉娜对于原主克莱姆的某种特殊情愫，多次拜托克莱姆之后，还是成功了。</p><p>　　前提是周围没有其他人在场，要不然克莱姆是打死也不敢这样干的。</p><p>　　当然，这是之前的原主，现在的舍沙才不会有那种阶级观念，不过他也没有大胆到直接上前动手。</p><p>　　而是装模作样的纠结了一会儿之后，才将套在手上的手甲卸下，随后挂在腰间。</p><p>　　这才走到躺在沙发上闭目休憩的少女身后，用自己那双年轻却布满老茧的手掌轻轻放在少女的额头两侧，然后慢慢按压。</p><p>　　啧，人生赢家啊。</p><p>　　见到这幅模样的拉娜，舍沙也有点羡慕起原本的克莱姆来。</p><p>　　原著之中的克莱姆虽然一直是个蒙在鼓里的小丑，但是就经历来说，已经算得上是传统小说里面的主角待遇了。</p><p>　　出生寒微——是个孤儿。</p><p>　　遭遇贵人——被公主拉娜捡回家。</p><p>　　遭人嫉妒——嫉妒成为公主唯一的私兵。</p><p>　　掌握强大的力量——姑且武力算是人类这一种族之中算的上中流的程度。</p><p>　　运气爆棚——喜得良师—赛巴斯，数次遇见反派—幸存。</p><p>　　最终是收获佳人——嗯，变成了拉娜的狗，这辈子只能在小房间里不停的干活。</p><p>　　这妥妥的主角模版啊。</p><p>　　尽管在这个世界像是这样的主角模板显得有些不太够格。</p><p>　　毕竟——这可是Overlord的世界啊。</p><p>　　强者即是正义，弱者只能成为口粮的世界观下。</p><p>　　克莱姆顶多算是个幸运儿了。</p><p>　　想到这里，舍沙突然也就不那么羡慕克莱姆了，自己的潜力应该比对方大，不至于沦落到原著那种程度的结局。</p><p>　　虽然似乎听起来也不坏。</p><p>　　但那也不行，做人嘛，还是要有点追求的。</p><p>　　与其吊在一棵树上，不如琢磨琢磨去种一片森林出来。</p><p>　　舍沙就这样一边胡思乱想打发时间，一边不轻不重的施展按摩绝学。</p><p>　　大约按摩了十来分钟左右。</p><p>　　拉娜才睁开紧闭的双眼，与正在观察自己的舍沙撞了个正好。</p><p>　　……</p><p>　　舍沙连忙将视线移开，双手也停了下来。</p><p>　　（卧槽，偷窥被正主发现了，求救，羽斯缇萨。）</p><p>　　没有回复——</p><p>　　这是正常的。</p><p>　　自那之后已经过了三天，【羽斯缇萨】依旧豪无动静，就好像从来没出现过一样。</p><p>　　感觉被网骗了一样，这种心情……</p><p>　　「克莱姆，你好像有哪里不一样了。」</p><p>　　拉娜的声音从前面传来，差点没让舍沙汗毛全部直竖起来。</p><p>　　（什么情况，我这么快就暴露了吗？要怎么做？逃跑，还是威胁对方——不对，不对，冷静，要冷静。）</p><p>　　强装镇定，舍沙露出恰到好处的疑惑表情。</p><p>　　「怎么了么？」</p><p>　　「你好像变帅了——」这样说着，拉娜的脸上突然染上一抹淡淡的红晕，似乎是发觉自己这话有些歧义，但想想又没有解释的必要。</p><p>　　「呃……」</p><p>　　舍沙装作惊愕带着点害羞的表情，心里实则松了一口气。</p><p>　　吓死我了，还以为身份暴露了。</p><p>　　不过，他也猜到了拉娜为什么会有这样的感觉。</p><p>　　月世界有名为「起源」的设定，所谓起源就是“从起始的因发生的事物的方向性”，是 “决定自己存在为何的方向性”。</p><p>　　换个简单的说法就是——拥有“禁忌”起源的东西是一个人类，就可能会发生“妹妹爱上哥哥”、“少女爱上姐姐”的事情。</p><p>　　而舍沙的起源……</p><p>​——是名为【引力】的概念。</p><p>​那拥有“引力”起源的东西是一个人类，会发生什么事情？</p><p>　　舍沙不清楚，但是联想到【羽斯缇萨】的诞生与现在拉娜察觉到的异样，或许……</p><p>　　莫名的，舍沙想起某位屑神父的台词。</p><p><img src="/./../assets/blog_res/Overlord-1.assets/b5441f374d1adcce4ddaa7bcd9841b4b3695.jpeg" alt="屑神父"></p><p>　　——你相信引力吗？</p><p>　　——人与人邂逅的引力就像是『重力』！为了相遇而相遇，更是无法摆脱的宿命！</p><p>　　恐怕这就是答案了吧……</p><p>　　上天堂，哦，我的上帝呀。</p><p>　　成分太杂了。</p><p>　　舍沙只是想探索魔法而已，遭不住这种待遇。</p><p>　　「可能是我感觉错了吧。」</p><p>　　这场误会最终以拉娜的自言自语结束。</p><p>　　随后少女又继续展开自己的工作，没有再继续“为难”舍沙的意思。</p><p>　　时间一分一秒的流逝，窗外的阳光也变得温暖起来。</p><p>　　房间内再次响起了“叩叩叩”的敲击声。</p><p>　　有人来了。</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overlord-0</title>
      <link href="/posts/4210.html"/>
      <url>/posts/4210.html</url>
      
        <content type="html"><![CDATA[<h1 id="NO-0"><a href="#NO-0" class="headerlink" title="NO.0"></a>NO.0</h1><p>　　「该死的时钟塔，不就是穿越者、非本地户口嘛，就直接搞『封印指定』，有那能耐你去弄魔道元帅啊！」</p><p>　　「马勒戈壁，还有那个该死的巴泽特……」</p><p>　　原本安静的森林幽径处，一道白色光团凭空出现，周身不断散发着波纹，似乎在以某种频率不断刷新某些人的族谱。</p><p>　　◤建议个体尽快搜寻肉体，以承载灵魂的存在◥</p><p>　　听到脑海之中响起的女声，被称为舍沙的光团这才稳定下来，冷静的打量起周围的环境来。</p><p>　　「我现在是什么情况？」</p><p>　　◤简单来说，就是失去肉体，只剩下灵魂与精神存在◥</p><p>　　啧。</p><p>　　果然是这样，舍沙感受着自己目前的状态，失去了肉体所带来的五感之后，仿佛解脱了某种桎梏一般。</p><p>​按照月世界的研究来讲，一个人大致可以分成三部分。</p><p>　　即物质，灵魂，精神。</p><p>　　物质代表肉体，会随着时间渐渐腐蚀，灵魂则会被物质影响。</p><p>　　但灵魂本身不会衰败，只是因为肉体的衰败而受到影响。</p><p>　　而现在失去了肉体，虽然脱离了物质的束缚，但同时也代表失去了物质的保护。</p><p>​单独的灵魂存在，恐怕对于某些存在，是不了得美味佳肴吧。</p><p>　　「你是谁——或者我该怎么称呼你？还有你为什么会出手救我？」</p><p>　　舍沙感觉自己突然有好多问题需要得到回复，整个脑子乱糟糟的。</p><p>　　虽然他现在也没有脑子了。</p><p>　　笑死。</p><p>　　脑子估计被巴泽特带回时钟塔进行『封印指定』了。</p><p>　　要不是中途出现意外变故，恐怕他现在就应该待在福尔马林里面安度余生了。</p><p>　　一想到这里，舍沙就又想骂娘了，不过冷静的理智又告诉他这样并无卵用。</p><p>　　于是，就这样一边与脑内的声音进行交流，舍沙朝着刚才发现的城堡所在位置飘去。</p><p>　　◤根据残余的记忆，你或许可以称呼我为羽斯缇萨。◥</p><p>　　「羽斯缇萨•里姿莱希•冯•爱因兹贝伦？那名第三魔法产物——冬之圣女？」</p><p><img src="/./../assets/blog_res/Overlord-0.assets/772edc7606ec205263185d971277e2f40a5b425f.jpg@1256w_708h_!web-article-pic.webp" alt="冬之圣女——羽斯缇萨"></p><p>​◤不完全正确，真正的冬之圣女已经死亡，『我』只是继承了爱因兹贝伦历代亡者的夙愿，以『她』残留的记忆为主而已◥</p><p>　　「……那你为什么会出手救我？」</p><p>　　◤因为想要与你达成一笔交易◥</p><p>　　「交易？什么交易？」</p><p>　　◤重现第三法！◥</p><p>　　听到这个名词，舍沙还在飘忽着的光球瞬间停了下来，语气也变得有些惊疑不定起来。</p><p>　　「第三魔法？为什么，我不过是一个普通人而已，顶多是个穿越者，但你也看到了，我根本连一点反抗的能力都没有，要不然也不会那么容易被抓住……」</p><p>　　舍沙，来自某个蓝星的穿越者。</p><p>　　作为一位非月世界本地户口的穿越者，开局就不存在魔术回路与魔术资质，所以根本就无法进入神秘界学习魔术。</p><p>　　但作为穿越者的舍沙却并不甘心只做一个普通人，于是他将目标打到冬木市举办的「圣杯战争」上。</p><p>　　虽然那很危险，作为一个普通人参与进入其中，基本上是九死一生的局面，而他自认也没有男主卫宫士郎的魅力，但舍沙还是去了。</p><p>　　并且『幸运』地替代了某位变态杀人狂，夺走了令咒。</p><p>　　借助熟悉的剧情躲在幕后当老六，成功成为最后的获胜者。</p><p>　　熟知剧情的舍沙自然知晓大圣杯已经被污染了，但是作为三大家族魔术结晶结合第三魔法的成果，总归还是有些价值的。</p><p>　　本打算后续拿去与魔术师协会兑换魔术回路与魔术刻印，却没想到遭到了时钟塔派出的封印指定的执行者。</p><p>　　那名持有宝具『逆光剑』的巴泽特·弗拉加·马克雷密斯。</p><p>　　Bi—tch！</p><p>　　连解释都不听，三两下就把舍沙给干趴下了。</p><p>　　最后舍沙无奈许下愿望，企图借助圣杯的力量来摆脱困境。</p><p>　　但由于大圣杯已经被污染，所有愿望都会以“带来破坏和灾难”的形式实现，且作为穿越者的舍沙也不确定自己是否会得到回应。</p><p>　　但想来有一个事情绝对不会错过，那便是圣杯连通根源之中的恶意将会借此流向现实。</p><p>　　如此想来，恐怕这位自称【羽斯提萨】的残念就是那个时候诞生的吧。</p><p>　　◤是的，残念、圣杯以及你的起源，这三者的结合促进了『我』的诞生◥</p><p>　　「起、起源？！什么情况？！」</p><p>　　舍沙听到【羽斯提萨】的解释之后，整个人都感觉不好了。</p><p>​何谓起源？</p><p>​月世界有名为「起源」的设定，所谓起源就是“从起始的因发生的事物的方向性”，是 “决定自己存在为何的方向性”。</p><p>　　因为根据月世界的设定——</p><p>　　世间万物，都是从一个叫“根源”的地方出来的。</p><p>　　当任意某物从根源出来的时候，就已经有一个“起源”</p><p>​但拥有起源并非绝对的好事，起源的力量，可能造成困扰，但也可以带来战斗力。</p><p>​觉醒起源者将被起源所吞噬。获得强大力量的同时，因为仅仅百年程度的“人格”，会被从原初之始产生的方向性所覆盖。</p><p>​换句话说，你会逐渐被你的起源所掌控，成为另外一个自己。</p><p>​原著之中，杀人魔 白纯里绪的起源是“进食”，觉醒后产生啃噬人类的欲望，以及利于捕食的身体能力强化。 那种知晓自己会被逐渐取代沉重感即使通过文字表达，也依旧让当时身为读者的他感到震撼。</p><p>​但现在，自己有可能成为那样的存在……</p><p>​即便只剩下灵魂，此刻的舍沙依旧感到了莫名的恐惧，朝着【羽斯提萨】询问起来。</p><p>​「我的起源为何物，你说三者结合才促使你的诞生，难道我现在是否已经觉醒了起源？」</p><p>　　◤起源——【引力】，这也是我能够诞生的原因之一◥</p><p>​原本移动的光球瞬间停下，随后沉寂片刻后，又快速移动起来。</p><p>​◤我以为你会恐惧到无法接受这个事实◥</p><p>​「呵，那你也太小瞧我了，我还是一个普通人的时候就敢冒着死亡的威胁去参加圣杯战争，只为博一个进入魔术界的可能，区区起源，只要没能把我彻底覆盖，那就只能成为我登顶魔法使的垫脚石！」</p><p>​舍沙此刻已经想通了，即使依旧会对被起源覆盖的未来感到恐惧，但那也不是现在的他停滞不前的借口。</p><p>​只要在起源覆盖自己之前，寻求到解决的办法就行。</p><p>​现在的他可能还做不到，但是有着这位第三魔法产物——来自爱因兹贝伦家族的残念——【羽斯提萨】的他说不定未来就能实现。</p><p>​◤你很强◥</p><p>​「呵呵，谢谢夸奖，我也是这么认为的，对了你不是要和我做交易嘛，可不能让我单方面付出吧！」</p><p>​◤自然，你需要我付出什么代价？友情提醒，现在的我不过是一个依附于你才能存在的残念，并不具备任何的物质供给条件◥</p><p>​「不，不需要那些，你继承了爱因兹贝伦家族的夙愿，那你是否具有『她们』的记忆，那些独属于爱因兹贝伦家族的知识？」</p><p>​◤原来如此，的确很合理的交易，虽然仅仅是一部分，但我的确继承了『她们』的知识，以及不完整的第三魔法◥</p><p>​「好！我有个提议！」</p><p>​◤你说◥</p><p>​「你做我的『魔道引路人』来帮助我探索魔法，而我来帮你重现第三魔法！」</p><p>​◤很合理的交易◥</p><p>​……</p><p>​伴随着与【羽斯提萨】的交易成立，舍沙的速度也再提了一些，很快便来到了原定的目标地点。</p><p>​这是一座十分巨大的欧式古城堡，高大的城墙上遍布时间侵蚀的痕迹。</p><p>　　附近建造有将近二十多座圆形巨塔，看起来是专门用来拱卫这座城堡的。</p><p>　「我要怎么做？你之前不是说要找一个新的肉体，怎么找？」</p><p>　　舍沙看着不知道多少个自己高度的城墙陷入了沉思，满打满算其实他穿越月世界也才一个月不到，圣杯战争更是七天就结束了。</p><p>　　魔法知识只有从caster那里学到的皮毛，灵魂夺舍这种听起来就高大上的技术他是一点都没把握。</p><p>　　整体算下来，其实他就比麻瓜好一点，能够赢得圣杯战争也是因为穿越前看了原著动漫熟知剧情才有偷家的把握来着。</p><p>　　此时此刻，只剩一颗大光球的他只能求助于【羽斯提萨】的帮助。</p><p>　　不过她要怎么帮我，她不是比我还惨吗？</p><p>　　就在舍沙这样想的时候。</p><p>　　◤穿过去，寻找到合适的个体即可，并不用担心，虽然『我』的第三魔法同样不完全，但足以解决肉体与灵魂的问题◥</p><p>　　来自【羽斯提萨】的声音响起，也让舍沙顿时了然。</p><p>　　第三魔法——天之杯，如果是它的话，那的确可以做到这些涉及灵魂层面的技术。</p><p>　　有了底气，舍沙直接操控着灵魂光球穿过石砖搭建的城墙，开始搜寻起自己的目标来。</p><p>　　居然有骑士？！</p><p>　　这是哪个地方的cosplay漫展吗？还是欧式景点特有的招揽手段？</p><p>　　哦哟，还有女仆装……</p><p>　　嘿嘿嘿，白色的。</p><p>　　◤友情提示，如果你喜欢这些，等到以后展开研究之余，我可以为你制作出性能更优秀的人造人◥</p><p>　　「好——咳咳，不要污蔑我的人格……」</p><p>　　被奇怪的画面影响了思绪以至于浪费了一点时间的舍沙在【羽斯缇萨】的友情提示下终于回过神来，连忙快速在城堡的宫殿之中游荡起来，寻找起合适的肉体来。</p><p>　　这个不行，太老了；</p><p>　　这个也不行，性别不太合适；</p><p>　　这个更差了，一看上去就是打工人的命；</p><p>　　伴随着不断地更换目标人选，舍沙也逐渐发现了一个事实，这里似乎并不是他以为的某个漫展基地或者景区建筑。</p><p>　　毕竟虽然两者都会有cos的情况，但却不会出现这么正统的架势。</p><p>　　而且这些建筑风格也很奇怪，很接近欧洲古建筑，但是仍旧有着不小的差距。</p><p>　　怪。</p><p>　　心中思虑万千，但也没耽搁挑选肉体的速度。</p><p>　　舍沙感觉自己现在就是在天上人间消费的大哥，不断挑选中名册上中意的小妹。</p><p>　　只待看中意之后，就——嘿嘿嘿。</p><p>　　这种感觉，太怪了。</p><p>　　◤右边！◥</p><p>　　舍沙还在纠结要不要直接找个帅一些的男性凑合之时，从刚才开始就十分安静的【羽斯缇萨】却突然发声提醒起来。</p><p>　　「嗯？怎么了？」</p><p>　　◤右转→左转→右转……◥</p><p>　　虽然是疑问的语气，但是舍沙却也没有停下，而是遵循对方的指示不断靠近一栋巨塔附近。</p><p>　　◤到了，里面有一具肉体，散发的灵魂波长与你十分接近的肉体，选择他说不定会有不错的帮助◥</p><p>　　这时候，【羽斯缇萨】才说明自己刚才指示的理由，解开了舍沙心中的疑惑。</p><p>　　原来如此。</p><p>　　这里就需要再次提及月世界的底层逻辑了。</p><p>　　按照月世界的研究来讲，一个人大致可以分成三部分。</p><p>　　即物质，灵魂，精神。</p><p>　　物质代表肉体，会随着时间渐渐腐蚀，而魔术回路则是灵魂的一部分，灵魂则会被物质影响。</p><p>　　但灵魂本身不会衰败，只是因为肉体的衰败而受到影响。</p><p>　　这种影响一般是不可逆的，而且会随着时间越来越严重。</p><p>　　肆意更换不合适的肉体所产生的结局参考某位不愿提供姓名的虫爷。</p><p>　　而更换肉体的选项最好的有这几类。</p><p>　　其一：一具来自冠位人偶师的空白人偶，因为并不存在灵魂与精神，所以是最好的承载肉体。</p><p>　　其二：一具源于自身的克隆人、或者人造人，因为技术上的原因，适配性很高。</p><p>　　其三：一具与原本肉体灵魂频率接近的身躯。</p><p>　　前两个条件目前的舍沙都不具备实现的条件，所以原本是打算随便找一个适配性较高的肉体，配合着【羽斯提萨】的不完全第三魔法来实现借壳重生，也就是夺舍的技术。</p><p>　　但居然在这里恰好遇到一具相性如此之高的肉体……</p><p>　　想到这里，舍沙也不由得警惕起来，世界上还有这么巧合的事情嘛？</p><p>　　怕不是某位抑制力想要对自己搞事情吧。</p><p>　　但即便知道有可能是坑，但这也不由得舍沙不心动起来。</p><p>　　以他现在只有一颗光球的情况，根本无法克隆自己的肉体，更别提以前的肉体都不知道还在不在以及附近有无合适的无主的魔术工坊。</p><p>　　至于去找某位人偶师，那可别成外卖小哥了。</p><p>​让人笑掉大牙。</p><p>　　所以这天上掉下来的馅饼，不吃也得吃啊。</p><p>　　做了决定，舍沙直接穿过厚重的石墙，来到了巨塔之中的空间。</p><p>　　看上去是一个巨大的用来充当训练场的空间。</p><p>　　大厅里有着一排排绑着铠甲的竖桩、以及当做箭靶的稻草人，沿着墙壁排列着挂有各种各样武器的武器架。</p><p>　　没有过多打量环境布局，舍沙将视线放到训练场中唯一的活人身上。</p><p>　　那是一名处于少年和青年之间的男性。</p><p>　　眉毛又粗又翘的三白眼，金色的头发剪得很短，脸上流露出钢铁般的坚强意志，皮肤似乎是长期处于太阳底下晒的有点黑。</p><p>　　但整体看上去还挺和谐的，起码不丑。</p><p><img src="/./../assets/blog_res/Overlord-0.assets/image-20240106101703634.png" alt="人人都笑克莱姆，但人人都想成为克莱姆"></p><p>　　此刻对方正在不断地挥动着手里的训练大剑，脸上也因为过度运动而导致血液流动过快变得通红起来。</p><p>　　即便如此，对方的目光依旧十分坚毅，无视额头滴落的汗水干扰，一次又一次的挥动巨剑。</p><p>　　（就是他吗？可是我为什么看不出来什么特别之处？）</p><p>　　舍沙绕着少年转了好几圈，仔仔细细的将对方全身上下打量了一遍。</p><p>　　并未发现有任何的异常。</p><p>　　也没发现什么特别的优点。</p><p>　　充其量是一名有着远超年龄的肉体强度的少年。</p><p>　　「羽斯缇萨，准备好了吗？」</p><p>　　◤当然，随时都可以。◥</p><p>　　最后念叨了两句老人常说的『祸兮福所倚，福兮祸所伏』。</p><p>　　然后心一狠，眼一闭。</p><p>　　奥利给，干了！！！</p><p>　　直接冲进少年的身体之中。</p><p>　　◤——！◥</p><p>　　　哼——</p><p>　　一名少年长达14年的人生记忆被打碎涌入舍沙的脑海之中，海量的信息一瞬间涌入脑海，让舍沙即使没有肉体也感受到了莫名的痛楚。</p><p>　　这还是在经过第三魔法处理过的状态下，虽然是不完全的第三魔法，但也由此可知，所谓的灵魂夺舍的弊端有多麻烦。</p><p>　　与此同时，在展开夺舍的那一刻，外界的少年也发觉了不对，但为时已晚。</p><p>　　当啷——！</p><p>　　训练大剑与地面碰撞发出清脆的声响，回荡在这间空旷的训练室之中。</p><p>　　而原本还在训练的少年身体如同被静止一般，一动不动，如同雕塑。</p><p>　　良久，少年僵硬的手臂才重新恢复知觉。</p><p>　　捡起地上掉落的训练大剑放回身后的摆架，肉体没有发生丝毫变化，但是整个人的神态都发生了天翻地覆的改变。</p><p>　　「啊——啊……」</p><p>　　少年尝试着开口说话，发出有些沙哑的嗓音，听上去与外表的年龄有些不符。</p><p>　　但这的确是少年原本的声音。</p><p>　　成功了！</p><p>　　但还是遇到了问题。</p><p>　　肉体更换没问题，但是灵魂依旧收到了原主人灵魂的影响，脑海中出现了许多不属于舍沙的记忆。</p><p>　　那是属于一个名为『克莱姆』的个体的记忆。</p><p>　　奇怪，即使有不完全的第三魔法，为什么更换这具肉体还是会给舍沙的灵魂带来影响？</p><p>​还是说这就是夺舍的弊端，已经在第三魔法的帮助下最大减小后遗症的程度了？</p><p>　　如果自己夺取的是一名存活超过千年的吸血鬼之类的生物的肉体，恐怕这个时候就不知道是谁的人格占据主导权了。</p><p>​后怕。</p><p>　　◤出问题了◥</p><p>​◤为什么会是这样◥</p><p>　　这时候【羽斯提萨】的声音冒了出来，往日冷静的女声之中，竟然流露出一抹讶异与茫然。</p><p>​好嘛，我还以为是正常效果，结果是你在掉链子……</p><p>　　身为当事人的舍沙此刻却是一脸的平静，因为他也已经从这位被自己同化的倒霉蛋的记忆之中了解到了当前的现状。</p><p>​大致猜到了导致第三魔法出现异常的原因。</p><p>　　不就是二穿嘛，多稀奇啊。</p><p>　　艹艹艹。</p><p>　　现在有一个好消息，还有一个坏消息</p><p>　　好消息是，他现在已经不在月世界了，虽然不知道是什么原因，但是看起来并不存在抑制力的陷阱之类的情况，也躲开了时钟塔的追杀。</p><p>　　坏消息是，这个世界他也认识，TM的还不如月世界呢！</p><p>　　就在舍沙还在思索的时候，变化再次产生。</p><p>　　就像是组成一个机械产物的齿轮突然咬合并转动起来一样，当然这个机械产物指的是舍沙。</p><p>　　一股信息传到了他的脑海之中。</p><p>　　◤根源的气息……【真以太】……变数……◥</p><p>　　◤我需要一些时间，尝试连接……◥</p><p>　　◤你……尽量……保持……◥</p><p>　　得，刚上线的金手指又下线了。</p><p>　　舍沙也没啥好说的，摊了摊手，剩下来的交给自己承担呗。</p><p>　　反正烂命一条，大不了再死一次。</p><p>　　我热烈的马啊！</p>]]></content>
      
      
      <categories>
          
          <category> 网文同人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Overlord同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桌面运维故障排除记录</title>
      <link href="/posts/29695.html"/>
      <url>/posts/29695.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、网络故障排除"><a href="#一、网络故障排除" class="headerlink" title="一、网络故障排除"></a>一、网络故障排除</h1><p>检查方式：</p><p>1.确认桌面网络图标是否异常，检查网络设置选项是否异常；</p><p>2.寻线器检测网线连同是否正常，有无出现破损情况</p><p>3.网线正常测试连接工作机，查看网络是否正常</p><p>4.检查交换机是否故障，断电重启测试，可尝试进行更换硬件检测</p><h4 id="案例一：网络故障，显示连接却无网络"><a href="#案例一：网络故障，显示连接却无网络" class="headerlink" title="案例一：网络故障，显示连接却无网络"></a>案例一：网络故障，显示连接却无网络</h4><p>故障表现：网路图标正常，无网络进入</p><p>解决思路：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看网络配置-检查网线功能-交换机故障排除-对比测试</span><br><span class="line">故障原因：静态ip与自动ip的区别，某些电脑没有预设ip，在一些需要固定ip才能连接上网络的区域无法正常使用。</span><br><span class="line">解决思路：</span><br><span class="line">1.更换一个固定ip</span><br><span class="line">2.将网线插在路由器上，经由路由器的自动分配ip功能即可（前提须确保路由器网络正常，且支持该种方法）</span><br></pre></td></tr></table></figure><h4 id="案例二：网络故障——路由器断网"><a href="#案例二：网络故障——路由器断网" class="headerlink" title="案例二：网络故障——路由器断网"></a>案例二：网络故障——路由器断网</h4><p>故障表现：交换机亮红灯，无网络进入，同区域台式机断网</p><p>解决思路：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">交换机检查-网线检查-对比测试网络功能</span><br><span class="line">故障原因：交换机主线没插好</span><br><span class="line">解决思路：</span><br><span class="line">1.多设备网络故障，从该区域网络源头开始排查</span><br></pre></td></tr></table></figure><h4 id="案例三：网络无显示，打叉"><a href="#案例三：网络无显示，打叉" class="headerlink" title="案例三：网络无显示，打叉"></a>案例三：网络无显示，打叉</h4><p>故障表现：显示器网络图标打叉，机箱网络接口不亮</p><p>解决思路：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">检查网络配置-排查网线损坏-检测网络进口</span><br><span class="line">故障原因：</span><br><span class="line">1.网线损坏，百兆（4芯）千兆（8芯），1236-12345678</span><br><span class="line">2.接触不良</span><br><span class="line">3.进线故障</span><br><span class="line">解决思路</span><br><span class="line">1.寻线仪检测网线</span><br><span class="line">2.插拔接口，调整测试</span><br><span class="line">3.巡线进线，利用其他硬件测试</span><br></pre></td></tr></table></figure><h1 id="二、硬件故障排除"><a href="#二、硬件故障排除" class="headerlink" title="二、硬件故障排除"></a>二、硬件故障排除</h1><p>检查方式：</p><p>1.物理层面查看硬件有无损坏区域</p><p>2.检测开启查看运行状态</p><p>3.查看报错代码或提示事项，检查对应硬件</p><p>5.硬件替换测试</p><h4 id="案例一：台式机无法启动-提示未检测风扇"><a href="#案例一：台式机无法启动-提示未检测风扇" class="headerlink" title="案例一：台式机无法启动-提示未检测风扇"></a>案例一：台式机无法启动-提示未检测风扇</h4><p>故障表示：开机后，界面提示未检测到风扇，无法继续开启</p><p>解决思路：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">检查硬件外观-查看连接状态-测试是否松动-更换配件测试</span><br><span class="line">故障原因：疑似接触不良</span><br><span class="line">解决思路：</span><br><span class="line">1.接口可能存在氧化接触不良可能性，重复插拔数次，再次测试（断电状态）</span><br><span class="line">2.设备故障，需要更换</span><br></pre></td></tr></table></figure><h4 id="案例二：台式机无法启动——开机没反应"><a href="#案例二：台式机无法启动——开机没反应" class="headerlink" title="案例二：台式机无法启动——开机没反应"></a>案例二：台式机无法启动——开机没反应</h4><p>故障表示：按开机键后，显示器无反应，鼠标键盘不亮</p><p>解决思路：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">检查电源开关-检查电脑开机键-检查风扇有无启动-检查接口是否故障-检查硬件是否损坏</span><br><span class="line">故障原因：</span><br><span class="line">1.电源未接</span><br><span class="line">2.开机键失灵</span><br><span class="line">3.内存条接触不良导致开机失败</span><br><span class="line">4.显卡接口氧化</span><br><span class="line">5.usb接口故障</span><br><span class="line">解决思路：</span><br><span class="line">1.开启电源或更换排插</span><br><span class="line">2.更换开机键测试</span><br><span class="line">3.擦拭内存金手指/显卡金手指</span><br><span class="line">4.更换usb接口</span><br></pre></td></tr></table></figure><h4 id="案例三：多屏融合机器无法启动——类似反复重启"><a href="#案例三：多屏融合机器无法启动——类似反复重启" class="headerlink" title="案例三：多屏融合机器无法启动——类似反复重启"></a>案例三：多屏融合机器无法启动——类似反复重启</h4><p>故障表示：开机灯不断切换闪烁，屏幕不显示</p><p>解决思路：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">检查内部硬件-检查显示器连接情况-检查开关机</span><br><span class="line">故障原因：不明，排列以下表现</span><br><span class="line">1.无线键盘鼠标不亮，有线偶尔正常</span><br><span class="line">2.开机灯亮，风扇正常，键鼠正常，但显示屏不亮</span><br><span class="line">解决思路：</span><br><span class="line">1.测试有线与无线切换</span><br><span class="line">2.测试更换usb接口，是否接口异常</span><br><span class="line">3.更换硬件查看</span><br><span class="line">4.减少显示器数量测试</span><br><span class="line">5.最小化硬件启动测试，逐渐增加硬件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>购物清单</title>
      <link href="/posts/34434.html"/>
      <url>/posts/34434.html</url>
      
        <content type="html"><![CDATA[<h1 id="个人购物清单大全"><a href="#个人购物清单大全" class="headerlink" title="个人购物清单大全"></a>个人购物清单大全</h1><h2 id="一、已购清单物品"><a href="#一、已购清单物品" class="headerlink" title="一、已购清单物品"></a>一、已购清单物品</h2><h3 id="1-五洁粉"><a href="#1-五洁粉" class="headerlink" title="1.五洁粉"></a>1.五洁粉</h3><p>历史价格：10元1瓶</p><p>优势：清洁卫生、适合租房一类人群</p><p>评价：暂无</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3181.jpg" alt="IMG_3181"></p><h3 id="2-粘毛器"><a href="#2-粘毛器" class="headerlink" title="2.粘毛器"></a>2.粘毛器</h3><p>历史价格：2</p><p>优势：可以，滚动的过程中会吸附一些毛发之类的垃圾，适合衣服上的小毛或者地上的垃圾</p><p>评价：★★★</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3182.jpg" alt="IMG_3182"></p><h3 id="3-硅胶刮把"><a href="#3-硅胶刮把" class="headerlink" title="3.硅胶刮把"></a>3.硅胶刮把</h3><p>历史价格：11</p><p>优势：买过一次，具体效果感觉还可以，但是只适合瓷砖地面一类的情况</p><p>评价：★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3184.jpg" alt="IMG_3184"></p><h3 id="4-卷纸"><a href="#4-卷纸" class="headerlink" title="4.卷纸"></a>4.卷纸</h3><p>历史价格：6卷23</p><p>优势：在工作单位的时候使用过，挺大卷的类型，擦拭的效果也不错</p><p>评价：★★★★</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3185.jpg" alt="IMG_3185"></p><h3 id="5-硫磺皂"><a href="#5-硫磺皂" class="headerlink" title="5.硫磺皂"></a>5.硫磺皂</h3><p>历史价格：10元2块</p><p>优势：好用，虽然一开始味道有些怪，但是后面反而习惯了，洗完之后也不会特别滑溜和干巴</p><p>评价：★★★★★</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3186.jpg" alt="IMG_3186"></p><h3 id="6-洗衣粉-活力28"><a href="#6-洗衣粉-活力28" class="headerlink" title="6.洗衣粉-活力28"></a>6.洗衣粉-活力28</h3><p>历史价格：10斤20块</p><p>优势：没注意过，但是买过一次，洗衣服从未注意，其实产品都差不多，选择这款也只是因为国货</p><p>评价：★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3187.jpg" alt="IMG_3187"></p><h3 id="7-牙膏-白玉"><a href="#7-牙膏-白玉" class="headerlink" title="7.牙膏-白玉"></a>7.牙膏-白玉</h3><p>历史价格：8块2只</p><p>优势：买过一次，没特别感觉，建议和含氟的牙膏轮着使用</p><p>评价：★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3189.jpg" alt="IMG_3189"></p><h3 id="8-牙膏-小苏打"><a href="#8-牙膏-小苏打" class="headerlink" title="8.牙膏-小苏打"></a>8.牙膏-小苏打</h3><p>历史价格：4.5</p><p>优势：口感好，说实话不确定牙膏效果好不好，但是口感真不错</p><p>评价：★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3191.jpg" alt="IMG_3191"></p><h3 id="9-牛奶沐浴露"><a href="#9-牛奶沐浴露" class="headerlink" title="9.牛奶沐浴露"></a>9.牛奶沐浴露</h3><p>历史价格：10</p><p>优势：香，滑滑的，可以和硫磺皂轮着用，便宜</p><p>评价：★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3192.jpg" alt="IMG_3192"></p><h3 id="10-刮胡刀"><a href="#10-刮胡刀" class="headerlink" title="10.刮胡刀"></a>10.刮胡刀</h3><p>历史价格：35</p><p>优势：手动刮得干净，速度也不慢，但是时间久会磨损刀片，需要更换</p><p>评价：★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3193.jpg" alt="IMG_3193"></p><h3 id="11-刮胡刀片"><a href="#11-刮胡刀片" class="headerlink" title="11.刮胡刀片"></a>11.刮胡刀片</h3><p>历史价格：4个15元</p><p>优势：无，消耗品</p><p>评价：★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3194.jpg" alt="IMG_3194"></p><h3 id="12-洗面奶-珀莱雅"><a href="#12-洗面奶-珀莱雅" class="headerlink" title="12.洗面奶-珀莱雅"></a>12.洗面奶-珀莱雅</h3><p>历史价格：一支12-15</p><p>优势：看人家测评的，效果好像很好所以先试试，体验过程中没啥太大感觉</p><p>评价：★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3197.jpg" alt="IMG_3197"></p><h3 id="13-洗发露-蜂花"><a href="#13-洗发露-蜂花" class="headerlink" title="13.洗发露-蜂花"></a>13.洗发露-蜂花</h3><p>历史价格：官方价格19.9</p><p>优势：国货价格便宜吧，反正用起来也没啥太大感觉，用完的确还挺干巴的，建议搭配护发素</p><p>评价：★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3198.jpg" alt="IMG_3198"></p><h3 id="14-水仙风油精"><a href="#14-水仙风油精" class="headerlink" title="14.水仙风油精"></a>14.水仙风油精</h3><p>历史价格：9ml7元</p><p>优势：挺好使的，味道好闻而且不太冲，效果也不错</p><p>评价：★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3203.jpg" alt="IMG_3203"></p><h3 id="15-布鞋"><a href="#15-布鞋" class="headerlink" title="15.布鞋"></a>15.布鞋</h3><p>历史价格：2件30</p><p>优势：便宜，月抛优先，洗鞋绝对是冬天最痛苦的事情</p><p>评价：★★★★★</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3209.jpg" alt="IMG_3209"></p><h3 id="16-雨鞋套"><a href="#16-雨鞋套" class="headerlink" title="16.雨鞋套"></a>16.雨鞋套</h3><p>历史价格：15元</p><p>优势：还挺好使的，下雨天积水多容易进到鞋子里面，用这个可以有效保持干燥</p><p>评价：★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3210.jpg" alt="IMG_3210"></p><h3 id="17-被子固定器"><a href="#17-被子固定器" class="headerlink" title="17.被子固定器"></a>17.被子固定器</h3><p>历史价格：6</p><p>优势：好使，这玩意不怕晚上乱折腾，唯一就是有时候会跑掉，需要搭配针枪工具，属于消耗品</p><p>评价：★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3211.jpg" alt="IMG_3211"></p><h3 id="18-pdu插排"><a href="#18-pdu插排" class="headerlink" title="18.pdu插排"></a>18.pdu插排</h3><p>历史价格：43</p><p>优势：原本是给机房供电使用，拿来家用效果也很好，尤其是不会冲突</p><p>评价：★★★★★</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3212.jpg" alt="IMG_3212"></p><h3 id="19-护发素-蜂花"><a href="#19-护发素-蜂花" class="headerlink" title="19.护发素-蜂花"></a>19.护发素-蜂花</h3><p>历史价格：1000ml（一瓶）10块</p><p>优势：这款是护发素，之前以为是洗发露，怪不得不起泡，而且效果不如其他洗发露，适合洗完之后来一波护发</p><p>评价：★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3213.jpg" alt="IMG_3213"></p><h3 id="20-梅比乌斯死飞包"><a href="#20-梅比乌斯死飞包" class="headerlink" title="20.梅比乌斯死飞包"></a>20.梅比乌斯死飞包</h3><p>历史价格：189-164</p><p>优势：游戏周边且价格还算便宜，有一定信仰优势，出手也不亏</p><p>评价：★★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3229.jpg" alt="IMG_3229"></p><h3 id="21-草酸"><a href="#21-草酸" class="headerlink" title="21.草酸"></a>21.草酸</h3><p>历史价格：5元</p><p>优势：清理厕所瓷砖界面真的挺好使，就是味道有点重，需要挥发一段时间，请勿大口呼吸</p><p>评价：★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3180.jpg" alt="IMG_3180"></p><h3 id="22-小爱触屏音箱"><a href="#22-小爱触屏音箱" class="headerlink" title="22.小爱触屏音箱"></a>22.小爱触屏音箱</h3><p>历史价格：219 （二手75-130）</p><p>优势：买到了，二手79，语音呼唤很好用，就是容易误启动，功能也很强</p><p>评价：★★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3219.jpg" alt="IMG_3219"></p><h3 id="23-漱口水-便携"><a href="#23-漱口水-便携" class="headerlink" title="23.漱口水-便携"></a>23.漱口水-便携</h3><p>历史价格：17</p><p>优势：漱口水，卫生用</p><p>评价：★★★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3226.jpg" alt="IMG_3226"></p><h2 id="二、未购清单物品"><a href="#二、未购清单物品" class="headerlink" title="二、未购清单物品"></a>二、未购清单物品</h2><h3 id="1-手持熨烫机"><a href="#1-手持熨烫机" class="headerlink" title="1.手持熨烫机"></a>1.手持熨烫机</h3><p>历史价格：69</p><p>优势：如果上班的话，整一台试试看，保持衣物的整洁</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3230.jpg" alt="IMG_3230"></p><h3 id="2-搓泥宝"><a href="#2-搓泥宝" class="headerlink" title="2.搓泥宝"></a>2.搓泥宝</h3><p>历史价格：6</p><p>优势：搓泥</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3231.jpg" alt="IMG_3231"></p><h3 id="3-菈妮猫模玩"><a href="#3-菈妮猫模玩" class="headerlink" title="3.菈妮猫模玩"></a>3.菈妮猫模玩</h3><p>历史价格：24</p><p>优势：摆件</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3232.jpg" alt="IMG_3232"></p><h3 id="4-重装小兔积木模型"><a href="#4-重装小兔积木模型" class="headerlink" title="4.重装小兔积木模型"></a>4.重装小兔积木模型</h3><p>历史价格：32</p><p>优势：摆件</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3233.jpg" alt="IMG_3233"></p><h3 id="5-wifi时钟"><a href="#5-wifi时钟" class="headerlink" title="5.wifi时钟"></a>5.wifi时钟</h3><p>历史价格：33</p><p>优势：桌面摆件</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3214.jpg" alt="IMG_3214"></p><h3 id="6-区域块usb扩展"><a href="#6-区域块usb扩展" class="headerlink" title="6.区域块usb扩展"></a>6.区域块usb扩展</h3><p>历史价格：一代32，二代20</p><p>优势：摆件+控制usb设备（最高功率15w’，购买需注意是否合适）</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3215.jpg" alt="IMG_3215"></p><h3 id="7-小米5000Mah充电宝"><a href="#7-小米5000Mah充电宝" class="headerlink" title="7.小米5000Mah充电宝"></a>7.小米5000Mah充电宝</h3><p>历史价格：129</p><p>优势：外出便携</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3217.jpg" alt="IMG_3217"></p><h3 id="8-xiaomiES43电视"><a href="#8-xiaomiES43电视" class="headerlink" title="8.xiaomiES43电视"></a>8.xiaomiES43电视</h3><p>历史价格：1649</p><p>优势：便宜大尺寸当显示器，建议咸鱼二手，一千出头左右，但是千把块没有售后的话很麻烦</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3218.jpg" alt="IMG_3218"></p><h3 id="9-路由器小米"><a href="#9-路由器小米" class="headerlink" title="9.路由器小米"></a>9.路由器小米</h3><p>历史价格：699</p><p>优势：建议二手，路由器基本家里有一个就够用</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3221.jpg" alt="IMG_3221"></p><h3 id="10-沙发填充物"><a href="#10-沙发填充物" class="headerlink" title="10.沙发填充物"></a>10.沙发填充物</h3><p>历史价格：27升11块</p><p>优势：填充物，消耗品</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3222.jpg" alt="IMG_3222"></p><h3 id="11-垃圾箱-脚踏式"><a href="#11-垃圾箱-脚踏式" class="headerlink" title="11.垃圾箱-脚踏式"></a>11.垃圾箱-脚踏式</h3><p>历史价格：15升12块</p><p>优势：脚踏</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3223.jpg" alt="IMG_3223"></p><h3 id="12-桌上升降桌"><a href="#12-桌上升降桌" class="headerlink" title="12.桌上升降桌"></a>12.桌上升降桌</h3><p>历史价格：174</p><p>优势：升降桌的低价替代产品</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3224.jpg" alt="IMG_3224"></p><h3 id="13-搅拌杯"><a href="#13-搅拌杯" class="headerlink" title="13.搅拌杯"></a>13.搅拌杯</h3><p>历史价格：19</p><p>优势：泡粉方便</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3225.jpg" alt="IMG_3225"></p><h3 id="14-懒人沙发皮套"><a href="#14-懒人沙发皮套" class="headerlink" title="14.懒人沙发皮套"></a>14.懒人沙发皮套</h3><p>历史价格：大号41</p><p>优势：</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3227.jpg" alt="IMG_3227"></p><h3 id="15-衣物收纳柱"><a href="#15-衣物收纳柱" class="headerlink" title="15.衣物收纳柱"></a>15.衣物收纳柱</h3><p>历史价格：25</p><p>优势：在外租房应该好用</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3228.jpg" alt="IMG_3228"></p><h3 id="16-被子衣物收纳袋"><a href="#16-被子衣物收纳袋" class="headerlink" title="16.被子衣物收纳袋"></a>16.被子衣物收纳袋</h3><p>历史价格：3个27</p><p>优势：</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3204.jpg" alt="IMG_3204"></p><h3 id="17-错版塑料垃圾袋"><a href="#17-错版塑料垃圾袋" class="headerlink" title="17.错版塑料垃圾袋"></a>17.错版塑料垃圾袋</h3><p>历史价格：3斤超大19元</p><p>优势：便宜</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3205.jpg" alt="IMG_3205"></p><h3 id="18-圆桶收纳"><a href="#18-圆桶收纳" class="headerlink" title="18.圆桶收纳"></a>18.圆桶收纳</h3><p>历史价格：45</p><p>优势：存放衣物或者其他杂物，且提供一定面积作为桌面</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3206.jpg" alt="IMG_3206"></p><h3 id="19-手持熨烫机"><a href="#19-手持熨烫机" class="headerlink" title="19.手持熨烫机"></a>19.手持熨烫机</h3><p>历史价格：23</p><p>优势：如果上班的话，整一台试试看，保持衣物的整洁</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3207.jpg" alt="IMG_3207"></p><h3 id="20-不挑袋垃圾桶"><a href="#20-不挑袋垃圾桶" class="headerlink" title="20.不挑袋垃圾桶"></a>20.不挑袋垃圾桶</h3><p>历史价格：8</p><p>优势：不挑袋</p><p>评价：★☆</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3208.jpg" alt="IMG_3208"></p><h3 id="21-洗面奶-多芬"><a href="#21-洗面奶-多芬" class="headerlink" title="21.洗面奶-多芬"></a>21.洗面奶-多芬</h3><p>历史价格：30一支，补充装17</p><p>优势：</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3199.jpg" alt="IMG_3199"></p><h3 id="22-棉签"><a href="#22-棉签" class="headerlink" title="22.棉签"></a>22.棉签</h3><p>历史价格：500只6元</p><p>优势：拿来掏耳朵，刮耳屎居多，剩下就是沾着碘伏消毒了</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3200.jpg" alt="IMG_3200"></p><h3 id="23-手套"><a href="#23-手套" class="headerlink" title="23.手套"></a>23.手套</h3><p>历史价格：100只18元</p><p>优势：以前工作的时候容易接触电器，有漏电的时候比较安全一些</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3201.jpg" alt="IMG_3201"></p><h3 id="24-拖鞋"><a href="#24-拖鞋" class="headerlink" title="24.拖鞋"></a>24.拖鞋</h3><p>历史价格：12元</p><p>优势：医用拖鞋，听up主推荐的</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3202.jpg" alt="IMG_3202"></p><h3 id="25-汽车洗车喷涂可家用"><a href="#25-汽车洗车喷涂可家用" class="headerlink" title="25.汽车洗车喷涂可家用"></a>25.汽车洗车喷涂可家用</h3><p>历史价格：15</p><p>优势：暂无</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3183.jpg" alt="IMG_3183"></p><h3 id="26-洗手液"><a href="#26-洗手液" class="headerlink" title="26.洗手液"></a>26.洗手液</h3><p>历史价格：10</p><p>优势：疫情阶段的后遗症？以前从没想过要买洗手液的</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3190.jpg" alt="IMG_3190"></p><h3 id="27-一次性擦头巾"><a href="#27-一次性擦头巾" class="headerlink" title="27.一次性擦头巾"></a>27.一次性擦头巾</h3><p>历史价格：100片18元</p><p>优势：打算留给客人使用的</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3195.jpg" alt="IMG_3195"></p><h3 id="28-微瑕毛巾"><a href="#28-微瑕毛巾" class="headerlink" title="28.微瑕毛巾"></a>28.微瑕毛巾</h3><p>历史价格：一斤13元</p><p>优势：微瑕才是真便宜</p><p>评价：</p><p><img src="/./../assets/blog_res/%E8%B4%AD%E7%89%A9%E6%B8%85%E5%8D%95.assets/IMG_3196.jpg" alt="IMG_3196"></p>]]></content>
      
      
      <categories>
          
          <category> 购物 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 购物 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结构化命令case和for、while循环</title>
      <link href="/posts/41144.html"/>
      <url>/posts/41144.html</url>
      
        <content type="html"><![CDATA[<p>第二十一章  结构化命令case和for、while循环</p><p>本节所讲内容：</p><p>21.1  case - 流程控制语句</p><p>21.2  循环语句</p><p>21.3  while循环语句和循环嵌套</p><p>21.4  实战-3个shell脚本实战</p><h1 id="21-1-流程控制语句：case"><a href="#21-1-流程控制语句：case" class="headerlink" title="21.1  流程控制语句：case"></a>21.1  流程控制语句：case</h1><p>控制语句：用来实现对程序流程的选择、循环、转向和返回等进行控制。case是开关语句的一个组成部分；</p><p>它是根据变量的不同进行取值比较，然后针对不同的取值分别执行不同的命令操作</p><p>适用于多分支，是一个多选择语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span>   变量或表达式   <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">​        变量或表达式1）</span><br><span class="line"></span><br><span class="line">​           命令序列1</span><br><span class="line"></span><br><span class="line">​           ；；</span><br><span class="line"></span><br><span class="line">​      变量或表达式2）</span><br><span class="line"></span><br><span class="line">​           命令序列2</span><br><span class="line"></span><br><span class="line">​           ；；</span><br><span class="line"></span><br><span class="line">​           ……</span><br><span class="line"></span><br><span class="line">​           *） </span><br><span class="line"></span><br><span class="line">​           默认命令序列</span><br><span class="line"></span><br><span class="line"> <span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>case语句执行流程控制：</p><p><img src="/../assets/blog_res/%E7%BB%93%E6%9E%84%E5%8C%96%E5%91%BD%E4%BB%A4case%E5%92%8Cfor%E3%80%81while%E5%BE%AA%E7%8E%AF.assets/wps7.jpg" alt="img"> </p><p>执行流程：</p><p>首先使用“变量或表达式”的值与值1进行比较，若取值相同则执行值1后的命令序列，直到遇见双分号“；； ”后跳转至esac，表示分支结束；</p><p>若与值1不相匹配，则继续与值2 进行比较，若取值相同则执行值2 后的命令序列，直到遇见双分号“；； ”后跳转至esac，表示结束分支。</p><p>依次类推，若找不到任何匹配的值，则执行默认模式“ *） ”后的命令序列，直到遇见esac后结束分支</p><p>注意事项：</p><p> “变量或表达式”后面必须为单词in，每一个“变量或表达式”的值必须以右括号结束。取值可以为变量或常数。匹配发现取值符合某一模式后，其间所有命令开始执行直至 ;; </p><p>匹配中的值可以是多个值，通过“|”来分隔</p><p>例1：编写一个操作文件的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat case-1.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#########################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># File Name: case-1.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: xuegod</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#########################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">eof</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">****************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">** 1. backup  **</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">** 2. copy   **</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">** 3. quit   **</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">****************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">eof</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Input a choose: &quot;</span> OP</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$OP</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">​1|backup)</span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="string">&quot;BACKUP......&quot;</span></span><br><span class="line"></span><br><span class="line">​;;</span><br><span class="line"></span><br><span class="line">​2|copy)</span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="string">&quot;COPY.....&quot;</span></span><br><span class="line"></span><br><span class="line">​;;</span><br><span class="line"></span><br><span class="line">​3|quit)</span><br><span class="line"></span><br><span class="line">​<span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">​;;</span><br><span class="line"></span><br><span class="line">​*)</span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> error</span><br><span class="line"></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>例2：编写一个启动apache服务脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# yum install httpd -y</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]# vim  case-2.sh</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line"></span><br><span class="line">​start)</span><br><span class="line"></span><br><span class="line">​systemctl $1 httpd</span><br><span class="line"></span><br><span class="line">​ps aux|grep httpd</span><br><span class="line"></span><br><span class="line">​echo &quot;httpd start&quot;</span><br><span class="line"></span><br><span class="line">​;;</span><br><span class="line"></span><br><span class="line">​stop)</span><br><span class="line"></span><br><span class="line">​systemctl $1 httpd</span><br><span class="line"></span><br><span class="line">​ps aux|grep httpd</span><br><span class="line"></span><br><span class="line">​echo &quot;httpd stop&quot;</span><br><span class="line"></span><br><span class="line">​;;</span><br><span class="line"></span><br><span class="line">​status)</span><br><span class="line"></span><br><span class="line">​systemctl $1 httpd</span><br><span class="line"></span><br><span class="line">​;;</span><br><span class="line"></span><br><span class="line">​restart)</span><br><span class="line"></span><br><span class="line">​systemctl $1 httpd</span><br><span class="line"></span><br><span class="line">​echo &quot;httpd restart&quot;</span><br><span class="line"></span><br><span class="line">​;;</span><br><span class="line"></span><br><span class="line">​*)</span><br><span class="line"></span><br><span class="line">​echo &quot;USAGE: $0 start|stop|restart&quot;</span><br><span class="line"></span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="21-2-循环语句"><a href="#21-2-循环语句" class="headerlink" title="21.2  循环语句"></a>21.2  循环语句</h1><h2 id="21-2-1-for-do-done"><a href="#21-2-1-for-do-done" class="headerlink" title="21.2.1  for-do-done"></a>21.2.1  for-do-done</h2><p>语法格式：</p><p>for var in list </p><p>do</p><p> commands</p><p>done</p><p>或：</p><p>for var in list ; do</p><p> commands</p><p>done</p><p><img src="/../assets/blog_res/%E7%BB%93%E6%9E%84%E5%8C%96%E5%91%BD%E4%BB%A4case%E5%92%8Cfor%E3%80%81while%E5%BE%AA%E7%8E%AF.assets/wps8.jpg" alt="img"> </p><p>取值列表有多种取值方式，比如</p><p>可以直接读取in 后面的值，默认以空格做分隔</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# vim for-1.sh</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">for var in a1 b1 c1 d1</span><br><span class="line"></span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">​echo the text is $var</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>列表中的复杂值，可以使用 引号或转义字符”&#x2F;”来加以约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# cat for-2.sh  </span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">for var in a1 b1 &quot;c1 d1&quot; e2 &quot;hello world&quot;</span><br><span class="line"></span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">​echo the text is $var</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]# cat for-3.sh </span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">for var in a1 b\&#x27;1 &quot;c1 d1&quot; e2 &quot;hello world&quot; I\&#x27;s a22 </span><br><span class="line"></span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">​echo the text is $var</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>从变量中取值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat for-4.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">list=<span class="string">&quot;a1 b1 c1 d1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$list</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> is a <span class="variable">$i</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>4、从命令中取值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat for-5.sh  #以空格做分隔符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">cat</span>  /etc/hosts`</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>5、自定义shell分隔符</p><p>默认情况下，base shell会以空格、制表符、换行符做为分隔符。通过IFS来自定义为分隔符</p><p>指定单个字符做分隔符：</p><p>IFS&#x3D;：  #以：冒号做分隔符</p><p>可以指定多个</p><p>如 IFS&#x3D;’\n’:;”   #这个赋值会将反斜杠、n、冒号、分号和双引号作为字段分隔符。</p><p>注：$’\n’与’\n’时的区别</p><p>IFS&#x3D;’\n’   #将字符\和字符n作为IFS的换行符。</p><p>IFS&#x3D;$’\n’  #正真的使用换行符做为字段分隔符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat for-6.sh #指定以\n回车做为 for语句的分隔符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">IFS=$<span class="string">&#x27;\n&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">cat</span> /etc/hosts`</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"> [root@xuegod63 ~]<span class="comment"># cat for-7.sh  #以：冒号做分隔符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">IFS=:</span><br><span class="line"></span><br><span class="line">list=`<span class="built_in">head</span> -1 /etc/passwd`</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$list</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>6、C语言风格的for</p><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++))</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  commmands</span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>例1：单个变量。 输出1到10之间的数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat for-8.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span> ; i&lt;=<span class="number">10</span>  ; i++  ))</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> num is <span class="variable">$i</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>注：</p><p>互动：  i++ 这一条语句在for循环体中哪个位置执行？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span> ; i&lt;=<span class="number">10</span>  ;  ))  <span class="comment">#i=1 只赋值一次。然后执行 i &lt;= 10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> num is <span class="variable">$i</span></span><br><span class="line"></span><br><span class="line">i=$((<span class="variable">$i</span>+<span class="number">1</span>))  <span class="comment"># i++在这里执行。 当for循环体中所有命令执行完后，再执行i++</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>例2：多个变量。 同时输出1-9的升序和降序</p><p><img src="/../assets/blog_res/%E7%BB%93%E6%9E%84%E5%8C%96%E5%91%BD%E4%BB%A4case%E5%92%8Cfor%E3%80%81while%E5%BE%AA%E7%8E%AF.assets/wps9.jpg" alt="img"> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat for-8.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((a=<span class="number">1</span>,b=<span class="number">9</span> ; a&lt;<span class="number">10</span> ; a++,b--))</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> num is <span class="variable">$a</span> - <span class="variable">$b</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="21-3-while循环语句和循环嵌套"><a href="#21-3-while循环语句和循环嵌套" class="headerlink" title="21.3  while循环语句和循环嵌套"></a>21.3  while循环语句和循环嵌套</h1><h2 id="21-3-1-while-do-done"><a href="#21-3-1-while-do-done" class="headerlink" title="21.3.1  while-do-done"></a>21.3.1  while-do-done</h2><p>重复测试指令的条件，只要条件成立就反复执行对应的命令操作，直到命令不成立或为假；</p><p>语法格式如下：</p><p>while 测试命令</p><p>do</p><p>命令</p><p>done</p><p><img src="/../assets/blog_res/%E7%BB%93%E6%9E%84%E5%8C%96%E5%91%BD%E4%BB%A4case%E5%92%8Cfor%E3%80%81while%E5%BE%AA%E7%8E%AF.assets/wps10.jpg" alt="img"> </p><p>注意：避免陷入死循环  while true </p><p>例1：降序输出10到1的数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat while-1.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">var=10</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$var</span> -gt 0 ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line"></span><br><span class="line">​var=$[<span class="variable">$var</span>-1]</span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>例2：输出如下图两数相乘的效果</p><p><img src="/../assets/blog_res/%E7%BB%93%E6%9E%84%E5%8C%96%E5%91%BD%E4%BB%A4case%E5%92%8Cfor%E3%80%81while%E5%BE%AA%E7%8E%AF.assets/wps11.jpg" alt="img"> </p><p>自增操作  let var++  </p><p>自减操作  let var–  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat while-2.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">num=1</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$num</span> -lt 10 ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">sum</span>=$((  <span class="variable">$num</span> * <span class="variable">$num</span> ))</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span>  <span class="string">&quot;<span class="variable">$num</span> * <span class="variable">$num</span> = <span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line">​    ((num++))</span><br><span class="line"></span><br><span class="line"><span class="comment">#    let num++</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="21-3-2-嵌套循环"><a href="#21-3-2-嵌套循环" class="headerlink" title="21.3.2  嵌套循环"></a>21.3.2  嵌套循环</h2><p>例1：批量添加a.txt文件5个用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim a.txt  #添加5个用户</span></span><br><span class="line"></span><br><span class="line">mk</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">find</span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span></span><br></pre></td></tr></table></figure><p>编写脚本的思路</p><p>1  明确脚本的功能</p><p>2  编写脚本时会使用到那些命令 ？  useradd   passwd  for </p><p>3  把变化的数据使用变量表示</p><p>4  选择适合的流程控制  （选择 、 循环 、分支）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat for-adduser.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> `<span class="built_in">cat</span> /root/a.txt`</span><br><span class="line"></span><br><span class="line"><span class="comment">#for name in $(cat /root/a.txt)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">id</span> <span class="variable">$name</span> &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​        useradd <span class="variable">$name</span></span><br><span class="line"></span><br><span class="line">​        <span class="built_in">echo</span> <span class="string">&quot;123456&quot;</span> |passwd --stdin <span class="variable">$name</span> &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line">​        <span class="built_in">echo</span> <span class="string">&quot;user <span class="variable">$name</span> created&quot;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">​    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​        <span class="built_in">echo</span> <span class="string">&quot;user <span class="variable">$name</span> is exist&quot;</span></span><br><span class="line"></span><br><span class="line">​    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>注：&amp;&gt; 是正确和错误的信息都重定向到&#x2F;dev&#x2F;null里面</p><p>例2 ：打印九九乘法表</p><p><img src="/../assets/blog_res/%E7%BB%93%E6%9E%84%E5%8C%96%E5%91%BD%E4%BB%A4case%E5%92%8Cfor%E3%80%81while%E5%BE%AA%E7%8E%AF.assets/wps12.jpg" alt="img"> </p><p>注：外层循环循环行，内层循环循环列</p><p>规律:  内层循环的变量&lt;&#x3D;外层循环的变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat for-for.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span>  `<span class="built_in">seq</span> 9`</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​     <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$i</span>`</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​       <span class="built_in">echo</span>  -n  <span class="string">&quot;<span class="variable">$i</span>*<span class="variable">$j</span>= `echo <span class="subst">$(($i*$j)</span>)` &quot;</span></span><br><span class="line"></span><br><span class="line">​     <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;  &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="21-4-实战-3个shell脚本实战"><a href="#21-4-实战-3个shell脚本实战" class="headerlink" title="21.4  实战-3个shell脚本实战"></a>21.4  实战-3个shell脚本实战</h1><h2 id="21-4-1-实战-将-opt目录下所有的日志文件全自动打包"><a href="#21-4-1-实战-将-opt目录下所有的日志文件全自动打包" class="headerlink" title="21.4.1  实战-将&#x2F;opt目录下所有的日志文件全自动打包"></a>21.4.1  实战-将&#x2F;opt目录下所有的日志文件全自动打包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim log-back.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">SRC_DIR=/var/log/</span><br><span class="line"></span><br><span class="line">DES_DIR=/opt/backup/`<span class="built_in">date</span> +%Y%m%d`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">[ ! -d  <span class="variable">$DES_DIR</span> ] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">mkdir</span> -p <span class="variable">$DES_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span>  `find  <span class="variable">$SRC_DIR</span>  -name <span class="string">&quot;*.log&quot;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">​    tar  czf  <span class="variable">$i</span>.tgz  <span class="variable">$i</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> /var/log/*.tgz <span class="variable">$DES_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -lh <span class="variable">$DES_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The scripts exec end, Files tar successfully !&quot;</span></span><br></pre></td></tr></table></figure><h2 id="21-4-2-实战-找出192-168-1-1-10网段中，服务器已经关机的IP地址"><a href="#21-4-2-实战-找出192-168-1-1-10网段中，服务器已经关机的IP地址" class="headerlink" title="21.4.2  实战-找出192.168.1.1-10网段中，服务器已经关机的IP地址"></a>21.4.2  实战-找出192.168.1.1-10网段中，服务器已经关机的IP地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim ping.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++ ))</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"> ping  -c  3  192.168.1.<span class="variable">$i</span> &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>  [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">echo</span> 192.168.1.<span class="variable">$i</span> is shutdown</span><br><span class="line"></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="21-4-3-批量创建帐号并生成随机密码"><a href="#21-4-3-批量创建帐号并生成随机密码" class="headerlink" title="21.4.3  批量创建帐号并生成随机密码"></a>21.4.3  批量创建帐号并生成随机密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim adduser.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xuegoda&#123;1..10&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">   useradd <span class="variable">$i</span></span><br><span class="line"></span><br><span class="line">   pass=`<span class="built_in">date</span> +%s|<span class="built_in">md5sum</span>|<span class="built_in">cut</span> -c 1-8`</span><br><span class="line"></span><br><span class="line">   <span class="built_in">sleep</span> 1</span><br><span class="line"></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>:<span class="variable">$pass</span>&quot;</span> &gt;&gt; /tmp/passwd.log</span><br><span class="line"></span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$pass</span> |passwd --stdin <span class="variable">$i</span> &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;create user is successfully!&quot;</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;create user is failed!&quot;</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>总结：</p><p>21.1  case - 流程控制语句</p><p>21.2  循环语句</p><p>21.3  while循环语句和循环嵌套</p><p>21.4  实战-3个shell脚本实战</p>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06_SHELL编程之文本处理工具AWK</title>
      <link href="/posts/12646.html"/>
      <url>/posts/12646.html</url>
      
        <content type="html"><![CDATA[<h3 id="课程目标"><a href="#课程目标" class="headerlink" title="课程目标"></a>课程目标</h3><ul><li>熟悉awk的<strong>命令行模式</strong>基本语法结构</li><li>&#x3D;&#x3D;熟悉awk的相关内部变量&#x3D;&#x3D;</li><li>熟悉awk常用的打印&#x3D;&#x3D;函数print&#x3D;&#x3D;</li><li>能够在awk中匹配正则表达式打印相关的行</li></ul><h3 id="一、awk介绍"><a href="#一、awk介绍" class="headerlink" title="一、awk介绍"></a>一、awk介绍</h3><ul><li><p>awk是一种编程语言，主要用于在linux&#x2F;unix下对&#x3D;&#x3D;文本和数据&#x3D;&#x3D;进行处理，是linux&#x2F;unix下的一个工具。数据可以来自标准输入、一个或多个文件，或其它命令的输出。</p></li><li><p>awk的处理文本和数据的方式：<strong>逐行扫描文件</strong>，默认从第一行到最后一行，寻找匹配的&#x3D;&#x3D;特定模式&#x3D;&#x3D;的行，并在这些行上进行你想要的操作。</p></li><li><p>awk分别代表其作者姓氏的第一个字母。因为它的作者是三个人，分别是Alfred Aho、Brian Kernighan、Peter Weinberger。</p></li><li><p>gawk是awk的GNU版本，它提供了Bell实验室和GNU的一些扩展。</p></li><li><p>下面介绍的awk是以GNU的gawk为例的，在linux系统中已把awk链接到gawk，所以下面全部以awk进行介绍。</p></li></ul><h4 id="1-awk使用方式"><a href="#1-awk使用方式" class="headerlink" title="1. awk使用方式"></a>1. awk使用方式</h4><ul><li><p>命令模式语法</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk 选项 <span class="string">&#x27;commands&#x27;</span> 文件名</span><br></pre></td></tr></table></figure><ul><li><p>常用选项</p><ul><li>-F  定义字段分割符号，默认的分隔符是空格</li><li>-v  定义变量并赋值</li></ul></li><li><p><strong>&#x3D;&#x3D;’&#x3D;&#x3D;<strong>命名部分(commands)</strong>&#x3D;&#x3D;’&#x3D;&#x3D;</strong></p><ul><li>正则表达式，地址定位</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;/root/&#123;awk语句&#125;&#x27;</span>sed中： <span class="string">&#x27;/root/p&#x27;</span></span><br><span class="line"><span class="string">&#x27;NR==1,NR==5&#123;awk语句&#125;&#x27;</span>sed中： <span class="string">&#x27;1,5p&#x27;</span></span><br><span class="line"><span class="string">&#x27;/^root/,/^ftp/&#123;awk语句&#125;&#x27;</span>  sed中：<span class="string">&#x27;/^root/,/^ftp/p&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>{awk语句1**&#x3D;&#x3D;;&#x3D;&#x3D;<strong>awk语句2</strong>&#x3D;&#x3D;;&#x3D;&#x3D;**…}</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#123;print $0;print $1&#125;&#x27;</span>sed中：<span class="string">&#x27;p&#x27;</span></span><br><span class="line"><span class="string">&#x27;NR==5&#123;print $0&#125;&#x27;</span>sed中：<span class="string">&#x27;5p&#x27;</span></span><br><span class="line">注：awk命令语句间用分号间隔</span><br></pre></td></tr></table></figure><ul><li>BEGIN…END….</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;BEGIN&#123;awk语句&#125;;&#123;处理中&#125;;END&#123;awk语句&#125;&#x27;</span></span><br><span class="line"><span class="string">&#x27;BEGIN&#123;awk语句&#125;;&#123;处理中&#125;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#123;处理中&#125;;END&#123;awk语句&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>引用shell变量需用双引号引起</li></ul></li></ul></li><li><p>脚本模式</p><ul><li>脚本执行</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">方法<span class="number">1</span>：</span><br><span class="line">awk 选项 <span class="operator">-f</span> awk的脚本文件  要处理的文本文件</span><br><span class="line">awk <span class="operator">-f</span> awk.sh filename</span><br><span class="line"></span><br><span class="line">sed <span class="operator">-f</span> sed.sh <span class="literal">-i</span> filename</span><br><span class="line"></span><br><span class="line">方法<span class="number">2</span>：</span><br><span class="line">./awk的脚本文件(或者绝对路径)要处理的文本文件</span><br><span class="line">./awk.sh filename</span><br><span class="line"></span><br><span class="line">./sed.sh filename</span><br></pre></td></tr></table></figure><ul><li>脚本编写</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/awk -f 定义魔法字符</span></span><br><span class="line">以下是awk引号里的命令清单，不要用引号保护命令，多个命令用分号间隔</span><br><span class="line"><span class="keyword">BEGIN</span>&#123;FS=<span class="string">&quot;:&quot;</span>&#125;</span><br><span class="line">NR==<span class="number">1</span>,NR==<span class="number">3</span>&#123;print <span class="variable">$1</span><span class="string">&quot;\t&quot;</span><span class="variable">$NF</span>&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-awk内部相关变量"><a href="#2-awk内部相关变量" class="headerlink" title="2. awk内部相关变量"></a>2. awk内部相关变量</h4><table><thead><tr><th>变量</th><th>变量说明</th><th>备注</th></tr></thead><tbody><tr><td>$0</td><td>当前处理行的所有记录</td><td></td></tr><tr><td>$1,$2,$3…$n</td><td>文件中每行以间隔符号分割的不同字段</td><td>awk -F: ‘{print $1,$3}’</td></tr><tr><td>NF</td><td>当前记录的字段数（列数）</td><td>awk -F: ‘{print NF}’</td></tr><tr><td>$NF</td><td>最后一列</td><td>$(NF-1)表示倒数第二列</td></tr><tr><td>FNR&#x2F;NR</td><td>行号</td><td></td></tr><tr><td>FS</td><td>定义间隔符</td><td>‘BEGIN{FS&#x3D;”:”};{print $1,$3}’</td></tr><tr><td>OFS</td><td>定义输出字段分隔符，默认空格</td><td>‘BEGIN{OFS&#x3D;”\t”};print $1,$3}’</td></tr><tr><td>RS</td><td>输入记录分割符，默认换行</td><td>‘BEGIN{RS&#x3D;”\t”};{print $0}’</td></tr><tr><td>ORS</td><td>输出记录分割符，默认换行</td><td>‘BEGIN{ORS&#x3D;”\n\n”};{print $1,$3}’</td></tr><tr><td>FILENAME</td><td>当前输入的文件名</td><td></td></tr></tbody></table><ul><li>示例1</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk -F: &#x27;&#123;print $1,$(NF-1)&#125;&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk -F: &#x27;&#123;print $1,$(NF-1),$NF,NF&#125;&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;/root/&#123;print $0&#125;&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;/root/&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk -F: &#x27;/root/&#123;print $1,$NF&#125;&#x27; 1.txt </span></span><br><span class="line">root /bin/bash</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk -F: &#x27;/root/&#123;print $0&#125;&#x27; 1.txt      </span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;NR==1,NR==5&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;NR==1,NR==5&#123;print $0&#125;&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;NR==1,NR==5;/^root/&#123;print $0&#125;&#x27; 1.txt </span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>:x:<span class="number">4</span>:<span class="number">7</span>:<span class="built_in">lp</span>:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>示例2</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">FS和OFS:</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;BEGIN&#123;FS=&quot;:&quot;&#125;;/^root/,/^lp/&#123;print $1,$NF&#125;&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk -F: &#x27;BEGIN&#123;OFS=&quot;\t\t&quot;&#125;;/^root/,/^lp/&#123;print $1,$NF&#125;&#x27; 1.txt        </span></span><br><span class="line">root            /bin/bash</span><br><span class="line">bin             /sbin/nologin</span><br><span class="line">daemon          /sbin/nologin</span><br><span class="line">adm             /sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>              /sbin/nologin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk -F: &#x27;BEGIN&#123;OFS=&quot;@@@&quot;&#125;;/^root/,/^lp/&#123;print $1,$NF&#125;&#x27; 1.txt     </span></span><br><span class="line">root<span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/bin/bash</span><br><span class="line">bin<span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/sbin/nologin</span><br><span class="line">daemon<span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/sbin/nologin</span><br><span class="line">adm<span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span><span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/sbin/nologin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># </span></span><br><span class="line"></span><br><span class="line">RS和ORS：</span><br><span class="line">修改源文件前<span class="number">2</span>行增加制表符和内容：</span><br><span class="line">vim <span class="number">1</span>.txt</span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash hello   world</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin        test1   test2</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;BEGIN&#123;RS=&quot;\t&quot;&#125;;&#123;print $0&#125;&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;BEGIN&#123;ORS=&quot;\t&quot;&#125;;&#123;print $0&#125;&#x27; 1.txt</span></span><br></pre></td></tr></table></figure><ul><li>格式化输出<code>print</code>和<code>printf</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">print函数类似<span class="built_in">echo</span></span><br><span class="line"><span class="comment"># date |awk &#x27;&#123;print &quot;Month: &quot;$2 &quot;\nYear: &quot;$NF&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;print &quot;username is: &quot; $1 &quot;\t uid is: &quot;$3&#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">printf函数类似<span class="built_in">echo</span> <span class="literal">-n</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;printf &quot;%-15s %-10s %-15s\n&quot;, $1,$2,$3&#125;&#x27;  /etc/passwd</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;printf &quot;|%15s| %10s| %15s|\n&quot;, $1,$2,$3&#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;printf &quot;|%-15s| %-10s| %-15s|\n&quot;, $1,$2,$3&#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;;&#123;printf &quot;%-15s %-15s %-15s\n&quot;,$1,$6,$NF&#125;&#x27;</span> a.txt</span><br><span class="line"></span><br><span class="line">%s 字符类型  strings%<span class="literal">-20s</span></span><br><span class="line">%d 数值类型</span><br><span class="line">占<span class="number">15</span>字符</span><br><span class="line">- 表示左对齐，默认是右对齐</span><br><span class="line">printf默认不会在行尾自动换行，加\n</span><br></pre></td></tr></table></figure><h4 id="3-awk工作原理"><a href="#3-awk工作原理" class="headerlink" title="3. awk工作原理"></a>3. awk工作原理</h4><p><code>awk -F: &#39;&#123;print $1,$3&#125;&#39; /etc/passwd</code></p><ol><li><p>awk使用一行作为输入，并将这一行赋给内部变量$0，每一行也可称为一个记录，以换行符(RS)结束</p></li><li><p>每行被间隔符**&#x3D;&#x3D;:&#x3D;&#x3D;**(默认为空格或制表符)分解成字段(或域)，每个字段存储在已编号的变量中，从$1开始</p><p>问：awk如何知道用空格来分隔字段的呢？</p><p>答：因为有一个内部变量&#x3D;&#x3D;FS&#x3D;&#x3D;来确定字段分隔符。初始时，FS赋为空格</p></li><li><p>awk使用print函数打印字段，打印出来的字段会以&#x3D;&#x3D;空格分隔&#x3D;&#x3D;，因为$1,$3之间有一个逗号。逗号比较特殊，它映射为另一个内部变量，称为&#x3D;&#x3D;输出字段分隔符&#x3D;&#x3D;OFS，OFS默认为空格</p></li><li><p>awk处理完一行后，将从文件中获取另一行，并将其存储在$0中，覆盖原来的内容，然后将新的字符串分隔成字段并进行处理。该过程将持续到所有行处理完毕</p></li></ol><h4 id="4-awk变量定义"><a href="#4-awk变量定义" class="headerlink" title="4. awk变量定义"></a>4. awk变量定义</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># awk -v NUM=3 -F: &#x27;&#123; print $NUM &#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="comment"># awk -v NUM=3 -F: &#x27;&#123; print NUM &#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="comment"># awk -v num=1 &#x27;BEGIN&#123;print num&#125;&#x27; </span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="comment"># awk -v num=1 &#x27;BEGIN&#123;print $num&#125;&#x27; </span></span><br><span class="line">注意：</span><br><span class="line">awk中调用定义的变量不需要加<span class="variable">$</span></span><br></pre></td></tr></table></figure><h4 id="5-awk中BEGIN…END使用"><a href="#5-awk中BEGIN…END使用" class="headerlink" title="5. awk中BEGIN…END使用"></a>5. awk中BEGIN…END使用</h4><p>​①&#x3D;&#x3D;BEGIN&#x3D;&#x3D;：表示在程序开始前执行</p><p>​②&#x3D;&#x3D;END&#x3D;&#x3D; ：表示所有文件处理完后执行</p><p>​③用法：<code>&#39;BEGIN&#123;开始处理之前&#125;;&#123;处理中&#125;;END&#123;处理结束后&#125;&#39;</code></p><ul><li><strong>示例：</strong></li></ul><ol><li>打印最后一列和倒数第二列（登录shell和家目录）</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;BEGIN&#123; print &quot;Login_shell\t\tLogin_home\n*******************&quot;&#125;;&#123;print $NF&quot;\t\t&quot;$(NF-1)&#125;;END&#123;print &quot;************************&quot;&#125;&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123; FS=&quot;:&quot;;print &quot;Login_shell\tLogin_home\n*******************&quot;&#125;;&#123;print $NF&quot;\t&quot;$(NF-1)&#125;;END&#123;print &quot;************************&quot;&#125;&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line">Login_shellLogin_home</span><br><span class="line">************************</span><br><span class="line">/bin/bash/root</span><br><span class="line">/sbin/nologin/bin</span><br><span class="line">/sbin/nologin/sbin</span><br><span class="line">/sbin/nologin/var/adm</span><br><span class="line">/sbin/nologin/var/spool/lpd</span><br><span class="line">/bin/bash/home/redhat</span><br><span class="line">/bin/bash/home/user01</span><br><span class="line">/sbin/nologin/var/named</span><br><span class="line">/bin/bash/home/u01</span><br><span class="line">/bin/bash/home/YUNWEI</span><br><span class="line">************************************</span><br></pre></td></tr></table></figure><ol start="2"><li>打印&#x2F;etc&#x2F;passwd里的用户名、家目录及登录shell</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">u_name      h_dir       shell</span><br><span class="line">***************************</span><br><span class="line"></span><br><span class="line">***************************</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;BEGIN&#123;OFS=&quot;\t\t&quot;;print&quot;u_name\t\th_dir\t\tshell\n***************************&quot;&#125;&#123;printf &quot;%-20s %-20s %-20s\n&quot;,$1,$(NF-1),$NF&#125;;END&#123;print &quot;****************************&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;BEGIN&#123;print &quot;u_name\t\th_dir\t\tshell&quot; RS &quot;*****************&quot;&#125;  &#123;printf &quot;%-15s %-20s %-20s\n&quot;,$1,$(NF-1),$NF&#125;END&#123;print &quot;***************************&quot;&#125;&#x27;  /etc/passwd</span></span><br><span class="line"></span><br><span class="line">格式化输出：</span><br><span class="line"><span class="built_in">echo</span>print</span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span>printf</span><br><span class="line"></span><br><span class="line"> &#123;printf <span class="string">&quot;%-15s %-20s %-20s\n&quot;</span>,<span class="variable">$1</span>,<span class="variable">$</span>(NF<span class="literal">-1</span>),<span class="variable">$NF</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="6-awk和正则的综合运用"><a href="#6-awk和正则的综合运用" class="headerlink" title="6. awk和正则的综合运用"></a>6. awk和正则的综合运用</h4><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>等于</td></tr><tr><td>!&#x3D;</td><td>不等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td></tr><tr><td>~</td><td>匹配</td></tr><tr><td>!~</td><td>不匹配</td></tr><tr><td>!</td><td>逻辑非</td></tr><tr><td>&amp;&amp;</td><td>逻辑与</td></tr><tr><td>||</td><td>逻辑或</td></tr></tbody></table><ul><li>示例</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">从第一行开始匹配到以<span class="built_in">lp</span>开头行</span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;NR==1,/^lp/&#123;print $0 &#125;&#x27;</span> passwd  </span><br><span class="line">从第一行到第<span class="number">5</span>行          </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;NR==1,NR==5&#123;print $0 &#125;&#x27;</span> passwd</span><br><span class="line">从以<span class="built_in">lp</span>开头的行匹配到第<span class="number">10</span>行       </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;/^lp/,NR==10&#123;print $0 &#125;&#x27;</span> passwd </span><br><span class="line">从以root开头的行匹配到以<span class="built_in">lp</span>开头的行       </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;/^root/,/^lp/&#123;print $0&#125;&#x27;</span> passwd</span><br><span class="line">打印以root开头或者以<span class="built_in">lp</span>开头的行            </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;/^root/ || /^lp/&#123;print $0&#125;&#x27;</span> passwd</span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;/^root/;/^lp/&#123;print $0&#125;&#x27;</span> passwd</span><br><span class="line">显示<span class="number">5</span><span class="literal">-10</span>行   </span><br><span class="line">awk <span class="operator">-F</span><span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;NR&gt;=5 &amp;&amp; NR&lt;=10 &#123;print $0&#125;&#x27;</span> /etc/passwd     </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;NR&lt;10 &amp;&amp; NR&gt;5 &#123;print $0&#125;&#x27;</span> passwd </span><br><span class="line"></span><br><span class="line">打印<span class="number">30</span><span class="literal">-39</span>行以bash结尾的内容：</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># awk &#x27;NR&gt;=30 &amp;&amp; NR&lt;=39 &amp;&amp; $0 ~ /bash$/&#123;print $0&#125;&#x27; passwd </span></span><br><span class="line">stu1:x:<span class="number">500</span>:<span class="number">500</span>::/home/stu1:/bin/bash</span><br><span class="line">yunwei:x:<span class="number">501</span>:<span class="number">501</span>::/home/yunwei:/bin/bash</span><br><span class="line">user01:x:<span class="number">502</span>:<span class="number">502</span>::/home/user01:/bin/bash</span><br><span class="line">user02:x:<span class="number">503</span>:<span class="number">503</span>::/home/user02:/bin/bash</span><br><span class="line">user03:x:<span class="number">504</span>:<span class="number">504</span>::/home/user03:/bin/bash</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;NR&gt;=3 &amp;&amp; NR&lt;=8 &amp;&amp; /bash$/&#x27; 1.txt  </span></span><br><span class="line">stu7:x:<span class="number">1007</span>:<span class="number">1007</span>::/rhome/stu7:/bin/bash</span><br><span class="line">stu8:x:<span class="number">1008</span>:<span class="number">1008</span>::/rhome/stu8:/bin/bash</span><br><span class="line">stu9:x:<span class="number">1009</span>:<span class="number">1009</span>::/rhome/stu9:/bin/bash</span><br><span class="line"></span><br><span class="line">理解;号和||的含义：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;NR&gt;=3 &amp;&amp; NR&lt;=8 || /bash$/&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># awk &#x27;NR&gt;=3 &amp;&amp; NR&lt;=8;/bash$/&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打印IP地址</span><br><span class="line"><span class="comment"># ifconfig eth0|awk &#x27;NR&gt;1 &#123;print $2&#125;&#x27;|awk -F&#x27;:&#x27; &#x27;NR&lt;2 &#123;print $2&#125;&#x27;    </span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep Bcast|awk -F&#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27;|awk &#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep Bcast|awk &#x27;&#123;print $2&#125;&#x27;|awk -F: &#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line"><span class="comment"># ifconfig eth0|awk NR==2|awk -F &#x27;[ :]+&#x27; &#x27;&#123;print $4RS$6RS$8&#125;&#x27;</span></span><br><span class="line"><span class="comment"># ifconfig eth0|awk &quot;-F[ :]+&quot; &#x27;/inet addr:/&#123;print $4&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="7-课堂练习"><a href="#7-课堂练习" class="headerlink" title="7. 课堂练习"></a>7. 课堂练习</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、显示可以登录操作系统的用户所有信息     从第<span class="number">7</span>列匹配以bash结尾，输出整行（当前行所有的列）</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="string">&#x27;/bash$/&#123;print $0&#125;&#x27;</span>    /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="string">&#x27;/bash$/&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="string">&#x27;/bash$/&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="operator">-F</span>: <span class="string">&#x27;$7 ~ /bash/&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="operator">-F</span>: <span class="string">&#x27;$NF ~ /bash/&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="operator">-F</span>: <span class="string">&#x27;$0 ~ /bash/&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="operator">-F</span>: <span class="string">&#x27;$0 ~ /\/bin\/bash/&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、显示可以登录系统的用户名 </span><br><span class="line"><span class="comment"># awk -F: &#x27;$0 ~ /\/bin\/bash/&#123;print $1&#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="number">3</span>、打印出系统中普通用户的UID和用户名如下显示：</span><br><span class="line"><span class="comment"># awk -F: &#x27;BEGIN&#123;print &quot;UID\tUSERNAME&quot;&#125; &#123;if($3&gt;=500 &amp;&amp; $3 !=65534 ) &#123;print $3&quot;\t&quot;$1&#125; &#125;&#x27; /etc/passwdUIDUSERNAME</span></span><br><span class="line"><span class="number">500</span>stu1</span><br><span class="line"><span class="number">501</span>yunwei</span><br><span class="line"><span class="number">502</span>user01</span><br><span class="line"><span class="number">503</span>user02</span><br><span class="line"><span class="number">504</span>user03</span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;if($3 &gt;= 500 &amp;&amp; $3 != 65534) print $1,$3&#125;&#x27; a.txt </span></span><br><span class="line">redhat <span class="number">508</span></span><br><span class="line">user01 <span class="number">509</span></span><br><span class="line">u01 <span class="number">510</span></span><br><span class="line">YUNWEI <span class="number">511</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、以数字开头</span><br><span class="line">awk <span class="string">&#x27;/^[0-9]/&#123;print $0&#125;&#x27;</span>   <span class="number">1</span>.txt</span><br><span class="line"><span class="number">5</span>、以任意大小写字母开头</span><br><span class="line">awk <span class="string">&#x27;/^[a-Z]/&#123;print $0&#125;&#x27;</span> <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><h4 id="8-awk的脚本编程"><a href="#8-awk的脚本编程" class="headerlink" title="8. awk的脚本编程"></a>8. awk的脚本编程</h4><h5 id="8-1-流程控制语句"><a href="#8-1-流程控制语句" class="headerlink" title="8.1 流程控制语句"></a>8.1 流程控制语句</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>语句：</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="type">xxx</span> ];then</span><br><span class="line">xxx</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line">awk 选项 <span class="string">&#x27;正则，地址定位&#123;awk语句&#125;&#x27;</span>  文件名</span><br><span class="line">&#123; <span class="keyword">if</span>(表达式)｛语句<span class="number">1</span>;语句<span class="number">2</span>;...｝&#125;</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;if($3&gt;=500 &amp;&amp; $3&lt;=60000) &#123;print $1,$3&#125; &#125;&#x27;</span> passwd</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># awk -F: &#x27;&#123;if($3==0) &#123;print $1&quot;是管理员&quot;&#125; &#125;&#x27; passwd </span></span><br><span class="line">root是管理员</span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;if($(id -u)==0) &#123;print &quot;admin&quot;&#125; &#125;&#x27;</span></span><br><span class="line">admin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if...else语句:</span><br><span class="line"><span class="keyword">if</span> [ <span class="type">xxx</span> ];then</span><br><span class="line">xxxxx</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">xxx</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line">&#123;<span class="keyword">if</span>(表达式)｛语句;语句;...｝<span class="keyword">else</span>｛语句;语句;...&#125;&#125;</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123; if($3&gt;=500 &amp;&amp; $3 != 65534) &#123;print $1&quot;是普通用户&quot;&#125; else &#123;print $1,&quot;不是普通用户&quot;&#125;&#125;&#x27;</span> passwd </span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;if( $(id -u)&gt;=500 &amp;&amp; $(id -u) !=65534 ) &#123;print &quot;是普通用户&quot;&#125; else &#123;print &quot;不是普通用户&quot;&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [<span class="type">xxxx</span>];then</span><br><span class="line">xxxx</span><br><span class="line">elif [<span class="type">xxx</span>];then</span><br><span class="line">xxx</span><br><span class="line">....</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">...</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if...else if...else语句：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line">&#123; <span class="keyword">if</span>(表达式<span class="number">1</span>)｛语句;语句；...｝<span class="keyword">else</span> <span class="keyword">if</span>(表达式<span class="number">2</span>)｛语句;语句；...｝<span class="keyword">else</span> <span class="keyword">if</span>(表达式<span class="number">3</span>)｛语句;语句；...｝<span class="keyword">else</span>｛语句;语句；...｝&#125;</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123; if($3==0) &#123;print $1,&quot;:是管理员&quot;&#125; else if($3&gt;=1 &amp;&amp; $3&lt;=499 || $3==65534 ) &#123;print $1,&quot;:是系统用户&quot;&#125; else &#123;print $1,&quot;:是普通用户&quot;&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123; if($3==0) &#123;i++&#125; else if($3&gt;=1 &amp;&amp; $3&lt;=499 || $3==65534 ) &#123;j++&#125; else &#123;k++&#125;&#125;;END&#123;print &quot;管理员个数为:&quot;i &quot;\n系统用户个数为:&quot;j&quot;\n普通用户的个数为:&quot;k &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;if($3==0) &#123;print $1,&quot;is admin&quot;&#125; else if($3&gt;=1 &amp;&amp; $3&lt;=499 || $3==65534) &#123;print $1,&quot;is sys users&quot;&#125; else &#123;print $1,&quot;is general user&quot;&#125; &#125;&#x27; a.txt </span></span><br><span class="line">root is admin</span><br><span class="line">bin is sys users</span><br><span class="line">daemon is sys users</span><br><span class="line">adm is sys users</span><br><span class="line"><span class="built_in">lp</span> is sys users</span><br><span class="line">redhat is general user</span><br><span class="line">user01 is general user</span><br><span class="line">named is sys users</span><br><span class="line">u01 is general user</span><br><span class="line">YUNWEI is general user</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;  if($3==0) &#123;print $1&quot;:管理员&quot;&#125; else if($3&gt;=1 &amp;&amp; $3&lt;500 || $3==65534 ) &#123;print $1&quot;:是系统用户&quot;&#125; else &#123;print $1&quot;:是普通用户&quot;&#125;&#125;&#x27;</span>   /etc/passwd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;if($3==0) &#123;i++&#125; else if($3&gt;=1 &amp;&amp; $3&lt;500 || $3==65534)&#123;j++&#125; else &#123;k++&#125;&#125;;END&#123;print &quot;管理员个数为:&quot; i RS &quot;系统用户个数为:&quot;j RS &quot;普通用户的个数为:&quot;k &#125;&#x27;</span> /etc/passwd</span><br><span class="line">管理员个数为:<span class="number">1</span></span><br><span class="line">系统用户个数为:<span class="number">28</span></span><br><span class="line">普通用户的个数为:<span class="number">27</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123; if($3==0) &#123;print $1&quot;:是管理员&quot;&#125; else if($3&gt;=500 &amp;&amp; $3!=65534) &#123;print $1&quot;:是普通用户&quot;&#125; else &#123;print $1&quot;:是系统用户&quot;&#125;&#125;&#x27; passwd </span></span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;if($3==0)&#123;i++&#125; else if($3&gt;=500)&#123;k++&#125; else&#123;j++&#125;&#125; END&#123;print i; print k; print j&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;if($3==0)&#123;i++&#125; else if($3&gt;999)&#123;k++&#125; else&#123;j++&#125;&#125; END&#123;print &quot;管理员个数: &quot;i; print &quot;普通用个数: &quot;k; print &quot;系统用户: &quot;j&#125;&#x27;</span> /etc/passwd </span><br><span class="line"></span><br><span class="line">如果是普通用户打印默认shell，如果是系统用户打印用户名</span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;if($3&gt;=1 &amp;&amp; $3&lt;500 || $3 == 65534) &#123;print $1&#125; else if($3&gt;=500 &amp;&amp; $3&lt;=60000 ) &#123;print $NF&#125; &#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="8-2-循环语句"><a href="#8-2-循环语句" class="headerlink" title="8.2 循环语句"></a>8.2 循环语句</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>:</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; i=1; while(i&lt;=10) &#123;print i;i++&#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">文件里的每一行循环打印<span class="number">10</span>次：</span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123; i=1; while(i&lt;=10) &#123;print $0;i++&#125; &#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>:</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; for(i=1;i&lt;=5;i++) &#123;print i&#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">文件里的每一行循环打印<span class="number">10</span>次：</span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123; for(i=1;i&lt;=10;i++) &#123;print $0&#125;&#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打印<span class="number">1</span>~<span class="number">5</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; for(i=1;i&lt;=5;i++) &#123;print i&#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; i=1;while(i&lt;=5) &#123;print i;i++&#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">打印<span class="number">1</span>~<span class="number">10</span>中的奇数</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;i=1;while(i&lt;=10) &#123;print i;i+=2&#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">awk 选项 <span class="string">&#x27;&#123;awk语句1 语句2 &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">计算<span class="number">1</span><span class="literal">-5</span>的和：</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; for(i=1;i&lt;=5;i++) &#123;(sum+=i)&#125;;&#123;print sum&#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;for(i=1;i&lt;=5;i++) (sum+=i);&#123;print sum&#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;for(i=1;i&lt;=5;i++) (sum+=i);print sum&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; i=1;while(i&lt;=5) &#123;(sum+=i) i++&#125;;print sum &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打印<span class="number">1</span><span class="literal">-10</span>的奇数和</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i+=<span class="number">2</span>));<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;done|awk <span class="literal">-v</span> sum=<span class="number">0</span> <span class="string">&#x27;&#123;sum+=$0&#125;;END&#123;print sum&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">嵌套循环：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">5</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> ((x=<span class="number">1</span>;x&lt;=<span class="variable">$y</span>;x++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; for(y=1;y&lt;=5;y++) &#123; for(x=1;x&lt;=y;x++) &#123;printf x&#125;;print&#125; &#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123; y=1;while(y&lt;=5) &#123; for(x=1;x&lt;=y;x++) &#123;printf x&#125;;y++;print&#125;&#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line"></span><br><span class="line">尝试用三种方法打印<span class="number">99</span>口诀表：</span><br><span class="line"><span class="comment">#awk &#x27;BEGIN&#123;for(y=1;y&lt;=9;y++) &#123; for(x=1;x&lt;=y;x++) &#123;printf x&quot;*&quot;y&quot;=&quot;x*y&quot;\t&quot;&#125;;print&#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#awk &#x27;BEGIN&#123;for(y=1;y&lt;=9;y++) &#123; for(x=1;x&lt;=y;x++) printf x&quot;*&quot;y&quot;=&quot;x*y&quot;\t&quot;;print&#125; &#125;&#x27;</span></span><br><span class="line"><span class="comment">#awk &#x27;BEGIN&#123;i=1;while(i&lt;=9)&#123;for(j=1;j&lt;=i;j++) &#123;printf j&quot;*&quot;i&quot;=&quot;j*i&quot;\t&quot;&#125;;print;i++ &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#awk &#x27;BEGIN&#123;for(i=1;i&lt;=9;i++)&#123;j=1;while(j&lt;=i) &#123;printf j&quot;*&quot;i&quot;=&quot;i*j&quot;\t&quot;;j++&#125;;print&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">循环的控制：</span><br><span class="line"><span class="keyword">break</span>条件满足的时候中断循环</span><br><span class="line"><span class="keyword">continue</span>条件满足的时候跳过循环</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;for(i=1;i&lt;=5;i++) &#123;if(i==3) break;print i&#125; &#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;for(i=1;i&lt;=5;i++)&#123;if(i==3) continue;print i&#125;&#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;i=1;while(i&lt;=5)&#123;if(i==3) break;print i;i++&#125;&#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;i=0;while(i&lt;5)&#123;i++;if(i==3) continue;print i&#125;&#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="8-3-算数运算"><a href="#8-3-算数运算" class="headerlink" title="8.3 算数运算"></a>8.3 算数运算</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+ - * / %(模) ^(幂<span class="number">2</span>^<span class="number">3</span>)</span><br><span class="line">可以在模式中执行计算，awk都将按浮点数方式执行算术运算</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;print 1+1&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;print 1**1&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;print 2**3&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;print 2/3&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>###二. awk统计案例</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 统计/etc/passwd 中各种类型shell的数量</span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123; shells[$NF]++ &#125;;END&#123;for (i in shells) &#123;print i,shells[i]&#125; &#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line">books[<span class="type">linux</span>]++</span><br><span class="line">books[<span class="type">linux</span>]=<span class="number">1</span></span><br><span class="line">shells[/<span class="type">bin</span>/<span class="type">bash</span>]++</span><br><span class="line">shells[/<span class="type">sbin</span>/<span class="type">nologin</span>]++</span><br><span class="line"></span><br><span class="line">/bin/bash <span class="number">5</span></span><br><span class="line">/sbin/nologin <span class="number">6</span></span><br><span class="line"></span><br><span class="line">shells[/<span class="type">bin</span>/<span class="type">bash</span>]++a</span><br><span class="line">shells[/<span class="type">sbin</span>/<span class="type">nologin</span>]++b</span><br><span class="line">shells[/<span class="type">sbin</span>/<span class="type">shutdown</span>]++c</span><br><span class="line"></span><br><span class="line">books[<span class="type">linux</span>]++</span><br><span class="line">books[<span class="type">php</span>]++</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. 网站访问状态统计　&lt;当前时实状态 netstat&gt;</span><br><span class="line"><span class="comment"># ss -antp|grep 80|awk &#x27;&#123;states[$1]++&#125;;END&#123;for(i in states)&#123;print i,states[i]&#125;&#125;&#x27;</span></span><br><span class="line">TIME_WAIT <span class="number">578</span></span><br><span class="line">ESTABLISHED <span class="number">1</span></span><br><span class="line">LISTEN <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ss -an |grep :80 |awk &#x27;&#123;states[$2]++&#125;;END&#123;for(i in states)&#123;print i,states[i]&#125;&#125;&#x27;</span></span><br><span class="line">LISTEN <span class="number">1</span></span><br><span class="line">ESTAB <span class="number">5</span></span><br><span class="line">TIME<span class="literal">-WAIT</span> <span class="number">25</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ss -an |grep :80 |awk &#x27;&#123;states[$2]++&#125;;END&#123;for(i in states)&#123;print i,states[i]&#125;&#125;&#x27; |sort -k2 -rn</span></span><br><span class="line">TIME<span class="literal">-WAIT</span> <span class="number">18</span></span><br><span class="line">ESTAB <span class="number">8</span></span><br><span class="line">LISTEN <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. 统计当前访问的每个IP的数量 &lt;当前时实状态 netstat,ss&gt;</span><br><span class="line"><span class="comment"># netstat -ant |grep :80 |awk -F: &#x27;&#123;ip_count[$8]++&#125;;END&#123;for(i in ip_count)&#123;print i,ip_count[i]&#125; &#125;&#x27; |sort</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ss -an |grep :80 |awk -F&quot;:&quot; &#x27;!/LISTEN/&#123;ip_count[$(NF-1)]++&#125; END&#123;for(i in ip_count)&#123;print i,ip_count[i]&#125;&#125;&#x27; |sort -k2 -rn |head</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>. 统计Apache/Nginx日志中某一天的PV量 　&lt;统计日志&gt;</span><br><span class="line"><span class="comment"># grep &#x27;27/Jul/2017&#x27; mysqladmin.cc-access_log |wc -l</span></span><br><span class="line"><span class="number">14519</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>. 统计Apache/Nginx日志中某一天不同IP的访问量　&lt;统计日志&gt;</span><br><span class="line"><span class="comment"># grep &#x27;27/Jul/2017&#x27; mysqladmin.cc-access_log |awk &#x27;&#123;ips[$1]++&#125;;END&#123;for(i in ips)&#123;print i,ips[i]&#125; &#125;&#x27; |sort -k2 -rn |head</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep &#x27;07/Aug/2017&#x27; access.log |awk &#x27;&#123;ips[$1]++&#125; END&#123;for(i in ips)&#123;print i,ips[i]&#125; &#125;&#x27; |awk &#x27;$2&gt;100&#x27; |sort -k2 -rn</span></span><br><span class="line"></span><br><span class="line">名词引入：</span><br><span class="line"></span><br><span class="line">名词：VV = Visit View（访问次数）</span><br><span class="line">说明：从访客来到您网站到最终关闭网站的所有页面离开，计为<span class="number">1</span>次访问。若访客连续<span class="number">30</span>分钟没有新开和刷新页面，或者访客关闭了浏览器，则被计算为本次访问结束。</span><br><span class="line"></span><br><span class="line">独立访客（UV）</span><br><span class="line">名词：UV= Unique Visitor（独立访客数）</span><br><span class="line">说明：<span class="number">1</span>天内相同的访客多次访问您的网站只计算<span class="number">1</span>个UV。</span><br><span class="line"></span><br><span class="line">网站浏览量（PV）</span><br><span class="line">名词：PV=PageView (网站浏览量)</span><br><span class="line">说明：指页面的浏览次数，用以衡量网站用户访问的网页数量。多次打开同一页面则浏览量累计。用户每打开一个页面便记录<span class="number">1</span>次PV。</span><br><span class="line"></span><br><span class="line">独立IP（IP）</span><br><span class="line">名词：IP=独立IP数</span><br><span class="line">说明：指<span class="number">1</span>天内使用不同IP地址的用户访问网站的数量。同一IP无论访问了几个页面，独立IP数均为<span class="number">1</span></span><br></pre></td></tr></table></figure><p>###三、课后作业</p><p><strong>作业1：</strong><br>1、写一个自动检测磁盘使用率的脚本，当磁盘使用空间达到90%以上时，需要发送邮件给相关人员<br>2、写一个脚本监控系统内存和交换分区使用情况</p><p><strong>作业2：</strong><br>输入一个IP地址，使用脚本判断其合法性：<br>必须符合ip地址规范，第1、4位不能以0开头，不能大于255不能小于0</p><h3 id="四、企业实战案例"><a href="#四、企业实战案例" class="headerlink" title="四、企业实战案例"></a>四、企业实战案例</h3><h4 id="1-任务-背景"><a href="#1-任务-背景" class="headerlink" title="1. 任务&#x2F;背景"></a>1. 任务&#x2F;背景</h4><p>web服务器集群中总共有9台机器，上面部署的是Apache服务。由于业务不断增长，每天每台机器上都会产生大量的访问日志，现需要将每台web服务器上的apache访问日志<strong>保留最近3天</strong>的，3天以前的日志<strong>转储</strong>到一台专门的日志服务器上，已做后续分析。如何实现每台服务器上只保留3天以内的日志？</p><h4 id="2-具体要求"><a href="#2-具体要求" class="headerlink" title="2. 具体要求"></a>2. 具体要求</h4><ol><li>每台web服务器的日志对应日志服务器相应的目录里。如：web1——&gt;web1.log（在日志服务器上）</li><li>每台web服务器上保留最近3天的访问日志，3天以前的日志每天凌晨5:03分转储到日志服务器</li><li>如果脚本转储失败，运维人员需要通过跳板机的菜单选择手动清理日志</li></ol><h4 id="3-涉及知识点"><a href="#3-涉及知识点" class="headerlink" title="3. 涉及知识点"></a>3. 涉及知识点</h4><ol><li>shell的基本语法结构</li><li>文件同步rsync</li><li>文件查找命令find</li><li>计划任务crontab</li><li>apache日志切割</li><li>其他</li></ol>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05_SHELL编程之文本处理工具</title>
      <link href="/posts/22433.html"/>
      <url>/posts/22433.html</url>
      
        <content type="html"><![CDATA[<h3 id="课程目标"><a href="#课程目标" class="headerlink" title="课程目标"></a>课程目标</h3><ul><li>掌握sed的基本语法结构</li><li>熟悉sed常用的命令，如打印p，删除d，插入i等</li></ul><p>Windows：​</p><p> <img src="/../assets/blog_res/05_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7.assets/edit.png" alt="edit"></p><p>Linux：</p><p>​&#x3D;&#x3D;vim  vi&#x3D;&#x3D; gedit  nano  emacs</p><h3 id="一、sed介绍"><a href="#一、sed介绍" class="headerlink" title="一、sed介绍"></a>一、sed介绍</h3><h4 id="1-sed的工作流程"><a href="#1-sed的工作流程" class="headerlink" title="1. sed的工作流程"></a>1. sed的工作流程</h4><p>![sed](E:&#x2F;1——linux系统运维&#x2F;linux运维 it黑马&#x2F;00-Linux运维课件资料【非视频】&#x2F;02.阶段二运维系统服务&#x2F;shell脚本&#x2F;pictures&#x2F;sed.png)</p><ul><li>首先sed把当前正在处理的行保存在一个临时缓存区中（也称为模式空间），然后处理临时缓冲区中的行，完成后把该行发送到屏幕上。</li><li>sed把每一行都存在临时缓冲区中，对这个<strong>副本</strong>进行编辑，所以不会修改原文件。</li><li>Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</li></ul><h4 id="2-sed使用方法"><a href="#2-sed使用方法" class="headerlink" title="2. sed使用方法"></a>2. sed使用方法</h4><p>sed常见的语法格式有两种，一种叫&#x3D;&#x3D;命令行&#x3D;&#x3D;模式，另一种叫&#x3D;&#x3D;脚本&#x3D;&#x3D;模式。</p><h5 id="2-1-命令行格式"><a href="#2-1-命令行格式" class="headerlink" title="2.1 命令行格式"></a>2.1 命令行格式</h5><ul><li>格式</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sed [<span class="type">option</span>]  <span class="string">&#x27;sed的命令|地址定位&#x27;</span> filename</span><br><span class="line"></span><br><span class="line">说明：引用shell script中的变量应使用双引号，而非通常使用的单引号</span><br><span class="line"></span><br><span class="line">option：</span><br><span class="line"><span class="literal">-e</span>进行多项编辑，即对输入行应用多条sed命令时使用</span><br><span class="line"><span class="literal">-n</span>取消默认的输出</span><br><span class="line"><span class="operator">-f</span>指定sed脚本的文件名</span><br><span class="line"><span class="literal">-r</span>  使用扩展正则表达式</span><br><span class="line"><span class="literal">-i</span> inplace，原地编辑（修改源文件）</span><br></pre></td></tr></table></figure><ul><li>常用命令和选项</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line">参考文件：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># cat 2.txt </span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>:x:<span class="number">4</span>:<span class="number">7</span>:<span class="built_in">lp</span>:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="number">298374837483</span></span><br><span class="line"><span class="number">172.16</span>.<span class="number">0.254</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"></span><br><span class="line">p打印行</span><br><span class="line">d删除行</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;p&#x27;  a.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1p&#x27;  a.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;2p&#x27;  a.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,5p&#x27;  a.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;5,10p&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;$p&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;5p&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;5p&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;1d&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1d&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;1d&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;1,5d&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;$d&#x27; a.txt </span></span><br><span class="line"></span><br><span class="line">i\在当前行之前插入文本。多行时除最后一行外，每行末尾需用<span class="string">&quot;\&quot;</span>续行  vim——&gt;O</span><br><span class="line">a\在当前行后添加一行或多行。多行时除最后一行外，每行末尾需用“\”续行 vim——&gt; o</span><br><span class="line">c\用此符号后的新文本替换当前行中的文本。多行时除最后一行外，每行末尾需用<span class="string">&quot;\&quot;</span>续行  整行替换</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;$a99999&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;a99999&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat -n a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;5chello world&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;chello world&#x27; a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat -n a.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;1,5chello world&#x27; a.txt </span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;i\</span></span><br><span class="line">aaaaa\</span><br><span class="line">bbbbb\</span><br><span class="line"><span class="number">88888</span><span class="string">&#x27; 1.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># sed &#x27;</span><span class="variable">$a</span>\</span><br><span class="line">yyyyy\</span><br><span class="line"><span class="number">8888</span><span class="string">&#x27; 1.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@server ~]# sed &#x27;</span>/^user01/c888888<span class="string">&#x27; 1.txt</span></span><br><span class="line"><span class="string">[root@server ~]# sed &#x27;</span><span class="number">18</span>chello world<span class="string">&#x27; 1.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命令2：</span></span><br><span class="line"><span class="string">r从文件中读取输入行</span></span><br><span class="line"><span class="string">w将所选的行写入文件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@server ~]# sed &#x27;</span><span class="number">3</span><span class="built_in">r</span> /etc/hosts<span class="string">&#x27; 2.txt </span></span><br><span class="line"><span class="string">[root@server ~]# sed &#x27;</span><span class="variable">$r</span> /etc/hosts<span class="string">&#x27; 2.txt</span></span><br><span class="line"><span class="string">[root@server ~]# sed &#x27;</span>/root/w a.txt<span class="string">&#x27; 2.txt </span></span><br><span class="line"><span class="string">[root@server ~]# sed &#x27;</span>/[<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">4</span>&#125;/w a.txt<span class="string">&#x27; 2.txt</span></span><br><span class="line"><span class="string">[root@server ~]# sed  -r &#x27;</span>/([<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">1</span>,<span class="number">3</span>&#125;\.)&#123;<span class="number">3</span>&#125;[<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">1</span>,<span class="number">3</span>&#125;/w b.txt<span class="string">&#x27; 2.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">!对所选行以外的所有行应用命令，放到行数之后</span></span><br><span class="line"><span class="string"> [root@server ~]# sed -n &#x27;</span><span class="number">1</span>!p<span class="string">&#x27; 1.txt </span></span><br><span class="line"><span class="string"> [root@server ~]# sed -n &#x27;</span><span class="number">4</span>p<span class="string">&#x27; 1.txt </span></span><br><span class="line"><span class="string"> [root@server ~]# sed -n &#x27;</span><span class="number">4</span>!p<span class="string">&#x27; 1.txt </span></span><br><span class="line"><span class="string"> [root@server ~]# cat -n 1.txt </span></span><br><span class="line"><span class="string"> [root@server ~]# sed -n &#x27;</span><span class="number">1</span>,<span class="number">17</span>p<span class="string">&#x27; 1.txt </span></span><br><span class="line"><span class="string"> [root@server ~]# sed -n &#x27;</span><span class="number">1</span>,<span class="number">17</span>!p<span class="string">&#x27; 1.txt </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">s用一个字符串替换另一个</span></span><br><span class="line"><span class="string">g在行内进行全局替换</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@server ~]# sed -n &#x27;</span>s/root/ROOT/p<span class="string">&#x27; 1.txt </span></span><br><span class="line"><span class="string">[root@server ~]# sed -n &#x27;</span>s/root/ROOT/<span class="built_in">gp</span><span class="string">&#x27; 1.txt </span></span><br><span class="line"><span class="string">[root@server ~]# sed -n &#x27;</span>s/^<span class="comment">#//gp&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s@/sbin/nologin@itcast@gp&#x27; a.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/\/sbin\/nologin/itcast/gp&#x27; a.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;10s#/sbin/nologin#itcast#p&#x27; a.txt </span></span><br><span class="line">uucp:x:<span class="number">10</span>:<span class="number">14</span>:uucp:/var/spool/uucp:itcast</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s@/sbin/nologin@itcastheima@p&#x27; 2.txt </span></span><br><span class="line">注意：搜索替换中的分隔符可以自己指定</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,5s/^/#/p&#x27; a.txt 注释掉文件的1-5行内容</span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#adm:x:3:4:adm:/var/adm:/sbin/nologin</span></span><br><span class="line"><span class="comment">#lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;   保存查找串以便在替换串中引用   \(\)</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/root/p&#x27; a.txt </span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/root/#&amp;/p&#x27; a.txt </span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -n &#x27;s/^root/#&amp;/p&#x27; passwd   注释掉以root开头的行</span></span><br><span class="line"><span class="comment"># sed -n -r &#x27;s/^root|^stu/#&amp;/p&#x27; /etc/passwd注释掉以root开头或者以stu开头的行</span></span><br><span class="line"><span class="comment"># sed -n &#x27;1,5s/^[a-z].*/#&amp;/p&#x27; passwd  注释掉1~5行中以任意小写字母开头的行</span></span><br><span class="line"><span class="comment"># sed -n &#x27;1,5s/^/#/p&#x27; /etc/passwd  注释1~5行</span></span><br><span class="line">或者</span><br><span class="line">sed <span class="literal">-n</span> <span class="string">&#x27;1,5s/^/#/p&#x27;</span> passwd 以空开头的加上<span class="comment">#</span></span><br><span class="line">sed <span class="literal">-n</span> <span class="string">&#x27;1,5s/^#//p&#x27;</span> passwd 以<span class="comment">#开头的替换成空</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/^root/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/^root/#&amp;/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/\(^root\)/#\1/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -nr &#x27;/^root|^stu/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -nr &#x27;s/^root|^stu/#&amp;/p&#x27; 1.txt </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">= 打印行号</span><br><span class="line"><span class="comment"># sed -n &#x27;/bash$/=&#x27; passwd    打印以bash结尾的行的行号</span></span><br><span class="line"><span class="comment"># sed -ne &#x27;/root/=&#x27; -ne &#x27;/root/p&#x27; passwd </span></span><br><span class="line"><span class="comment"># sed -n &#x27;/nologin$/=;/nologin$/p&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># sed -ne &#x27;/nologin$/=&#x27; -ne &#x27;/nologin$/p&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">综合运用：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,5s/^/#&amp;/p&#x27; 1.txt </span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#adm:x:3:4:adm:/var/adm:/sbin/nologin</span></span><br><span class="line"><span class="comment">#lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,5s/\(^\)/#\1/p&#x27; 1.txt </span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#adm:x:3:4:adm:/var/adm:/sbin/nologin</span></span><br><span class="line"><span class="comment">#lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">选项：<span class="literal">-e</span> <span class="literal">-r</span> <span class="literal">-i</span></span><br><span class="line"><span class="literal">-e</span> 多项编辑</span><br><span class="line"><span class="literal">-r</span>扩展正则</span><br><span class="line"><span class="literal">-i</span> 修改原文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -ne &#x27;/root/p&#x27; 1.txt -ne &#x27;/root/=&#x27;</span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -ne &#x27;/root/=&#x27; -ne &#x27;/root/p&#x27; 1.txt </span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">在<span class="number">1</span>.txt文件中的第<span class="number">5</span>行的前面插入“hello world”;在<span class="number">1</span>.txt文件的第<span class="number">8</span>行下面插入“哈哈哈哈”</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -e &#x27;5ihello world&#x27; -e &#x27;8a哈哈哈哈哈&#x27; 1.txt  -e &#x27;5=;8=&#x27;</span></span><br><span class="line"></span><br><span class="line">过滤vsftpd.conf文件中以<span class="comment">#开头和空行：</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># grep -Ev &#x27;^#|^$&#x27; /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -e &#x27;/^#/d&#x27; -e &#x27;/^$/d&#x27; /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;/^#/d;/^$/d&#x27; /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -r &#x27;/^#|^$/d&#x27; /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"></span><br><span class="line">过滤smb.conf文件中生效的行：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># sed -e &#x27;/^#/d&#x27; -e &#x27;/^;/d&#x27; -e &#x27;/^$/d&#x27; -e &#x27;/^\t$/d&#x27; -e &#x27;/^\t#/d&#x27; smb.conf</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># sed -r &#x27;/^(#|$|;|\t#|\t$)/d&#x27; smb.conf </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># sed -e &#x27;/^#/d&#x27; -e &#x27;/^;/d&#x27; -e &#x27;/^$/d&#x27; -e &#x27;/^\t$/d&#x27; -e &#x27;/^\t#/&#x27; smb.conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># grep &#x27;^[^a-z]&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/^[^a-z]/p&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line">过滤出文件中的IP地址：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># grep -E &#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.254</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/p&#x27; 1.txt </span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.254</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># grep -o -E &#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27; 2.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/p&#x27; 2.txt</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">过滤出ifcfg<span class="literal">-eth0</span>文件中的IP、子网掩码、广播地址</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># grep -Eo &#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27; ifcfg-eth0 </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/p&#x27; ifcfg-eth0|cut -d&#x27;=&#x27; -f2</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/p&#x27; ifcfg-eth0|sed -n &#x27;s/[A-Z=]//gp&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed -n &#x27;s/[:a-Z]//gp&#x27;|sed -n &#x27;s/ /\n/gp&#x27;|sed &#x27;/^$/d&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># ifconfig | sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)[0-9]&#123;1,3&#125;/p&#x27; | head -1|sed -r &#x27;s/([a-z:]|[A-Z/t])//g&#x27;|sed &#x27;s/ /\n/g&#x27;|sed  &#x27;/^$/d&#x27;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed -n &#x27;s/.*addr:\(.*\) Bcast:\(.*\) Mask:\(.*\)/\1\n\2\n\3/p&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> </span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span> </span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line"><span class="literal">-i</span> 选项  直接修改原文件</span><br><span class="line"><span class="comment"># sed -i &#x27;s/root/ROOT/;s/stu/STU/&#x27; 11.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -i &#x27;17&#123;s/YUNWEI/yunwei/;s#/bin/bash#/sbin/nologin#&#125;&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -i &#x27;1,5s/^/#&amp;/&#x27; a.txt</span></span><br><span class="line">注意：</span><br><span class="line"><span class="literal">-ni</span>  不要一起使用</span><br><span class="line">p命令 不要再使用<span class="literal">-i</span>时使用</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>总结</li></ul><p>sed  选项  &#x3D;&#x3D;’&#x3D;&#x3D;sed&#x3D;&#x3D;命令&#x3D;&#x3D;或者&#x3D;&#x3D;正则表达式&#x3D;&#x3D;或者&#x3D;&#x3D;地址定位&#x3D;&#x3D;&#x3D;&#x3D;’&#x3D;&#x3D;  文件名</p><p>定址用于决定对哪些行进行编辑。地址的形式可以是数字、正则表达式、或二者的结合。如果没有指定地址，sed将处理输入文件的所有行。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">x   指定x行号 sed <span class="literal">-n</span> <span class="string">&#x27;5p&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line">x,y 指定x到y行号 sed <span class="literal">-n</span> <span class="string">&#x27;1,5p&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line">/key/ 查询包含关键字的行sed <span class="literal">-n</span> <span class="string">&#x27;/root/p&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line">/key1/,/key2/    匹配包含两个关键字之间的行sed <span class="literal">-n</span> <span class="string">&#x27;/^adm/,/^mysql/p&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line">/key/,x  从匹配关键字的行开始到文件第x行之间的行（包含关键字所在行）sed <span class="literal">-n</span> <span class="string">&#x27;/^lp/,7p&#x27;</span> </span><br><span class="line">x,/key/  从第x行开始到与关键字的匹配行之间的行</span><br><span class="line">x,y! 不包含x到y行</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/bash$/!p&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line">注意：sed使用的正则表达式是括在斜杠线<span class="string">&quot;/&quot;</span>之间的模式。</span><br><span class="line"></span><br><span class="line">//以下命令是找出以<span class="built_in">lp</span>开头或者以mail开头的行</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>其他命令讲解</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">y命令</span><br><span class="line">该命令与UNIX/Linux中的tr命令类似，字符按照一对一的方式从左到右进行转换。</span><br><span class="line">正则表达式元字符对y命令不起作用。与s命令的分隔符一样，斜线可以被替换成其它的字符。</span><br><span class="line">s/xxx/xxx/</span><br><span class="line">y/xxx/xxx/</span><br><span class="line"><span class="comment"># sed &#x27;39,41y/stu/STU/&#x27; /etc/passwd</span></span><br><span class="line"><span class="comment"># sed &#x27;39,41y/stu:x/STU@%/&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line">q退出</span><br><span class="line"><span class="comment"># sed &#x27;5q&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># sed &#x27;/mail/q&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># sed -r &#x27;/^yunwei|^mail/q&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/bash$/p;10q&#x27; 1.txt</span></span><br><span class="line">ROOT:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-2-脚本格式"><a href="#2-2-脚本格式" class="headerlink" title="2.2 脚本格式"></a>2.2 脚本格式</h5><ul><li>用法</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sed -f scripts.sed  file//使用脚本处理文件</span></span><br><span class="line">建议使用   ./sed.sh   file</span><br><span class="line"></span><br><span class="line">脚本的第一行写上</span><br><span class="line"><span class="comment">#!/bin/sed -f</span></span><br><span class="line"><span class="number">1</span>,<span class="number">5</span>d</span><br><span class="line">s/root/hello/g</span><br><span class="line"><span class="number">3</span>i777</span><br><span class="line"><span class="number">5</span>i888</span><br><span class="line">a</span><br><span class="line">p</span><br></pre></td></tr></table></figure><ul><li>注意事项</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">１）　脚本文件是一个sed的命令行清单。<span class="string">&#x27;commands&#x27;</span></span><br><span class="line">２）　在每行的末尾不能有任何空格、制表符（tab）或其它文本。</span><br><span class="line">３）　如果在一行中有多个命令，应该用分号分隔。</span><br><span class="line">４）　不需要且不可用引号保护命令</span><br><span class="line">５）　<span class="comment">#号开头的行为注释</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat passwd</span></span><br><span class="line">stu3:x:<span class="number">509</span>:<span class="number">512</span>::/home/user3:/bin/bash</span><br><span class="line">stu4:x:<span class="number">510</span>:<span class="number">513</span>::/home/user4:/bin/bash</span><br><span class="line">stu5:x:<span class="number">511</span>:<span class="number">514</span>::/home/user5:/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat sed.sh </span></span><br><span class="line"><span class="comment">#!/bin/sed -f</span></span><br><span class="line"><span class="number">2</span>a\</span><br><span class="line">******************</span><br><span class="line"><span class="number">2</span>,<span class="variable">$s</span>/stu/user/</span><br><span class="line"><span class="variable">$a</span>\</span><br><span class="line">we inster new line</span><br><span class="line">s/^[<span class="type">a</span>-<span class="type">z</span>].*/<span class="comment">#&amp;/</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat 1.sed </span></span><br><span class="line"><span class="comment">#!/bin/sed -f</span></span><br><span class="line"><span class="number">3</span>a**********************</span><br><span class="line"><span class="variable">$chelloworld</span></span><br><span class="line"><span class="number">1</span>,<span class="number">3</span>s/^/<span class="comment">#&amp;/</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -f 1.sed -i 11.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat 11.txt </span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line">**********************</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line">helloworld</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-sed和正则的综合运用"><a href="#3-sed和正则的综合运用" class="headerlink" title="3. sed和正则的综合运用"></a>3. sed和正则的综合运用</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、正则表达式必须以”/“前后规范间隔</span><br><span class="line">例如：sed <span class="string">&#x27;/root/d&#x27;</span> file</span><br><span class="line">例如：sed <span class="string">&#x27;/^root/d&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、如果匹配的是扩展正则表达式，需要使用<span class="literal">-r</span>选来扩展sed</span><br><span class="line">grep <span class="literal">-E</span></span><br><span class="line">sed <span class="literal">-r</span></span><br><span class="line">+ ? () &#123;n,m&#125; | \d</span><br><span class="line"></span><br><span class="line">注意：         </span><br><span class="line">在正则表达式中如果出现特殊字符(^<span class="variable">$</span>.*/[]),需要以前导 <span class="string">&quot;\&quot;</span> 号做转义</span><br><span class="line">eg：sed <span class="string">&#x27;/\$foo/p&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、逗号分隔符</span><br><span class="line">例如：sed <span class="string">&#x27;5,7d&#x27;</span> file  删除<span class="number">5</span>到<span class="number">7</span>行</span><br><span class="line">例如：sed <span class="string">&#x27;/root/,/ftp/d&#x27;</span> file</span><br><span class="line">删除第一个匹配字符串<span class="string">&quot;root&quot;</span>到第一个匹配字符串<span class="string">&quot;ftp&quot;</span>的所有行本行不找 循环执行</span><br><span class="line">       </span><br><span class="line"><span class="number">4</span>、组合方式</span><br><span class="line">例如：sed <span class="string">&#x27;1,/foo/d&#x27;</span> file删除第一行到第一个匹配字符串<span class="string">&quot;foo&quot;</span>的所有行</span><br><span class="line">例如：sed <span class="string">&#x27;/foo/,+4d&#x27;</span> file删除从匹配字符串”foo“开始到其后四行为止的行</span><br><span class="line">例如：sed <span class="string">&#x27;/foo/,~3d&#x27;</span> file删除从匹配字符串”foo“开始删除到<span class="number">3</span>的倍数行（文件中）</span><br><span class="line">例如：sed <span class="string">&#x27;1~5d&#x27;</span> file从第一行开始删每五行删除一行</span><br><span class="line">例如：sed <span class="literal">-nr</span> <span class="string">&#x27;/foo|bar/p&#x27;</span> file显示配置字符串<span class="string">&quot;foo&quot;</span>或<span class="string">&quot;bar&quot;</span>的行</span><br><span class="line">例如：sed <span class="literal">-n</span> <span class="string">&#x27;/foo/,/bar/p&#x27;</span> file显示匹配从foo到bar的行</span><br><span class="line">例如：sed <span class="string">&#x27;1~2d&#x27;</span>  file删除奇数行</span><br><span class="line">例如：sed <span class="string">&#x27;0-2d&#x27;</span>   file删除偶数行 sed <span class="string">&#x27;1~2!d&#x27;</span>  file</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、特殊情况</span><br><span class="line">例如：sed <span class="string">&#x27;$d&#x27;</span> file删除最后一行</span><br><span class="line">例如：sed <span class="string">&#x27;1d&#x27;</span> file删除第一行</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、其他：</span><br><span class="line">sed <span class="string">&#x27;s/.//&#x27;</span> a.txt删除每一行中的第一个字符</span><br><span class="line">sed <span class="string">&#x27;s/.//2&#x27;</span> a.txt删除每一行中的第二个字符</span><br><span class="line">sed <span class="string">&#x27;s/.//N&#x27;</span> a.txt从文件中第N行开始，删除每行中第N个字符（N&gt;<span class="number">2</span>）</span><br><span class="line">sed <span class="string">&#x27;s/.$//&#x27;</span> a.txt删除每一行中的最后一个字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat 2.txt </span></span><br><span class="line"><span class="number">1</span> a</span><br><span class="line"><span class="number">2</span> b</span><br><span class="line"><span class="number">3</span> c</span><br><span class="line"><span class="number">4</span> d</span><br><span class="line"><span class="number">5</span> e</span><br><span class="line"><span class="number">6</span> f</span><br><span class="line"><span class="number">7</span> u</span><br><span class="line"><span class="number">8</span> k</span><br><span class="line"><span class="number">9</span> o</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;/c/,~2d&#x27; 2.txt </span></span><br><span class="line"><span class="number">1</span> a</span><br><span class="line"><span class="number">2</span> b</span><br><span class="line"><span class="number">5</span> e</span><br><span class="line"><span class="number">6</span> f</span><br><span class="line"><span class="number">7</span> u</span><br><span class="line"><span class="number">8</span> k</span><br><span class="line"><span class="number">9</span> o</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-课堂练习"><a href="#4-课堂练习" class="headerlink" title="4. 课堂练习"></a>4. 课堂练习</h4><ol><li>将任意数字替换成空或者制表符</li><li>去掉文件1-5行中的数字、冒号、斜杠</li><li>匹配root关键字替换成hello itcast，并保存到test.txt文件中</li><li>删除vsftpd.conf、smb.conf、main.cf配置文件里所有注释的行及空行（不要直接修改原文件）</li><li>使用sed命令截取自己的ip地址</li><li>使用sed命令一次性截取ip地址、广播地址、子网掩码</li><li>注释掉文件的2-3行和匹配到以root开头或者以ftp开头的行</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、将文件中任意数字替换成空或者制表符</span><br><span class="line"><span class="number">2</span>、去掉文件<span class="number">1</span><span class="literal">-5</span>行中的数字、冒号、斜杠</span><br><span class="line"><span class="number">3</span>、匹配root关键字的行替换成hello itcast，并保存到test.txt文件中</span><br><span class="line"><span class="number">4</span>、删除vsftpd.conf、smb.conf、main.cf配置文件里所有注释的行及空行（不要直接修改原文件）</span><br><span class="line"><span class="number">5</span>、使用sed命令截取自己的ip地址</span><br><span class="line"><span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed -n &#x27;s/.*addr://pg&#x27;|sed -n &#x27;s/Bcast.*//gp&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span>  </span><br><span class="line"><span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed &#x27;s/.*addr://g&#x27;|sed &#x27;s/ Bcast:.*//g&#x27;</span></span><br><span class="line"><span class="number">6</span>、使用sed命令一次性截取ip地址、广播地址、子网掩码</span><br><span class="line"><span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed -n &#x27;s#.*addr:\(.*\) Bcast:\(.*\) Mask:\(.*\)#\1\n\2\n\3#p&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> </span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span> </span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、注释掉文件的<span class="number">2</span><span class="literal">-3</span>行和匹配到以root开头或者以ftp开头的行</span><br><span class="line"><span class="comment"># sed -nr &#x27;2,3s/^/#&amp;/p;s/^ROOT|^ftp/#&amp;/p&#x27; 1.txt</span></span><br><span class="line"><span class="comment">#ROOT:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#3daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -ne &#x27;1,2s/^/#&amp;/gp&#x27; a.txt -nre &#x27;s/^lp|^mail/#&amp;/gp&#x27;</span></span><br><span class="line"><span class="comment"># sed -nr &#x27;1,2s/^/#&amp;/gp;s/^lp|^mail/#&amp;/gp&#x27; a.txt</span></span><br></pre></td></tr></table></figure><h3 id="二、课后作业"><a href="#二、课后作业" class="headerlink" title="二、课后作业"></a>二、课后作业</h3><p>1、写一个初始化系统的脚本<br>1）自动修改主机名（如：ip是192.168.0.88，则主机名改为server88.itcast.cc）</p><p>a. 更改文件非交互式 sed</p><p>&#x2F;etc&#x2F;sysconfig&#x2F;network</p><p>b.将本主机的IP截取出来赋值给一个变量ip;再然后将ip变量里以.分割的最后一位赋值给另一个变量ip1</p><p>2）自动配置可用的yum源</p><p>3）自动关闭防火墙和selinux</p><p>2、写一个搭建ftp服务的脚本，要求如下：<br>1）不支持本地用户登录local_enable&#x3D;NO<br>2） 匿名用户可以上传 新建 删除 anon_upload_enable&#x3D;YES  anon_mkdir_write_enable&#x3D;YES<br>3） 匿名用户限速500KBps  anon_max_rate&#x3D;500000</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">仅供参考：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">ipaddr=`ifconfig eth0|sed <span class="literal">-n</span> <span class="string">&#x27;2p&#x27;</span>|sed <span class="literal">-e</span> <span class="string">&#x27;s/.*inet addr:\(.*\) Bcast.*/\1/g&#x27;</span>`</span><br><span class="line">iptail=`echo <span class="variable">$ipaddr</span>|cut <span class="literal">-d</span><span class="string">&#x27;.&#x27;</span> <span class="literal">-f4</span>`</span><br><span class="line">ipremote=<span class="number">192.168</span>.<span class="number">1.10</span></span><br><span class="line"><span class="comment">#修改主机名</span></span><br><span class="line">hostname server<span class="variable">$iptail</span>.itcast.com</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;/HOSTNAME/cHOSTNAME=server<span class="variable">$iptail</span>.itcast.com&quot;</span> /etc/sysconfig/network</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ipaddr</span> server<span class="variable">$iptail</span>.itcast.cc&quot;</span> &gt;&gt;/etc/hosts</span><br><span class="line"><span class="comment">#关闭防火墙和selinux</span></span><br><span class="line">service iptables stop</span><br><span class="line">setenforce <span class="number">0</span> &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;/^SELINUX=/cSELINUX=disabled&#x27;</span> /etc/selinux/config</span><br><span class="line"><span class="comment">#配置yum源(一般是内网源)</span></span><br><span class="line"><span class="comment">#test network</span></span><br><span class="line">ping <span class="literal">-c</span> <span class="number">1</span> <span class="variable">$ipremote</span> &gt; /dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;你的网络不通，请先检查你的网络&quot;</span></span><br><span class="line"><span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;网络ok.&quot;</span></span><br><span class="line">fi</span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/server.repo &lt;&lt; <span class="keyword">end</span></span><br><span class="line">[<span class="type">server</span>]</span><br><span class="line">name=server</span><br><span class="line">baseurl=ftp://<span class="variable">$ipremote</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装软件</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入需要安装的软件，多个用空格隔开：&quot;</span> soft</span><br><span class="line">yum <span class="literal">-y</span> install <span class="variable">$soft</span> &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment">#备份配置文件</span></span><br><span class="line">conf=/etc/vsftpd/vsftpd.conf</span><br><span class="line">\cp <span class="variable">$conf</span> <span class="variable">$conf</span>.default</span><br><span class="line"><span class="comment">#根据需求修改配置文件</span></span><br><span class="line">sed <span class="literal">-ir</span> <span class="string">&#x27;/^#|^$/d&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;/local_enable/c\local_enable=NO&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;$a anon_upload_enable=YES&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;$a anon_mkdir_write_enable=YES&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;$a anon_other_write_enable=YES&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;$a anon_max_rate=512000&#x27;</span> <span class="variable">$conf</span></span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">service vsftpd restart &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span><span class="string">&quot;vsftpd服务启动成功&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#测试验证</span></span><br><span class="line">chmod <span class="number">777</span> /var/ftp/pub</span><br><span class="line"><span class="built_in">cp</span> /etc/hosts /var/ftp/pub</span><br><span class="line"><span class="comment">#测试下载</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">lftp <span class="variable">$ipaddr</span> &lt;&lt;<span class="keyword">end</span></span><br><span class="line"><span class="built_in">cd</span> pub</span><br><span class="line">get hosts</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">f</span> /<span class="type">tmp</span>/<span class="type">hosts</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;匿名用户下载成功&quot;</span></span><br><span class="line"><span class="built_in">rm</span> <span class="operator">-f</span> /tmp/hosts</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;匿名用户下载失败&quot;</span></span><br><span class="line">fi</span><br><span class="line"><span class="comment">#测试上传、创建目录、删除目录等</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">lftp <span class="variable">$ipaddr</span> &lt;&lt; <span class="keyword">end</span></span><br><span class="line"><span class="built_in">cd</span> pub</span><br><span class="line">mkdir test1</span><br><span class="line">mkdir test2</span><br><span class="line">put /etc/<span class="built_in">group</span></span><br><span class="line"><span class="built_in">rmdir</span> test2</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">d</span> /<span class="type">var</span>/<span class="type">ftp</span>/<span class="type">pub</span>/<span class="type">test1</span> ];then</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;创建目录成功&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ ! -<span class="type">d</span> /<span class="type">var</span>/<span class="type">ftp</span>/<span class="type">pub</span>/<span class="type">test2</span> ];then</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;文件删除成功&quot;</span></span><br><span class="line">        fi</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">f</span> /<span class="type">var</span>/<span class="type">ftp</span>/<span class="type">pub</span>/<span class="type">group</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;文件上传成功&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;上传、创建目录删除目录部ok&quot;</span></span><br><span class="line">        fi </span><br><span class="line">fi   </span><br><span class="line">[ -<span class="type">f</span> /<span class="type">var</span>/<span class="type">ftp</span>/<span class="type">pub</span>/<span class="type">group</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;上传文件成功&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04_SHELL编程之CASE语句+函数+正则.md</title>
      <link href="/posts/57324.html"/>
      <url>/posts/57324.html</url>
      
        <content type="html"><![CDATA[<h3 id="课程目标"><a href="#课程目标" class="headerlink" title="课程目标"></a>课程目标</h3><ul><li>掌握case语句的基本语法结构</li><li>掌握函数的定义及调用</li><li>掌握常用的正则表达式元字符含义</li></ul><h3 id="一、case语句"><a href="#一、case语句" class="headerlink" title="一、case语句"></a>一、case语句</h3><p>case语句为多选择语句。可以用case语句匹配一个值与一个模式，如果匹配成功，执行相<br>匹配的命令。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">case var <span class="keyword">in</span>             定义变量;var代表是变量名</span><br><span class="line">pattern <span class="number">1</span>)              模式<span class="number">1</span>;用 | 分割多个模式，相当于or</span><br><span class="line">    command1            需要执行的语句</span><br><span class="line">    ;;                  两个分号代表命令结束</span><br><span class="line">pattern <span class="number">2</span>)</span><br><span class="line">    command2</span><br><span class="line">    ;;</span><br><span class="line">pattern <span class="number">3</span>)</span><br><span class="line">    command3</span><br><span class="line">    ;;</span><br><span class="line">  *)              default，不满足以上模式，默认执行*)下面的语句</span><br><span class="line">    command4</span><br><span class="line">    ;;</span><br><span class="line">esacesac表示case语句结束</span><br></pre></td></tr></table></figure><h4 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h4><ul><li>当给程序传入start、stop、reload三个不同参数时分别执行相应命令。</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">case <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">start</span>|S)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;service is running....&quot;</span></span><br><span class="line">;;</span><br><span class="line">stop|T)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;service is stoped...&quot;</span></span><br><span class="line">;;</span><br><span class="line">reload|<span class="built_in">R</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;service is restart...&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入你要的动作&quot;</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>脚本提示让用户输入需要管理的服务名，然后提示用户需要对服务做什么操作，如启动，关闭，重启等</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入需要管理的服务名称(vsftpd):&quot;</span> service</span><br><span class="line">case <span class="variable">$service</span> <span class="keyword">in</span></span><br><span class="line">vsftpd)</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入要操作的动作:&quot;</span> action</span><br><span class="line">case <span class="variable">$action</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">start</span>|S)</span><br><span class="line">service vsftpd <span class="built_in">start</span></span><br><span class="line">;;</span><br><span class="line">stop|P)</span><br><span class="line">service vsftpd stop</span><br><span class="line">;;</span><br><span class="line">reload|restart|<span class="built_in">R</span>)</span><br><span class="line">service vsftpd reload</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">;;</span><br><span class="line">httpd)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;apache is running...&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入需要管理的服务名称(vsftpd):&quot;</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h4><p>模拟一个多任务维护界面。当执行程序时先显示总菜单，然后进行选择后做相应维护监控操作。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line"></span><br><span class="line">分析：</span><br><span class="line"><span class="number">1</span>. 打印菜单</span><br><span class="line"><span class="number">2</span>. 等待用户输入需要的操作编号  read case</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;h 显示命令帮助&quot;</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;EOF</span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#让用户输入需要的操作</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入需要操作的选项[f|d]:&quot;</span> var1</span><br><span class="line">case <span class="variable">$var1</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">h</span>)</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">        <span class="built_in">h</span>       显示命令帮助</span><br><span class="line">        f       显示磁盘分区</span><br><span class="line">        d       显示磁盘挂载</span><br><span class="line">        m       查看内存使用</span><br><span class="line">        u       查看系统负载</span><br><span class="line">        q       退出程序</span><br><span class="line">EOF</span><br><span class="line">;;</span><br><span class="line">f)</span><br><span class="line">fdisk <span class="literal">-l</span></span><br><span class="line">;;</span><br><span class="line">d)</span><br><span class="line">df <span class="literal">-h</span></span><br><span class="line">;;</span><br><span class="line">m)</span><br><span class="line">free <span class="literal">-m</span></span><br><span class="line">;;</span><br><span class="line">u)</span><br><span class="line">uptime</span><br><span class="line">;;</span><br><span class="line">q)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-END</span></span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">&#125;</span><br><span class="line">menu</span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你的操作[h for help]:&quot;</span> var1</span><br><span class="line">case <span class="variable">$var1</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">h</span>)</span><br><span class="line">menu</span><br><span class="line">;;</span><br><span class="line">f)</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要查看的设备名字[/dev/sdb]:&quot;</span> var2</span><br><span class="line">case <span class="variable">$var2</span> <span class="keyword">in</span></span><br><span class="line">/dev/sda)</span><br><span class="line">fdisk <span class="literal">-l</span> /dev/sda</span><br><span class="line">;;</span><br><span class="line">/dev/sdb)</span><br><span class="line">fdisk <span class="literal">-l</span> /dev/sdb</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">;;</span><br><span class="line">d)</span><br><span class="line">lsblk</span><br><span class="line">;;</span><br><span class="line">m)</span><br><span class="line">free <span class="literal">-m</span></span><br><span class="line">;;</span><br><span class="line">u)</span><br><span class="line">uptime</span><br><span class="line">;;</span><br><span class="line">q)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="课堂练习1"><a href="#课堂练习1" class="headerlink" title="课堂练习1"></a>课堂练习1</h4><ol><li>输入一个等级（A-E），查看每个等级的成绩；如：输入A，则显示“90分~100分”，依次类推</li><li>模拟2人第一次相亲的场景，使用read让用户输入它的名字，性别，年龄（年龄放在性别判断后）;在case里面再嵌套case菜单，使之选项更丰富。</li></ol><p>要求：<br>1）</p><ul><li>对性别进行判断，如果不输入男或者女，则显示”你是泰国来的吗？“</li><li>如果是男的，对其年龄进行判断。</li></ul><p>2）</p><ul><li>如果男的年龄大于等于18岁则显示“某某先生，你结婚了吗？”；</li><li>如果对方回答结了或者yes，则显示“结了你来这凑什么热闹”;</li><li>如果对方回答没有或者no，再次询问“那你有房有车吗？”；</li><li>如果既不说结了也不说没结则显示：“你到底结没结婚啊？”</li><li>如果回答有房有车，则显示”咱去民政局领证吧“；</li><li>如果回答没有，则显示“不好意思，我去下洗手间。”；</li><li>如果既不说有又不说没有，则显示“别浪费时间，请正面回答”。</li><li>如果男的年龄小于18岁，则显示“某某某你个小毛孩也来这凑热闹啦”</li></ul><p>3）如果是女的，并且年龄大于等于18岁，则显示”某某女士你好“；否则显示”某某小姐你好“</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">参考：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;输入你的姓名:&quot;</span> name</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;输入你的性别:&quot;</span> gender</span><br><span class="line"></span><br><span class="line">case <span class="string">&quot;<span class="variable">$gender</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">男|<span class="built_in">man</span>|male|boy )</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;输入你的年龄:&quot;</span> age</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -<span class="type">ge</span> <span class="number">18</span> ];then</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$name</span>先生,你结婚了吗?&quot;</span> anwser</span><br><span class="line">case <span class="string">&quot;<span class="variable">$anwser</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">结了|有|yes )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;结了你还来干嘛?&quot;</span></span><br><span class="line">;;</span><br><span class="line">没结|没有|没|no )</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;有房有车吗?&quot;</span> anwser2</span><br><span class="line">case <span class="string">&quot;<span class="variable">$anwser2</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">有)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;咱就直接去民政局领证吧&quot;</span></span><br><span class="line">;;</span><br><span class="line">没有 )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;不好意思，我去下洗手间&quot;</span></span><br><span class="line">;;</span><br><span class="line">* )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;别浪费时间，请正面回答&quot;</span></span><br><span class="line">esac</span><br><span class="line">;;</span><br><span class="line">* )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;你到底结没结?&quot;</span></span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>小子&quot;</span></span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line">女|woman|female|girl|lady )</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;输入你的年龄:&quot;</span> age</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -<span class="type">ge</span> <span class="number">18</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>女士&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>小姐&quot;</span></span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line">* )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;你是泰国来的吗?&quot;</span></span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">该程序有个bug：如果输入年龄为负数或者<span class="number">0</span>也是可以的，如何修复bug？增加一个条件：如果输入的年龄小于等于<span class="number">10</span>则显示：”不跟你玩了。。。“</span><br><span class="line"></span><br><span class="line">在最后加入如下语句即可：</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -<span class="type">ge</span> <span class="number">18</span> ];then</span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>女士&quot;</span></span><br><span class="line">                elif</span><br><span class="line">                   [ <span class="variable">$age</span> -<span class="type">le</span> <span class="number">10</span> ];then</span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">&quot;不跟你玩了&quot;</span></span><br><span class="line">                     <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>小姐&quot;</span></span><br><span class="line">                fi</span><br><span class="line">                ;;</span><br><span class="line">        * )</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;你是泰国来的吗?&quot;</span></span><br><span class="line"></span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h3 id="二、函数"><a href="#二、函数" class="headerlink" title="二、函数"></a>二、函数</h3><p>shell中允许将<strong>一组命令集合</strong>或<strong>语句</strong>形成一段<strong>可用代码</strong>，这些代码块称为shell函数。给这段代码起个名字称为函数名，后续可以直接调用该段代码的功能。</p><h4 id="2-1-函数定义"><a href="#2-1-函数定义" class="headerlink" title="2.1 函数定义"></a>2.1 函数定义</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">函数名()</span><br><span class="line">&#123;</span><br><span class="line">  函数体（一堆命令的集合，来实现某个功能）   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">()</span></span></span><br><span class="line">&#123;</span><br><span class="line">   函数体（一堆命令的集合，来实现某个功能）  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function_name() &#123;</span><br><span class="line">command</span><br><span class="line">command</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="keyword">function</span><span class="title">_name</span><span class="params">()</span></span> &#123;</span><br><span class="line">command</span><br><span class="line">command</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">函数中<span class="keyword">return</span>说明：</span><br><span class="line"><span class="number">1</span>.return可以结束一个函数，类似于前面讲的循环控制语句<span class="keyword">break</span>(结束当前循环，执行循环体后面的代码)</span><br><span class="line"><span class="number">2</span>.return默认返回函数中最后一个命令的退出状态，也可以给定参数值，该参数值的范围是<span class="number">0</span><span class="literal">-256</span>之间。</span><br><span class="line"><span class="number">3</span>.如果没有<span class="keyword">return</span>命令，函数将返回最后一个Shell的退出值。</span><br></pre></td></tr></table></figure><h4 id="2-2-函数的调用"><a href="#2-2-函数的调用" class="headerlink" title="2.2 函数的调用"></a>2.2 函数的调用</h4><ul><li>当前命令行调用</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># cat fun1.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">hello()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello lilei <span class="variable">$1</span>&quot;</span></span><br><span class="line">hostname</span><br><span class="line">&#125;</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># source fun1.sh </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># . fun1.sh </span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># hello 888</span></span><br><span class="line">hello lilei <span class="number">888</span></span><br><span class="line">MissHou.itcast.cc</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># menu</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>定义到用户的环境变量中</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile/etc/bashrc~/.bash_profile~/.bashrc</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># cat ~/.bashrc </span></span><br><span class="line"><span class="comment"># .bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User specific aliases and functions</span></span><br><span class="line"></span><br><span class="line">alias <span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line">alias <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line">alias <span class="built_in">mv</span>=<span class="string">&#x27;mv -i&#x27;</span></span><br><span class="line"><span class="comment"># Source global definitions</span></span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">f</span> /<span class="type">etc</span>/<span class="type">bashrc</span> ]; then</span><br><span class="line">. /etc/bashrc</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">hello()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello lilei <span class="variable">$1</span>&quot;</span></span><br><span class="line">hostname</span><br><span class="line">&#125;</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">当用户打开bash的时候会读取该文件</span><br></pre></td></tr></table></figure><ul><li>脚本中调用</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line">source ./fun1.sh</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-END</span></span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">&#125;</span><br><span class="line">menu//调用函数</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-3-应用案例"><a href="#2-3-应用案例" class="headerlink" title="2.3 应用案例"></a>2.3 应用案例</h4><p>需求：写一个脚本让用户输入基本信息(姓名，性别，年龄)，如不输入一直提示输入，最后根据用户的信息输出相对应的内容</p><p>思路：</p><ul><li>循环直到输入字符串不为空      (该功能可以定义为一个函数，方便下面脚本调用)</li><li>根据用户输入信息做出匹配判断    case 语句</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#该函数实现用户如果不输入内容则一直循环直到用户输入为止，并且将用户输入的内容打印出来</span></span><br><span class="line">input_fun()</span><br><span class="line">&#123;</span><br><span class="line">  input_var=<span class="string">&quot;&quot;</span></span><br><span class="line">  output_var=<span class="variable">$1</span></span><br><span class="line">  <span class="keyword">while</span> [ -<span class="type">z</span> <span class="variable">$input_var</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$output_var</span>&quot;</span> input_var</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$input_var</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input_fun 请输入你的姓名:</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">fun()&#123;</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> name</span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">z</span> <span class="variable">$name</span> ];then</span><br><span class="line">fun <span class="variable">$1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数并且获取用户的姓名、性别、年龄分别赋值给name、sex、age变量</span></span><br><span class="line">name=<span class="variable">$</span>(input_fun 请输入你的姓名:)</span><br><span class="line">sex=<span class="variable">$</span>(input_fun 请输入你的性别:)</span><br><span class="line">age=<span class="variable">$</span>(input_fun 请输入你的年龄:)</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据用户输入的性别进行匹配判断</span></span><br><span class="line">case <span class="variable">$sex</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">man</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -<span class="type">gt</span> <span class="number">18</span> -<span class="type">a</span> <span class="variable">$age</span> -<span class="type">le</span> <span class="number">35</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;中年大叔你油腻了吗？加油&quot;</span></span><br><span class="line">elif [ <span class="variable">$age</span> -<span class="type">gt</span> <span class="number">35</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;保温杯里泡枸杞&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;年轻有为。。。&quot;</span></span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line">woman)</span><br><span class="line">xxx</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">xxx</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">描述以下代码含义：</span><br><span class="line">:()</span><br><span class="line">&#123;</span><br><span class="line">   :|:&amp;</span><br><span class="line">&#125;</span><br><span class="line">:</span><br><span class="line"></span><br><span class="line">:()&#123;:|:&amp;&#125;:</span><br></pre></td></tr></table></figure><h3 id="三、综合案例"><a href="#三、综合案例" class="headerlink" title="三、综合案例"></a>三、综合案例</h3><p><strong>任务&#x2F;背景：</strong></p><p>现有的跳板机虽然实现了统一入口来访问生产服务器，yunwei用户权限太大可以操作跳板机上的所有目录文件，存在数据被误删的安全隐患，所以希望你做一些安全策略来保证跳板机的正常使用。</p><p><strong>具体要求：</strong></p><ol><li>只允许yunwei用户通过跳板机远程连接后台的应用服务器做一些维护操作</li><li>公司运维人员远程通过yunwei用户连接跳板机时，跳出以下菜单供选择：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br></pre></td></tr></table></figure><ol start="3"><li>当用户选择相应主机后，直接<strong>免密码登录</strong>成功</li><li>如果用户不输入一直提示用户输入，直到用户选择退出</li></ol><p>分析：</p><ol><li>&#x3D;&#x3D;打印菜单——&gt;定义函数  echo   cat&#x3D;&#x3D;</li><li>&#x3D;&#x3D;让用户选择需要操作的机器  case….esac&#x3D;&#x3D;</li><li>&#x3D;&#x3D;配置免密登录&#x3D;&#x3D;</li><li>&#x3D;&#x3D;每个菜单提供功能&#x3D;&#x3D;——&gt;case…esac用户选择做的事情</li><li>&#x3D;&#x3D;循环让用户输入选择&#x3D;&#x3D;</li><li>每个功能写成函数——&gt;不是必须</li><li>脚本放的位置——&gt;yunwei用户的家目录</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># jumper-server</span></span><br><span class="line"><span class="comment"># 定义菜单打印功能的函数</span></span><br><span class="line">menu()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="comment"># 调用函数来打印菜单</span></span><br><span class="line"><span class="built_in">clear</span></span><br><span class="line">menu</span><br><span class="line"><span class="comment"># 菜单选择，case...esac语句</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请选择你要访问的主机:&quot;</span> host</span><br><span class="line">case <span class="variable">$host</span> <span class="keyword">in</span></span><br><span class="line"><span class="number">1</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">2</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.3</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">3</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">h</span>)</span><br><span class="line">menu</span><br><span class="line">;;</span><br><span class="line">q)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">将脚本放到yunwei用户家目录里的.bashrc里执行：</span><br><span class="line">bash ~/jumper<span class="literal">-server</span>.sh</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#公钥推送成功</span></span><br><span class="line"><span class="keyword">trap</span> <span class="string">&#x27;&#x27;</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">19</span></span><br><span class="line"><span class="comment">#打印菜单用户选择</span></span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数来打印菜单</span></span><br><span class="line">menu</span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要选择的主机[h for help]：&quot;</span> host</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过case语句来匹配用户所输入的主机</span></span><br><span class="line">case <span class="variable">$host</span> <span class="keyword">in</span></span><br><span class="line"><span class="number">1</span>|DB1)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">2</span>|DB2)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">3</span>|web1)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.250</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">h</span>|help)</span><br><span class="line"><span class="built_in">clear</span>;menu</span><br><span class="line">;;</span><br><span class="line">q|quit)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#jumper-server</span></span><br><span class="line"><span class="comment">#菜单打印</span></span><br><span class="line"><span class="keyword">trap</span> <span class="string">&#x27;&#x27;</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> </span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-END</span></span><br><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="number">5</span>. <span class="keyword">exit</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">#让用户选择相应的操作</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要操作的主机：&quot;</span> host</span><br><span class="line">case <span class="variable">$host</span> <span class="keyword">in</span></span><br><span class="line"><span class="number">1</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">2</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.3</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">3</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.4</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">5</span>)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">clear</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;输入错误，请重新输入...&quot;</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">自己完善功能：</span><br><span class="line"><span class="number">1</span>. 用户选择主机后，需要事先推送公钥；如何判断公钥是否已推</span><br><span class="line"><span class="number">2</span>. 比如选择web1时，再次提示需要做的操作，比如：</span><br><span class="line">clean log</span><br><span class="line">重启服务</span><br><span class="line"><span class="built_in">kill</span>某个进程</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>补充：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) SIGHUP 重新加载配置    </span><br><span class="line"><span class="number">2</span>) SIGINT键盘中断^C</span><br><span class="line"><span class="number">3</span>) SIGQUIT      键盘退出</span><br><span class="line"><span class="number">9</span>) SIGKILL 强制终止</span><br><span class="line"><span class="number">15</span>) SIGTERM    终止（正常结束），缺省信号</span><br><span class="line"><span class="number">18</span>) SIGCONT   继续</span><br><span class="line"><span class="number">19</span>) SIGSTOP   停止</span><br><span class="line"><span class="number">20</span>) SIGTSTP     暂停^Z</span><br></pre></td></tr></table></figure><h3 id="四、正则表达式"><a href="#四、正则表达式" class="headerlink" title="四、正则表达式"></a>四、正则表达式</h3><h4 id="1-什么是正则表达式"><a href="#1-什么是正则表达式" class="headerlink" title="1. 什么是正则表达式"></a>1. 什么是正则表达式</h4><p><strong>正则表达式</strong>（Regular Expression、regex或regexp，缩写为RE），也译为正规表示法、常规表示法，是一种字符模式，用于在查找过程中匹配指定的字符。</p><p>许多程序设计语言都支持利用正则表达式进行<strong>字符串操作</strong>。例如，在Perl中就内建了一个功能强大的正则表达式引擎。</p><p>正则表达式这个概念最初是由Unix中的工具软件（例如sed和grep）普及开的。</p><p>支持正则表达式的程序如：locate |find| vim| grep| sed |awk</p><h4 id="2-第一类正则"><a href="#2-第一类正则" class="headerlink" title="2. 第一类正则"></a>2. 第一类正则</h4><ul><li>名词解释：</li></ul><p><strong>元字符</strong>:指那些在正则表达式中具有<strong>特殊意义的专用字符</strong>,如:点(.) 星(*) 问号(?)等</p><p><strong>前导字符</strong>：即位于元字符前面的字符ab**&#x3D;&#x3D;c&#x3D;&#x3D;***   aoo**&#x3D;&#x3D;o&#x3D;&#x3D;.**</p><ul><li>正则中常用的元字符</li></ul><p>示例文本：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat 1.txt</span></span><br><span class="line">ggle</span><br><span class="line">gogle</span><br><span class="line">google</span><br><span class="line">gooogle</span><br><span class="line">goooooogle</span><br><span class="line">gooooooogle</span><br><span class="line">taobao.com</span><br><span class="line">taotaobaobao.com</span><br><span class="line"></span><br><span class="line">jingdong.com</span><br><span class="line">dingdingdongdong.com</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">Adfjd8789JHfdsdf/</span><br><span class="line">a87fdjfkdLKJK</span><br><span class="line"><span class="number">7</span>kdjfd989KJK;</span><br><span class="line">bSKJjkksdjf878.</span><br><span class="line">cidufKJHJ6576,</span><br><span class="line"></span><br><span class="line">hello world</span><br><span class="line">helloworld yourself</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）.任意单个字符，除了换行符 </span><br><span class="line">（<span class="number">2</span>）*前导字符出现<span class="number">0</span>次或连续多次  ab*能匹配“a”，“ab”以及“abb”，但是不匹配“cb”</span><br><span class="line">（<span class="number">3</span>）.*任意长度的字符  ab.*  ab123 abbb abab</span><br><span class="line">（<span class="number">4</span>）^行的开头</span><br><span class="line">（<span class="number">5</span>）<span class="variable">$</span>行的结尾</span><br><span class="line">（<span class="number">6</span>）^<span class="variable">$</span>空行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（<span class="number">7</span>）[]匹配指定字符组内的任一单个字符   [<span class="type">abc</span>]</span><br><span class="line">（<span class="number">8</span>）[^]匹配不在指定字符组内的任一字符 [^<span class="type">abc</span>]</span><br><span class="line"></span><br><span class="line">（<span class="number">9</span>）^[]匹配以指定字符组内的任一字符开头   ^[<span class="type">abc</span>]</span><br><span class="line">（<span class="number">10</span>）^[^]匹配不以指定字符组内的任一字符开头  ^[^<span class="type">abc</span>] </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（<span class="number">11</span>）\&lt;取单词的头</span><br><span class="line">（<span class="number">12</span>）\&gt;取单词的尾</span><br><span class="line">（<span class="number">13</span>）\&lt;\&gt;精确匹配符号 grep <span class="literal">-w</span> <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（<span class="number">14</span>）\&#123;n\&#125;匹配前导字符连续出现n次    go\&#123;<span class="number">2</span>\&#125;   google  gooogle</span><br><span class="line">（<span class="number">15</span>）\&#123;n,\&#125;匹配前导字符至少出现n次 </span><br><span class="line">（<span class="number">16</span>）\&#123;n,m\&#125;匹配前导字符出现n次与m次之间 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> (<span class="number">17</span>) \(strings\)保存被匹配的字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">将<span class="number">192.168</span>.<span class="number">0.254</span> 换成 <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">vim <span class="number">1</span>.txt</span><br><span class="line">:%s<span class="comment">#\(192\.168\)\.0\.\(254\)#\1\.100\.\2//底行模式下匹配</span></span><br><span class="line">将<span class="number">10.1</span>.<span class="number">1.1</span>替换成<span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line">:%s<span class="comment">#\(10.1.1\).1#\1.254#g </span></span><br><span class="line">:%s/\(<span class="number">10.1</span>.<span class="number">1</span>\).<span class="number">1</span>/\<span class="number">1.254</span>/g </span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -n &#x27;s#\(192\.168\)\.0\.254#\1\.1\.254#p&#x27;      </span></span><br><span class="line">找出含有<span class="number">192.168</span>的行，同时保留<span class="number">192.168</span>并标记为标签<span class="number">1</span>，之后可以使用\<span class="number">1</span>来引用它。最多可以定义<span class="number">9</span>个标签，从左边开始编号，最左边的是第一个。</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># sed -n &#x27;s#10.1.1.1#10.1.1.254#p&#x27; 1.txt</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># sed -n &#x27;s#\(10.1.1\).1#\1.254#p&#x27; 1.txt</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line">将helloworld yourself 换成hellolilei myself</span><br><span class="line"></span><br><span class="line">vim <span class="number">1</span>.txt</span><br><span class="line">:%s<span class="comment">#\(hello\)world your\(self\)#\1lilei my\2#g</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -n &#x27;s/\(hello\)world your\(self\)/\1lilei my\2/p&#x27; 1.txt </span></span><br><span class="line">hellolilei myself</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># sed -n &#x27;s/helloworld yourself/hellolilei myself/p&#x27; 1.txt </span></span><br><span class="line">hellolilei myself</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># sed -n &#x27;s/\(hello\)world your\(self\)/\1lilei my\2/p&#x27; 1.txt </span></span><br><span class="line">hellolilei myself</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="number">0</span>-<span class="number">9</span>] [<span class="type">a</span>-<span class="type">z</span>] [<span class="type">A</span>-<span class="type">Z</span>] [<span class="type">a</span>-<span class="type">zA</span>-<span class="type">Z</span>] [<span class="type">a</span>-<span class="type">Z</span>]</span><br><span class="line">=================================================================================</span><br><span class="line">Perl内置正则：</span><br><span class="line">\d      匹配数字  [<span class="number">0</span>-<span class="number">9</span>]</span><br><span class="line">\w      匹配字母数字下划线[<span class="type">a</span>-<span class="type">zA</span>-<span class="type">Z0</span>-<span class="number">9</span><span class="type">_</span>]</span><br><span class="line">\s      匹配空格、制表符、换页符[\<span class="type">t</span>\<span class="type">r</span>\<span class="type">n</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#grep -P &#x27;\d&#x27; test.txt</span></span><br><span class="line"><span class="comment">#grep -P &#x27;\w&#x27; test.txt</span></span><br><span class="line"><span class="comment">#grep -P &#x27;\s&#x27; test.txt</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>扩展类的正则表达式 grep -E 或则 egrep</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">扩展正则表达式元字符</span><br><span class="line">+匹配一个或多个前导字符bo+boo bo</span><br><span class="line">?匹配零个或一个前导字符bo?b bo</span><br><span class="line"></span><br><span class="line">a|b匹配a或b</span><br><span class="line">()组字符   hello myself yourself     (my|your)self</span><br><span class="line"></span><br><span class="line">&#123;n&#125;前导字符重复n次\&#123;n\&#125;</span><br><span class="line">&#123;n,&#125;前导字符重复至少n次  \&#123;n,\&#125;</span><br><span class="line">&#123;n,m&#125;前导字符重复n到m次\&#123;n,m\&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep &quot;root|ftp|adm&quot; /etc/passwd</span></span><br><span class="line"><span class="comment"># egrep &quot;root|ftp|adm&quot; /etc/passwd</span></span><br><span class="line"><span class="comment"># grep -E &quot;root|ftp|adm&quot; /etc/passwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep -E &#x27;o+gle&#x27; test.txt </span></span><br><span class="line"><span class="comment"># grep -E &#x27;o?gle&#x27; test.txt </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># egrep &#x27;go&#123;2,&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># egrep &#x27;(my|your)self&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">jumper</span> <span class="type">shell06</span>]<span class="comment"># grep &#x27;[0-9]\&#123;2\&#125;\.[0-9]\&#123;1\&#125;\.[0-9]\&#123;1\&#125;\.[0-9]\&#123;1\&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">jumper</span> <span class="type">shell06</span>]<span class="comment"># grep &#x27;[0-9]&#123;2&#125;\.[0-9]&#123;1&#125;\.[0-9]&#123;1&#125;\.[0-9]&#123;1&#125;&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">jumper</span> <span class="type">shell06</span>]<span class="comment"># grep -E &#x27;[0-9]&#123;2&#125;\.[0-9]&#123;1&#125;\.[0-9]&#123;1&#125;\.[0-9]&#123;1&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">jumper</span> <span class="type">shell06</span>]<span class="comment"># grep -E &#x27;[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">jumper</span> <span class="type">shell06</span>]<span class="comment"># grep -E &#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-第二类正则"><a href="#3-第二类正则" class="headerlink" title="3. 第二类正则"></a>3. 第二类正则</h4><table><thead><tr><th>表达式</th><th>功能</th><th>示例</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>字母与数字字符</td><td>[[:alnum:]]+</td></tr><tr><td>[:alpha:]</td><td>字母字符(包括大小写字母)</td><td>[[:alpha:]]{4}</td></tr><tr><td>[:blank:]</td><td>空格与制表符</td><td>[[:blank:]]*</td></tr><tr><td>[:digit:]</td><td>数字</td><td>[[:digit:]]?</td></tr><tr><td>[:lower:]</td><td>小写字母</td><td>[[:lower:]]{4,}</td></tr><tr><td>[:upper:]</td><td>大写字母</td><td>[[:upper:]]+</td></tr><tr><td>[:punct:]</td><td>标点符号</td><td>[[:punct:]]</td></tr><tr><td>[:space:]</td><td>包括换行符，回车等在内的所有空白</td><td>[[:space:]]+</td></tr></tbody></table><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># grep -E &#x27;^[[:digit:]]+&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># grep -E &#x27;^[^[:digit:]]+&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># grep -E &#x27;[[:lower:]]&#123;4,&#125;&#x27; 1.txt</span></span><br></pre></td></tr></table></figure><h4 id="4-课堂作业"><a href="#4-课堂作业" class="headerlink" title="4. 课堂作业"></a>4. 课堂作业</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">在自己虚拟机里创建如下内容的文件：</span><br><span class="line"><span class="comment"># cat test.txt </span></span><br><span class="line">Aieur45869Root0000</span><br><span class="line"><span class="number">9</span>h847RkjfkIIIhello</span><br><span class="line">rootHllow88000dfjj</span><br><span class="line"><span class="number">8</span>ikuioerhfhupliooking</span><br><span class="line">hello world</span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.254</span></span><br><span class="line">welcome to uplooking.</span><br><span class="line">abcderfkdjfkdtest</span><br><span class="line">rlllA899kdfkdfj</span><br><span class="line">iiiA848890ldkfjdkfj</span><br><span class="line">abc</span><br><span class="line"><span class="number">12345678908374</span></span><br><span class="line"><span class="number">123456</span>@qq.com</span><br><span class="line"><span class="number">123456</span>@<span class="number">163</span>.com</span><br><span class="line">abcdefg@itcast.com23ed</span><br></pre></td></tr></table></figure><p>要求如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、查找不以大写字母开头的行（三种写法）。</span><br><span class="line"><span class="number">2</span>、查找有数字的行（两种写法）</span><br><span class="line"><span class="number">3</span>、查找一个数字和一个字母连起来的</span><br><span class="line"><span class="number">4</span>、查找不以<span class="built_in">r</span>开头的行</span><br><span class="line"><span class="number">5</span>、查找以数字开头的</span><br><span class="line"><span class="number">6</span>、查找以大写字母开头的</span><br><span class="line"><span class="number">7</span>、查找以小写字母开头的 </span><br><span class="line"><span class="number">8</span>、查找以点结束的</span><br><span class="line"><span class="number">9</span>、去掉空行</span><br><span class="line"><span class="number">10</span>、查找完全匹配abc的行</span><br><span class="line"><span class="number">11</span>、查找A后有三个数字的行</span><br><span class="line"><span class="number">12</span>、统计root在/etc/passwd里出现了几次</span><br><span class="line"><span class="number">13</span>、用正则表达式找出自己的IP地址、广播地址、子网掩码</span><br><span class="line">ifconfig eth0|grep Bcast|grep <span class="literal">-o</span> <span class="string">&#x27;[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;&#x27;</span></span><br><span class="line">ifconfig eth0|grep Bcast| grep <span class="literal">-E</span> <span class="literal">-o</span> <span class="string">&#x27;([0-9]&#123;1,3&#125;.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27;</span></span><br><span class="line">ifconfig eth0|grep Bcast| grep <span class="literal">-P</span> <span class="literal">-o</span> <span class="string">&#x27;\d&#123;1,3&#125;.\d&#123;1,3&#125;.\d&#123;1,3&#125;.\d&#123;1,3&#125;&#x27;</span></span><br><span class="line">ifconfig eth0|grep Bcast| grep <span class="literal">-P</span> <span class="literal">-o</span> <span class="string">&#x27;(\d&#123;1,3&#125;.)&#123;3&#125;\d&#123;1,3&#125;&#x27;</span></span><br><span class="line">ifconfig eth0|grep Bcast| grep <span class="literal">-P</span> <span class="literal">-o</span> <span class="string">&#x27;(\d+.)&#123;3&#125;\d+&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># egrep --color &#x27;[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;&#x27; /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># egrep --color &#x27;[[:digit:]]&#123;1,3&#125;\.[[:digit:]]&#123;1,3&#125;\.[[:digit:]]&#123;1,3&#125;\.[[:digit:]]&#123;1,3&#125;&#x27; /etc/sysconfig/network-scripts/ifcfg-eth0 </span></span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">14</span>、找出文件中的ip地址并且打印替换成<span class="number">172.16</span>.<span class="number">2.254</span></span><br><span class="line">grep <span class="literal">-o</span> <span class="literal">-E</span> <span class="string">&#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27;</span> <span class="number">1</span>.txt |sed <span class="literal">-n</span> <span class="string">&#x27;s/192.168.0.\(254\)/172.16.2.\1/p&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="number">15</span>、找出文件中的ip地址</span><br><span class="line">grep <span class="literal">-o</span> <span class="literal">-E</span> <span class="string">&#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="number">16</span>、找出全部是数字的行</span><br><span class="line">grep <span class="literal">-E</span> <span class="string">&#x27;^[0-9]+$&#x27;</span> test</span><br><span class="line"><span class="number">17</span>、找出邮箱地址</span><br><span class="line">grep <span class="literal">-E</span> <span class="string">&#x27;^[0-9]+@[a-z0-9]+\.[a-z]+$&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grep <span class="literal">--help</span>:</span><br><span class="line">匹配模式选择：</span><br><span class="line">Regexp selection and interpretation:</span><br><span class="line">  <span class="literal">-E</span>, <span class="literal">--extended-regexp</span>     扩展正则</span><br><span class="line">  <span class="literal">-G</span>, <span class="literal">--basic-regexp</span>        基本正则</span><br><span class="line">  <span class="literal">-P</span>, <span class="literal">--perl-regexp</span>         调用perl的正则</span><br><span class="line">  <span class="literal">-e</span>, <span class="literal">--regexp</span>=PATTERN      use PATTERN <span class="keyword">for</span> matching</span><br><span class="line">  <span class="operator">-f</span>, <span class="literal">--file</span>=FILE           obtain PATTERN from FILE</span><br><span class="line">  <span class="literal">-i</span>, <span class="literal">--ignore-case</span>         忽略大小写</span><br><span class="line">  <span class="literal">-w</span>, <span class="literal">--word-regexp</span>         匹配整个单词</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h3 id="五、正则总结"><a href="#五、正则总结" class="headerlink" title="五、正则总结"></a>五、正则总结</h3><p>元字符：在正则中，具有特殊意义的专用字符。.  *</p><p>前导字符：元字符前面的字符叫前导字符</p><table><thead><tr><th>元字符</th><th>字符说明</th><th>示例</th></tr></thead><tbody><tr><td>*</td><td>前导字符出现0次或者连续多次</td><td>ab*  abbbb</td></tr><tr><td>.</td><td>除了换行符以外，任意单个字符</td><td>ab.   ab8 abu</td></tr><tr><td>.*</td><td>任意长度的字符</td><td>ab.*  adfdfdf</td></tr><tr><td>[]</td><td>括号里的任意单个字符或一组单个字符</td><td>[abc][0-9][a-z]</td></tr><tr><td>[^]</td><td>不匹配括号里的任意单个字符或一组单个字符</td><td>[^abc]</td></tr><tr><td>^[]</td><td>匹配以括号里的任意单个字符开头</td><td>^[abc]</td></tr><tr><td>^[^]</td><td>不匹配以括号里的任意单个字符开头</td><td></td></tr><tr><td>^</td><td>行的开头</td><td>^root</td></tr><tr><td>$</td><td>行的结尾</td><td>bash$</td></tr><tr><td>^$</td><td>空行</td><td></td></tr><tr><td>\{n\}和{n}</td><td>前导字符连续出现n次</td><td>[0-9]\{3\}</td></tr><tr><td>\{n,\}和{n,}</td><td>前导字符至少出现n次</td><td>[a-z]{4,}</td></tr><tr><td>\{n,m\}和{n,m}</td><td>前导字符连续出现n-m次</td><td>go{2,4}</td></tr><tr><td>\&lt;\&gt;</td><td>精确匹配单词</td><td>\&lt;hello\&gt;</td></tr><tr><td>\(\)</td><td>保留匹配到的字符</td><td>\(hello\)</td></tr><tr><td>+</td><td>前导字符出现1次或者多次</td><td>[0-9]+</td></tr><tr><td>?</td><td>前导字符出现0次或者1次</td><td>go?</td></tr><tr><td>|</td><td>或</td><td>^root|^ftp</td></tr><tr><td>()</td><td>组字符</td><td>(hello|world)123</td></tr><tr><td>\d</td><td>perl内置正则</td><td>grep -P  \d+</td></tr><tr><td>\w</td><td>匹配字母数字下划线</td><td></td></tr></tbody></table><h3 id="六、课后作业"><a href="#六、课后作业" class="headerlink" title="六、课后作业"></a>六、课后作业</h3><p>写一个自动搭建apache服务的脚本，要求如下：<br>1、用户输入web服务器的IP、域名以及数据根目录<br>2、如果用户不输入则一直提示输入，直到输入为止<br>3、当访问<a href="http://www.test.cc时可以访问到数据根目录里的首页文件“this/">www.test.cc时可以访问到数据根目录里的首页文件“this</a> is test page” </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">参考：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">conf=/etc/httpd/conf/httpd.conf</span><br><span class="line">input_fun()</span><br><span class="line">&#123;</span><br><span class="line">  input_var=<span class="string">&quot;&quot;</span></span><br><span class="line">  output_var=<span class="variable">$1</span></span><br><span class="line">  <span class="keyword">while</span> [ -<span class="type">z</span> <span class="variable">$input_var</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$output_var</span>&quot;</span> input_var</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$input_var</span></span><br><span class="line">&#125;</span><br><span class="line">ipaddr=<span class="variable">$</span>(input_fun <span class="string">&quot;Input Host ip[192.168.0.1]:&quot;</span>)</span><br><span class="line">web_host_name=<span class="variable">$</span>(input_fun <span class="string">&quot;Input VirtualHostName [www.test.cc]:&quot;</span>)</span><br><span class="line">root_dir=<span class="variable">$</span>(input_fun <span class="string">&quot;Input host Documentroot dir:[/var/www/html]:&quot;</span>)</span><br><span class="line"></span><br><span class="line">[ ! -<span class="type">d</span> <span class="variable">$root_dir</span> ] &amp;&amp; mkdir <span class="literal">-p</span> <span class="variable">$root_dir</span></span><br><span class="line">chown apache.apache <span class="variable">$root_dir</span> &amp;&amp; chmod <span class="number">755</span> <span class="variable">$root_dir</span></span><br><span class="line"><span class="built_in">echo</span> this is <span class="variable">$web_host_name</span> &gt; <span class="variable">$root_dir</span>/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ipaddr</span> <span class="variable">$web_host_name</span>&quot;</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line">[ -<span class="type">f</span> <span class="variable">$conf</span> ] &amp;&amp; <span class="built_in">cat</span> &gt;&gt; <span class="variable">$conf</span> &lt;&lt;<span class="keyword">end</span></span><br><span class="line">NameVirtualHost <span class="variable">$ipaddr:80</span></span><br><span class="line">&lt;VirtualHost <span class="variable">$ipaddr:80</span>&gt;</span><br><span class="line">ServerAdmin webmaster<span class="selector-tag">@</span><span class="variable">$web_host_name</span></span><br><span class="line">DocumentRoot <span class="variable">$root_dir</span></span><br><span class="line">ServerName <span class="variable">$web_host_name</span></span><br><span class="line">ErrorLog logs/<span class="variable">$web_host_name</span><span class="literal">-error_log</span></span><br><span class="line">CustomLog logs/<span class="variable">$web_host_name</span><span class="literal">-access_loh</span> common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02_SHELL编程之流程控制和循环语句</title>
      <link href="/posts/52657.html"/>
      <url>/posts/52657.html</url>
      
        <content type="html"><![CDATA[<h3 id="课程目标"><a href="#课程目标" class="headerlink" title="课程目标"></a>课程目标</h3><ul><li>熟悉流程控制语句基本语法，如if…else…</li><li>掌握for循环语句的基本语法结构</li><li>掌握while和until循环语句的基本语法结构</li></ul><p>###一、流程控制语句</p><p>####1. 基本语法结构</p><p><strong>&#x3D;&#x3D;F&#x3D;&#x3D;</strong>: false 假</p><p><strong>&#x3D;&#x3D;T&#x3D;&#x3D;</strong>: true 真</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="type">condition</span> ];then</span><br><span class="line">command</span><br><span class="line">command</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">[ 条件 ] &amp;&amp; command</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="type">condition</span> ];then</span><br><span class="line">command1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">command2</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">[ 条件 ] &amp;&amp; command1 || command2</span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/02_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%92%8C%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.md.assets/%E6%B5%81%E7%A8%8B%E5%88%A4%E6%96%AD2.png" alt="流程判断2"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="type">condition1</span> ];then</span><br><span class="line">command1  结束</span><br><span class="line">elif [ <span class="type">condition2</span> ];then</span><br><span class="line">command2   结束</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">command3</span><br><span class="line">fi</span><br><span class="line">注释：</span><br><span class="line">如果条件<span class="number">1</span>满足，执行命令<span class="number">1</span>后结束；如果条件<span class="number">1</span>不满足，再看条件<span class="number">2</span>，如果条件<span class="number">2</span>满足执行命令<span class="number">2</span>后结束；如果条件<span class="number">1</span>和条件<span class="number">2</span>都不满足执行命令<span class="number">3</span>结束.</span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/02_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%92%8C%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.md.assets/%E6%B5%81%E7%A8%8B%E5%88%A4%E6%96%AD3.png" alt="流程判断3"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="type">condition1</span> ];then</span><br><span class="line">command1</span><br><span class="line"><span class="keyword">if</span> [ <span class="type">condition2</span> ];then</span><br><span class="line">command2</span><br><span class="line">fi</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="type">condition3</span> ];then</span><br><span class="line">command3</span><br><span class="line">elif [ <span class="type">condition4</span> ];then</span><br><span class="line">command4</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">command5</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">注释：</span><br><span class="line">如果条件<span class="number">1</span>满足，执行命令<span class="number">1</span>；如果条件<span class="number">2</span>也满足执行命令<span class="number">2</span>，如果不满足就只执行命令<span class="number">1</span>结束；</span><br><span class="line">如果条件<span class="number">1</span>不满足，不看条件<span class="number">2</span>；直接看条件<span class="number">3</span>，如果条件<span class="number">3</span>满足执行命令<span class="number">3</span>；如果不满足则看条件<span class="number">4</span>，如果条件<span class="number">4</span>满足执行命令<span class="number">4</span>；否则执行命令<span class="number">5</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/02_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%92%8C%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.md.assets/%E6%B5%81%E7%A8%8B%E5%88%A4%E6%96%AD4.png" alt="流程判断4"></p><p>####2. 应用案例</p><p>需求1：判断当前主机是否和远程主机是否ping通</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">思路：</span><br><span class="line"><span class="number">1</span>. 使用哪个命令实现 ping <span class="literal">-c</span></span><br><span class="line"><span class="number">2</span>. 根据命令的执行结果状态来判断是否通<span class="variable">$</span>?</span><br><span class="line"><span class="number">3</span>. 根据逻辑和语法结构来编写脚本(条件判断或者流程控制)</span><br><span class="line">步骤：</span><br><span class="line">vim ping.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Name:ping.sh</span></span><br><span class="line"><span class="comment"># Path:/shell02/</span></span><br><span class="line"><span class="comment"># Usage:/shell02/ping.sh</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取远程主机的IP地址（定义变量让用户自己输入）</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要ping的远程主机IP:&quot;</span> IP</span><br><span class="line"><span class="comment">#使用ping命令来判断是否和远程主机互通</span></span><br><span class="line">ping <span class="literal">-c1</span> <span class="variable">$IP</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前主机和远程主机<span class="variable">$IP</span>是互通的。&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前主机和远程主机<span class="variable">$IP</span>是不通的。&quot;</span></span><br><span class="line">fi</span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Name:ping.sh</span></span><br><span class="line"><span class="comment"># Path:/shell02/</span></span><br><span class="line"><span class="comment"># Usage:/shell02/ping.sh</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用ping命令来判断是否和远程主机互通</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span><span class="comment"># -ne 1 ];then</span></span><br><span class="line">        <span class="type">echo</span> <span class="string">&quot;Usage:<span class="variable">$0</span> remote_ip&quot;</span> &amp;&amp; <span class="type">exit</span></span><br><span class="line"></span><br><span class="line"><span class="type">fi</span></span><br><span class="line">或者</span><br><span class="line">[ <span class="variable">$</span><span class="comment"># -ne 1 ] &amp;&amp; echo &quot;Usage:$0 remote_ip&quot; &amp;&amp; exit</span></span><br><span class="line"></span><br><span class="line"><span class="type">ping</span> -<span class="type">c1</span> <span class="variable">$1</span> &amp;&gt;/<span class="type">dev</span>/<span class="type">null</span></span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="type">echo</span> <span class="string">&quot;当前主机和远程主机<span class="variable">$1</span>是互通的。&quot;</span> ||<span class="type">echo</span> <span class="string">&quot;当前主机和远程主机<span class="variable">$1</span>是不通的。&quot;</span></span><br><span class="line"></span><br><span class="line">说明：<span class="type">exit</span>直接退出程序</span><br></pre></td></tr></table></figure><p>需求2：判断一个进程是否存在</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">思路：</span><br><span class="line"><span class="number">1</span>.查看进程的相关命令 <span class="built_in">ps</span> <span class="literal">-ef</span>  pgrep  <span class="built_in">ps</span> auxf pidof</span><br><span class="line"><span class="number">2</span>.根据命令的返回状态值来判断进程是否存在  <span class="variable">$</span>?</span><br><span class="line"><span class="number">3</span>.根据逻辑用脚本语言实现</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Name:process.sh</span></span><br><span class="line"><span class="comment"># Path:/shell02/</span></span><br><span class="line"><span class="comment"># Usage:/shell02/process.sh</span></span><br><span class="line"><span class="comment"># Describe:判断一个进程是否存在</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入需要判断的进程名(httpd):&quot;</span> <span class="keyword">process</span></span><br><span class="line"><span class="comment"># 通过命令来查看进程是否存在</span></span><br><span class="line">pgrep <span class="variable">$process</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="comment"># 通过命令执行的状态来判断是否存在</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;进程<span class="variable">$process</span>存在&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;进程<span class="variable">$process</span>不存在&quot;</span></span><br><span class="line">fi</span><br><span class="line">或者</span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;进程<span class="variable">$process</span>存在&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;进程<span class="variable">$process</span>不存在&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pgrep命令：以名称为依据从运行进程队列中查找进程，并显示查找到的进程id</span><br><span class="line">选项</span><br><span class="line"><span class="literal">-o</span>：仅显示找到的最小（起始）进程号;</span><br><span class="line"><span class="literal">-n</span>：仅显示找到的最大（结束）进程号；</span><br><span class="line"><span class="literal">-l</span>：显示进程名称；</span><br><span class="line"><span class="literal">-P</span>：指定父进程号；pgrep <span class="literal">-p</span> <span class="number">4764</span>  查看父进程下的子进程id</span><br><span class="line"><span class="literal">-g</span>：指定进程组；</span><br><span class="line"><span class="literal">-t</span>：指定开启进程的终端；</span><br><span class="line"><span class="literal">-u</span>：指定进程的有效用户ID。</span><br></pre></td></tr></table></figure><p>需求3：判断一个服务是否正常（以httpd为例):</p><p>思路：</p><ol><li>可以判断进程是否存在，用&#x2F;etc&#x2F;init.d&#x2F;httpd status判断状态等方法</li><li>最好的方法是直接去访问一下，通过访问成功和失败的返回值来判断</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">wget</span> http://<span class="number">10.1</span>.<span class="number">1.2</span> &amp;&gt;/dev/null</span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;该web服务是正常的&quot;</span> &amp;&amp; <span class="built_in">rm</span> <span class="operator">-f</span> /shell/shell01/index.* || <span class="built_in">echo</span> <span class="string">&quot;该web服务异常请检查&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>####3. 课堂练习</p><p>1、输入一个用户，用脚本判断该用户是否存在</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入需要判断的用户名：&quot;</span> user</span><br><span class="line">id <span class="variable">$user</span> &amp;&gt;/dev/null</span><br><span class="line">test <span class="variable">$</span>? <span class="operator">-eq</span> <span class="number">0</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;该<span class="variable">$user</span>存在&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;该<span class="variable">$user</span>不存在&quot;</span></span><br></pre></td></tr></table></figure><p>2、判断vsftpd软件包是否安装，如果没有则自动安装（yum源已配好）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">rpm <span class="literal">-q</span> vsftpd &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;vsftpd已经安装&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;该软件包没有安装，正在安装....&quot;</span></span><br><span class="line">        yum install <span class="literal">-y</span> vsftpd &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;vsftpd安装成功&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;vsftpd安装失败&quot;</span></span><br><span class="line">        fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、判断当前内核主版本是否为2，且次版本是否大于等于6；如果都满足则输出当前内核版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">思路：</span><br><span class="line"><span class="number">1</span>. 先查看内核的版本号uname <span class="literal">-r</span></span><br><span class="line"><span class="number">2</span>. 先将内核的版本号保存到一个变量里，然后再根据需求截取出该变量的一部分：主版本和次版本</span><br><span class="line"><span class="number">3</span>. 根据需求进步判断</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">kernel=`uname <span class="literal">-r</span>`</span><br><span class="line">var1=`echo <span class="variable">$kernel</span>|cut <span class="literal">-d</span>. <span class="literal">-f1</span>`</span><br><span class="line">var2=`echo <span class="variable">$kernel</span>|cut <span class="literal">-d</span>. <span class="literal">-f2</span>`</span><br><span class="line">test <span class="variable">$var1</span> <span class="operator">-eq</span> <span class="number">2</span> <span class="literal">-a</span> <span class="variable">$var2</span> <span class="operator">-ge</span> <span class="number">6</span> &amp;&amp; <span class="built_in">echo</span> <span class="variable">$kernel</span> || <span class="built_in">echo</span> <span class="string">&quot;当前内核版本不符合要求&quot;</span></span><br><span class="line">或者</span><br><span class="line">[ <span class="variable">$var1</span> -<span class="type">eq</span> <span class="number">2</span> -<span class="type">a</span> <span class="variable">$var2</span> -<span class="type">ge</span> <span class="number">6</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="variable">$kernel</span> || <span class="built_in">echo</span> <span class="string">&quot;当前内核版本不符合要求&quot;</span></span><br><span class="line">或者</span><br><span class="line">[[ <span class="variable">$var1</span> -<span class="type">eq</span> <span class="number">2</span> &amp;&amp; <span class="variable">$var2</span> -<span class="type">ge</span> <span class="number">6</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="variable">$kernel</span> || <span class="built_in">echo</span> <span class="string">&quot;当前内核版本不符合要求&quot;</span></span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">kernel=`uname <span class="literal">-r</span>`</span><br><span class="line">test <span class="variable">$</span>&#123;kernel:<span class="number">0</span>:<span class="number">1</span>&#125; <span class="operator">-eq</span> <span class="number">2</span> <span class="literal">-a</span> <span class="variable">$</span>&#123;kernel:<span class="number">2</span>:<span class="number">1</span>&#125; <span class="operator">-ge</span> <span class="number">6</span> &amp;&amp; <span class="built_in">echo</span> <span class="variable">$kernel</span> || <span class="built_in">echo</span> <span class="string">&#x27;不符合要求&#x27;</span></span><br><span class="line"></span><br><span class="line">其他命令参考：</span><br><span class="line">uname <span class="literal">-r</span>|grep ^<span class="number">2</span>.[<span class="number">6</span>-<span class="number">9</span>] || <span class="built_in">echo</span> <span class="string">&#x27;不符合要求&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4、判断ftp服务是否已启动，如果已启动输出以下信息：</p><p>   vsftpd服务器已启动…<br>   vsftpd监听的端口是:<br>   vsftpd的进程PID是:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">参考<span class="number">1</span>：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">service vsftpd status &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">port=`netstat <span class="literal">-tnltp</span>|grep vsftpd|cut <span class="literal">-d</span>: <span class="literal">-f2</span>|cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">pid=`pgrep <span class="literal">-l</span> vsftpd|cut <span class="literal">-d</span> <span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;vsftpd服务器已启动...\nvsftpd监听的端口是:<span class="variable">$port</span>\nvsftpd的进程PID是:<span class="variable">$pid</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">service vsftpd <span class="built_in">start</span> &amp;&gt;/dev/null</span><br><span class="line">port=`netstat <span class="literal">-tnltp</span>|grep vsftpd|cut <span class="literal">-d</span>: <span class="literal">-f2</span>|cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">   pid=`pgrep <span class="literal">-l</span> vsftpd|cut <span class="literal">-d</span> <span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">   <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;vsftpd服务器已启动...\nvsftpd监听的端口是:<span class="variable">$port</span>\nvsftpd的进程PID是:<span class="variable">$pid</span>&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考<span class="number">2</span>：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell02</span>]<span class="comment"># cat liufeng.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">service <span class="variable">$1</span> status</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot; &#x27;<span class="variable">$1</span>&#x27;服务器已启动...&quot;</span></span><br><span class="line">        a=<span class="variable">$</span>( netstat <span class="literal">-tnulp</span> | grep <span class="variable">$1</span> )</span><br><span class="line">        array=(<span class="variable">$a</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>的监听端口是:<span class="variable">$</span>(echo <span class="variable">$</span>&#123;array[3]&#125; | cut -d: -f2) &quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>的进程ID为:<span class="variable">$</span>(echo <span class="variable">$</span>&#123;array[6]&#125;| cut -d/ -f1)&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>进程未启动！&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">参考<span class="number">3</span>：</span><br><span class="line">vim /lt/<span class="number">2</span>.sh</span><br><span class="line"><span class="comment">#! /bin/bash</span></span><br><span class="line">duankou=`netstat <span class="literal">-ntlp</span>|grep vsftpd|cut <span class="literal">-d</span>: <span class="literal">-f2</span>|cut <span class="literal">-d</span><span class="string">&quot; &quot;</span> <span class="literal">-f1</span>`</span><br><span class="line">pid=`pgrep <span class="literal">-o</span> vsftpd`</span><br><span class="line"></span><br><span class="line">vim <span class="number">1</span>.sh</span><br><span class="line">pgrep <span class="literal">-l</span> vsftpd &gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;vsftpd服务器已启动...&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;vsftpd监听的端口是：<span class="variable">$duankou</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;vsftpd的进程PID是：<span class="variable">$pid</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;vsftpd服务器没启动&quot;</span></span><br><span class="line">        service vsftpd <span class="built_in">start</span></span><br><span class="line">        source /lt/<span class="number">2</span>.sh</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二、循环语句"><a href="#二、循环语句" class="headerlink" title="二、循环语句"></a>二、循环语句</h3><h4 id="1-for循环"><a href="#1-for循环" class="headerlink" title="1. for循环"></a>1. for循环</h4><h5 id="1-1-语法结构"><a href="#1-1-语法结构" class="headerlink" title="1.1 语法结构"></a>1.1 语法结构</h5><ul><li>列表循环</li></ul><p>列表for循环：用于将一组命令执行<strong>已知的次数</strong>，下面给出了for循环语句的基本格式：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> &#123;list&#125;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">          command </span><br><span class="line">          command</span><br><span class="line">          …</span><br><span class="line">     done</span><br><span class="line">或者</span><br><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> a b c</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">         command</span><br><span class="line">         command</span><br><span class="line">     done</span><br></pre></td></tr></table></figure><p>语法结构举例说明：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1045</span>  <span class="keyword">for</span> var <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">10</span>&#125;;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"><span class="number">1046</span>  <span class="keyword">for</span> var <span class="keyword">in</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"><span class="number">1047</span>  <span class="keyword">for</span> var <span class="keyword">in</span> `seq <span class="number">10</span>`;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"><span class="number">1048</span>  <span class="keyword">for</span> var <span class="keyword">in</span> <span class="variable">$</span>(seq <span class="number">10</span>);<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"><span class="number">1049</span>  <span class="keyword">for</span> var <span class="keyword">in</span> &#123;<span class="number">0</span>..<span class="number">10</span>..<span class="number">2</span>&#125;;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"><span class="number">1050</span>  <span class="keyword">for</span> var <span class="keyword">in</span> &#123;<span class="number">2</span>..<span class="number">10</span>..<span class="number">2</span>&#125;;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"><span class="number">1051</span>  <span class="keyword">for</span> var <span class="keyword">in</span> &#123;<span class="number">10</span>..<span class="number">1</span>&#125;;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"><span class="number">1052</span>  <span class="keyword">for</span> var <span class="keyword">in</span> &#123;<span class="number">10</span>..<span class="number">1</span>..<span class="literal">-2</span>&#125;;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"><span class="number">1055</span>  <span class="keyword">for</span> var <span class="keyword">in</span> `seq <span class="number">10</span> <span class="literal">-2</span> <span class="number">1</span>`;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$var</span>;done</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>1.2 不带列表循环</li></ul><p>不带列表的for循环执行时由<strong>用户指定参数和参数的个数</strong>，下面给出了不带列表的for循环的基本格式：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> variable</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        command </span><br><span class="line">        command</span><br><span class="line">        …</span><br><span class="line">   done</span><br></pre></td></tr></table></figure><p>语法结构举例说明：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> var</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;脚本后面有<span class="variable">$</span>#个参数&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>1.3 类C风格的for循环</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(( expr1;expr2;expr3 ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">command</span><br><span class="line">command</span><br><span class="line">…</span><br><span class="line">done</span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">expr1：定义变量并赋初值</span><br><span class="line">expr2：决定是否进行循环（条件）</span><br><span class="line">expr3：决定循环变量如何改变，决定循环什么时候退出</span><br></pre></td></tr></table></figure><p><em><strong>语法结构举例说明：</strong></em></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1068</span>  <span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++));<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;done</span><br><span class="line"><span class="number">1069</span>  <span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i+=<span class="number">2</span>));<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;done</span><br><span class="line"><span class="number">1070</span>  <span class="keyword">for</span> ((i=<span class="number">2</span>;i&lt;=<span class="number">10</span>;i+=<span class="number">2</span>));<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;done</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1-2-举例说明"><a href="#1-2-举例说明" class="headerlink" title="1.2 举例说明"></a>1.2 举例说明</h5><p><strong>例1：</strong>计算1到100的奇数之和，方法不止一种</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">思路：</span><br><span class="line"><span class="number">1</span>. 定义一个变量来保存奇数的和sum=<span class="number">0</span></span><br><span class="line"><span class="number">2</span>. 找出<span class="number">1</span><span class="literal">-100</span>的奇数，保存到另一个变量里  i</span><br><span class="line"><span class="number">3</span>. 从<span class="number">1</span><span class="literal">-100</span>中找出奇数后，再相加，然后将和赋值给sum变量</span><br><span class="line"><span class="number">4</span>. 遍历完毕后，将sum的值打印出来</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义一个变量来保存奇数的和</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="comment">#打印1-100的奇数并且相加重新赋值给sum</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">100</span>..<span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">sum=<span class="variable">$</span>[ <span class="variable">$i</span> + <span class="variable">$sum</span> ]</span><br><span class="line">done</span><br><span class="line"><span class="comment">#打印1-100的奇数和</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义一个变量来保存奇数的和</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="comment">#打印1-100的奇数并且相加重新赋值给sum</span></span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i+=<span class="number">2</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">let sum=sum+<span class="variable">$i</span></span><br><span class="line">或者</span><br><span class="line">let sum=sum+i</span><br><span class="line">或者</span><br><span class="line">let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"><span class="comment">#打印1-100的奇数和</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line">let sum=sum+<span class="variable">$i</span></span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和是:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">[ <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; true  || let sum=sum+<span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和是:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">延伸：</span><br><span class="line">true真</span><br><span class="line">:真</span><br><span class="line">false 假</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法<span class="number">1</span>：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">100</span>..<span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">sum=<span class="variable">$</span>[<span class="variable">$i</span>+<span class="variable">$sum</span>]</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line">方法<span class="number">2</span>：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i+=<span class="number">2</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">let sum=<span class="variable">$i</span>+<span class="variable">$sum</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line">方法<span class="number">3</span>：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line">let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line">fi</span><br><span class="line">或者</span><br><span class="line">test <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] <span class="operator">-ne</span> <span class="number">0</span> &amp;&amp; let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line">方法<span class="number">4</span>：</span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">test <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] <span class="operator">-eq</span> <span class="number">0</span> &amp;&amp; <span class="keyword">continue</span> || let sum=sum+<span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和是:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>循环控制：</strong></p><p><strong>循环体：</strong> &#x3D;&#x3D;do….done&#x3D;&#x3D;之间的内容</p><ul><li>continue：继续；表示&#x3D;&#x3D;循环体&#x3D;&#x3D;内下面的代码不执行，重新开始下一次循环</li><li>break：打断；马上停止执行本次循环，执行&#x3D;&#x3D;循环体&#x3D;&#x3D;后面的代码</li><li>exit：表示直接跳出程序</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server ~]# cat for5.sh </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">for i in &#123;1..5&#125;</span><br><span class="line">do</span><br><span class="line">test $i -eq 2 &amp;&amp; break || touch /tmp/file$i</span><br><span class="line">done</span><br><span class="line">echo hello hahahah</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>例2：</strong>输入一个正整数,判断是否为质数(素数）<br>质数：只能被1和它本身整除的数叫质数。<br>2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">思路：</span><br><span class="line"><span class="number">0</span>. 让用户输入一个数，保存到一个变量里   read num</span><br><span class="line"><span class="number">1</span>、如果能被其他数整除就不是质数——&gt;<span class="variable">$num</span>%<span class="variable">$i</span> 是否等于<span class="number">0</span><span class="variable">$i</span>=<span class="number">2</span>~<span class="variable">$num</span><span class="literal">-1</span></span><br><span class="line"><span class="number">2</span>、如果输入的数是<span class="number">1</span>或者<span class="number">2</span>取模根据上面判断又不符合，所以先排除<span class="number">1</span>和<span class="number">2</span></span><br><span class="line"><span class="number">3</span>、测试序列从<span class="number">2</span>开始，输入的数是<span class="number">4</span>——&gt;得出结果<span class="variable">$num</span>不能和<span class="variable">$i</span>相等，并且<span class="variable">$num</span>不能小于<span class="variable">$i</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入一个正整数字:&quot;</span> number</span><br><span class="line"></span><br><span class="line">[ <span class="variable">$number</span> -<span class="type">eq</span> <span class="number">1</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>不是质数&quot;</span> &amp;&amp; <span class="keyword">exit</span></span><br><span class="line">[ <span class="variable">$number</span> -<span class="type">eq</span> <span class="number">2</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>是质数&quot;</span> &amp;&amp; <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="number">2</span> <span class="variable">$</span>[<span class="variable">$number</span>-<span class="number">1</span>]`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"> [ <span class="variable">$</span>[<span class="variable">$number</span>%<span class="variable">$i</span>] -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>不是质数&quot;</span> &amp;&amp; <span class="keyword">exit</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>是质数&quot;</span> &amp;&amp; <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">bash <span class="literal">-x</span> for6.sh</span><br></pre></td></tr></table></figure><p><strong>举例3：</strong>批量加5个新用户，以u1到u5命名，并统一加一个新组，组名为class,统一改密码为123</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">思路：</span><br><span class="line"><span class="number">1</span>. 添加用户的命令 useradd <span class="literal">-G</span></span><br><span class="line"><span class="number">2</span>. 判断<span class="class"><span class="keyword">class</span>组是否存在<span class="title">grep</span> -<span class="title">w</span> <span class="title">class</span> /<span class="title">etc</span>/<span class="title">group</span>；<span class="title">echo</span> $?</span></span><br><span class="line"><span class="class">3. 根据题意，判断该脚本循环5次来添加用户<span class="title">for</span>循环</span></span><br><span class="line"><span class="class">4. 给用户设置密码，应该放到循环体里面</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">#!/<span class="title">bin</span>/<span class="title">bash</span></span></span><br><span class="line"><span class="class">#判断<span class="title">class</span>组是否存在</span></span><br><span class="line"><span class="class"><span class="title">grep</span> -<span class="title">w</span> <span class="title">class</span> /<span class="title">etc</span>/<span class="title">group</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class">[ $? -<span class="title">ne</span> 0 ] &amp;&amp; <span class="title">groupadd</span> <span class="title">class</span></span></span><br><span class="line"><span class="class">#批量创建5个用户</span></span><br><span class="line"><span class="class"><span class="title">for</span> <span class="title">i</span> <span class="title">in</span></span> &#123;<span class="number">1</span>..<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">useradd <span class="literal">-G</span> <span class="class"><span class="keyword">class</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class"><span class="title">echo</span> 123|<span class="title">passwd</span> --<span class="title">stdin</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class"><span class="title">done</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">#!/<span class="title">bin</span>/<span class="title">bash</span></span></span><br><span class="line"><span class="class">#判断<span class="title">class</span>组是否存在</span></span><br><span class="line"><span class="class"><span class="title">cut</span> -<span class="title">d</span>: -<span class="title">f1</span> /<span class="title">etc</span>/<span class="title">group</span>|<span class="title">grep</span> -<span class="title">w</span> <span class="title">class</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class">[ $? -<span class="title">ne</span> 0 ] &amp;&amp; <span class="title">groupadd</span> <span class="title">class</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">#循环增加用户，循环次数5次，<span class="title">for</span>循环,给用户设定密码</span></span><br><span class="line"><span class="class"><span class="title">for</span> ((<span class="title">i</span>=1;<span class="title">i</span>&lt;=5;<span class="title">i</span>++))</span></span><br><span class="line"><span class="class"><span class="title">do</span></span></span><br><span class="line"><span class="class"><span class="title">useradd</span> <span class="title">u</span>$<span class="title">i</span> -<span class="title">G</span> <span class="title">class</span></span></span><br><span class="line"><span class="class"><span class="title">echo</span> 123|<span class="title">passwd</span> --<span class="title">stdin</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class"><span class="title">done</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">#!/<span class="title">bin</span>/<span class="title">bash</span></span></span><br><span class="line"><span class="class"><span class="title">grep</span> -<span class="title">w</span> <span class="title">class</span> /<span class="title">etc</span>/<span class="title">group</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class"><span class="title">test</span> $? -<span class="title">ne</span> 0 &amp;&amp; <span class="title">groupadd</span> <span class="title">class</span></span></span><br><span class="line"><span class="class">或者</span></span><br><span class="line"><span class="class"><span class="title">groupadd</span> <span class="title">class</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">for</span> ((<span class="title">i</span>=1;<span class="title">i</span>&lt;=5;<span class="title">i</span>++))</span></span><br><span class="line"><span class="class"><span class="title">do</span></span></span><br><span class="line"><span class="class"><span class="title">useradd</span> -<span class="title">G</span> <span class="title">class</span> <span class="title">u</span>$<span class="title">i</span> &amp;&amp; <span class="title">echo</span> 123|<span class="title">passwd</span> --<span class="title">stdin</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class"><span class="title">done</span></span></span><br><span class="line"><span class="class"></span></span><br></pre></td></tr></table></figure><h5 id="1-3-课堂练习"><a href="#1-3-课堂练习" class="headerlink" title="1.3 课堂练习"></a>1.3 课堂练习</h5><ol><li>批量新建5个用户stu1~stu5，要求这几个用户的家目录都在&#x2F;rhome.提示：需要判断该目录是否存在</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#判断/rhome是否存在</span></span><br><span class="line">[ -<span class="type">f</span> /<span class="type">rhome</span> ] &amp;&amp; <span class="built_in">mv</span> /rhome /rhome.bak</span><br><span class="line">test ! <span class="operator">-f</span> /rhome <span class="literal">-a</span> ! <span class="literal">-d</span> /rhome &amp;&amp; mkdir /rhome</span><br><span class="line">或者</span><br><span class="line">[ -<span class="type">f</span> /<span class="type">rhome</span> ] &amp;&amp; <span class="built_in">mv</span> /rhome /rhome.bak || [ ! -<span class="type">d</span> /<span class="type">rhome</span> ] &amp;&amp; mkdir /rhome </span><br><span class="line"><span class="comment">#创建用户，循环5次</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">useradd <span class="literal">-d</span> /rhome/stu<span class="variable">$i</span> stu<span class="variable">$i</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">123</span>|passwd <span class="literal">--stdin</span> stu<span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li><p>写一个脚本，局域网内，把能ping通的IP和不能ping通的IP分类，并保存到两个文本文件里,这是一个局域网内机器检查通讯的一个思路。</p><p>以10.1.1.1~10.1.1.10为例</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">ip=<span class="number">10.1</span>.<span class="number">1</span></span><br><span class="line"><span class="comment">#循环去ping主机的IP</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">ping <span class="literal">-c1</span> <span class="variable">$ip</span>.<span class="variable">$i</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is ok&quot;</span> &gt;&gt; /tmp/ip_up.txt</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is down&quot;</span> &gt;&gt; /tmp/ip_down.txt</span><br><span class="line">fi</span><br><span class="line">或者</span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is ok&quot;</span> &gt;&gt; /tmp/ip_up.txt || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is down&quot;</span> &gt;&gt; /tmp/ip_down.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell03</span>]<span class="comment"># time ./ping.sh         </span></span><br><span class="line"></span><br><span class="line">real    <span class="number">0</span>m24.<span class="number">129</span>s</span><br><span class="line">user    <span class="number">0</span>m0.<span class="number">006</span>s</span><br><span class="line">sys     <span class="number">0</span>m0.<span class="number">005</span>s</span><br><span class="line"></span><br><span class="line">并行执行：</span><br><span class="line">&#123;程序&#125;&amp;表示将程序放到后台并行执行，如果需要等待程序执行完毕再进行下面内容，需要加wait</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">ip=<span class="number">10.1</span>.<span class="number">1</span></span><br><span class="line"><span class="comment">#循环去ping主机的IP</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">        ping <span class="literal">-c1</span> <span class="variable">$ip</span>.<span class="variable">$i</span> &amp;&gt;/dev/null</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is ok&quot;</span> &gt;&gt; /tmp/ip_up.txt</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is down&quot;</span> &gt;&gt; /tmp/ip_down.txt</span><br><span class="line">        fi</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ip is ok....&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># time ./ping.sh </span></span><br><span class="line">ip is ok...</span><br><span class="line"></span><br><span class="line">real    <span class="number">0</span>m3.<span class="number">091</span>s</span><br><span class="line">user    <span class="number">0</span>m0.<span class="number">001</span>s</span><br><span class="line">sys     <span class="number">0</span>m0.<span class="number">008</span>s</span><br></pre></td></tr></table></figure><p>3、输入一个年份，判断是否是润年（能被4整除但不能被100整除，或能被400整除的年份即为闰年。）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;Please input year:(2017)&quot;</span> year</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$year</span>%<span class="number">4</span>] -<span class="type">eq</span> <span class="number">0</span> -<span class="type">a</span> <span class="variable">$</span>[<span class="variable">$year</span>%<span class="number">100</span>] -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$year</span> is leap year&quot;</span></span><br><span class="line">elif [ <span class="variable">$</span>[<span class="variable">$year</span>%<span class="number">400</span>] -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$year</span> is leap year&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$year</span> is not leap year&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h5 id="1-4-总结"><a href="#1-4-总结" class="headerlink" title="1.4 总结"></a>1.4 总结</h5><ul><li>FOR循环语法结构</li><li>FOR循环可以结合条件判断和流程控制语句<ul><li>do ……done  循环体</li><li>循环体里可以是命令集合，再加上条件判断以及流程控制</li></ul></li><li>控制循环语句<ul><li>continue  继续，跳过本次循环，继续下一次循环</li><li>break   打断，跳出循环，执行循环体外的代码</li><li>exit       退出，直接退出程序</li></ul></li></ul><h4 id="2-while循环"><a href="#2-while循环" class="headerlink" title="2. while循环"></a>2. while循环</h4><p><strong>特点：</strong>&#x3D;&#x3D;条件为真就进入循环；条件为假就退出循环&#x3D;&#x3D;</p><h5 id="2-1-语法结构"><a href="#2-1-语法结构" class="headerlink" title="2.1 语法结构"></a>2.1 语法结构</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 表达式</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">command...</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>  [ <span class="number">1</span> -<span class="type">eq</span> <span class="number">1</span> ] 或者 (( <span class="number">1</span> &gt; <span class="number">2</span> ))</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">     command</span><br><span class="line">     command</span><br><span class="line">     ...</span><br><span class="line"> done</span><br><span class="line">=========================================================</span><br><span class="line">打印<span class="number">1</span><span class="literal">-5</span>数字</span><br><span class="line"><span class="keyword">FOR</span>循环打印：</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>循环打印：</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">5</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">let i++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h5 id="2-2-举例说明"><a href="#2-2-举例说明" class="headerlink" title="2.2 举例说明"></a>2.2 举例说明</h5><p>需求：用while循环计算1-50的偶数和</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line">i=<span class="number">2</span></span><br><span class="line"><span class="comment">#循环打印1-50的偶数和并且计算后重新赋值给sum</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">50</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">let sum=sum+i</span><br><span class="line">let i+=<span class="number">2</span></span><br><span class="line">done</span><br><span class="line"><span class="comment">#打印sum的值</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-50的偶数和为:<span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-应用案例"><a href="#2-3-应用案例" class="headerlink" title="2.3 应用案例"></a>2.3 应用案例</h5><p><strong>需求：</strong></p><p>写一个30秒同步一次时间，向同步服务器10.1.1.250的脚本,如果同步失败，则进行邮件报警,每次失败都报警;同步成功,也进行邮件通知,但是成功100次才通知一次。</p><p><strong>分析：</strong></p><ul><li>每个30s同步一次时间，该脚本是一个死循环<ul><li>while true;do  同步时间，然后休息30s（sleep 30）done</li></ul></li><li>同步失败发送邮件<ul><li>在do…..done循环体之间加if…else…(判断同步失败还是成功)</li></ul></li><li>同步成功100次发送邮件<ul><li>统计成功次数——&gt;count&#x3D;0——&gt;成功1次加+1——&gt;let count++</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line">ntp_server=<span class="number">10.1</span>.<span class="number">1.250</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">rdate <span class="literal">-s</span> <span class="variable">$ntp</span><span class="literal">-server</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;system date failed&quot;</span> |mail <span class="literal">-s</span> <span class="string">&#x27;check system date&#x27;</span>  root@localhost</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">let count++</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$count</span>%<span class="number">100</span>] -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;system date successfull&quot;</span> |mail <span class="literal">-s</span> <span class="string">&#x27;check system date&#x27;</span>  root@localhost &amp;&amp; count=<span class="number">0</span></span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line"><span class="built_in">sleep</span> <span class="number">3</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">以上脚本还有更多的写法，课后自己完成</span><br></pre></td></tr></table></figure><h4 id="3-until循环"><a href="#3-until循环" class="headerlink" title="3. until循环"></a>3. until循环</h4><h5 id="3-1-语法结构"><a href="#3-1-语法结构" class="headerlink" title="3.1 语法结构"></a>3.1 语法结构</h5><p>特点：&#x3D;&#x3D;条件为假就进入循环；条件为真就退出循环&#x3D;&#x3D;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">until expression   [ 1 -eq 1 ]  (( 1 &gt;= 1 ))</span><br><span class="line">do</span><br><span class="line">command</span><br><span class="line">command</span><br><span class="line">...</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">while [ $i -le 5 ]</span><br><span class="line">do</span><br><span class="line">echo $i</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">until [ $i -gt 5 ]</span><br><span class="line">do</span><br><span class="line">echo $i</span><br><span class="line">let i++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h5 id="3-2-举例说明"><a href="#3-2-举例说明" class="headerlink" title="3.2 举例说明"></a>3.2 举例说明</h5><p>使用until语句批量创建10个用户，要求stu1—stu5用户的UID分别为1001—1005；stu6~stu10用户的家目录分别在&#x2F;rhome&#x2F;stu6—&#x2F;rhome&#x2F;stu10</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">until</span> [ <span class="variable">$i</span> -<span class="type">gt</span> <span class="number">10</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">5</span> ];then</span><br><span class="line">useradd <span class="literal">-u</span> <span class="variable">$</span>[<span class="number">1000</span>+<span class="variable">$i</span>] stu<span class="variable">$i</span> &amp;&amp; <span class="built_in">echo</span> <span class="number">123</span>|passwd <span class="literal">--stdin</span> stu<span class="variable">$i</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">[ ! -<span class="type">d</span> /<span class="type">rhome</span> ] &amp;&amp; mkdir /rhome</span><br><span class="line">useradd <span class="literal">-d</span> /rhome/stu<span class="variable">$i</span> stu<span class="variable">$i</span> &amp;&amp; <span class="built_in">echo</span> <span class="number">123</span>|passwd <span class="literal">--stdin</span> stu<span class="variable">$i</span></span><br><span class="line">fi</span><br><span class="line">let i++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="三、课后作业"><a href="#三、课后作业" class="headerlink" title="三、课后作业"></a>三、课后作业</h3><ol><li>判断&#x2F;tmp&#x2F;run目录是否存在，如果不存在就建立，如果存在就删除目录里所有文件</li><li>输入一个路径，判断路径是否存在，而且输出是文件还是目录，如果是链接文件，还得输出是  有效的连接还是无效的连接 </li><li>交互模式要求输入一个ip，然后脚本判断这个IP 对应的主机是否 能ping 通，输出结果类似于：<br>Server  10.1.1.20 is Down! 最后要求把结果邮件到本地管理员root@localhost mail01@localhost</li><li>写一个脚本&#x2F;home&#x2F;program，要求当给脚本输入参数hello时，脚本返回world,给脚本输入参数world时，脚本返回hello。而脚本没有参数或者参数错误时，屏幕上输出“usage:&#x2F;home&#x2F;program hello or world”</li><li>写一个脚本自动搭建nfs服务</li></ol>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01_SHELL编程之变量定义</title>
      <link href="/posts/7134.html"/>
      <url>/posts/7134.html</url>
      
        <content type="html"><![CDATA[<h2 id="SHELL编程"><a href="#SHELL编程" class="headerlink" title="SHELL编程"></a>SHELL编程</h2><ul><li><p>该课程主要包括以下内容：</p><p>① Shell的基本语法结构</p><p>如：变量定义、条件判断、循环语句(for、until、while)、分支语句、函数和数组等； </p><p>② 基本正则表达式的运用；</p><p>③ 文件处理三剑客：grep、sed、awk工具的使用；</p><p>④ 使用shell脚本完成一些较复杂的任务，如：服务搭建、批量处理等。</p><p><em><strong>说明：以上内容仅仅是基本要求，还有很多更深更难的语法需要扩充学习。</strong></em></p></li><li><p><strong>今日目标</strong></p><ul><li>熟悉grep、cut、sort等小工具和shell中的通配符的使用</li><li>&#x3D;&#x3D;熟练掌握shell变量的定义和获取（重点）&#x3D;&#x3D;</li><li>&#x3D;&#x3D;能够进行shell简单的四则运算&#x3D;&#x3D;</li><li>&#x3D;&#x3D;熟悉条件判断语句,如判断整数，判断字符串等&#x3D;&#x3D;</li></ul></li></ul><h2 id="学习前奏"><a href="#学习前奏" class="headerlink" title="学习前奏"></a>学习前奏</h2><h3 id="1-文件处理工具"><a href="#1-文件处理工具" class="headerlink" title="1. 文件处理工具"></a>1. 文件处理工具</h3><h4 id="1-1-grep工具"><a href="#1-1-grep工具" class="headerlink" title="1.1 grep工具"></a>1.1 grep工具</h4><p><strong>行</strong>过滤</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">grep用于根据关键字进行行过滤</span><br><span class="line">grep options <span class="string">&#x27;keys&#x27;</span> filename</span><br><span class="line">OPTIONS:</span><br><span class="line">    <span class="literal">-i</span>: 不区分大小写</span><br><span class="line">    <span class="literal">-v</span>: 查找不包含指定内容的行,反向选择</span><br><span class="line">    <span class="literal">-w</span>: 按单词搜索</span><br><span class="line">    <span class="literal">-o</span>: 打印匹配关键字</span><br><span class="line">    <span class="literal">-c</span>: 统计匹配到的次数</span><br><span class="line">    <span class="literal">-n</span>: 显示行号</span><br><span class="line">    <span class="literal">-r</span>: 逐层遍历目录查找</span><br><span class="line">    <span class="literal">-A</span>: 显示匹配行及后面多少行</span><br><span class="line">    <span class="literal">-B</span>: 显示匹配行及前面多少行</span><br><span class="line">    <span class="literal">-C</span>: 显示匹配行前后多少行</span><br><span class="line">    <span class="literal">-l</span>：只列出匹配的文件名</span><br><span class="line">    <span class="literal">-L</span>：列出不匹配的文件名</span><br><span class="line">    <span class="literal">-e</span>: 使用正则匹配</span><br><span class="line">    <span class="literal">-E</span>:使用扩展正则匹配</span><br><span class="line">    ^key:以关键字开头</span><br><span class="line">    key<span class="variable">$</span>:以关键字结尾</span><br><span class="line">    ^<span class="variable">$</span>:匹配空行</span><br><span class="line">    <span class="literal">--color</span>=auto ：可以将找到的关键词部分加上颜色的显示</span><br><span class="line"></span><br><span class="line">临时设置：</span><br><span class="line"><span class="comment"># alias grep=&#x27;grep --color=auto&#x27;//只针对当前终端和当前用户生效</span></span><br><span class="line"></span><br><span class="line">永久设置：</span><br><span class="line"><span class="number">1</span>）全局（针对所有用户生效）</span><br><span class="line">vim /etc/bashrc</span><br><span class="line">alias grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line">source /etc/bashrc</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）局部（针对具体的某个用户）</span><br><span class="line">vim ~/.bashrc</span><br><span class="line">alias grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"><span class="comment"># grep -i root passwd忽略大小写匹配包含root的行</span></span><br><span class="line"><span class="comment"># grep -w ftp passwd 精确匹配ftp单词</span></span><br><span class="line"><span class="comment"># grep -w hello passwd 精确匹配hello单词;自己添加包含hello的行到文件中</span></span><br><span class="line"><span class="comment"># grep -wo ftp passwd 打印匹配到的关键字ftp</span></span><br><span class="line"><span class="comment"># grep -n root passwd 打印匹配到root关键字的行好</span></span><br><span class="line"><span class="comment"># grep -ni root passwd 忽略大小写匹配统计包含关键字root的行</span></span><br><span class="line"><span class="comment"># grep -nic root passwd忽略大小写匹配统计包含关键字root的行数</span></span><br><span class="line"><span class="comment"># grep -i ^root passwd 忽略大小写匹配以root开头的行</span></span><br><span class="line"><span class="comment"># grep bash$ passwd 匹配以bash结尾的行</span></span><br><span class="line"><span class="comment"># grep -n ^$ passwd 匹配空行并打印行号</span></span><br><span class="line"><span class="comment"># grep ^# /etc/vsftpd/vsftpd.conf匹配以#号开头的行</span></span><br><span class="line"><span class="comment"># grep -v ^# /etc/vsftpd/vsftpd.conf匹配不以#号开头的行</span></span><br><span class="line"><span class="comment"># grep -A 5 mail passwd  匹配包含mail关键字及其后5行</span></span><br><span class="line"><span class="comment"># grep -B 5 mail passwd  匹配包含mail关键字及其前5行</span></span><br><span class="line"><span class="comment"># grep -C 5 mail passwd 匹配包含mail关键字及其前后5行</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-2-cut工具"><a href="#1-2-cut工具" class="headerlink" title="1.2 cut工具"></a>1.2 cut工具</h4><p><strong>列</strong>截取</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cut用于列截取</span><br><span class="line"><span class="literal">-c</span>:以字符为单位进行分割。</span><br><span class="line"><span class="literal">-d</span>:自定义分隔符，默认为制表符。\t</span><br><span class="line"><span class="operator">-f</span>:与<span class="literal">-d</span>一起使用，指定显示哪个区域。</span><br><span class="line"></span><br><span class="line"><span class="comment"># cut -d: -f1 1.txt 以:冒号分割，截取第1列内容</span></span><br><span class="line"><span class="comment"># cut -d: -f1,6,7 1.txt 以:冒号分割，截取第1,6,7列内容</span></span><br><span class="line"><span class="comment"># cut -c4 1.txt 截取文件中每行第4个字符</span></span><br><span class="line"><span class="comment"># cut -c1-4 1.txt 截取文件中每行的1-4个字符</span></span><br><span class="line"><span class="comment"># cut -c4-10 1.txt </span></span><br><span class="line"><span class="comment"># cut -c5- 1.txt 从第5个字符开始截取后面所有字符</span></span><br><span class="line"></span><br><span class="line">课堂练习：</span><br><span class="line">用小工具列出你当系统的运行级别。<span class="number">5</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="1-3-sort工具"><a href="#1-3-sort工具" class="headerlink" title="1.3 sort工具"></a>1.3 sort工具</h4><p><strong>排序</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>：将文件的每一行作为一个单位，从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</span><br><span class="line"></span><br><span class="line"><span class="literal">-u</span> ：去除重复行</span><br><span class="line"><span class="literal">-r</span> ：降序排列，默认是升序</span><br><span class="line"><span class="literal">-o</span> : 将排序结果输出到文件中  类似 重定向符号&gt;</span><br><span class="line"><span class="literal">-n</span> ：以数字排序，默认是按字符排序</span><br><span class="line"><span class="literal">-t</span> ：分隔符</span><br><span class="line"><span class="literal">-k</span> ：第N列</span><br><span class="line"><span class="literal">-b</span> ：忽略前导空格。</span><br><span class="line"><span class="literal">-R</span> ：随机排序，每次运行的结果均不同。</span><br><span class="line"> </span><br><span class="line"> 示例：</span><br><span class="line"><span class="comment"># sort -n -t: -k3 1.txt 按照用户的uid进行升序排列</span></span><br><span class="line"><span class="comment"># sort -nr -t: -k3 1.txt 按照用户的uid进行降序排列</span></span><br><span class="line"><span class="comment"># sort -n 2.txt 按照数字排序</span></span><br><span class="line"><span class="comment"># sort -nu 2.txt 按照数字排序并且去重</span></span><br><span class="line"><span class="comment"># sort -nr 2.txt </span></span><br><span class="line"><span class="comment"># sort -nru 2.txt </span></span><br><span class="line"><span class="comment"># sort -nru 2.txt </span></span><br><span class="line"><span class="comment"># sort -n 2.txt -o 3.txt 按照数字排序并将结果重定向到文件</span></span><br><span class="line"><span class="comment"># sort -R 2.txt </span></span><br><span class="line"><span class="comment"># sort -u 2.txt </span></span><br></pre></td></tr></table></figure><h4 id="1-4-uniq工具"><a href="#1-4-uniq工具" class="headerlink" title="1.4 uniq工具"></a>1.4 uniq工具</h4><p>去除<strong>连续</strong>的<strong>重复</strong>行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uniq：去除连续重复行</span><br><span class="line"><span class="literal">-i</span>: 忽略大小写</span><br><span class="line"><span class="literal">-c</span>: 统计重复行次数</span><br><span class="line"><span class="literal">-d</span>:只显示重复行</span><br><span class="line"></span><br><span class="line"><span class="comment"># uniq 2.txt </span></span><br><span class="line"><span class="comment"># uniq -d 2.txt </span></span><br><span class="line"><span class="comment"># uniq -dc 2.txt </span></span><br></pre></td></tr></table></figure><h4 id="1-5-tee工具"><a href="#1-5-tee工具" class="headerlink" title="1.5 tee工具"></a>1.5 tee工具</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span>工具从标准输入读取并写入标准输出和文件，即：双向覆盖重定向&lt;屏幕输出|文本输入&gt;</span><br><span class="line"><span class="literal">-a</span> 双向追加重定向</span><br><span class="line"></span><br><span class="line"><span class="comment"># echo hello world</span></span><br><span class="line"><span class="comment"># echo hello world|tee file1</span></span><br><span class="line"><span class="comment"># cat file1 </span></span><br><span class="line"><span class="comment"># echo 999|tee -a file1</span></span><br><span class="line"><span class="comment"># cat file1 </span></span><br></pre></td></tr></table></figure><h4 id="1-6-paste工具"><a href="#1-6-paste工具" class="headerlink" title="1.6 paste工具"></a>1.6 paste工具</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">paste工具用于合并文件行</span><br><span class="line"></span><br><span class="line"><span class="literal">-d</span>：自定义间隔符，默认是tab</span><br><span class="line"><span class="literal">-s</span>：串行处理，非并行</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># cat a.txt </span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># cat b.txt </span></span><br><span class="line">hello world</span><br><span class="line"><span class="number">888</span></span><br><span class="line"><span class="number">999</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># paste a.txt b.txt </span></span><br><span class="line">hello   hello world</span><br><span class="line">        <span class="number">888</span></span><br><span class="line">        <span class="number">999</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># paste b.txt a.txt   </span></span><br><span class="line">hello world     hello</span><br><span class="line"><span class="number">888</span></span><br><span class="line"><span class="number">999</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># paste -d&#x27;@&#x27; b.txt a.txt </span></span><br><span class="line">hello world@hello</span><br><span class="line"><span class="number">888</span><span class="selector-tag">@</span></span><br><span class="line"><span class="number">999</span><span class="selector-tag">@</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># paste -s b.txt a.txt </span></span><br><span class="line">hello world     <span class="number">888</span>     <span class="number">999</span></span><br><span class="line">hello</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-7-tr工具"><a href="#1-7-tr工具" class="headerlink" title="1.7 tr工具"></a>1.7 tr工具</h4><p>&#x3D;&#x3D;字符转换：替换，删除&#x3D;&#x3D;</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">tr用来从标准输入中通过替换或删除操作进行字符转换；主要用于删除文件中控制字符或进行字符转换。</span><br><span class="line">使用tr时要转换两个字符串：字符串<span class="number">1</span>用于查询，字符串<span class="number">2</span>用于处理各种转换。</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line">commands|tr  <span class="string">&#x27;string1&#x27;</span>  <span class="string">&#x27;string2&#x27;</span></span><br><span class="line">tr  <span class="string">&#x27;string1&#x27;</span>  <span class="string">&#x27;string2&#x27;</span> &lt; filename</span><br><span class="line"></span><br><span class="line">tr options <span class="string">&#x27;string1&#x27;</span> &lt; filename</span><br><span class="line"></span><br><span class="line"><span class="literal">-d</span> 删除字符串<span class="number">1</span>中所有输入字符。</span><br><span class="line"><span class="literal">-s</span> 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a<span class="literal">-z</span> 任意小写</span><br><span class="line">A<span class="literal">-Z</span> 任意大写</span><br><span class="line"><span class="number">0</span><span class="literal">-9</span> 任意数字</span><br><span class="line">  [:<span class="type">alnum</span>:]       all letters and digits所有字母和数字</span><br><span class="line">  [:<span class="type">alpha</span>:]       all letters所有字母</span><br><span class="line">  [:<span class="type">blank</span>:]       all horizontal whitespace所有水平空白</span><br><span class="line">  [:<span class="type">cntrl</span>:]       all control characters所有控制字符</span><br><span class="line">\b Ctrl<span class="literal">-H</span>  退格符</span><br><span class="line">\f Ctrl<span class="literal">-L</span>  走行换页</span><br><span class="line">\n Ctrl<span class="literal">-J</span>  新行</span><br><span class="line">\r Ctrl<span class="literal">-M</span>  回车</span><br><span class="line">\t Ctrl<span class="literal">-I</span>  tab键</span><br><span class="line">  [:<span class="type">digit</span>:]    all digits所有数字</span><br><span class="line">  [:<span class="type">graph</span>:]    all printable characters, not including space</span><br><span class="line">  所有可打印的字符，不包含空格</span><br><span class="line">  [:<span class="type">lower</span>:]       all lower case letters所有小写字母</span><br><span class="line">  [:<span class="type">print</span>:]       all printable characters, including space</span><br><span class="line">  所有可打印的字符，包含空格</span><br><span class="line">  [:<span class="type">punct</span>:]       all punctuation characters所有的标点符号</span><br><span class="line">  [:<span class="type">space</span>:]       all horizontal or vertical whitespace所有水平或垂直的空格</span><br><span class="line">  [:<span class="type">upper</span>:]       all upper case letters所有大写字母</span><br><span class="line">  [:<span class="type">xdigit</span>:]      all hexadecimal digits所有十六进制数字</span><br><span class="line">  [=<span class="built_in">CHAR</span>=]        all characters which are equivalent to CHAR所有字符</span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># cat 3.txt 自己创建该文件用于测试</span></span><br><span class="line">ROOT:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>:x:<span class="number">4</span>:<span class="number">7</span>:<span class="built_in">lp</span>:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:<span class="number">5</span>:<span class="number">0</span>:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:<span class="number">6</span>:<span class="number">0</span>:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:<span class="number">7</span>:<span class="number">0</span>:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:<span class="number">8</span>:<span class="number">12</span>:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">uucp:x:<span class="number">10</span>:<span class="number">14</span>:uucp:/var/spool/uucp:/sbin/nologin</span><br><span class="line">boss02:x:<span class="number">516</span>:<span class="number">511</span>::/home/boss02:/bin/bash</span><br><span class="line">vip:x:<span class="number">517</span>:<span class="number">517</span>::/home/vip:/bin/bash</span><br><span class="line">stu1:x:<span class="number">518</span>:<span class="number">518</span>::/home/stu1:/bin/bash</span><br><span class="line">mailnull:x:<span class="number">47</span>:<span class="number">47</span>::/var/spool/mqueue:/sbin/nologin</span><br><span class="line">smmsp:x:<span class="number">51</span>:<span class="number">51</span>::/var/spool/mqueue:/sbin/nologin</span><br><span class="line">aaaaaaaaaaaaaaaaaaaa</span><br><span class="line">bbbbbb111111122222222222233333333cccccccc</span><br><span class="line">hello world <span class="number">888</span></span><br><span class="line"><span class="number">666</span></span><br><span class="line"><span class="number">777</span></span><br><span class="line"><span class="number">999</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># tr -d &#x27;[:/]&#x27; &lt; 3.txt 删除文件中的:和/</span></span><br><span class="line"><span class="comment"># cat 3.txt |tr -d &#x27;[:/]&#x27;删除文件中的:和/</span></span><br><span class="line"><span class="comment"># tr &#x27;[0-9]&#x27; &#x27;@&#x27; &lt; 3.txt 将文件中的数字替换为@符号</span></span><br><span class="line"><span class="comment"># tr &#x27;[a-z]&#x27; &#x27;[A-Z]&#x27; &lt; 3.txt 将文件中的小写字母替换成大写字母</span></span><br><span class="line"><span class="comment"># tr -s &#x27;[a-z]&#x27; &lt; 3.txt 匹配小写字母并将重复的压缩为一个</span></span><br><span class="line"><span class="comment"># tr -s &#x27;[a-z0-9]&#x27; &lt; 3.txt 匹配小写字母和数字并将重复的压缩为一个</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:digit:]&#x27; &lt; 3.txt 删除文件中的数字</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:blank:]&#x27; &lt; 3.txt 删除水平空白</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:space:]&#x27; &lt; 3.txt 删除所有水平和垂直空白</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h4><ol><li>使用小工具分别截取当前主机IP；截取NETMASK；截取广播地址；截取MAC地址</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d &#x27;[a-zA-Z ]&#x27;|cut -d: -f2,3,4</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span>:<span class="number">10.1</span>.<span class="number">1.255</span>:<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d &#x27;[a-zA-Z ]&#x27;|cut -d: -f2,3,4|tr &#x27;:&#x27; &#x27;\n&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># ifconfig eth0|grep &#x27;HWaddr&#x27;|cut -d: -f2-|cut -d&#x27; &#x27; -f4</span></span><br><span class="line"><span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">25</span>:AE:<span class="number">54</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|cut -d: -f2|cut -d&#x27; &#x27; -f1</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|cut -d: -f2|tr -d &#x27;[ a-zA-Z]&#x27;</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|tr -d &#x27;[:a-zA-Z]&#x27;|tr &#x27; &#x27; &#x27;@&#x27;|tr -s &#x27;@&#x27;|tr &#x27;@&#x27; &#x27;\n&#x27;|grep -v ^$</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d [:alpha:]|tr &#x27;[ :]&#x27; &#x27;\n&#x27;|grep -v ^$</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep HWaddr|cut -d &#x27; &#x27; -f11</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep HWaddr|tr -s &#x27; &#x27;|cut -d&#x27; &#x27; -f5</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep HWaddr|tr -s &#x27; &#x27;|cut -d&#x27; &#x27; -f5</span></span><br></pre></td></tr></table></figure><ol start="2"><li>将系统中所有普通用户的用户名、密码和默认shell保存到一个文件中，要求用户名密码和默认shell之间用tab键分割</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># grep &#x27;bash$&#x27; passwd |grep -v &#x27;^root&#x27;|cut -d: -f1,2,7|tr &#x27;:&#x27; &#x27;\t&#x27;</span></span><br><span class="line">stu1    x       /bin/bash</span><br><span class="line">code    x       /bin/bash</span><br><span class="line">kefu    x       /bin/bash</span><br><span class="line">kefu1   x       /bin/bash</span><br><span class="line">kefu2   x       /bin/bash</span><br><span class="line">user01  x       /bin/bash</span><br><span class="line">stu2    x       /bin/bash</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># grep bash$ passwd |grep -viE &#x27;root|mysql&#x27;|cut -d: -f1,2,7|tr &#x27;:&#x27; &#x27;\t&#x27; |tee a.txt</span></span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line"><span class="literal">-E</span> 匹配扩展正则表达式，|代表或者，是一个扩展正则</span><br></pre></td></tr></table></figure><h3 id="2-编程语言分类"><a href="#2-编程语言分类" class="headerlink" title="2. 编程语言分类"></a>2. 编程语言分类</h3><ul><li><strong>编译型语言：</strong></li></ul><p>​    &#x3D;&#x3D;程序在执行之前需要一个专门的编译过程&#x3D;&#x3D;，把程序编译成为机器语言文件，运行时不需要重新翻译，直接使用编译的结果就行了。程序执行效率高，依赖编译器，跨平台性差些。如C、C++</p><ul><li><strong>解释型语言：</strong></li></ul><p>​    程序不需要编译，程序在运行时由**&#x3D;&#x3D;解释器&#x3D;&#x3D;**翻译成机器语言，每执行一次都要翻译一次。因此效率比较低。比如Python&#x2F;JavaScript&#x2F; Perl &#x2F;ruby&#x2F;Shell等都是解释型语言。</p><p><img src="/../assets/blog_res/01_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89.assets/%E8%AF%AD%E8%A8%80%E5%88%86%E7%B1%BB.png" alt="/语言分类"></p><ul><li><strong>总结：</strong></li></ul><p>编译型语言比解释型语言&#x3D;&#x3D;速度较快&#x3D;&#x3D;，但是不如解释型语言&#x3D;&#x3D;跨平台性好&#x3D;&#x3D;。如果做底层开发或者大型应用程序或者操作系开发一&#x3D;&#x3D;般都用编译型语言&#x3D;&#x3D;；如果是一些服务器脚本及一些辅助的接口，对速度要求不高、对各个平台的&#x3D;&#x3D;兼容性有要求&#x3D;&#x3D;的话则一般都用&#x3D;&#x3D;解释型语言&#x3D;&#x3D;。</p><h3 id="3-shell介绍"><a href="#3-shell介绍" class="headerlink" title="3. shell介绍"></a>3. shell介绍</h3><p><img src="/../assets/blog_res/01_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89.assets/00_shell%E4%BB%8B%E7%BB%8D.png" alt="00_shell介绍"></p><p><strong>总结：</strong></p><ul><li>&#x3D;&#x3D;shell就是人机交互的一个桥梁&#x3D;&#x3D;</li><li>shell的种类</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat /etc/shells </span></span><br><span class="line">/bin/sh<span class="comment">#是bash shell的一个快捷方式</span></span><br><span class="line">/bin/bash<span class="comment">#bash shell是大多数Linux默认的shell，包含的功能几乎可以涵盖shell所有的功能</span></span><br><span class="line">/sbin/nologin<span class="comment">#表示非交互，不能登录操作系统</span></span><br><span class="line">/bin/dash<span class="comment">#小巧，高效，功能相比少一些</span></span><br><span class="line">/bin/tcsh<span class="comment">#是csh的增强版，完全兼容csh</span></span><br><span class="line">/bin/csh<span class="comment">#具有C语言风格的一种shell，具有许多特性，但也有一些缺陷</span></span><br></pre></td></tr></table></figure><ul><li><p>用户在终端（终端就是bash的接口）输入命令</p><p>​ |<br>​            bash    &#x2F;&#x2F;bash就是shell的一种类型（bash shell）<br>​ |<br>​    kernel<br>​ |<br>​        物理硬件等</p></li></ul><p>###4. shell脚本</p><ul><li><p><strong>什么是shell脚本？</strong></p><ul><li>一句话概括</li></ul><p>简单来说就是将需要执行的命令保存到文本中，&#x3D;&#x3D;按照顺序执行&#x3D;&#x3D;。它是解释型的，意味着不需要编译。</p><ul><li>准确叙述</li></ul><p><strong>若干命令 + 脚本的基本格式 + 脚本特定语法 + 思想&#x3D; shell脚本</strong></p></li><li><p><strong>什么时候用到脚本？</strong></p><p>重复化、复杂化的工作，通过把工作的命令写成脚本，以后仅仅需要执行脚本就能完成这些工作。</p><p> ①自动化分析处理</p><p> ②自动化备份</p><p> ③自动化批量部署安装</p><p> ④等等… </p></li><li><p><strong>如何学习shell脚本？</strong></p></li></ul><ol><li>尽可能记忆更多的命令</li><li>掌握脚本的标准的格式（指定魔法字节、使用标准的执行方式运行脚本）</li><li>必须&#x3D;&#x3D;<strong>熟悉掌握</strong>&#x3D;&#x3D;脚本的基本语法（重点)</li></ol><ul><li><strong>学习脚本的秘诀：</strong></li></ul><p>多看（看懂）——&gt;多模仿（多练）——&gt;多思考</p><ul><li><strong>脚本的基本写法：</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">//脚本第一行， #！魔法字符，指定脚本代码执行的程序。即它告诉系统这个脚本需要什么解释器来执行，也就是使用哪一种Shell</span><br><span class="line"></span><br><span class="line">//以下内容是对脚本的基本信息的描述</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Name: 名字</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Desc:描述describe</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Path:存放路径</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Usage:用法</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Update:更新时间</span></span><br><span class="line"></span><br><span class="line">//下面就是脚本的具体内容</span><br><span class="line">commands</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li><p><strong>脚本执行方法：</strong></p><ul><li>标准脚本执行方法（建议）：（魔法字节指定的程序会生效）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@MissHou shell01]# cat 1.sh </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">xxxx</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">xxx</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">xxx</span></span><br><span class="line">hostname</span><br><span class="line">date</span><br><span class="line">[root@MissHou shell01]# chmod +x 1.sh </span><br><span class="line">[root@MissHou shell01]# ll</span><br><span class="line">total 4</span><br><span class="line">-rwxr-xr-x 1 root root 42 Jul 22 14:40 1.sh</span><br><span class="line">[root@MissHou shell01]# /shell/shell01/1.sh </span><br><span class="line">MissHou.itcast.cc</span><br><span class="line">Sun Jul 22 14:41:00 CST 2018</span><br><span class="line">[root@MissHou shell01]# ./1.sh </span><br><span class="line">MissHou.itcast.cc</span><br><span class="line">Sun Jul 22 14:41:30 CST 2018</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>非标准的执行方法（不建议）：（魔法字节指定的程序不会运作）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@MissHou shell01]# bash 1.sh </span><br><span class="line">MissHou.itcast.cc</span><br><span class="line">Sun Jul 22 14:42:51 CST 2018</span><br><span class="line">[root@MissHou shell01]# sh 1.sh</span><br><span class="line">MissHou.itcast.cc</span><br><span class="line">Sun Jul 22 14:43:01 CST 2018</span><br><span class="line">[root@MissHou shell01]# </span><br><span class="line">[root@MissHou shell01]# bash -x 1.sh</span><br><span class="line">+ hostname</span><br><span class="line">MissHou.itcast.cc</span><br><span class="line">+ date</span><br><span class="line">Sun Jul 22 14:43:20 CST 2018</span><br><span class="line"></span><br><span class="line">-x:一般用于排错，查看脚本的执行过程</span><br><span class="line">-n:用来查看脚本的语法是否有问题</span><br><span class="line"></span><br><span class="line">注意：如果脚本没有加可执行权限，不能使用标准的执行方法执行，bash 1.sh</span><br><span class="line"></span><br><span class="line">其他：</span><br><span class="line">[root@server shell01]# source 2.sh</span><br><span class="line">server</span><br><span class="line">Thu Nov 22 15:45:50 CST 2018</span><br><span class="line">[root@server shell01]# . 2.sh</span><br><span class="line">server</span><br><span class="line">Thu Nov 22 15:46:07 CST 2018</span><br><span class="line"></span><br><span class="line">source 和 . 表示读取文件，执行文件里的命令</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-bash基本特性"><a href="#5-bash基本特性" class="headerlink" title="5. bash基本特性"></a>5. bash基本特性</h3><p>####5.1 命令和文件自动补全</p><p>Tab只能补全命令和文件 （RHEL6&#x2F;Centos6）</p><p>####5.2 常见的快捷键</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">^c   终止前台运行的程序</span><br><span class="line">^z  将前台运行的程序挂起到后台</span><br><span class="line">^d   退出 等价<span class="keyword">exit</span></span><br><span class="line">^l   清屏 </span><br><span class="line">^a |home  光标移到命令行的最前端</span><br><span class="line">^e |<span class="keyword">end</span>  光标移到命令行的后端</span><br><span class="line">^u   删除光标前所有字符</span><br><span class="line">^k   删除光标后所有字符</span><br><span class="line">^r 搜索历史命令</span><br></pre></td></tr></table></figure><p>####5.3 常用的通配符（重点）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">*:匹配<span class="number">0</span>或多个任意字符</span><br><span class="line">?:匹配任意单个字符</span><br><span class="line">[<span class="type">list</span>]:匹配[<span class="type">list</span>]中的任意单个字符</span><br><span class="line">[!<span class="type">list</span>]: 匹配除list中的任意单个字符</span><br><span class="line">&#123;string1,string2,...&#125;：匹配string1,string2或更多字符串</span><br><span class="line"></span><br><span class="line">举例：</span><br><span class="line">touch file&#123;<span class="number">1</span>..<span class="number">3</span>&#125;</span><br><span class="line">touch file&#123;<span class="number">1</span>..<span class="number">13</span>&#125;.jpg</span><br><span class="line"><span class="comment"># ls file*</span></span><br><span class="line"><span class="comment"># ls *.jpg</span></span><br><span class="line"><span class="comment"># ll file?</span></span><br><span class="line"><span class="comment"># ll file?.jpg</span></span><br><span class="line"><span class="comment"># ll file??.jpg</span></span><br><span class="line"><span class="comment"># ll file1?.jpg</span></span><br><span class="line"><span class="comment"># ll file?.jpg</span></span><br><span class="line"><span class="comment"># ll file[1023].jpg</span></span><br><span class="line"><span class="comment"># ll file[0-13].jpg</span></span><br><span class="line"><span class="comment"># ll file1[0-9].jpg</span></span><br><span class="line"><span class="comment"># ll file[0-9].jpg</span></span><br><span class="line"><span class="comment"># ll file?[1-13].jpg</span></span><br><span class="line"><span class="comment"># ll file[1,2,3,10,11,12].jpg</span></span><br><span class="line"><span class="comment"># ll file1&#123;11,10,1,2,3&#125;.jpg</span></span><br><span class="line"><span class="comment"># ll file&#123;1..10&#125;.jpg</span></span><br><span class="line"><span class="comment"># ll file&#123;1...10&#125;.jpg</span></span><br></pre></td></tr></table></figure><p>####5.4 bash中的引号（重点）</p><ul><li>双引号””   :会把引号的内容当成整体来看待，允许通过$符号引用其他变量值</li><li>单引号’’     :会把引号的内容当成整体来看待，禁止引用其他变量值，shell中特殊符号都被视为普通字符</li><li>反撇号&#96;&#96;  :反撇号和$()一样，引号或括号里的命令会优先执行，如果存在嵌套，反撇号不能用</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo &quot;$(hostname)&quot;</span></span><br><span class="line">server</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo &#x27;$(hostname)&#x27;</span></span><br><span class="line"><span class="variable">$</span>(hostname)</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo &quot;hello world&quot;</span></span><br><span class="line">hello world</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo &#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo $(date +%F)</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo `echo $(date +%F)`</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo `date +%F`</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo `echo `date +%F``</span></span><br><span class="line">date +%F</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">dir1</span>]<span class="comment"># echo $(echo `date +%F`)</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11-22</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h2><p>###1. 变量的分类</p><ul><li><strong>本地变量</strong>：当前用户自定义的变量。当前进程中有效，其他进程及当前进程的子进程无效。</li><li><strong>环境变量</strong>：当前进程有效，并且能够被<strong>子进程</strong>调用。<ul><li>查看当前用户的环境变量<strong>env</strong></li><li>查询当前用户的所有变量(临时变量与环境变量)         **set **</li><li>**export    &#x2F;&#x2F;将当前变量变成环境变量 **</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">tmp</span>]<span class="comment"># export A=hello//临时将一个本地变量（临时变量）变成环境变量</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">tmp</span>]<span class="comment"># env|grep ^A</span></span><br><span class="line">A=hello</span><br><span class="line"></span><br><span class="line">永久生效：</span><br><span class="line">vim /etc/profile 或者 ~/.bashrc</span><br><span class="line">export A=hello</span><br><span class="line">或者</span><br><span class="line">A=hello</span><br><span class="line">export A</span><br><span class="line"></span><br><span class="line">说明：系统中有一个变量PATH，环境变量</span><br><span class="line">export PATH=/usr/local/mysql/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>全局变量</strong>：全局所有的用户和程序都能调用，且继承，新建的用户也默认能调用.</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$HOME</span>/.bashrc     当前用户的bash信息（aliase、umask等）</span><br><span class="line"><span class="variable">$HOME</span>/.bash_profile  当前用户的环境变量（）</span><br><span class="line">oracle——&gt;oracle用户——&gt;<span class="variable">$oracle</span>/.bash_profile——&gt;export home_install=/u01/app/xxx</span><br><span class="line"></span><br><span class="line"><span class="variable">$HOME</span>/.bash_logout  每个用户退出当前shell时最后读取的文件</span><br><span class="line"></span><br><span class="line">/etc/bashrc             使用bash shell用户全局变量</span><br><span class="line">grep <span class="literal">--color</span>=auto</span><br><span class="line">umask</span><br><span class="line"></span><br><span class="line">/etc/profile      系统和每个用户的环境变量信息</span><br><span class="line"></span><br><span class="line">mycat_home=/usr/local/mycat/bin</span><br><span class="line">export mycat_home</span><br><span class="line">执行mycat命令</span><br><span class="line"><span class="comment"># mycat</span></span><br><span class="line"><span class="variable">$</span> mycat</span><br><span class="line"></span><br><span class="line">用户登录系统读取相关文件的顺序：</span><br><span class="line">/etc/profile——&gt;<span class="variable">$HOME</span>/.bash_profile——&gt;<span class="variable">$HOME</span>/.bashrc——&gt;/etc/bashrc——&gt;<span class="variable">$HOME</span>/.bash_logout</span><br><span class="line"></span><br><span class="line">source /etc/bashrc</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>系统变量(内置bash中变量)</strong> ： shell本身已经固定好了它的名字和作用.</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>?：上一条命令执行后返回的状态，当返回状态值为<span class="number">0</span>时表示执行正常，非<span class="number">0</span>值表示执行异常或出错</span><br><span class="line"> 若退出状态值为<span class="number">0</span>，表示命令运行成功</span><br><span class="line"> 若退出状态值为<span class="number">127</span>,表示command not found</span><br><span class="line"> 若退出状态值为<span class="number">126</span>,表示找到了该命令但无法执行（权限不够）</span><br><span class="line"> 若退出状态值为<span class="number">1</span>&amp;<span class="number">2</span>,表示没有那个文件或目录</span><br><span class="line"> </span><br><span class="line"><span class="variable">$</span><span class="variable">$</span>：当前所在进程的进程号     <span class="built_in">echo</span> <span class="variable">$</span><span class="variable">$</span>   eg：<span class="built_in">kill</span> <span class="literal">-9</span> `echo <span class="variable">$</span><span class="variable">$</span>`  = <span class="keyword">exit</span>   退出当前会话</span><br><span class="line"><span class="variable">$</span>!：后台运行的最后一个进程号  （当前终端）  <span class="comment"># gedit &amp;</span></span><br><span class="line">!<span class="variable">$</span>调用最后一条命令历史中的参数</span><br><span class="line">!!调用最后一条命令历史</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span><span class="comment">#：脚本后面接的参数的个数</span></span><br><span class="line"><span class="variable">$</span>*：脚本后面所有参数，参数当成一个整体输出，每一个变量参数之间以空格隔开</span><br><span class="line"><span class="variable">$</span><span class="selector-tag">@</span>: 脚本后面所有参数，参数是独立的，也是全部输出</span><br><span class="line"></span><br><span class="line"><span class="variable">$0</span>：当前执行的进程/程序名  <span class="built_in">echo</span> <span class="variable">$0</span>    </span><br><span class="line"><span class="variable">$1</span>~<span class="variable">$9</span> 位置参数变量</span><br><span class="line"><span class="variable">$</span>&#123;<span class="number">10</span>&#125;~<span class="variable">$</span>&#123;n&#125; 扩展位置参数变量  第<span class="number">10</span>个位置变量必须用&#123;&#125;大括号括起来</span><br><span class="line">./<span class="number">1</span>.sh a b c</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># cat 2.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#xxxx</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$0</span> = <span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span># = <span class="variable">$</span>#&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span>* = <span class="variable">$</span>*&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span>@ = <span class="variable">$</span>@&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$1</span> = <span class="variable">$1</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$2</span> = <span class="variable">$2</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$3</span> = <span class="variable">$3</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$11</span> = <span class="variable">$</span>&#123;11&#125;&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$12</span> = <span class="variable">$</span>&#123;12&#125;&quot;</span> </span><br><span class="line"></span><br><span class="line">了解<span class="variable">$</span>*和<span class="variable">$</span><span class="selector-tag">@</span>的区别：</span><br><span class="line"><span class="variable">$</span>*:表示将变量看成一个整体</span><br><span class="line"><span class="variable">$</span><span class="selector-tag">@</span>:表示变量是独立的</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$</span>@&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;======我是分割线=======&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$</span>*&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># bash 3.sh a b c</span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">======我是分割线=======</span><br><span class="line">a b c</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>###2. 什么时候需要定义变量？</p><ul><li>如果某个内容需要多次使用，并且在代码中<strong>重复出现</strong>，那么可以用变量代表该内容。这样在修改内容的时候，仅仅需要修改变量的值。</li><li>在代码运作的过程中，可能会把某些命令的执行结果保存起来，后续代码需要使用这些结果，就可以直接使用这个变量。</li></ul><p>###3. 变量的定义规则</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 默认情况下，shell里定义的变量是不分类型的，可以给变量赋与任何类型的值；等号两边不能有空格，对于有空格的字符串做为赋值时，要用引号引起来</span><br><span class="line">变量名=变量值</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. 变量的获取方式：<span class="variable">$</span>变量名     <span class="variable">$</span>&#123;变量名&#125;</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># a=12345678</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># echo $a</span></span><br><span class="line"><span class="number">12345678</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;a&#125;</span></span><br><span class="line"><span class="number">12345678</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;a:2:3&#125;a表示变量名；2表示从第3个字符开始；3表示后面3个字符</span></span><br><span class="line"><span class="number">345</span></span><br><span class="line"></span><br><span class="line">如果获取变量的全部两个都可以；如果获取变量的某一部分，用<span class="variable">$</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. 取消变量:     unset  变量名</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>. 变量名区分大小写，同名称但大小写不同的变量名是不同的变量</span><br><span class="line"><span class="number">5</span>. 变量名可以是字母或数字或下划线，但是不能以数字开头或者特殊字符</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># 1a=hello</span></span><br><span class="line"><span class="literal">-bash</span>: <span class="number">1</span>a=hello: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># ?a=hello</span></span><br><span class="line"><span class="literal">-bash</span>: ?a=hello: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># _a=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># echo $_a</span></span><br><span class="line">hello</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>. 命令的执行结果可以保存到变量</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># kernel=`uname -r`</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $kernel</span></span><br><span class="line"><span class="number">2.6</span>.<span class="number">32</span><span class="literal">-431</span>.el6.x86_64</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># name=$(uname -n)</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $name</span></span><br><span class="line">server.itcast.cc</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>. 有类型变量 declare</span><br><span class="line"><span class="literal">-i</span> 将变量看成整数 </span><br><span class="line"><span class="literal">-r</span> 使变量只读  readonly</span><br><span class="line"><span class="literal">-x</span> 标记变量通过环境导出  export</span><br><span class="line"><span class="literal">-a</span>指定为索引数组（普通数组）；查看普通数组</span><br><span class="line"><span class="literal">-A</span> 指定为关联数组；查看关联数组</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># a=10</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># b=20</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $a+$b</span></span><br><span class="line"><span class="number">10</span>+<span class="number">20</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># declare -i a=2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># declare -i b=4</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># declare -i c=$a+$b</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $c</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># AAAA=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># export AAAA</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># env|grep AAAA</span></span><br><span class="line">AAAA=hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># declare -x BBBB=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># env|grep BBBB</span></span><br><span class="line">BBBB=hello</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">8</span>. 数组</span><br><span class="line">普通数组：只能使用整数作为数组索引(元素的下标)</span><br><span class="line">关联数组：可以使用字符串作为数组索引(元素的下标)</span><br><span class="line"></span><br><span class="line">普通数组定义：用括号来表示数组，数组元素(变量)用“空格”符号分割开。定义数组的一般形式为：</span><br><span class="line">一次赋一个值：</span><br><span class="line">变量名=变量值</span><br><span class="line">array[<span class="number">0</span>]=v1</span><br><span class="line">array[<span class="number">1</span>]=v2</span><br><span class="line">array[<span class="number">3</span>]=v3</span><br><span class="line">一次赋多个值：</span><br><span class="line">array=(var1 var2 var3 var4)</span><br><span class="line">array1=(`cat /etc/passwd`)//将文件中每一行赋值给array1数组</span><br><span class="line">array2=(`ls /root`)</span><br><span class="line">array3=(harry amy jack <span class="string">&quot;Miss Hou&quot;</span>)</span><br><span class="line">array4=(<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="string">&quot;hello world&quot;</span> [<span class="number">10</span>]=linux)</span><br><span class="line"></span><br><span class="line">读取数组：</span><br><span class="line"><span class="variable">$</span>&#123;array[<span class="type">i</span>]&#125;  i表示元素的下标</span><br><span class="line">使用<span class="selector-tag">@</span> 或 * 可以获取数组中的所有元素：</span><br><span class="line">获取第一个元素</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[<span class="number">0</span>]&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[*]&#125;获取数组里的所有元素</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;<span class="comment">#array[*]&#125;获取数组里所有元素个数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;!array[<span class="selector-tag">@</span>]&#125;    获取数组元素的索引下标</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[<span class="selector-tag">@</span>]:<span class="number">1</span>:<span class="number">2</span>&#125;    访问指定的元素；<span class="number">1</span>代表从下标为<span class="number">1</span>的元素开始获取；<span class="number">2</span>代表获取后面几个元素</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># array[0]=var1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># array[1]=var2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># array[2]=var3</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># array1=(uu1 uu2 uu3 uu4)</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># ls</span></span><br><span class="line"><span class="number">1</span>.sh  <span class="number">2</span>.sh  <span class="number">3</span>.sh  <span class="number">4</span>.sh  passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># array2=(`ls ./`)</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># array3=(jack harry &quot;Miss Hou&quot; [5]=tom)</span></span><br><span class="line"></span><br><span class="line">查看普通数组信息：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># declare -a</span></span><br><span class="line">declare <span class="literal">-a</span> array=<span class="string">&#x27;([0]=&quot;var1&quot; [1]=&quot;var2&quot; [2]=&quot;var3&quot;)&#x27;</span></span><br><span class="line">declare <span class="literal">-a</span> array1=<span class="string">&#x27;([0]=&quot;uu1&quot; [1]=&quot;uu2&quot; [2]=&quot;uu3&quot; [3]=&quot;uu4&quot;)&#x27;</span></span><br><span class="line">declare <span class="literal">-a</span> array2=<span class="string">&#x27;([0]=&quot;1.sh&quot; [1]=&quot;2.sh&quot; [2]=&quot;3.sh&quot; [3]=&quot;4.sh&quot; [4]=&quot;passwd&quot;)&#x27;</span></span><br><span class="line">declare <span class="literal">-a</span> array3=<span class="string">&#x27;([0]=&quot;jack&quot; [1]=&quot;harry&quot; [2]=&quot;Miss Hou&quot; [5]=&quot;tom&quot;)&#x27;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;array[*]&#125;</span></span><br><span class="line">var1 var2 var3</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;array[@]&#125;</span></span><br><span class="line">var1 var2 var3</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;array[2]&#125;</span></span><br><span class="line">var3</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;array2[@]&#125;</span></span><br><span class="line"><span class="number">1</span>.sh <span class="number">2</span>.sh <span class="number">3</span>.sh <span class="number">4</span>.sh passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;array2[3]&#125;</span></span><br><span class="line"><span class="number">4</span>.sh</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;array2[*]:2:2&#125;</span></span><br><span class="line"><span class="number">3</span>.sh <span class="number">4</span>.sh</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;#array2[*]&#125;</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;!array2[*]&#125;</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $&#123;!array3[*]&#125;</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">关联数组定义：</span><br><span class="line">首先声明关联数组</span><br><span class="line">declare <span class="literal">-A</span> asso_array1</span><br><span class="line">declare <span class="literal">-A</span> asso_array2</span><br><span class="line">declare <span class="literal">-A</span> asso_array3</span><br><span class="line"></span><br><span class="line">数组赋值：</span><br><span class="line">一次赋一个值：</span><br><span class="line">数组名[索引|下标]=变量值</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># asso_array1[linux]=one</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># asso_array1[java]=two</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># asso_array1[php]=three</span></span><br><span class="line">一次赋多个值：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># asso_array2=([name1]=harry [name2]=jack [name3]=amy [name4]=&quot;Miss Hou&quot;)</span></span><br><span class="line">查看关联数组：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># declare -A</span></span><br><span class="line">declare <span class="literal">-A</span> asso_array1=<span class="string">&#x27;([php]=&quot;three&quot; [java]=&quot;two&quot; [linux]=&quot;one&quot; )&#x27;</span></span><br><span class="line">declare <span class="literal">-A</span> asso_array2=<span class="string">&#x27;([name3]=&quot;amy&quot; [name2]=&quot;jack&quot; [name1]=&quot;harry&quot; [name4]=&quot;Miss Hou&quot; )&#x27;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;asso_array1[linux]&#125;</span></span><br><span class="line">one</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;asso_array1[php]&#125;</span></span><br><span class="line">three</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;asso_array1[*]&#125;</span></span><br><span class="line">three two one</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;!asso_array1[*]&#125;</span></span><br><span class="line">php java linux</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;#asso_array1[*]&#125;</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;#asso_array2[*]&#125;</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;!asso_array2[*]&#125;</span></span><br><span class="line">name3 name2 name1 name4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">9</span>. 交互式定义变量的值 read    主要用于让用户去定义变量值</span><br><span class="line"><span class="literal">-p</span> 提示信息</span><br><span class="line"><span class="literal">-n</span> 字符数 （限制变量值的字符数）</span><br><span class="line"><span class="literal">-s</span> 不显示   </span><br><span class="line"><span class="literal">-t</span> 超时（默认单位秒）（限制用户输入变量值的超时时间）</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># cat 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> <span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># read -p &quot;Input your IP and Netmask:&quot; ip mask &lt; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># echo $ip</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># echo $mask</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">10</span>. 其他变量（扩展）</span><br><span class="line"><span class="number">1</span>）取出一个目录下的目录和文件：dirname和 basename </span><br><span class="line"><span class="number">2</span>）变量<span class="string">&quot;内容&quot;</span>的删除和替换</span><br><span class="line">一个“%”代表从右往左去掉一个/key/</span><br><span class="line">两个“%%”代表从右往左最大去掉/key/</span><br><span class="line">一个“<span class="comment">#”代表从左往右去掉一个/key/</span></span><br><span class="line">两个“<span class="comment">##”代表从左往右最大去掉/key/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A=/root/Desktop/shell/mem.txt </span></span><br><span class="line"><span class="comment"># echo $A</span></span><br><span class="line">/root/Desktop/shell/mem.txt</span><br><span class="line"><span class="comment"># dirname $A   取出目录</span></span><br><span class="line">/root/Desktop/shell</span><br><span class="line"><span class="comment"># basename $A  取出文件</span></span><br><span class="line">mem.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># url=www.taobao.com</span></span><br><span class="line"><span class="comment"># echo $&#123;#url&#125;     获取变量的长度</span></span><br><span class="line"><span class="comment"># echo $&#123;url#*.&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url##*.&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url%.*&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url%%.*&#125;</span></span><br><span class="line"></span><br><span class="line">++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line">以下内容自己完成：</span><br><span class="line">替换：/ 和 //</span><br><span class="line"> <span class="number">1015</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;url/ao/AO&#125;</span><br><span class="line"> <span class="number">1017</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;url//ao/AO&#125;   贪婪替换</span><br><span class="line"> </span><br><span class="line">替代： - 和 :-  +和:+</span><br><span class="line"> <span class="number">1019</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1020</span>  abc=hello</span><br><span class="line"> <span class="number">1021</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-444</span>&#125;</span><br><span class="line"> <span class="number">1022</span>  <span class="built_in">echo</span> <span class="variable">$abc</span></span><br><span class="line"> <span class="number">1024</span>  abc=</span><br><span class="line"> <span class="number">1025</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-222</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名-新的变量值&#125; 或者 <span class="variable">$</span>&#123;变量名=新的变量值&#125;</span><br><span class="line">变量没有被赋值：会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值（包括空值）： 不会被替代</span><br><span class="line"></span><br><span class="line"> <span class="number">1062</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1063</span>  ABC=HELLO</span><br><span class="line"> <span class="number">1064</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1065</span>  ABC=</span><br><span class="line"> <span class="number">1066</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名:-新的变量值&#125; 或者 <span class="variable">$</span>&#123;变量名:=新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值：会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值： 不会被替代</span><br><span class="line"></span><br><span class="line"> <span class="number">1116</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc=<span class="number">123</span>&#125;</span><br><span class="line"> <span class="number">1118</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc:=<span class="number">123</span>&#125;</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名+新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值：不会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值： 会被替代</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="variable">$</span>&#123;变量名:+新的变量值&#125;</span><br><span class="line">变量没有被赋值：不会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值（包括空值）： 会被替代</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名?新的变量值&#125;</span><br><span class="line">变量没有被赋值:提示错误信息</span><br><span class="line">变量被赋值（包括空值）：不会使用“新的变量值“ 替代</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名:?新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值时:提示错误信息</span><br><span class="line">变量被赋值：不会使用“新的变量值“ 替代</span><br><span class="line"></span><br><span class="line">说明：?主要是当变量没有赋值提示错误信息的，没有赋值功能</span><br></pre></td></tr></table></figure><p>##简单的四则运算</p><p>算术运算：默认情况下，shell就只能支持简单的&#x3D;&#x3D;整数&#x3D;&#x3D;运算</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ - * /  %（取模，求余数） </span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">Bash shell 的算术运算有四种方式:</span><br><span class="line"><span class="number">1</span>. 使用 <span class="variable">$</span>(( ))</span><br><span class="line"><span class="number">2</span>. 使用<span class="variable">$</span>[ ]</span><br><span class="line"><span class="number">3</span>. 使用 expr 外部程式</span><br><span class="line"><span class="number">4</span>. 使用let 命令</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">n=<span class="number">1</span></span><br><span class="line">let n+=<span class="number">1</span>  等价于let n=n+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">思考：能不能用shell做小数运算？</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo 1+1.5|bc</span></span><br><span class="line"><span class="number">2.5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i++ 和 ++i （了解）</span><br><span class="line">对变量的值的影响：</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># i=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># let i++</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># echo $i</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># j=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># let ++j</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># echo $j</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line">对表达式的值的影响：</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># unset i j</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># i=1;j=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># let x=i++         先赋值，再运算</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># let y=++j         先运算，再赋值</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># echo $i</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># echo $j</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># echo $x</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># echo $y</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>(())  <span class="variable">$</span>[]</span><br><span class="line">expr 注意空格，*要进行转义 \</span><br><span class="line"></span><br><span class="line">let n+=<span class="number">1</span>  等价   let n=n+<span class="number">1</span></span><br><span class="line">let n=n**<span class="number">5</span>n有初值，然后求次幂</span><br><span class="line"></span><br><span class="line">i++++i</span><br><span class="line">对变量本身没有影响（自己+<span class="number">1</span>）；</span><br><span class="line">表达式中有影响；i++ 先赋值再运算  ++i先运算再赋值</span><br><span class="line">let x=i++   let x=++i</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>##条件判断</p><p>###1. 语法格式</p><ul><li>格式1： &#x3D;&#x3D;<strong>test</strong>&#x3D;&#x3D; 条件表达式</li><li>格式2： <strong>[</strong> 条件表达式 ]</li><li>格式3： <strong>[[</strong> 条件表达式 ]]  支持正则 &#x3D;~</li></ul><p><strong>说明：</strong></p><p><em><strong>man test去查看，很多的参数都用来进行条件判断</strong></em></p><p>###2. 条件判断相关参数</p><ul><li><strong>与文件存在与否的判断</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-e</span>是否存在   不管是文件还是目录，只要存在，条件就成立</span><br><span class="line"><span class="operator">-f</span>是否为普通文件</span><br><span class="line"><span class="literal">-d</span>是否为目录</span><br><span class="line"><span class="literal">-S</span>socket</span><br><span class="line"><span class="literal">-p</span>pipe</span><br><span class="line"><span class="literal">-c</span>character</span><br><span class="line"><span class="literal">-b</span>block</span><br><span class="line"><span class="literal">-L</span>软link</span><br><span class="line"></span><br><span class="line">三种语法格式：</span><br><span class="line">test <span class="literal">-e</span> file只要文件存在条件为真</span><br><span class="line">[ -<span class="type">d</span> /<span class="type">shell01</span>/<span class="type">dir1</span> ] 判断目录是否存在，存在条件为真</span><br><span class="line">[ ! -<span class="type">d</span> /<span class="type">shell01</span>/<span class="type">dir1</span> ]判断目录是否存在,不存在条件为真</span><br><span class="line">[[ -<span class="type">f</span> /<span class="type">shell01</span>/<span class="number">1</span><span class="type">.sh</span> ]]判断文件是否存在，并且是一个普通的文件</span><br><span class="line"></span><br><span class="line"><span class="literal">-s</span> 判断文件是否有内容（大小），非空文件条件满足</span><br><span class="line">说明：<span class="literal">-s</span>表示非空，！ <span class="literal">-s</span> 表示空文件</span><br><span class="line">说明：<span class="number">1</span>.sh文件里有内容的。</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># test -s 1.sh</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># touch aaa</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># cat aaa</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># test -s aaa</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># test ! -s aaa</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># test ! -s 1.sh</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>文件权限相关的判断</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-r</span>当前用户对其是否可读</span><br><span class="line"><span class="literal">-w</span>当前用户对其是否可写</span><br><span class="line"><span class="literal">-x</span>当前用户对其是否可执行</span><br><span class="line"><span class="literal">-u</span>是否有suid</span><br><span class="line"><span class="literal">-g</span>是否sgid</span><br><span class="line"><span class="literal">-k</span>是否有t位</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>两个文件的比较判断</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">file1 <span class="literal">-nt</span>  file2比较file1是否比file2新</span><br><span class="line">file1 <span class="literal">-ot</span>  file2 比较file1是否比file2旧</span><br><span class="line">file1 <span class="literal">-ef</span>  file2比较是否为同一个文件，或者用于判断硬连接，是否指向同一个inode</span><br><span class="line"></span><br><span class="line">test file1 <span class="literal">-nt</span> file2</span><br><span class="line">[ <span class="type">file1</span> -<span class="type">ot</span> <span class="type">file2</span> ]</span><br></pre></td></tr></table></figure><ul><li><strong>整数之间的判断</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">-eq</span>相等</span><br><span class="line"><span class="operator">-ne</span>不等</span><br><span class="line"><span class="operator">-gt</span>大于</span><br><span class="line"><span class="operator">-lt</span>小于</span><br><span class="line"><span class="operator">-ge</span>   大于等于</span><br><span class="line"><span class="operator">-le</span>小于等于</span><br></pre></td></tr></table></figure><ul><li><strong>字符串之间的判断</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-z</span>  是否为空字符串   字符串长度为<span class="number">0</span>，就成立</span><br><span class="line"><span class="literal">-n</span>  是否为非空字符串    只要字符串非空，就是成立</span><br><span class="line">string1 = string2 是否相等</span><br><span class="line">string1 != string2 不等</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># AAA=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># BBB=world</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># test -z $AAA</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># test -n $AAA</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># [ $AAA = $BBB ]</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># [ $AAA != $BBB ]</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>多重条件判断</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">逻辑判断符号：</span><br><span class="line"> <span class="literal">-a</span>     和 &amp;&amp;  (and 逻辑与) 两个条件同时满足，整个大条件为真</span><br><span class="line"> <span class="literal">-o</span>     和 ||(or 逻辑或)  两个条件满足任意一个，整个大条件为真</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">[ <span class="number">1</span> -<span class="type">eq</span> <span class="number">1</span> -<span class="type">a</span> <span class="number">1</span> -<span class="type">ne</span> <span class="number">0</span> ]整个表达式为真</span><br><span class="line">[ <span class="number">1</span> -<span class="type">eq</span> <span class="number">1</span> ] &amp;&amp; [ <span class="number">1</span> -<span class="type">ne</span> <span class="number">0</span> ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[ <span class="number">1</span> -<span class="type">eq</span> <span class="number">1</span> -<span class="type">o</span> <span class="number">1</span> -<span class="type">ne</span> <span class="number">1</span> ]整个表达式为真</span><br><span class="line">[ <span class="number">1</span> -<span class="type">eq</span> <span class="number">1</span> ] || [ <span class="number">1</span> -<span class="type">ne</span> <span class="number">1</span> ]</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># [ 1 -eq 0 ] &amp;&amp; echo true || echo false</span></span><br><span class="line">false</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell01</span>]<span class="comment"># [ 1 -eq 1 ] &amp;&amp; echo true || echo false</span></span><br><span class="line">true</span><br><span class="line"></span><br><span class="line">&amp;&amp;:前面的表达式为真</span><br><span class="line">||：前面的表达式为假</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">总结：</span><br><span class="line"><span class="number">1</span>、; &amp;&amp; ||都可以用来分割命令或者表达式</span><br><span class="line"><span class="number">2</span>、; 完全不考虑前面的语句是否正确执行，都会执行;号后面的内容</span><br><span class="line"><span class="number">3</span>、&amp;&amp; 需要考虑&amp;&amp;前面的语句的正确性，前面语句正确执行才会执行&amp;&amp;后的内容；反之亦然</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="number">4</span>、|| 需要考虑||前面的语句的非正确性，前面语句执行错误才会执行||后的内容；反之亦然</span><br><span class="line"><span class="number">5</span>、如果&amp;&amp;和||一起出现，从左往右依次看，按照以上原则</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>###3. 示例</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">数值比较：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ $(id -u) -eq 0 ] &amp;&amp; echo &quot;the user is admin&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="variable">$</span> [ <span class="variable">$</span>(<span class="type">id</span> -<span class="type">u</span>) -<span class="type">ne</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;the user is not admin&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="variable">$</span> [ <span class="variable">$</span>(<span class="type">id</span> -<span class="type">u</span>) -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;the user is admin&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;the user is not admin&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># uid=`id -u`</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># test $uid -eq 0 &amp;&amp; echo this is admin</span></span><br><span class="line">this is admin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ $(id -u) -ne 0 ]  || echo this is admin</span></span><br><span class="line">this is admin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ $(id -u) -eq 0 ]  &amp;&amp; echo this is admin || echo this is not admin</span></span><br><span class="line">this is admin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># su - stu1</span></span><br><span class="line">[<span class="type">stu1</span>@<span class="type">server</span> ~]<span class="variable">$</span> [ <span class="variable">$</span>(<span class="type">id</span> -<span class="type">u</span>) -<span class="type">eq</span> <span class="number">0</span> ]  &amp;&amp; <span class="built_in">echo</span> this is admin || <span class="built_in">echo</span> this is not admin</span><br><span class="line">this is not admin</span><br><span class="line">[<span class="type">stu1</span>@<span class="type">server</span> ~]<span class="variable">$</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">类C风格的数值比较：</span><br><span class="line">注意：在(( ))中，=表示赋值；==表示判断</span><br><span class="line"> <span class="number">1159</span>  ((<span class="number">1</span>==<span class="number">2</span>));<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1160</span>  ((<span class="number">1</span>&lt;<span class="number">2</span>));<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1161</span>  ((<span class="number">2</span>&gt;=<span class="number">1</span>));<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1162</span>  ((<span class="number">2</span>!=<span class="number">1</span>));<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1163</span>  ((`id <span class="literal">-u</span>`==<span class="number">0</span>));<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> </span><br><span class="line"> <span class="number">1209</span>  ((a=<span class="number">123</span>));<span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"> <span class="number">1210</span>  unset a</span><br><span class="line"> <span class="number">1211</span>  ((a==<span class="number">123</span>));<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">字符串比较：</span><br><span class="line">注意：双引号引起来，看作一个整体；= 和 == 在 [ 字符串 ] 比较中都表示判断</span><br><span class="line"> <span class="number">1196</span>  a=<span class="string">&#x27;hello world&#x27;</span>;b=world</span><br><span class="line"> <span class="number">1197</span>  [ <span class="variable">$a</span> = <span class="variable">$b</span> ];<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1198</span>  [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> = <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ];<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1199</span>  [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> != <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ];<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1200</span>  [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> !== <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ];<span class="built_in">echo</span> <span class="variable">$</span>?        错误</span><br><span class="line"> <span class="number">1201</span>  [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> == <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ];<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1202</span>  test <span class="string">&quot;<span class="variable">$a</span>&quot;</span> != <span class="string">&quot;<span class="variable">$b</span>&quot;</span>;<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">思考：[ ] 和 [[ ]] 有什么区别？</span><br><span class="line"></span><br><span class="line"> <span class="number">1213</span>  a=</span><br><span class="line"> <span class="number">1214</span>  test <span class="literal">-z</span> <span class="variable">$a</span>;<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1215</span>  a=hello</span><br><span class="line"> <span class="number">1216</span>  test <span class="literal">-z</span> <span class="variable">$a</span>;<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1217</span>  test <span class="literal">-n</span> <span class="variable">$a</span>;<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1217</span>  test <span class="literal">-n</span> <span class="string">&quot;<span class="variable">$a</span>&quot;</span>;<span class="built_in">echo</span> <span class="variable">$</span>?</span><br><span class="line"></span><br><span class="line"><span class="comment"># [ &#x27;&#x27; = $a ];echo $?</span></span><br><span class="line"><span class="literal">-bash</span>: [: : <span class="type">unary</span> <span class="type">operator</span> <span class="type">expected</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="comment"># [[ &#x27;&#x27; = $a ]];echo $?</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="number">1278</span>  [ <span class="number">1</span> -<span class="type">eq</span> <span class="number">0</span> -<span class="type">a</span> <span class="number">1</span> -<span class="type">ne</span> <span class="number">0</span> ];<span class="type">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1279</span>  [ <span class="number">1</span> -<span class="type">eq</span> <span class="number">0</span> &amp;&amp; <span class="number">1</span> -<span class="type">ne</span> <span class="number">0</span> ];<span class="type">echo</span> <span class="variable">$</span>?</span><br><span class="line"> <span class="number">1280</span>  [[ <span class="number">1</span> -<span class="type">eq</span> <span class="number">0</span> &amp;&amp; <span class="number">1</span> -<span class="type">ne</span> <span class="number">0</span> ]];<span class="type">echo</span> <span class="variable">$</span>?</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h3>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown的使用说明</title>
      <link href="/posts/20040.html"/>
      <url>/posts/20040.html</url>
      
        <content type="html"><![CDATA[<h1 id="markdown的使用说明"><a href="#markdown的使用说明" class="headerlink" title="markdown的使用说明"></a>markdown的使用说明</h1><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><blockquote><p>语法：# (一级标题)  ## (二级标题)  ### (三级标题) ……</p></blockquote><blockquote><p>代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;# 这是一级标题</span><br><span class="line">&gt;## 这是二级标题</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:  </p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2></blockquote><blockquote><p>快捷键:</p><ul><li>Ctrl+数字1~6可以快速将选中的文本调成对应级别的标题</li><li>Ctrl+0可以快速将选中的文本调成普通文本</li><li>Ctrl+加号&#x2F;减号对标题级别进行加减</li></ul></blockquote><h2 id="二、段落"><a href="#二、段落" class="headerlink" title="二、段落"></a>二、段落</h2><h3 id="1、换行"><a href="#1、换行" class="headerlink" title="1、换行"></a>1、换行</h3><blockquote><p>代码:  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是一个段落</span><br><span class="line">&gt;这是一个段落</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果: </p><p>这是一个段落<br>这是一个段落</p></blockquote><h3 id="2、分割线"><a href="#2、分割线" class="headerlink" title="2、分割线"></a>2、分割线</h3><blockquote><p>语法:  —或者***+回车</p></blockquote><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;---或者***</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:</p><hr></blockquote><h2 id="三、文字显示"><a href="#三、文字显示" class="headerlink" title="三、文字显示"></a>三、文字显示</h2><h3 id="1、字体"><a href="#1、字体" class="headerlink" title="1、字体"></a>1、字体</h3><blockquote><p>语法:</p><ul><li>粗体:  用一对双星号包裹</li><li>删除线:  用一对双飘号包裹</li><li>下划线:  用一对u标签包裹</li><li>斜体:  用一对单星号包裹</li><li>高亮:  用一对双等号包裹</li></ul></blockquote><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;**这是粗体**</span><br><span class="line">&gt;~~这是删除线~~</span><br><span class="line">&gt;&lt;u&gt;这是下划线&lt;/u&gt;</span><br><span class="line">&gt;*这是斜体*</span><br><span class="line">&gt;==这是高亮==</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br><strong>这是粗体</strong><br><del>这是删除线</del><br><u>这是下划线</u><br><em>这是斜体</em><br>&#x3D;&#x3D;这是高亮&#x3D;&#x3D;</p></blockquote><blockquote><p>快捷键:</p><ul><li>加粗:  Ctrl+B</li><li>删除线:  Shift+Alt+5</li><li>下划线:  Ctrl+U</li><li>斜体:  Ctrl+I</li></ul></blockquote><h3 id="2、上下标"><a href="#2、上下标" class="headerlink" title="2、上下标"></a>2、上下标</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;x^2^</span><br><span class="line">&gt;H~2~O</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>x^2^<br>H<del>2</del>O</p></blockquote><h2 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h2><h3 id="1、无序列表"><a href="#1、无序列表" class="headerlink" title="1、无序列表"></a>1、无序列表</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;*/-/+ +空格</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>1.只有同一级别:</p><ul><li>苹果</li><li>香蕉</li><li>橘子</li></ul><p>2.子集类:</p><ul><li>一级分类<ul><li>二级分类 <ul><li>三级分类</li></ul></li></ul></li></ul></blockquote><blockquote><p>快捷键:  Ctrl+Shift+]</p></blockquote><h3 id="2、有序列表"><a href="#2、有序列表" class="headerlink" title="2、有序列表"></a>2、有序列表</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;数字+.+空格</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:</p><ol><li>第一个标题</li><li>第二个标题</li><li>第三个标题</li></ol><ul><li>子内容1</li><li>子内容2</li></ul><ol start="4"><li>第四个标题</li></ol></blockquote><blockquote><p>快捷键:  Ctrl+Shift+[</p></blockquote><h3 id="3、任务列表"><a href="#3、任务列表" class="headerlink" title="3、任务列表"></a>3、任务列表</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;- [ ] 吃早餐</span><br><span class="line">&gt;- [x] 背单词</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:</p><ul><li><input disabled="" type="checkbox"> 吃早餐</li><li><input checked="" disabled="" type="checkbox"> 背单词</li></ul></blockquote><h2 id="五、区块显示"><a href="#五、区块显示" class="headerlink" title="五、区块显示"></a>五、区块显示</h2><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;+回车</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:</p><blockquote><p>这是最外层区块</p><blockquote><p>这是内层区块</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>这是最内层区块</p></blockquote></blockquote></blockquote></blockquote><h2 id="六、代码显示"><a href="#六、代码显示" class="headerlink" title="六、代码显示"></a>六、代码显示</h2><h3 id="1、行内代码"><a href="#1、行内代码" class="headerlink" title="1、行内代码"></a>1、行内代码</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;`int a=0;`（说明：`位于Esc下面）</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br><code>int a=0;</code></p></blockquote><blockquote><p>快捷键:  Ctrl+Shift+&#96;</p></blockquote><h3 id="2、代码块"><a href="#2、代码块" class="headerlink" title="2、代码块"></a>2、代码块</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;```js/java/c#/text</span><br><span class="line">&gt;内容</span><br><span class="line">&gt;```</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>快捷键:  Ctrl+Shift+K</p></blockquote><h2 id="七、链接"><a href="#七、链接" class="headerlink" title="七、链接"></a>七、链接</h2><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;www.baidu.com</span><br><span class="line">&gt;[百度一下](https://www.baidu.com)</span><br><span class="line">&gt;[百度一下](https://www.baidu.com &quot;https://www.baidu.com&quot;)</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br><a href="http://www.baidu.com/">www.baidu.com</a><br><a href="https://www.baidu.com/">百度一下</a><br><a href="https://www.baidu.com/" title="https://www.baidu.com">百度一下</a></p></blockquote><blockquote><p>快捷键:  Ctrl+K</p></blockquote><h2 id="八、脚注"><a href="#八、脚注" class="headerlink" title="八、脚注"></a>八、脚注</h2><blockquote><p>说明:  对文本进行解释说明。</p></blockquote><blockquote><p>代码: </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;[^文本]</span><br><span class="line">&gt;[^文本]:解释说明</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>这是一个技术<a href="%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%94%A8%E7%9A%84%E6%A1%86%E6%9E%B6%E3%80%82">^①</a></p></blockquote><h2 id="九、图片插入"><a href="#九、图片插入" class="headerlink" title="九、图片插入"></a>九、图片插入</h2><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;![不显示的文字](图片路径 &quot;图片标题&quot;)</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>![This is a picture](C:\Users\asus\Pictures\Saved Pictures\Snipaste_2020-09-03_13-19-11.png “漫步图”)</p><p>(注：效果路径为C:\Users\asus\Pictures\Saved Pictures\Snipaste_2020-09-03_13-19-11.png。在其他电脑上可能不显示。)</p></blockquote><blockquote><p>快捷键:  Ctrl+Shift+I</p></blockquote><h2 id="十、表格"><a href="#十、表格" class="headerlink" title="十、表格"></a>十、表格</h2><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;|  1   |  2   |  3   |</span><br><span class="line">&gt;| :--- | :--: | ---: |</span><br><span class="line">&gt;|  4   |  5   |  6   |</span><br><span class="line">&gt;|  7   |  8   |  9   |</span><br><span class="line">&gt;|  10  |  11  |  12  |</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:</p><table><thead><tr><th>1</th><th align="center">2</th><th align="right">3</th></tr></thead><tbody><tr><td>4</td><td align="center">5</td><td align="right">6</td></tr><tr><td>7</td><td align="center">8</td><td align="right">9</td></tr><tr><td>10</td><td align="center">11</td><td align="right">12</td></tr></tbody></table></blockquote><blockquote><p>快捷键:  Ctrl+T</p></blockquote><h2 id="十一、流程图"><a href="#十一、流程图" class="headerlink" title="十一、流程图"></a>十一、流程图</h2><h3 id="1、横向流程图"><a href="#1、横向流程图" class="headerlink" title="1、横向流程图"></a>1、横向流程图</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```mermaid</span><br><span class="line">graph LR</span><br><span class="line">A[方形]==&gt;B(圆角)</span><br><span class="line">B==&gt;C&#123;条件a&#125;</span><br><span class="line">C--&gt;|a=1|D[结果1]</span><br><span class="line">C--&gt;|a=2|E[结果2]</span><br><span class="line">F[横向流程图]</span><br><span class="line">```</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;graph LR</span><br><span class="line">&gt;A[方形]==&gt;B(圆角)</span><br><span class="line">&gt;B==&gt;C&#123;条件a&#125;</span><br><span class="line">&gt;C--&gt;|a=1|D[结果1]</span><br><span class="line">&gt;C--&gt;|a=2|E[结果2]</span><br><span class="line">&gt;F[横向流程图]</span><br></pre></td></tr></table></figure></blockquote><h3 id="2、竖向流程图"><a href="#2、竖向流程图" class="headerlink" title="2、竖向流程图"></a>2、竖向流程图</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```mermaid</span><br><span class="line">&gt;graph TD</span><br><span class="line">&gt;A[方形]==&gt;B(圆角)</span><br><span class="line">&gt;B==&gt;C&#123;条件a&#125;</span><br><span class="line">&gt;C--&gt;|a=1|D[结果1]</span><br><span class="line">&gt;C--&gt;|a=2|E[结果2]</span><br><span class="line">&gt;F[竖向流程图]</span><br><span class="line">&gt;```</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;graph TD</span><br><span class="line">&gt;A[方形]==&gt;B(圆角)</span><br><span class="line">&gt;B==&gt;C&#123;条件a&#125;</span><br><span class="line">&gt;C--&gt;|a=1|D[结果1]</span><br><span class="line">&gt;C--&gt;|a=2|E[结果2]</span><br><span class="line">&gt;F[竖向流程图]</span><br></pre></td></tr></table></figure></blockquote><h2 id="十二、表情符号"><a href="#十二、表情符号" class="headerlink" title="十二、表情符号"></a>十二、表情符号</h2><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;:happy:、:cry:、:man:</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>:happy:、 :cry:、 :man:</p></blockquote><h2 id="十三、数学公式的输入"><a href="#十三、数学公式的输入" class="headerlink" title="十三、数学公式的输入"></a>十三、数学公式的输入</h2><h3 id="1、公式的插入"><a href="#1、公式的插入" class="headerlink" title="1、公式的插入"></a>1、公式的插入</h3><h4 id="①行中公式"><a href="#①行中公式" class="headerlink" title="①行中公式"></a>①行中公式</h4><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$公式$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$公式$</p></blockquote><h4 id="②独立公式"><a href="#②独立公式" class="headerlink" title="②独立公式"></a>②独立公式</h4><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;$$</span><br><span class="line">&gt;公式</span><br><span class="line">&gt;$$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$$<br>公式<br>$$</p></blockquote><h3 id="2、上下标-1"><a href="#2、上下标-1" class="headerlink" title="2、上下标"></a>2、上下标</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;$x^&#123;y^z&#125;=(1+e^x)^&#123;-2xy^w&#125;$</span><br><span class="line">&gt;$\sideset&#123;^1_2&#125;&#123;^3_4&#125;&#123;\underset&#123;6&#125;\bigotimes&#125;$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$x^{y^z}&#x3D;(1+e^x)^{-2xy^w}$<br>$\sideset{^1_2}{^3_4}{\underset{6}\bigotimes}$</p></blockquote><h3 id="3、括号和分隔符"><a href="#3、括号和分隔符" class="headerlink" title="3、括号和分隔符"></a>3、括号和分隔符</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\langle\quad\rangle\quad\lceil\quad\rceil\quad\lfloor\quad\rfloor\quad\lbrace\quad\rbrace\quad\lVert\quad\rVert$</span><br><span class="line">&gt;$f(x,y,z)=3y^2z\left(3+\dfrac&#123;7x+5&#125;&#123;1+y^2&#125;\right)$</span><br><span class="line">&gt;$\left.\dfrac&#123;\mathrm&#123;d&#125;u&#125;&#123;\mathrm&#123;d&#125;x&#125;\right|_&#123;x=0&#125;$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$\langle\quad\rangle\quad\lceil\quad\rceil\quad\lfloor\quad\rfloor\quad\lbrace\quad\rbrace\quad\lVert\quad\rVert$<br>$f(x,y,z)&#x3D;3y^2z\left(3+\dfrac{7x+5}{1+y^2}\right)$<br>$\left.\dfrac{\mathrm{d}u}{\mathrm{d}x}\right|_{x&#x3D;0}$</p></blockquote><h3 id="4、分数"><a href="#4、分数" class="headerlink" title="4、分数"></a>4、分数</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\frac&#123;a&#125;&#123;b&#125;\quad\dfrac&#123;a&#125;&#123;b&#125;\quad &#123;a\over b&#125;$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$\frac{a}{b}\quad\dfrac{a}{b}\quad {a\over b}$</p></blockquote><h3 id="5、开方"><a href="#5、开方" class="headerlink" title="5、开方"></a>5、开方</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\sqrt[根指数,省略时为2]&#123;被开方数&#125;$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$\sqrt{2}\quad\sqrt[3]{2}$</p></blockquote><h3 id="6、省略号"><a href="#6、省略号" class="headerlink" title="6、省略号"></a>6、省略号</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\cdots\quad\ldots\quad\vdots\quad\ddots$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$\cdots\quad\ldots\quad\vdots\quad\ddots$</p></blockquote><h3 id="7、矢量和均值"><a href="#7、矢量和均值" class="headerlink" title="7、矢量和均值"></a>7、矢量和均值</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\overrightarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\overleftarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\overleftrightarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\underrightarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\underleftarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\underleftrightarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\overline&#123;v&#125;=\bar&#123;v&#125;\quad\underline&#123;v&#125;$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$\overrightarrow{E(\vec{r})}\quad\overleftarrow{E(\vec{r})}\quad\overleftrightarrow{E(\vec{r})}\quad\underrightarrow{E(\vec{r})}\quad\underleftarrow{E(\vec{r})}\quad\underleftrightarrow{E(\vec{r})}\quad\overline{v}&#x3D;\bar{v}\quad\underline{v}$</p></blockquote><h3 id="8、积分"><a href="#8、积分" class="headerlink" title="8、积分"></a>8、积分</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;$$</span><br><span class="line">&gt;\iint\limits_D\left(\dfrac&#123;\partial Q&#125;&#123;\partial x&#125;-\dfrac&#123;\partial P&#125;&#123;\partial y&#125;\right)&#123;\rm d&#125;x&#123;\rm d&#125;y=\oint\limits_LP&#123;\rm d&#125;x+Q&#123;\rm d&#125;y</span><br><span class="line">&gt;$$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$$<br>\iint\limits_D\left(\dfrac{\partial Q}{\partial x}-\dfrac{\partial P}{\partial y}\right){\rm d}x{\rm d}y&#x3D;\oint\limits_LP{\rm d}x+Q{\rm d}y<br>$$</p></blockquote><h3 id="9、极限"><a href="#9、极限" class="headerlink" title="9、极限"></a>9、极限</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\lim\limits_&#123;n\to\infin&#125;(1+\dfrac&#123;1&#125;&#123;n&#125;)^n=e$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$\lim\limits_{n\to\infin}(1+\dfrac{1}{n})^n&#x3D;e$</p></blockquote><h3 id="10、累加、累乘及交集、并集"><a href="#10、累加、累乘及交集、并集" class="headerlink" title="10、累加、累乘及交集、并集"></a>10、累加、累乘及交集、并集</h3><blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\sum\limits_&#123;i=1&#125;^n\dfrac&#123;1&#125;&#123;n^2&#125;\quad and\quad\prod\limits_&#123;i=1&#125;^n\dfrac&#123;1&#125;&#123;n^2&#125;\quad and\quad\bigcup\limits_&#123;i=1&#125;^n\dfrac&#123;1&#125;&#123;n^2&#125;\quad and\quad\bigcap\limits_&#123;i=1&#125;^n\dfrac&#123;1&#125;&#123;n^2&#125;$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$\sum\limits_{i&#x3D;1}^n\dfrac{1}{n^2}\quad and\quad\prod\limits_{i&#x3D;1}^n\dfrac{1}{n^2}\quad and\quad\bigcup\limits_{i&#x3D;1}^n\dfrac{1}{n^2}\quad and\quad\bigcap\limits_{i&#x3D;1}^n\dfrac{1}{n^2}$</p></blockquote><h3 id="11、希腊字母"><a href="#11、希腊字母" class="headerlink" title="11、希腊字母"></a>11、希腊字母</h3><table><thead><tr><th>语法</th><th>字母</th><th>语法</th><th>字母</th><th>语法</th><th>字母</th></tr></thead><tbody><tr><td>\Alpha(\alpha)</td><td>$\Alpha(\alpha)$</td><td>\Beta(\beta)</td><td>$\Beta(\beta)$</td><td>\Gamma(\gamma)</td><td>$\Gamma(\gamma)$</td></tr><tr><td>\Epsilon(\epsilon)\varepsilon</td><td>$\Epsilon(\epsilon)\varepsilon$</td><td>\Zeta(\zeta)</td><td>$\Zeta(\zeta)$</td><td>\Eta(\eta)</td><td>$\Eta(\eta)$</td></tr><tr><td>\Iota(\iota)</td><td>$\Iota(\iota)$</td><td>\Kappa(\kappa)\varkappa</td><td>$\Kappa(\kappa)\varkappa$</td><td>\Lambda(\lambda)</td><td>$\Lambda(\lambda)$</td></tr><tr><td>\Nu(\nu)</td><td>$\Nu(\nu)$</td><td>\Xi(\xi)</td><td>$\Xi(\xi)$</td><td>\Omicron(\omicron)</td><td>$\Omicron(\omicron)$</td></tr><tr><td>\Rho(\rho)\varrho</td><td>$\Rho(\rho)\varrho$</td><td>\Sigma(\sigma)\varsigma</td><td>$\Sigma(\sigma)\varsigma$</td><td>\Tau(\tau)</td><td>$\Tau(\tau)$</td></tr><tr><td>\Phi(\phi)\varphi</td><td>$\Phi(\phi)\varphi$</td><td>\Chi(\chi)</td><td>$\Chi(\chi)$</td><td>\Psi(\psi)</td><td>$\Psi(\psi)$</td></tr><tr><td>\Delta(\delta)</td><td>$\Delta(\delta)$</td><td>\Theta(\theta)\vartheta</td><td>$\Theta(\theta)\vartheta$</td><td>\Mu(\mu)</td><td>$\Mu(\mu)$</td></tr><tr><td>\Pi(\pi)\varpi</td><td>$\Pi(\pi)\varpi$</td><td>\Omega(\omega)</td><td>$\Omega(\omega)$</td><td>\upsilon</td><td>$\upsilon$</td></tr><tr><td>\ell</td><td>$\ell$</td><td>\eth</td><td>$\eth$</td><td>\hbar</td><td>$\hbar$</td></tr><tr><td>\hslash</td><td>$\hslash$</td><td>\mho</td><td>$\mho$</td><td>\partial</td><td>$\partial$</td></tr></tbody></table><h3 id="12、特殊字符"><a href="#12、特殊字符" class="headerlink" title="12、特殊字符"></a>12、特殊字符</h3><h4 id="①说明"><a href="#①说明" class="headerlink" title="①说明"></a>①说明</h4><blockquote><p>可以在字符前使用<code>\large</code>或<code>\small</code>以显示更大或更小的字符。${\LARGE A}{\Large A}{\large A}A{\small A}$</p></blockquote><h4 id="②关系运算符"><a href="#②关系运算符" class="headerlink" title="②关系运算符"></a>②关系运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\pm(\mp)</td><td>$\pm(\mp)$</td><td>\times</td><td>$\times$</td><td>\div</td><td>$\div$</td></tr><tr><td>\nmid</td><td>$\nmid$</td><td>\cdot</td><td>$\cdot$</td><td>\mid</td><td>$\mid$</td></tr><tr><td>\bigodot</td><td>$\bigodot$</td><td>\bigotimes</td><td>$\bigotimes$</td><td>\bigoplus</td><td>$\bigoplus$</td></tr><tr><td>\ge</td><td>$\ge$</td><td>\le</td><td>$\le$</td><td>\ll</td><td>$\ll$</td></tr><tr><td>\geqslant</td><td>$\geqslant$</td><td>\leqslant</td><td>$\leqslant$</td><td>\neq</td><td>$\neq$</td></tr><tr><td>\approx</td><td>$\approx$</td><td>\xlongequal{文本}</td><td>$\xlongequal{文本}$</td><td>\triangleq</td><td>$\triangleq$</td></tr><tr><td>\sim</td><td>$\sim$</td><td>\doteq</td><td>$\doteq$</td><td>\equiv</td><td>$\equiv$</td></tr><tr><td>\cong</td><td>$\cong$</td><td>\propto</td><td>$\propto$</td><td>\parallel(\</td><td>)</td></tr><tr><td>\prec</td><td>$\prec$</td><td>\pmod{2}</td><td>$\pmod{2}$</td><td>\bmod</td><td>$\bmod{2}$</td></tr></tbody></table><h4 id="③集合运算符"><a href="#③集合运算符" class="headerlink" title="③集合运算符"></a>③集合运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\emptyset</td><td>$\emptyset$</td><td>\varnothing</td><td>$\varnothing$</td><td></td><td></td></tr><tr><td>\subset</td><td>$\subset$</td><td>\subseteq</td><td>$\subseteq$</td><td>\subsetneq</td><td>$\subsetneq$</td></tr><tr><td>\supset</td><td>$\supset$</td><td>\supseteq</td><td>$\supseteq$</td><td>\supsetneq</td><td>$\supsetneq$</td></tr><tr><td>\bigcap</td><td>$\bigcap$</td><td>\bigcup</td><td>$\bigcup$</td><td>\setminus</td><td>$\setminus$</td></tr><tr><td>\bigvee</td><td>$\bigvee$</td><td>\bigwedge</td><td>$\bigwedge$</td><td></td><td></td></tr><tr><td>\in</td><td>$\in$</td><td>\notin</td><td>$\notin$</td><td>\ni</td><td>$\ni$</td></tr></tbody></table><h4 id="④三角运算符"><a href="#④三角运算符" class="headerlink" title="④三角运算符"></a>④三角运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\circ</td><td>$\circ$</td><td>\bot</td><td>$\bot$</td><td>\angle</td><td>$\angle$</td></tr><tr><td>\degree</td><td>$\degree$</td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="⑤微积分运算符"><a href="#⑤微积分运算符" class="headerlink" title="⑤微积分运算符"></a>⑤微积分运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\int</td><td>$\int$</td><td>\iint</td><td>$\iint$</td><td>\iiint</td><td>$\iiint$</td></tr><tr><td>\oint</td><td>$\oint$</td><td>\oiint</td><td>$\oiint$</td><td>\prime(‘)</td><td>$\prime$</td></tr><tr><td>\lim</td><td>$\lim$</td><td>\infin</td><td>$\infin$</td><td>\nabla</td><td>$\nabla$</td></tr><tr><td>\grad</td><td>$\grad$</td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="⑥逻辑运算符"><a href="#⑥逻辑运算符" class="headerlink" title="⑥逻辑运算符"></a>⑥逻辑运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\because</td><td>$\because$</td><td>\therefore</td><td>$\therefore$</td><td></td><td></td></tr><tr><td>\forall</td><td>$\forall$</td><td>\exist</td><td>$\exist$</td><td></td><td></td></tr><tr><td>\not&gt;</td><td>$\not&gt;$</td><td>\not&lt;</td><td>$\not&lt;$</td><td></td><td></td></tr><tr><td>\land</td><td>$\land$</td><td>\lor</td><td>$\lor$</td><td>\lnot</td><td>$\lnot$</td></tr><tr><td>\top</td><td>$\top$</td><td>\vdash</td><td>$\vdash$</td><td>\vDash</td><td>$\vDash$</td></tr></tbody></table><h4 id="⑦带帽符号"><a href="#⑦带帽符号" class="headerlink" title="⑦带帽符号"></a>⑦带帽符号</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\hat{xy}</td><td>$\hat{xy}$</td><td>\widehat{xyz}</td><td>$\widehat{xyz}$</td></tr><tr><td>\tilde{xy}</td><td>$\tilde{xy}$</td><td>\widetilde{xyz}</td><td>$\widetilde{xyz}$</td></tr><tr><td>\check{x}</td><td>$\check{x}$</td><td>\breve{y}</td><td>$\breve{y}$</td></tr><tr><td>\grave{x}</td><td>$\grave{x}$</td><td>\acute{y}</td><td>$\acute{y}$</td></tr><tr><td>\dot{x}</td><td>$\dot{x}$</td><td>\ddot{x}</td><td>$\ddot{x}$</td></tr><tr><td>\overparen{xy}</td><td>$\overparen{xy}$</td><td></td><td></td></tr></tbody></table><h4 id="⑧选取符号"><a href="#⑧选取符号" class="headerlink" title="⑧选取符号"></a>⑧选取符号</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\fbox{a+b+c+d}</td><td>$\fbox{a+b+c+d}$</td><td></td><td></td></tr><tr><td>\overbrace{xx\cdots x}^{10个x}</td><td>$\overbrace{xx\cdots x}^{10个x}$</td><td>\underbrace{xx\cdots x}_{10个x}</td><td>$\underbrace{xx\cdots x}_{10个x}$</td></tr></tbody></table><h4 id="⑨箭头符号"><a href="#⑨箭头符号" class="headerlink" title="⑨箭头符号"></a>⑨箭头符号</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\leftarrow</td><td>$\leftarrow$</td><td>\rightarrow</td><td>$\rightarrow$</td><td>\leftrightarrow</td><td>$\leftrightarrow$</td></tr><tr><td>\longleftarrow</td><td>$\longleftarrow$</td><td>\longrightarrow</td><td>$\longrightarrow$</td><td>\longleftrightarrow</td><td>$\longleftrightarrow$</td></tr><tr><td>\Leftarrow</td><td>$\Leftarrow$</td><td>\Rightarrow</td><td>$\Rightarrow$</td><td>\Leftrightarrow</td><td>$\Leftrightarrow$</td></tr><tr><td>\Longleftarrow</td><td>$\Longleftarrow$</td><td>\Longrightarrow</td><td>$\Longrightarrow$</td><td>\Longleftrightarrow</td><td>$\Longleftrightarrow$</td></tr><tr><td>\uparrow</td><td>$\uparrow$</td><td>\downarrow</td><td>$\downarrow$</td><td>\updownarrow</td><td>$\updownarrow$</td></tr><tr><td>\Uparrow</td><td>$\Uparrow$</td><td>\Downarrow</td><td>$\Downarrow$</td><td>\Updownarrow</td><td>$\Updownarrow$</td></tr><tr><td>\to</td><td>$\to$</td><td>\swarrow</td><td>$\swarrow$</td><td>\nearrow</td><td>$\nearrow$</td></tr><tr><td>\gets</td><td>$\gets$</td><td>\searrow</td><td>$\searrow$</td><td>\nwarrow</td><td>$\nwarrow$</td></tr><tr><td>\mapsto</td><td>$\mapsto$</td><td>\rightrightarrows</td><td>$\rightrightarrows$</td><td></td><td></td></tr></tbody></table><h4 id="⑩空格"><a href="#⑩空格" class="headerlink" title="⑩空格"></a>⑩空格</h4><table><thead><tr><th>输入</th><th>效果</th><th>输入</th><th>效果</th><th>输入</th><th>效果</th></tr></thead><tbody><tr><td>\!</td><td>$</td><td>!</td><td>$</td><td>默认</td><td>$</td></tr><tr><td>,</td><td>$</td><td>,</td><td>$</td><td>;(\ )</td><td>$</td></tr></tbody></table><h3 id="13、字体"><a href="#13、字体" class="headerlink" title="13、字体"></a>13、字体</h3><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;\字体&#123;需要转换的字符&#125;&#125;$</span><br></pre></td></tr></table></figure></blockquote><table><thead><tr><th>输入</th><th>说明</th><th>显示</th><th>输入</th><th>说明</th><th>显示</th></tr></thead><tbody><tr><td>\rm</td><td>罗马体</td><td>${\rm{Sample}}$</td><td>\cal</td><td>花体</td><td>${\cal{Sample}}$</td></tr><tr><td>\it</td><td>意大利体</td><td>${\it{Sample}}$</td><td>\Bbb</td><td>黑板粗体</td><td>${\Bbb{Sample}}$</td></tr><tr><td>\bf</td><td>粗体</td><td>${\bf{Sample}}$</td><td>\mit</td><td>数学斜体</td><td>${\mit{Sample}}$</td></tr><tr><td>\sf</td><td>等线体</td><td>${\sf{Sample}}$</td><td>\scr</td><td>手写体</td><td>${\scr{Sample}}$</td></tr><tr><td>\tt</td><td>打字机体</td><td>${\tt{Sample}}$</td><td>\frak</td><td>旧德式字体</td><td>${\frak{Sample}}$</td></tr></tbody></table><h3 id="14、大括号和行标"><a href="#14、大括号和行标" class="headerlink" title="14、大括号和行标"></a>14、大括号和行标</h3><blockquote><p>说明:  使用<code>\left</code>和<code>\right</code>来创建自动匹配高度的<code>()</code>、<code>[]</code>、<code>&#123;&#125;</code>、<code>.</code>。在每个公式末尾使用<code>\tag&#123;行标&#125;</code>来实现行标。</p></blockquote><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;$$</span><br><span class="line">&gt;f\left(</span><br><span class="line">&gt;\left[</span><br><span class="line">&gt;\dfrac&#123;1+\&#123;x,y\&#125;&#125;&#123;\left(\dfrac&#123;x&#125;&#123;y&#125;+\dfrac&#123;y&#125;&#123;x&#125;\right)(u+1)&#125;+a</span><br><span class="line">&gt;\right]</span><br><span class="line">&gt;^&#123;\dfrac&#123;3&#125;&#123;2&#125;&#125;</span><br><span class="line">&gt;\right)</span><br><span class="line">&gt;\tag&#123;行标&#125;</span><br><span class="line">&gt;$$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$$<br>f\left(\left[\dfrac{1+{x,y}}{\left(\dfrac{x}{y}+\dfrac{y}{x}\right)(u+1)}+a\right]^{\dfrac{3}{2}}\right)\tag{行标}<br>$$</p></blockquote><blockquote><p>说明:如果你想将行内显示的分隔符也变大,也可以使用<code>\middle</code>命令</p></blockquote><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;$$</span><br><span class="line">&gt;\left\langle q\middle\|\dfrac&#123;\dfrac&#123;x&#125;&#123;y&#125;&#125;&#123;\dfrac&#123;u&#125;&#123;v&#125;&#125;\middle|p\right\rangle</span><br><span class="line">&gt;$$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$$<br>\left\langle q\middle|\dfrac{\dfrac{x}{y}}{\dfrac{u}{v}}\middle|p\right\rangle<br>$$</p></blockquote><h3 id="15、其他命令"><a href="#15、其他命令" class="headerlink" title="15、其他命令"></a>15、其他命令</h3><h4 id="①注释文字"><a href="#①注释文字" class="headerlink" title="①注释文字"></a>①注释文字</h4><blockquote><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\text&#123;文字&#125;$</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>效果:<br>$$<br>f(n)&#x3D;\begin{cases}n&#x2F;2,&amp;\text{if $n$ is even}\3n+1,&amp;\text{if $n$ is odd}\end{cases}<br>$$</p></blockquote><h4 id="③文字颜色"><a href="#③文字颜色" class="headerlink" title="③文字颜色"></a>③文字颜色</h4><blockquote><ul><li>适用新旧浏览器<br>代码:<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\color&#123;颜色&#125;&#123;文字&#125;$</span><br></pre></td></tr></table></figure></li></ul></blockquote><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>black</td><td>$\color{black}{color}$</td><td>grey</td><td>$\color{grey}{color}$</td><td>silver</td><td>$\color{silver}{color}$</td></tr><tr><td>white</td><td>$\color{white}{color}$</td><td>maroon</td><td>$\color{maroon}{color}$</td><td>red</td><td>$\color{red}{color}$</td></tr><tr><td>yellow</td><td>$\color{yellow}{color}$</td><td>lime</td><td>$\color{lime}{color}$</td><td>olive</td><td>$\color{olive}{color}$</td></tr><tr><td>green</td><td>$\color{green}{color}$</td><td>teal</td><td>$\color{teal}{color}$</td><td>auqa</td><td>$\color{auqa}{color}$</td></tr><tr><td>blue</td><td>$\color{blue}{color}$</td><td>navy</td><td>$\color{navy}{color}$</td><td>purple</td><td>$\color{purple}{color}$</td></tr><tr><td>fuchsia</td><td>$\color{fuchsia}{color}$</td><td></td><td></td><td></td><td></td></tr></tbody></table><blockquote><ul><li>适用新版浏览器<br>代码:<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$\color&#123;#rgb&#125;&#123;文字&#125;$    (注:其中r、g、b可以输入0~9和a~f来分别表示红色、绿色和蓝色的纯度)</span><br></pre></td></tr></table></figure></li></ul></blockquote><table><thead><tr><th>输入</th><th>输出</th><th>输入</th><th>输出</th><th>输入</th><th>输出</th><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>#000</td><td>$\color</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> Typora </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源白嫖网站</title>
      <link href="/posts/28045.html"/>
      <url>/posts/28045.html</url>
      
        <content type="html"><![CDATA[<h1 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h1><p> 点击网址链接🔗可以直接跳转到网站  </p><p>1 Zlibrary：<a href="https://zh.z-library.se/?ts=0403">https://zh.z-library.se/?ts=0403</a> </p><p>2 奇妙搜索：<a href="https://www.magicalsearch.cc/main">https://www.magicalsearch.cc/main</a> </p><p>3 Mvcat：<a href="https://www.mvcat.com/">https://www.mvcat.com/</a> </p><p>4 Clipdrop：<a href="https://clipdrop.co/uncrop">https://clipdrop.co/uncrop</a> </p><p>5 Runwayml：<a href="https://app.runwayml.com/video-tools/teams/moukejun/dashboard">https://app.runwayml.com/video-tools/teams/moukejun/dashboard</a> </p><p>6 Spaces：<a href="https://huggingface.co/spaces/zcxu-eric/magicanimate">https://huggingface.co/spaces/zcxu-eric/magicanimate</a> </p><p>7 AI乌托邦：<a href="https://www.ai-topia.com/#/home">https://www.ai-topia.com/#/home</a> </p><p>8 免费 ChatGPT: <a href="https://github.com/LiLittleCat/awesome-free-chatgpt">https://github.com/LiLittleCat/awesome-free-chatgpt</a></p><p>9 轻壁纸：<a href="https://qingbizhi.com/">https://qingbizhi.com/</a>  </p><p>10 分离音频网站： <a href="https://www.lalal.ai/zh-hans/">https://www.lalal.ai/zh-hans/</a> </p><p>11 漫画网站：<a href="https://mox.moe/">https://mox.moe/</a> </p><p>12 论文神器：<a href="https://panda321.com/">https://panda321.com/</a>  </p><p>13 学习网站：<a href="https://www.xue8nav.com/">https://www.xue8nav.com/</a> </p><p>14 虫部落：<a href="https://search.chongbuluo.com/">https://search.chongbuluo.com/</a> </p><hr><p>AlternativeTo：https:&#x2F;&#x2F;<a href="http://alternativeto.net/">alternativeto.net&#x2F;</a></p><p>Crx搜搜：<a href="https://www.crxsoso.com/">https://www.crxsoso.com/</a></p><p>墨刀：<a href="https://modao.cc/brand">https://modao.cc/brand</a> </p><p>书签地球：<a href="https://www.bookmarkearth.com/">https://www.bookmarkearth.com/</a></p><p>DUCKBB：https:&#x2F;&#x2F;<a href="http://www.duckbb.cn/douyin">www.duckbb.cn/douyin</a></p><p>Web Design Museum：https:&#x2F;&#x2F;<a href="http://www.webdesignmuseum.org/">www.webdesignmuseum.org/</a></p><p>哔哩哔哩穿越：<a href="https://www.bilibili.com/blackboard/bilibili2009.html">https://www.bilibili.com/blackboard/bilibili2009.html</a></p><hr><p>奈斯搜索：<a href="https://www.niceso.fun/">https://www.niceso.fun</a></p><p>食用手册：<a href="https://cook.yunyoujun.cn/">https://cook.yunyoujun.cn</a></p><p>小鲸鱼搜书：<a href="http://www.9871.org/">http://www.9871.org/</a></p><p>iTab浏览器主页：<a href="https://go.itab.link/">https://go.itab.link</a> </p><p>地图搜租房：<a href="https://house-map.cn/#/">https://house-map.cn/#/</a></p><p>相似网站搜索：<a href="https://www.similarsites.com/">https://www.similarsites.com/</a></p><p>图文版网站使用指南：<a href="https://mp.weixin.qq.com/s/fFh_Hf_3lsLgekITeVXDYQ">https://mp.weixin.qq.com/s/fFh_Hf_3lsLgekITeVXDYQ</a></p><p>视频版网站使用指南：<a href="https://b23.tv/3VyRQNB">https://b23.tv/3VyRQNB</a></p><hr><p>百度识图：<a href="https://graph.baidu.com/pcpage/index?tpl_from=pc">https://graph.baidu.com/pcpage/index?tpl_from=pc</a></p><p>MAKE：<a href="https://www.make.mk/">https://www.make.mk/</a></p><p>Versus：<a href="https://versus.com/cn">https://versus.com/cn</a></p><p>鲜面连线：<a href="https://app.so/xianmian/">https://app.so/xianmian/</a></p><p>酷Q网音乐转换：<a href="https://mp3.aoleiao.com/">https://mp3.aoleiao.com/</a></p><p>超级简历：<a href="https://www.wondercv.com/">https://www.wondercv.com/</a></p><p>Wallhaven：<a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p><p>字由：<a href="https://www.hellofont.cn/home">https://www.hellofont.cn/home</a></p><p>Hi运动：<a href="https://www.hiyd.com/">https://www.hiyd.com/</a></p><p>REMOVEBG：<a href="https://www.remove.bg/zh">https://www.remove.bg/zh</a></p><p>只读：<a href="http://www.rdonly.com/">http://www.rdonly.com/</a></p><p>鲜面连线：<a href="https://app.so/xianmian/">https://app.so/xianmian/</a></p><p>Extfans：<a href="https://www.extfans.com/">https://www.extfans.com/</a></p><p>小众软件：<a href="https://www.appinn.com/">https://www.appinn.com/</a></p><p>知晓程序：<a href="https://minapp.com/miniapp/">https://minapp.com/miniapp/</a></p><hr><p> 【视频】简视频： </p><p> <a href="https://www.jspwz.com/">https://www.jspwz.com/</a> </p><p> 【书签】书签地球： </p><p> <a href="https://www.bookmarkearth.com/">https://www.bookmarkearth.com/</a> </p><p> 【网盘】懒盘搜索： </p><p> <a href="https://lzpan.com/#">https://lzpan.com/#</a> </p><p> 【学习】安逸导航： </p><p> <a href="https://298.life/">https://298.life/</a> </p><p> 【替补】北邮人导航： </p><p> <a href="https://byr-navi.com/">https://byr-navi.com/</a> </p><p> 【</p><p> 软件】新趣集： </p><p> <a href="https://xinquji.com/">https://xinquji.com/</a> </p><p> 【插件】Extfans： </p><p> <a href="https://www.extfans.com/hot/">https://www.extfans.com/hot/</a> </p><p> 【资讯】今日热榜：   </p><p> <a href="https://tophub.today/c/news">https://tophub.today/c/news</a> </p><p> 【磁力】小网虫： </p><p> <a href="http://www.wangchonghui.com/share/0/319/rc">http://www.wangchonghui.com/share/0/319/rc</a> </p><p> 【电影】33台词： </p><p> <a href="http://33.agilestudio.cn/">http://33.agilestudio.cn/</a> </p><p> 【设计】设计导航： </p><p> <a href="http://hao.shejidaren.com/index.html">http://hao.shejidaren.com/index.html</a> </p><p> 【动画】Mixamo： </p><p> <a href="https://www.mixamo.com/#/">https://www.mixamo.com/#/</a>    </p><p> 【壁纸】极简壁纸： </p><p> <a href="https://bz.zzzmh.cn/index">https://bz.zzzmh.cn/index</a> </p><p> 【图片】搜图导航： </p><p> <a href="https://www.91sotu.com/">https://www.91sotu.com/</a> </p><p> 【网盘】酷搜： </p><p> <a href="https://www.kolsou.com/">https://www.kolsou.com/</a> </p><p> 【资讯】MAKE： </p><p> <a href="https://make.mk/">https://make.mk/</a> </p><p> 【插件】极简插件： </p><p> <a href="https://chrome.zzzmh.cn/#index">https://chrome.zzzmh.cn/#index</a> </p><p> 【音效】淘声： </p><p> <a href="https://www.tosound.com/">https://www.tosound.com/</a> </p><p> 【电影】MVCAT： </p><p> <a href="https://www.mvcat.com/">https://www.mvcat.com/</a> </p><p> 【表情】逗比拯救世界： </p><p> <a href="https://www.dbbqb.com/">https://www.dbbqb.com/</a> </p><p> 【书籍】书享家： </p><p> <a href="http://shuxiangjia.cn/">http://shuxiangjia.cn/</a> </p><p> 【插图】illustrations： </p><p> <a href="https://undraw.co/illustrations">https://undraw.co/illustrations</a> </p><p> 【媒体】考拉新媒体： </p><p> <a href="https://www.kaolamedia.com/">https://www.kaolamedia.com/</a> </p><p> 【字体】求字体： </p><p> <a href="https://www.qiuziti.com/">https://www.qiuziti.com/</a> </p><p> 【壁纸】wallhaven： </p><p> <a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>条件判断和流程控制</title>
      <link href="/posts/25335.html"/>
      <url>/posts/25335.html</url>
      
        <content type="html"><![CDATA[<p>第二十章  条件测试语句和if流程控制语句的使用</p><p>本节所讲内容：</p><p>20.1  read命令键盘读取变量的值</p><p>20.2  流程控制语句if</p><p>20.3  test测试命令</p><p>20.4  流程控制过程中复杂条件和通配符</p><p>20.5  实战-3个shell脚本实战</p><h1 id="20-1-read命令键盘读取变量的值"><a href="#20-1-read命令键盘读取变量的值" class="headerlink" title="20.1  read命令键盘读取变量的值"></a>20.1  read命令键盘读取变量的值</h1><p>从键盘读取变量的值，通常用在shell脚本中与用户进行交互的场合。该命令可以一次读取多个变量的值，变量和输入的值都需要使用空格隔开。在read命令后面，如果没有指定变量名，读取的数据将被自动赋值给特定的变量REPLY</p><p>read从键盘读入数据，赋给变量</p><p>例1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># read a b</span></span><br><span class="line"></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $a $b</span></span><br><span class="line"></span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><h2 id="2-1-1-read常用见用法及参数"><a href="#2-1-1-read常用见用法及参数" class="headerlink" title="2.1.1  read常用见用法及参数"></a>2.1.1  read常用见用法及参数</h2><p>例1：从标准输入读取一行并赋值给变量passwd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># read passwd</span></span><br></pre></td></tr></table></figure><p>例2：读取多个值，从标准输入读取一行，直至遇到第一个空白符或换行符。把用户键入的第一个词存到变量first中，把该行的剩余部分保存到变量last中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># read firt last</span></span><br><span class="line"></span><br><span class="line">aaaa  bbbb</span><br></pre></td></tr></table></figure><p>例3：read -s passwd 将你输入的东西隐藏起来，值赋给passwd。这个用户隐藏密码信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># read -s passwd</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $passwd</span></span><br><span class="line"></span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>例4：输入的时间限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># read -t 2 time  #超过两秒没有输入，直接退出</span></span><br></pre></td></tr></table></figure><p>例5：输入的长度限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># read -n 2 test #最多只接受2个字符</span></span><br></pre></td></tr></table></figure><p>例6：使用-r参数输，允许让输入中的内容包括：空格、&#x2F;、\、 ？等特殊字符串。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># read  -r line</span></span><br><span class="line"></span><br><span class="line">sdf sdf / sdfs /n</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $line</span></span><br><span class="line"></span><br><span class="line">sdf sdf / sdfs /n</span><br></pre></td></tr></table></figure><p>例7：-p 用于给出提示符，在前面的例子中我们使用了echo –n “…“来给出提示符</p><p>方法1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># read -p  &quot;please input: &quot;  pass</span></span><br><span class="line"></span><br><span class="line">please input: 123456</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $pass</span></span><br><span class="line"></span><br><span class="line">123456</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>方法2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># echo -n &quot;please input: &quot; ; read pass</span></span><br><span class="line"></span><br><span class="line">please input: 123456   </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $pass</span></span><br><span class="line"></span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>例8：read 综合实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim  test-read.sh #写入以下内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入姓名：&quot;</span> NAME</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入年龄：&quot;</span> AGE</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入性别：&quot;</span> SEX</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span>&lt;&lt;<span class="string">eof</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">*********************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">你的基本信息如下：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">姓名: $NAME</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">年龄：$AGE</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">性别：$SEX</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">********************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">eof</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># sh test-read.sh</span></span><br><span class="line"></span><br><span class="line">请输入姓名：xuegod</span><br><span class="line"></span><br><span class="line">请输入年龄：111</span><br><span class="line"></span><br><span class="line">请输入性别：man</span><br><span class="line"></span><br><span class="line">*********************</span><br><span class="line"></span><br><span class="line">你的基本信息如下：</span><br><span class="line"></span><br><span class="line">姓名: xuegod</span><br><span class="line"></span><br><span class="line">年龄：111</span><br><span class="line"></span><br><span class="line">性别：man</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="20-2-流程控制语句if"><a href="#20-2-流程控制语句if" class="headerlink" title="20.2  流程控制语句if"></a>20.2  流程控制语句if</h1><h2 id="20-2-1-语法格式："><a href="#20-2-1-语法格式：" class="headerlink" title="20.2.1  语法格式："></a>20.2.1  语法格式：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>  条件  </span><br><span class="line"></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">       commands</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>if语句流程图：</p><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps1.png" alt="img"> </p><p>注：根据我们的命令退出码来进行判断(echo $? &#x3D;0)，如果是0,那么就会执行then后面的命令</p><p>例1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim  if-1.sh </span></span><br><span class="line"></span><br><span class="line">\<span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">ls</span> /mnt</span><br><span class="line"></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="string">&quot;it&#x27;s ok&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># bash !$</span></span><br><span class="line"></span><br><span class="line">bash if-1.sh</span><br><span class="line"></span><br><span class="line">CentOS_BuildTag  GPL  LiveOS   RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">EFI images   Packages  RPM-GPG-KEY-CentOS-Testing-7</span><br><span class="line"></span><br><span class="line">EULA isolinux  repodata  TRANS.TBL</span><br><span class="line"></span><br><span class="line">it<span class="string">&#x27;s ok</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> </span></span><br></pre></td></tr></table></figure><h2 id="20-2-2-双分支if语句"><a href="#20-2-2-双分支if语句" class="headerlink" title="20.2.2  双分支if语句"></a>20.2.2  双分支if语句</h2><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">command</span>  ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">commands</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">commands</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps2.jpg" alt="img"> </p><p>例2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat if-2.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> grep root /etc/passwd ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;it&#x27;s ok&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;it&#x27;s err&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># sh if-2.sh </span></span><br><span class="line"></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"></span><br><span class="line">it<span class="string">&#x27;s ok</span></span><br></pre></td></tr></table></figure><p>​</p><p>例3：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat if-3.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> grep xuegod /etc/passwd ;<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;it&#x27;s ok&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;it&#x27;s err&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># sh if-3.sh</span></span><br><span class="line"></span><br><span class="line">it<span class="string">&#x27;s err</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> </span></span><br></pre></td></tr></table></figure><h2 id="20-2-3-多分支if语句"><a href="#20-2-3-多分支if语句" class="headerlink" title="20.2.3  多分支if语句"></a>20.2.3  多分支if语句</h2><p>语法结构：</p><p>if条件测试操作1 ; then</p><p>​commands</p><p>elif  条件测试操作2  ; then</p><p>​commands</p><p>elif 条件测试操作3 ; then</p><p>​commands</p><p>…….</p><p>else</p><p>​commands</p><p>fi</p><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps3.jpg" alt="img"> </p><p>例4：判断用户在系统中是否存在，是否有家目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat if-4.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;input a user:&quot;</span> tu</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> grep <span class="variable">$tu</span> /etc/passwd ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;the user <span class="variable">$tu</span> exists on this system&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">ls</span> -d /home/<span class="variable">$tu</span>  ;  <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;the user <span class="variable">$tu</span> not exists on this system&quot;</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$tu</span> has a home directory&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;the user <span class="variable">$tu</span> not exists on this system&quot;</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$tu</span> not has a direcotry&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># sh if-4.sh </span></span><br><span class="line"></span><br><span class="line">Input a user: hr</span><br><span class="line"></span><br><span class="line">chrony:x:994:990::/var/lib/chrony:/sbin/nologin</span><br><span class="line"></span><br><span class="line">hr:x:1000:1000:hr:/home/hr:/bin/bash</span><br><span class="line"></span><br><span class="line">the user hr exists on this system</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># sh if-4.sh</span></span><br><span class="line"></span><br><span class="line">Input a user: xuegod</span><br><span class="line"></span><br><span class="line">/home/xuegod</span><br><span class="line"></span><br><span class="line">xuegod has a directory</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="20-3-test测试命令"><a href="#20-3-test测试命令" class="headerlink" title="20.3  test测试命令"></a>20.3  test测试命令</h1><p>Shell中的 test 命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试</p><p>格式：test 测试条件 </p><p>如果结果是对的，也叫结果为真，用$?&#x3D;0表示，反之为假，用非0表示</p><h2 id="20-3-1-数值比较"><a href="#20-3-1-数值比较" class="headerlink" title="20.3.1  数值比较"></a>20.3.1  数值比较</h2><table><thead><tr><th>参数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>-eq</td><td>等于则为真</td><td>[ “$a” -eq “$b” ]</td></tr><tr><td>-ne</td><td>不等于则为真</td><td>[ “$a” -ne “$b” ]</td></tr><tr><td>-gt</td><td>大于则为真</td><td>[ “$a” -gt “$b” ]</td></tr><tr><td>-ge</td><td>大于等于则为真</td><td>[ “$a” -ge “$b” ]</td></tr><tr><td>-lt</td><td>小于则为真</td><td>[ “$a” -lt “$b” ]</td></tr><tr><td>-le</td><td>小于等于则为真</td><td>[ “$a” -le “$b” ]</td></tr></tbody></table><p>例1：比较大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat test1.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> 2 -eq 1  ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> ok</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> err</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ 2 -eq 2 ]  ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> ok</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> err</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>例2： 比较整数大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat test2.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;input var1 var2:&quot;</span> var1 var2</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$var1</span> -gt <span class="variable">$var2</span>  ] ;  <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span> &gt; <span class="variable">$var2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$var1</span> -lt <span class="variable">$var2</span> ] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span> &lt; <span class="variable">$var2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span> = <span class="variable">$var2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>注意：在做数值比较时，只能用整数</p><h2 id="20-3-2-字符串比较"><a href="#20-3-2-字符串比较" class="headerlink" title="20.3.2  字符串比较"></a>20.3.2  字符串比较</h2><table><thead><tr><th>参数.</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>等于则为真</td><td>[ “$a” &#x3D;&#x3D; “$b” ]</td></tr><tr><td>!&#x3D;</td><td>不相等则为真</td><td>[ “$a” !&#x3D; “$b” ]</td></tr><tr><td>-z 字符串.</td><td>字符串的长度为零则为真</td><td>[ -z “$a” ]</td></tr><tr><td>-n 字符串</td><td>字符串的长度不为空则为真</td><td>[ -n “$a” ]</td></tr><tr><td>str1 &gt; str2</td><td>str1大于str2为真</td><td>[ str1 &gt; str2 ]</td></tr><tr><td>str1 &lt; str2</td><td>str1小于str2为真</td><td>[ str1 &lt; str2 ]</td></tr></tbody></table><p>例1：根据用户名判断是否是超级管理员</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat test3.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p  <span class="string">&quot;input your name: &quot;</span> name</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$name</span> == <span class="string">&quot;root&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;you are super administrator&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span>  <span class="string">&quot;You are a general user&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># bash test3.sh </span></span><br><span class="line"></span><br><span class="line">input your name: root</span><br><span class="line"></span><br><span class="line">you are super administrator</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># bash test3.sh </span></span><br><span class="line"></span><br><span class="line">input your name: mk</span><br><span class="line"></span><br><span class="line">You are a general usero <span class="string">&quot;You are a general user&quot;</span></span><br></pre></td></tr></table></figure><p>例2：在做字符串大小比较的时候，注意字符串的顺序</p><p>l 大于号和小于号必须转义，要不然SHELL会把它当成重定向符号</p><p>l 大于和小于它们的顺序和sort排序是不一样的</p><p>l 在test比较测试中，它使用的是ASCII顺序，大写字母是小于小写字母的；sort刚好相反</p><p>扩展： ASCII（American Standard Code for Information Interchange，美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言。它是现今最通用的单字节编码系统，并等同于国际标准ISO&#x2F;IEC 646。</p><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps4.png" alt="img"> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat test4.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">var1=<span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">var2=Test</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [  <span class="variable">$var1</span> \&gt;  <span class="variable">$var2</span>  ] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span> &gt; <span class="variable">$var2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span> &lt; <span class="variable">$var2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># bash test4.sh </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> &gt; Test</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="20-3-3-文件比较"><a href="#20-3-3-文件比较" class="headerlink" title="20.3.3  文件比较"></a>20.3.3  文件比较</h2><table><thead><tr><th>参数</th><th>.说明</th><th>示例</th></tr></thead><tbody><tr><td>-e 文件名.</td><td>如果文件或目录存在则为真</td><td>[ -e file ]</td></tr><tr><td>-r 文件名.</td><td>如果文件存在且可读则为真</td><td>[ -r file ]</td></tr><tr><td>-w 文件名.</td><td>如果文件存在且可写则为真</td><td>[ -w file ]</td></tr><tr><td>-x 文件名.</td><td>如果文件存在且可执行则为真</td><td>[ -x file ]</td></tr><tr><td>-s 文件名</td><td>如果文件存在且至少有一个字符则为真</td><td>[ -s file ]</td></tr><tr><td>-d 文件名.</td><td>如果文件存在且为目录则为真</td><td>[ -d file ]</td></tr><tr><td>-f 文件名.</td><td>如果文件存在且为普通文件则为真</td><td>[ -f file ]</td></tr><tr><td>-c 文件名.</td><td>如果文件存在且为字符型文件则为真</td><td>[ -c file ]</td></tr><tr><td>-b 文件名..</td><td>如果文件存在且为块特殊文件则为真</td><td>[ -b file ]</td></tr><tr><td>file1 -nt fle2</td><td>检查file1是否比file2新</td><td>[ file1 -nt file2 ]</td></tr><tr><td>file1 -ot file2</td><td>检查file1是否比file2旧</td><td>[ file1 -ot file2 ]</td></tr></tbody></table><p>例1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim  test5.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/passwd ] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> ok</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> err</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># bash test5.sh </span></span><br><span class="line"></span><br><span class="line">ok</span><br></pre></td></tr></table></figure><p>例2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># test -e /etc/aaa.txt &amp;&amp; echo ok || echo err</span></span><br><span class="line"></span><br><span class="line">err</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># test -e /etc/passwd &amp;&amp; echo ok || echo err</span></span><br><span class="line"></span><br><span class="line">ok</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># test -e /etc &amp;&amp; echo ok || echo err</span></span><br><span class="line"></span><br><span class="line">ok</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>例：清空日志目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># cat clear-log.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># clear /var/log/messages</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#确定当前是root用户</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$USER</span> != <span class="string">&quot;root&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="string">&quot;你必须使用root用户才能执行脚本&quot;</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">exit</span> 10  <span class="comment">#直接退出，并返回10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#判断文件是否存在</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f /var/log/messages ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">echo</span> <span class="string">&quot;文件不存在&quot;</span></span><br><span class="line"></span><br><span class="line">​<span class="built_in">exit</span> 12</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#保留最近100行的日志内容</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">tail</span> -100 /var/log/messages &gt; /var/log/mesg.tmp</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#日志清理</span></span><br><span class="line"></span><br><span class="line">&gt;/var/log/messages</span><br><span class="line"></span><br><span class="line"><span class="comment">#cat /dev/null &gt; /var/log/messages</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> /var/log/mesg.tmp /var/log/messages</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Logs clean up&quot;</span></span><br><span class="line"></span><br><span class="line">注：退出码 <span class="built_in">exit</span> ,取值范围是0-255</span><br></pre></td></tr></table></figure><p>例： exit 退出bash，并返回一个值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># ssh 192.168.1.63</span></span><br><span class="line"></span><br><span class="line">root@192.168.1.63<span class="string">&#x27;s password: 123456</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Mon May 28 20:37:41 2018 from xuegod63.cn</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@xuegod63 ~]# </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@xuegod63 ~]# exit 10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">登出</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Connection to 192.168.1.63 closed.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@xuegod63 ~]# echo $?</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">10</span></span><br></pre></td></tr></table></figure><h1 id="20-4-流程控制过程中复杂条件和通配符"><a href="#20-4-流程控制过程中复杂条件和通配符" class="headerlink" title="20.4  流程控制过程中复杂条件和通配符"></a>20.4  流程控制过程中复杂条件和通配符</h1><h2 id="20-4-1-判断第一种：两个条件都为真或有一个为真就执行"><a href="#20-4-1-判断第一种：两个条件都为真或有一个为真就执行" class="headerlink" title="20.4.1  判断第一种：两个条件都为真或有一个为真就执行"></a>20.4.1  判断第一种：两个条件都为真或有一个为真就执行</h2><p>if [ 条件判断一 ] &amp;&amp; (||) [ 条件判断二 ]; then   </p><p>  命令一</p><p>elif [ 条件判断三 ] &amp;&amp; (||) [ 条件判断四 ]; then</p><p>  命令二</p><p>else</p><p>  执行其它</p><p>fi</p><p>判断第二种</p><p>if [条件判断一 -a (-o) 条件判断二 -a (-o) 条件判断三]; then</p><p>elif [条件判断三  -a (-o) 条件判断四 ]; then</p><p>else</p><p>  执行其它</p><p>fi</p><p>判断第三种</p><p>if [[条件判断一 &amp;&amp; (||) 条件判断二 ]]; then</p><p>elif [[ 条件判断三 &amp;&amp; (||) 条件判断四 ]]; then</p><p>else</p><p>  执行其它</p><p>fi</p><p>例1：设置umask</p><p>参考： [root@xuegod63 ~]# vim &#x2F;etc&#x2F;profile </p><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps5.jpg" alt="img"> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim umask.sh </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$UID</span> -gt 199 ] &amp;&amp; [ <span class="string">&quot;`/usr/bin/id -gn`&quot;</span> = <span class="string">&quot;`/usr/bin/id -un`&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;umask 002&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;i am root :umask 022&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># bash umask.sh </span></span><br><span class="line"></span><br><span class="line">i am root :<span class="built_in">umask</span> 022</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>例2：[[ 。。。 ]]和[ 。。。]的区别</p><p>[[… ]] 运算符是[… ]运算符的扩充；[[… ]]能够支持 *，&lt; 、&gt;等符号且不需要转义符</p><p>例1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# if [[ $USER == r* ]] ; then echo &quot;hello,$USER&quot; ; else echo $USER not ; fi</span><br><span class="line"></span><br><span class="line">hello,root</span><br></pre></td></tr></table></figure><p>注： $USER &#x3D;&#x3D; r<em>对比时，  r</em> 表示以r开头的任意长度字符串，这样就包括root</p><p>当只有一个[] 方括号时：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# if [ $USER == r* ] ; then echo &quot;hello,$USER&quot; ; else echo $USER not ; fi</span><br><span class="line"></span><br><span class="line">root not</span><br></pre></td></tr></table></figure><p>#对比时r* ，就表示两个字符串 r*</p><p>也可以这样写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# if [[ $USER == [a-z]oot ]] ; then echo &quot;hello,$USER&quot; ; else echo $USER not ; fi</span><br></pre></td></tr></table></figure><p>[[ 。。。 ]]和[ 。。。]的区别汇总：</p><p>1、所有的字符与逻辑运算符直接用“空格”分开，不能连到一起。</p><p>2、在[… ]表达式中，常见的&gt; 、&lt;需要加转义符\，大小比较</p><p>3、进行逻辑运算符&amp;&amp; 、||比较时；如果用的[ ]符号，则用在外面，如[… ] &amp;&amp; [… ] || [ …]如果在[…]里面进行逻辑与或的比较，则用-a、-o进行表示，如[ x &#x3D; y –a x &lt; z –o x &gt; m ]</p><p>4、[[… ]] 运算符只是[… ]运算符的扩充；能够支持&lt; 、&gt;符号运算不需要转义符；它还是以字符串比较大小。里面支持逻辑运算符 || 、 &amp;&amp; ， 不再使用-a 、-o</p><p>5、[[…]] 用 &amp;&amp; 而不是 -a 表示逻辑“与”；用 || 而不是 -o表示逻辑“或”</p><p>6、[[… ]]可以进行算术扩展，而[ … ]不可以</p><p>7、[[…]]能用正则，而[…]不行</p><p>8、双括号((  ))用于数学表达式</p><p>9、双方括号号[[  ]]用于高级字符串处理，比如“模糊匹配”</p><h2 id="20-4-2-shell中的通配符"><a href="#20-4-2-shell中的通配符" class="headerlink" title="20.4.2  shell中的通配符"></a>20.4.2  shell中的通配符</h2><p>shell常见通配符：</p><table><thead><tr><th>字符</th><th>含义</th><th>实例</th></tr></thead><tbody><tr><td>*</td><td>匹配 0 或多个字符</td><td>a*b a与b之间可以有任意长度的任意字符, 也可以一个也没有, 如aabcb, axyzb, a012b, ab。</td></tr><tr><td>?</td><td>匹配任意一个字符</td><td>a?b a与b之间必须也只能有一个字符, 可以是任意字符, 如aab, abb, acb, a0b。</td></tr><tr><td>[list]</td><td>匹配 list 中的任意单一字符</td><td>a[xyz]b  a与b之间必须也只能有一个字符, 但只能是 x 或 y 或 z, 如: axb, ayb, azb。</td></tr><tr><td>[!list]</td><td>匹配 除list 中的任意单一字符</td><td>a[!0-9]b a与b之间必须也只能有一个字符, 但不能是阿拉伯数字, 如axb, aab, a-b。</td></tr><tr><td>[c1-c2]</td><td>匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]</td><td>a[0-9]b 0与9之间必须也只能有一个字符 如a0b, a1b… a9b。</td></tr><tr><td>{string1,string2,…}</td><td>匹配 sring1 或 string2 (或更多)其一字符串</td><td>a{abc,xyz,123}b  a与b之间只能是abc或xyz或123这三个字符串之一。</td></tr></tbody></table><p>例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment">#  ls /etc/*.conf</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># ls /etc/???.conf</span></span><br><span class="line"></span><br><span class="line">/etc/nfs.conf  /etc/sos.conf  /etc/yum.conf</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># touch  /opt/a&#123;1,2,3&#125;.txt</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># ls /opt/a[123].txt</span></span><br><span class="line"></span><br><span class="line">/opt/a1.txt  /opt/a2.txt  /opt/a3.txt</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># ls /opt/a[1,2,3].txt</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># ls /opt/a[13].txt</span></span><br><span class="line"></span><br><span class="line">/opt/a1.txt  /opt/a3.txt</span><br></pre></td></tr></table></figure><h1 id="20-5-实战-3个shell脚本实战"><a href="#20-5-实战-3个shell脚本实战" class="headerlink" title="20.5  实战-3个shell脚本实战"></a>20.5  实战-3个shell脚本实战</h1><h2 id="20-5-1-实战1：编写脚本检查服务器运行状态"><a href="#20-5-1-实战1：编写脚本检查服务器运行状态" class="headerlink" title="20.5.1  实战1：编写脚本检查服务器运行状态"></a>20.5.1  实战1：编写脚本检查服务器运行状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim status.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ge 1 ] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    systemctl status <span class="variable">$1</span> &gt; /dev/null</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">​    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> 服务正在运行&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    systemctl start <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​     <span class="built_in">echo</span> <span class="string">&quot;执行脚本的格式&quot;</span></span><br><span class="line"></span><br><span class="line">​     <span class="built_in">echo</span> <span class="string">&quot;sh <span class="variable">$0</span> 服务名&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="20-5-2-实战2-根据学生的成绩判断-学生的优劣"><a href="#20-5-2-实战2-根据学生的成绩判断-学生的优劣" class="headerlink" title="20.5.2  实战2:根据学生的成绩判断 学生的优劣"></a>20.5.2  实战2:根据学生的成绩判断 学生的优劣</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim  check_cj.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span>  -p  <span class="string">&quot;请输入你的成绩  &quot;</span>  cj</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>  [ <span class="variable">$cj</span>  -ge  0  ]   &amp;&amp;  [  <span class="variable">$cj</span>  -le  59  ]  ;<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">echo</span>  <span class="string">&quot;补考&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span>  [  <span class="variable">$cj</span>  -ge  60 ]   &amp;&amp;  [  <span class="variable">$cj</span>  -le  70  ]  ;<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span>  <span class="string">&quot;良好&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span>   [ <span class="variable">$cj</span> -ge 71 ]   &amp;&amp;  [ <span class="variable">$cj</span>  -le  85 ]  ;<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span>  <span class="string">&quot;好&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$cj</span>  -ge 86 ]   &amp;&amp;  [  <span class="variable">$cj</span>  -le  100 ]  ;<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span>  <span class="string">&quot;优秀&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;成绩的有效范围是0-100之间&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="20-5-3-实战3："><a href="#20-5-3-实战3：" class="headerlink" title="20.5.3  实战3："></a>20.5.3  实战3：</h2><p>每周一晚上3:00 ，备份数据库服务器上webdb库的所有数据到系统的&#x2F;mysqlbak目录里，使用系统日期做备份文件名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim  mysqlbak.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">baknamefile=`<span class="built_in">date</span> +%Y-%m-%d`</span><br><span class="line"></span><br><span class="line">bakdir=/mysqlbak</span><br><span class="line"></span><br><span class="line">user=root</span><br><span class="line"></span><br><span class="line">password=123</span><br><span class="line"></span><br><span class="line">dbname=webdb</span><br><span class="line"></span><br><span class="line">[  -e  <span class="variable">$bakdir</span>  ]  ||   <span class="built_in">mkdir</span>   <span class="variable">$bakdir</span></span><br><span class="line"></span><br><span class="line">mysqldump  -u<span class="variable">$user</span>  -p<span class="variable">$password</span>  --flush-logs  <span class="variable">$dbname</span>  &gt;   <span class="variable">$bakdir</span>/<span class="variable">$&#123;baknamefile&#125;</span>-webdb.sql</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">因为mysql咱们还没有学，这里以/etc目录来做实验：</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># vim etcbak.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">baknamefile=`<span class="built_in">date</span> +%Y-%m-%d`</span><br><span class="line"></span><br><span class="line">bakdir=/etcbak</span><br><span class="line"></span><br><span class="line">srcdir=/etc</span><br><span class="line"></span><br><span class="line">[  -e  <span class="variable">$bakdir</span>  ]  ||   <span class="built_in">mkdir</span>   <span class="variable">$bakdir</span></span><br><span class="line"></span><br><span class="line">tar zcvf <span class="variable">$&#123;bakdir&#125;</span>/<span class="variable">$&#123;baknamefile&#125;</span>-etc.tar.gz /etc/</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;========================&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -lh <span class="variable">$&#123;bakdir&#125;</span>/<span class="variable">$&#123;baknamefile&#125;</span>-etc.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;back etc is ok!&quot;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># chmod +x  etcbak.sh</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># crontab  -e</span></span><br><span class="line"></span><br><span class="line">0 3 * * *  /root/etcbak.sh  2&gt;&amp;1 &gt; /dev/null</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>总结：</p><p>20.1  read命令键盘读取变量的值</p><p>20.2  流程控制语句if</p><p>20.3  test测试命令</p><p>20.4  流程控制过程中复杂条件和通配符</p><p>20.5  实战-3个shell脚本实战</p>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本的基础</title>
      <link href="/posts/54091.html"/>
      <url>/posts/54091.html</url>
      
        <content type="html"><![CDATA[<p>第十九章  shell脚本的基础</p><p>本节所讲内容：</p><p>19.1  shell 基本语法</p><p>19.2  SHELL变量及运用</p><p>19.3  数学运算</p><p>19.4  实战-升级系统中的java版本到1.8版本-为后期安装Hadoop集群做准备</p><h1 id="19-1-shell-基本语法"><a href="#19-1-shell-基本语法" class="headerlink" title="19.1  shell 基本语法"></a>19.1  shell 基本语法</h1><h2 id="19-1-1-什么是shell"><a href="#19-1-1-什么是shell" class="headerlink" title="19.1.1  什么是shell?"></a>19.1.1  什么是shell?</h2><p>Shell是一个命令解释器，它在操作系统的最外层，负责直接与用户进行对话，把用户的输入解释给操作系统，并处理各种各样的操作系统的输出结果，输出到屏幕反馈给用户。这种对话方式可是交互也可以是非交互式的</p><p><img src="/../assets/blog_res/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E7%A1%80.assets/image-20231224135308530.png" alt="image-20231224135308530"></p><p>​我们所输入的命令计算机是不识别的，这时就需要一种程序来帮助我们进行翻译，变成计算机能识别的二进制程序，同时又把计算机生成的结果返回给我们。</p><h2 id="19-1-2-编程语言分类"><a href="#19-1-2-编程语言分类" class="headerlink" title="19.1.2  编程语言分类"></a>19.1.2  编程语言分类</h2><p>编程语言主要用：低级语言和高级语言</p><p>1）低级语言：</p><p>机器语言：二进制语言</p><p>汇编语言：符号语言，使用助记符来代替操作码，也就是用符号代替机器语言的二进制码 </p><p>它们都是面向机器的语言</p><p>2）高级语言：</p><p>它是比较接近自然语言或者说人类语言的一种编程，用人们能够容易理解的方式进行编写程序，</p><p>静态语言：编译型语言 如：c 、 c++ 、 java，</p><p>动态语言：解释型语言 如： php 、 shell 、 python 、 perl</p><p>gcc编译器：（解释器）  将人类理解的语言翻译成机器理解的语言</p><h2 id="19-1-3-什么是SHELL脚本？"><a href="#19-1-3-什么是SHELL脚本？" class="headerlink" title="19.1.3  什么是SHELL脚本？"></a>19.1.3  什么是SHELL脚本？</h2><p>shell脚本：就是说我们把原来linux命令或语句放在一个文件中，然后通过这个程序文件去执行时，我们就说这个程序为shell脚本或shell程序；我们可以在脚本中输入一系统的命令以及相关的语法语句组合，比如变量，流程控制语句等，把他们有机结合起来就形成了一个功能强大的shell脚本</p><p>先手写一个脚本体验一下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">xuegod63</span> ~]<span class="comment"># vim test.sh  #写入以下内容</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is shell.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line">mkdir /tmp/test</span><br><span class="line">touch /tmp/test/a.txt</span><br></pre></td></tr></table></figure><p> <img src="/../assets/blog_res/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E7%A1%80.assets/image-20231224105341201.png" alt="image-20231224105341201"></p><p>注释：</p><p>1、!&#x2F;bin&#x2F;bash 作用：告诉脚本使用的是哪种命令解释器。如不指shell，以当前shell作为执行的shell。</p><p> 2、在shell中以#表示开头，整个行就被当作一个注释。执行时被忽略。</p><p>3、shell程序一般以.sh结尾</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# chmod +x test.sh </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]# ./test.sh  #执行</span><br><span class="line"></span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p><strong>创建shell程序的步骤：</strong></p><p>第一步：创建一个包含命令和控制结构的文件。</p><p>第二步：修改这个文件的权限使它可以执行。使用chmod +x test.sh</p><p>第三步：检测语法错误</p><p>第四步：执行 .&#x2F;example</p><p><strong>shell脚本的执行通常有以下几种方式</strong></p><p>1、&#x2F;root&#x2F;test.sh  或者 .&#x2F;test.sh (当前路径下执行脚本的话要有执行权限chmod +x test.sh) </p><p>2、bash test.sh 或 sh test.sh  （这种方式可以不对脚本文件添加执行权限）</p><p>3、source test.sh (可以没有执行权限)</p><p>4、sh &lt; test.sh 或者 cat test.sh |sh(bash)</p><h1 id="19-2-SHELL变量及运用"><a href="#19-2-SHELL变量及运用" class="headerlink" title="19.2  SHELL变量及运用"></a>19.2  SHELL变量及运用</h1><h2 id="19-2-1-shell变量"><a href="#19-2-1-shell变量" class="headerlink" title="19.2.1  shell变量"></a>19.2.1  shell变量</h2><p>变量是shell 传递数据的一种方法。变量是用来代表每个值的符号名。我们可以把变量当成一个容器，通过变量，可以在内存中存储数据。也可以在脚本执行中进行修改和访问存储的数据</p><p>变量的设置规则：</p><p>1、 变量名称通常是大写字母，它可以由数字、字母（大小写）和下划线_组成。变量名区分大小写；但是大家要注意变量名称不能<strong>以数字开头</strong></p><p>2、 等号 &#x3D; 用于为变量分配值，在使用过程中等号两边不能有空格</p><p>3、 变量存储的数据类型是整数值和字符串值</p><p>4、 在对变量赋于字符串值时，建议大家用引号将其括起来。因为如果字符串中存在空格隔符号。需要使用单引号或双引号</p><p>5、 要对变量进行调用，可以在变量名称前加美元符号$</p><p>6、 如果需要增加变量的值，那么可以进行变量值的叠加。不过变量需要用双引号包含“$变量名”或用${变量名}包含</p><p>变量的分类</p><p>按照变量的作用可以分成4类：</p><p>​1、用户自定义变量 </p><p>​2、环境变量：这种变量中主要保存的是和系统操作环境相关的数据。 </p><p>​3、位置参数变量：这种变量主要是用来向脚本当中传递参数或数据的，变量名不能自定义，变量作用是固定的。 </p><p>​4、预定义变量：是Bash中已经定义好的变量，变量名不能自定义，变量作用也是固定的。 </p><p>按照变量作用域可以分成2类：全局变量和局部变量。</p><p>局部变量是shell 程序内部定义的，其使用范围仅限于定义它的程序，对其它程序不可见。包括：用户自定义变量、位置变量和预定义变量。</p><p>全局变量是环境变量，其值不随shell 脚本的执行结束而消失。</p><h2 id="19-2-2-用户定义变量"><a href="#19-2-2-用户定义变量" class="headerlink" title="19.2.2  用户定义变量"></a>19.2.2  用户定义变量</h2><p>变量名命名规则：由字母或下划线打头，不允许数字开头,后面由字母、数字或下划线组成，并且大小写字母意义不同。在使用变量时，在变量名前加$</p><p>例1：给变量VAR1赋值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# VAR1=123</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]# echo $VAR1</span><br><span class="line"></span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>variable  [ˈ<strong>veəriəbl]</strong> 变量</p><p>例2：错误的赋值方式,不允许数字开头，等号两边不能有空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# VAR2 =456</span><br><span class="line"></span><br><span class="line">bash: VAR2: 未找到命令...</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]# VAR2= 456</span><br><span class="line"></span><br><span class="line">bash: 456: 未找到命令...</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]# VAR2 = 456</span><br><span class="line"></span><br><span class="line">bash: VAR2: 未找到命令...</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]# 3VAR2 = 456</span><br><span class="line"></span><br><span class="line">bash: 3VAR2: 未找到命令...</span><br></pre></td></tr></table></figure><p>例3：变量值的叠加，使用${}</p><p>$name是${name}的简化版本，但是在某些情况下，还必须使用花括号引起的方式来消除歧义并避免意外的结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># VAR4=mysql</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR4</span></span><br><span class="line"></span><br><span class="line">mysql</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR4-db.log</span></span><br><span class="line"></span><br><span class="line">mysql-db.log</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR4.db.log</span></span><br><span class="line"></span><br><span class="line">mysql.db.log</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR4db.log #发现输出的结果不是我们想要的，怎么办？</span></span><br><span class="line"></span><br><span class="line">.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $&#123;VAR4&#125;db.log</span></span><br><span class="line"></span><br><span class="line">mysqldb.log</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="19-2-3-命令的替换-使用-或反引号"><a href="#19-2-3-命令的替换-使用-或反引号" class="headerlink" title="19.2.3  命令的替换,使用$()或反引号"></a>19.2.3  命令的替换,使用$()或反引号</h2><p>例1：在命令就调用date命令</p><p>扩展：date命令是显示或设置系统时间与日期。</p><p>-s&lt;字符串&gt;：根据字符串来设置日期与时间。字符串前后必须加上双引号；</p><p>&lt;+时间日期格式&gt;：指定显示时，使用特定的日期时间格式。</p><p>例：格式化输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># date +&quot;%Y-%m-%d&quot; #今天时间，一般备份数据需要用这个</span></span><br><span class="line"></span><br><span class="line">2018-05-25</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment">#  date +&quot;%Y-%m&quot;  #只显示年月</span></span><br><span class="line"></span><br><span class="line">2018-05</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment">#  date +&quot;%Y-%m-%d %H:%M.%S&quot;  #日期加时间</span></span><br><span class="line"></span><br><span class="line">2018-05-25 17:51.36</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment">#  date +&quot;%Y/**%m/%d %H/%M/%S&quot;** #使用/做分隔符</span></span><br><span class="line"></span><br><span class="line">2018-05-25 17-51-43</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment">#  date +&quot;%Y-%m-%d-%H-%M-%S&quot; #使用-做分隔符，一般备份数据需要用这个</span></span><br><span class="line"></span><br><span class="line">注： %y 年份只显示2位，  %Y年份显示4位</span><br></pre></td></tr></table></figure><p>date命令加减操作：</p><p>date +%Y%m%d          #显示当天年月日</p><p>date -d “+1 day” +%Y%m%d    #显示明天的日期</p><p>date -d “-1 day” +%Y%m%d    #显示昨天的日期</p><p>date -d “-1 month” +%Y%m%d   #显示上一月的日期</p><p>date -d “+1 month” +%Y%m%d   #显示下一月的日期</p><p>date -d “-1 year” +%Y%m%d    #显示前一年的日期</p><p>date -d “+1 year” +%Y%m%d    #显示下一年的日期</p><p>设定时间：</p><p>date -s 20180523        #设置成20120523，这样会把具体时间设置成空00:00:00</p><p>date -s 01:01:01        #设置具体时间，不会对日期做更改</p><p>date -s “2018-05-23 01:01:01”  #这样可以设置全部时间</p><p>例1： 在命令中调用date命令输出值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># echo date</span></span><br><span class="line"></span><br><span class="line">2018年 05月 25日 星期五 17:41:29 CST</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $(date)</span></span><br><span class="line"></span><br><span class="line">2018年 05月 25日 星期五 17:41:42 CST</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo date +&quot;%Y-%m-%d&quot;</span></span><br><span class="line"></span><br><span class="line">2012-05-23</span><br></pre></td></tr></table></figure><h2 id="19-2-4-命令的嵌套使用，使用"><a href="#19-2-4-命令的嵌套使用，使用" class="headerlink" title="19.2.4  命令的嵌套使用，使用$( $( ))"></a>19.2.4  命令的嵌套使用，使用$( $( ))</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># find /root/ -name .txt</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># VAR6=$(tar zcvf root.tar.gz $(find /root/ -name .txt))</span></span><br><span class="line"></span><br><span class="line">tar: 从成员名中删除开头的“/”</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR6  #查看值， VAR6中存储着tar的标准输出</span></span><br><span class="line"></span><br><span class="line">/root/.cache/tracker/db-version.txt /root/.cache/tracker/db-locale.txt /root/.cache/tracker/parser-sha1.txt /root/.cache/tracker/locale-for-miner-user-guides.txt /root/.cache/tracker/locale-for-miner-apps.txt /root/.cache/tracker/last-crawl.txt</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>实战：分享一个系统时间错误，引起tar报警告</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># date -s &quot;2012-03-03 21:25:00&quot;</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># tar zxvf root.tar.gz -C /opt/</span></span><br><span class="line"></span><br><span class="line">root/.cache/tracker/db-version.txt</span><br><span class="line"></span><br><span class="line">tar: root/.cache/tracker/db-version.txt：时间戳 2017-09-19 13:05:18 是未来的 168094624.438537189 秒之后</span><br><span class="line"></span><br><span class="line">注： 如果弹出这个消息，是因为咱们的当前系统的时间不对。 比如：当前系统的时间晚于文件的mtime时间</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># ls /opt/root/.mozilla/firefox/wggimqlt.default/ -a #解压成功</span></span><br></pre></td></tr></table></figure><h2 id="19-2-5-shell中单引号和双引号区别"><a href="#19-2-5-shell中单引号和双引号区别" class="headerlink" title="19.2.5  shell中单引号和双引号区别"></a>19.2.5  shell中单引号和双引号区别</h2><p>‘’在单引号中所有的字符包括特殊字符（$,’’,&#96;和\）都将解释成字符本身而成为普通字符。</p><p>“”在双引号中，除了$, ‘’, &#96;和\以外所有的字符都解释成字符本身，拥有“调用变量的值”、“引用命令”和“转义符”的特殊含义</p><p>注：\转义符，跟在之后的特殊符号将失去特殊含义，变为普通字符。如**$将输出“$”符号，而不当做是变量引用</p><p>例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR1</span></span><br><span class="line"></span><br><span class="line">123</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR1</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$VAR1</span></span><br></pre></td></tr></table></figure><p>例1：给变量值赋于多个单词，需要使用单引号和双引号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># VAR8=&#x27;xuegdo mk&#x27;</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR8</span></span><br><span class="line"></span><br><span class="line">xuegdo mk</span><br></pre></td></tr></table></figure><p>例2：赋值时单引号和双引号的区别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># VAR8=&#x27;xuegod mk $VAR1&#x27;</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># VAR9=&quot;xuegod mk $VAR1&quot;  #双引中$符号有作用</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR8</span></span><br><span class="line"></span><br><span class="line">xuegod mk <span class="variable">$VAR1</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR9</span></span><br><span class="line"></span><br><span class="line">xuegod mk 123</span><br></pre></td></tr></table></figure><p>注：单引号之间的内容原封不动赋值给变量，双引号之间的内容如有特殊符号会保留它的特殊含义</p><p>删除变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># unset VAR1</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="19-2-6-环境变量"><a href="#19-2-6-环境变量" class="headerlink" title="19.2.6  环境变量"></a>19.2.6  环境变量</h2><p>在bash shell中，环境变量分为两类：全局变量和局部变量</p><p>全局变量：对于shell会话和所有的子shell都是可见的</p><p>局部变量： 它只在自己的进程当中使用</p><p>例1：局部变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># VAR1=123</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR1</span></span><br><span class="line"></span><br><span class="line">123</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># vim a.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$VAR1</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo $VAR1</span></span><br><span class="line"></span><br><span class="line">123</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># bash a.sh  #执行a.sh 时，会使用另一个bash去执行，就访问不到$VAR1**的值**</span></span><br></pre></td></tr></table></figure><p>例2：env命令查看所全局变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># env </span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># env | grep PATH</span></span><br><span class="line"></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure><p>例3：使用export把这个局部变量输出为全局变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># export  VAR1=xuegod</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment">#  echo $VAR1</span></span><br><span class="line"></span><br><span class="line">xuegod</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># vim a.sh  #写入以下内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$VAR1</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># bash a.sh  #引用全局**变量成功**</span></span><br><span class="line"></span><br><span class="line">xuegod</span><br></pre></td></tr></table></figure><p>互动： 虽然我们设置了export全局变量，但是新开的xshell连接中，还是读不到变量VAR1，怎么办？</p><p> <img src="/../assets/blog_res/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E7%A1%80.assets/image-20231224105420952.png" alt="image-20231224105420952"></p><p>例3：让变量永久生效，可以把定义好的变量写入配置文件</p><p>当登录系统或新开启一个ssh连接启动bash进程时，一定会加载这4个配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim /etc/profile   #系统全局环境和登录系统的一些配置</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># vim /etc/bashrc   #shell全局自义配置文件，用于自定义shell</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># vim /root/.bashrc  #用于单独自定义某个用户的bash</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># vim /root/.bash_profile #用户单独自定义某个用户的系统环境</span></span><br></pre></td></tr></table></figure><p>互动：如何知道新建一个ssh连接，加载这4个配置文件先后顺序？ </p><p>有思路：1，没有思路：2</p><p>要会思考，思路很重要！</p><p>答：可以每个文件的最后，追加一个echo命令，输出一下文件的名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># echo &#x27;echo  /etc/profile &#x27; &gt;&gt; /etc/profile</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo &#x27;echo  /etc/bashrc&#x27; &gt;&gt; /etc/bashrc</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo &#x27;echo /root/.bashrc &#x27; &gt;&gt; /root/.bashrc</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo &#x27;echo  /root/.bash_profile &#x27; &gt;&gt; /root/.bash_profile</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># ssh root@192.168.1.63  #弹出以下信息，就知道有优先级了</span></span><br><span class="line"></span><br><span class="line">/etc/profile</span><br><span class="line"></span><br><span class="line">/etc/bashrc</span><br><span class="line"></span><br><span class="line">/root/.bashrc</span><br><span class="line"></span><br><span class="line">/root/.bash_profile</span><br></pre></td></tr></table></figure><p>互动：知道加载的顺序有什么用？</p><p>可以在这里添加木马程序，只要管理登录系统，就触发木马程序！  现在大家知道学习操作系统原理的作用了吧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># echo &#x27;touch /tmp/profile.txt &#x27; &gt;&gt; /etc/profile </span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># echo &#x27;touch /tmp/bash_profile.txt &#x27; &gt;&gt; /root/.bash_profile</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">下面开始插入永久变量：</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># vim /etc/profile  #在文件的最后插入</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> VAR9=xuegod   <span class="comment">#=等号两边不能有空格</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># source  /etc/profile  #重新加载profile文件</span></span><br></pre></td></tr></table></figure><p>新打开的链接中，也有了</p><p> <img src="/../assets/blog_res/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E7%A1%80.assets/image-20231224105605515.png" alt="image-20231224105605515"></p><h2 id="19-2-7-设置PATH环境变量"><a href="#19-2-7-设置PATH环境变量" class="headerlink" title="19.2.7  设置PATH环境变量"></a>19.2.7  设置PATH环境变量</h2><p>SHELL要执行某一个程序，它要在系统中去搜索这个程序的路径，path变量是用来定义命令和查找命令的目录，当我们安装了第三方程序后，可以把第三方程序bin目录添加到这个path路径内，就可以在全局调用这个第三方程序的</p><p>例1： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim /opt/backup          </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Backup data is OK!&quot;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># chmod +x /opt/backup  </span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># /opt/backup</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># backup</span></span><br><span class="line"></span><br><span class="line">bash: backup: 未找到命令...</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">将backup命令添加PATH中</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># PATH=/opt/:$PATH</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># backup  #发现命令可以直接执行了，不用写全路径了</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># vim /etc/profile # 在文件最后追加以下内容，永久生效</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=/opt/:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># source  /etc/profile  #重新加载配置文件，使用配置生效</span></span><br></pre></td></tr></table></figure><h2 id="19-2-8-shell位置变量"><a href="#19-2-8-shell位置变量" class="headerlink" title="19.2.8  shell位置变量"></a>19.2.8  shell位置变量</h2><p>Shell解释执行用户的命令时，将命令行的第一个字符作为命令名，而其它字符作为参数。  </p><p>$0  获取当前执行shell脚本的文件文件名，包括脚本路径,命令本身</p><p>$n  获取当前脚本的第n个参数 n&#x3D;1,2…..n 当n大于9时 用${10}表示。</p><p>例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim print.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;本shell脚本的文件名： <span class="variable">$0</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第1个参数：  <span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第2个参数：  <span class="variable">$2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第3个参数：  <span class="variable">$3</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第4个参数：  <span class="variable">$4</span>&quot;</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># chmod +x print.sh</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># ./print.sh 111  222 a.txt  444</span></span><br><span class="line"></span><br><span class="line">本shell脚本的文件名： ./print.sh</span><br><span class="line"></span><br><span class="line">第1个参数：  111</span><br><span class="line"></span><br><span class="line">第2个参数：  222</span><br><span class="line"></span><br><span class="line">第3个参数：  a.txt</span><br><span class="line"></span><br><span class="line">第4个参数：  444</span><br></pre></td></tr></table></figure><p>使用场景：服务器启动传参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># /etc/init.d/network restart</span></span><br></pre></td></tr></table></figure><h2 id="19-2-9-特殊变量"><a href="#19-2-9-特殊变量" class="headerlink" title="19.2.9  特殊变量"></a>19.2.9  特殊变量</h2><p>有些变量是一开始执行Script脚本时就会设定，且不能被修改，但我们不叫它只读的系统变量，而叫它特殊变量。这些变量当一执行程序时就有了，以下是一些特殊变量：</p><table><thead><tr><th>$*</th><th>以一个单字符串显示所有向脚本传递的参数；如”$*”用【”】括起来的情况、以”$1 $2 … $n”的形式输出所有参数</th></tr></thead><tbody><tr><td>$#</td><td>传递到脚本的参数个数</td></tr><tr><td>$$</td><td>当前进程的进程号PID</td></tr><tr><td>$?</td><td>显示最后命令的退出状态；0表示没有错误，其他任何值表明有错误</td></tr><tr><td>$!</td><td>后台运行的最后一个进程的进程号pid</td></tr></tbody></table><p>例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># vim special_variable.sh #写入以一下内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;$* 表示这个程序的所有参数 &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$#</span>  表示这个程序的参数个数&quot;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;$$  表示程序的进程ID &quot;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> /tmp/b.txt &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;$!  执行上一个后台指令的PID&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;$$  表示程序的进程ID &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;$? 表示上一个程序执行返回结果 &quot;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># bash special_variable.sh  11 22 33 44 55</span></span><br><span class="line"></span><br><span class="line">11 22 33 44 55 表示这个程序的所有参数 </span><br><span class="line"></span><br><span class="line">11 22 33 44 55 表示这个程序的所有参数 </span><br><span class="line"></span><br><span class="line">5  表示这个程序的参数个数</span><br><span class="line"></span><br><span class="line">45502  表程序的进程ID </span><br><span class="line"></span><br><span class="line">45504  执行上一个后台指令的PID</span><br><span class="line"></span><br><span class="line">45502  表程序的进程ID</span><br><span class="line"></span><br><span class="line">0 表示上一个程序执行返回结果</span><br></pre></td></tr></table></figure><p>例2：常用的环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 opt]<span class="comment"># cd /opt/</span></span><br><span class="line"></span><br><span class="line">[root@xuegod63 opt]<span class="comment"># vim env.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$HOME</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PWD</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 opt]<span class="comment"># bash env.sh </span></span><br><span class="line"></span><br><span class="line">/root</span><br><span class="line"></span><br><span class="line">/opt/:/opt/:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/root/bin</span><br><span class="line"></span><br><span class="line">/opt</span><br></pre></td></tr></table></figure><h1 id="19-3-数学运算"><a href="#19-3-数学运算" class="headerlink" title="19.3  数学运算"></a>19.3  数学运算</h1><h2 id="19-3-1-expr命令"><a href="#19-3-1-expr命令" class="headerlink" title="19.3.1  expr命令"></a>19.3.1  expr命令</h2><p>(1)对数字的基本计算，做比较时，输出结果假为0，1为真；特殊符号用转义符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># expr 2 \&gt; 5</span></span><br><span class="line"></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># expr 6 \&gt; 5</span></span><br><span class="line"></span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">*[root@xuegod63 ~]<span class="comment"># expr 3 * 5*</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">expr</span>: 语法错误</span><br><span class="line"></span><br><span class="line">*[root@xuegod63 ~]<span class="comment"># expr 3 \* 5</span></span><br><span class="line"></span><br><span class="line">15</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># expr 3 \+ 5</span></span><br><span class="line"></span><br><span class="line">8</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>(2)对字符串的处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]<span class="comment"># expr length &quot;ni hao&quot;</span></span><br><span class="line"></span><br><span class="line">6</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]<span class="comment"># expr substr &quot;ni hao&quot; 2 4 #从第2个开始，截取4个字符出来</span></span><br><span class="line"></span><br><span class="line">i ha</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="19-3-2-使用"><a href="#19-3-2-使用" class="headerlink" title="19.3.2  使用$(( ))"></a>19.3.2  使用$(( ))</h2><p>格式：$（（表达式1，表达2））</p><p>特点：</p><p>​1、在双括号结构中，所有表达式可以像c语言一样，如：a++,b–等。a++  等价于 a&#x3D;a+1 </p><p>​2、在双括号结构中，所有变量可以不加入：“$”符号前缀。</p><p>​3、双括号可以进行逻辑运算，四则运算</p><p>​4、双括号结构 扩展了for，while,if条件测试运算</p><p>​5、支持多个表达式运算，各个表达式之间用“，”分开</p><p>常用的算数运算符</p><table><thead><tr><th>运算符</th><th>意义</th></tr></thead><tbody><tr><td>++  –</td><td>递增及递减，可前置也可以后置</td></tr><tr><td>+  -  ! ~</td><td>一元运算的正负号 逻辑与取反</td></tr><tr><td><em>+  -  *  &#x2F;  %</em></td><td>加减乘除与余数</td></tr><tr><td>&lt;  &lt;&#x3D;  &gt;  &gt;&#x3D;</td><td>比较大小符号</td></tr><tr><td>&#x3D;&#x3D;  !&#x3D;</td><td>相等 不相等</td></tr><tr><td>&gt;&gt;  &lt;&lt;</td><td>向左位移 向右位移</td></tr><tr><td>&amp; ^  |</td><td>位的与 位的异或 位的或</td></tr><tr><td>&amp;&amp;  ||</td><td>逻辑与 逻辑或</td></tr><tr><td>？ :</td><td>条件判断</td></tr></tbody></table><p>例1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 opt]# b=$((1+2))</span><br><span class="line"></span><br><span class="line">[root@xuegod63 opt]# echo $b</span><br><span class="line"></span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">[root@xuegod63 opt]# echo $((2*3))</span><br><span class="line"></span><br><span class="line">6</span><br></pre></td></tr></table></figure><p>例2：递增和递减</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 opt]# echo $((b++))</span><br><span class="line"></span><br><span class="line">4</span><br><span class="line"></span><br><span class="line">[root@xuegod63 opt]# echo $((++b))</span><br><span class="line"></span><br><span class="line">6</span><br></pre></td></tr></table></figure><p>说明： a++或a–为先赋值再+1或减1 ；</p><p> ++a或–a为先加1或减1，然后再进行赋值</p><p>例3：求1到100的和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 opt]# echo $((100*(1+100)/2))</span><br><span class="line"></span><br><span class="line">5050</span><br></pre></td></tr></table></figure><h1 id="19-4-实战-升级系统中的java版本到1-8版本-为后期安装Hadoop集群做准备"><a href="#19-4-实战-升级系统中的java版本到1-8版本-为后期安装Hadoop集群做准备" class="headerlink" title="19.4  实战-升级系统中的java版本到1.8版本-为后期安装Hadoop集群做准备"></a>19.4  实战-升级系统中的java版本到1.8版本-为后期安装Hadoop集群做准备</h1><h2 id="19-4-1-安装jdk-java运行环境"><a href="#19-4-1-安装jdk-java运行环境" class="headerlink" title="19.4.1  安装jdk java运行环境"></a>19.4.1  安装jdk java运行环境</h2><p>上传jdk-8u161-linux-x64.rpm软件包到xuegod63</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@xuegod63 ~]# rpm -ivh jdk-8u161-linux-x64.rpm</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]#rpm -pql /root/jdk-8u161-linux-x64.rpm  #通过查看jdk的信息可以知道jdk的安装目录在/usr/java </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]#vim /etc/profile  #在文件的最后添加以下内容：</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_161</span><br><span class="line"></span><br><span class="line">export JAVA_BIN=/usr/java/jdk1.8.0_161/bin</span><br><span class="line"></span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line"></span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib/dt.jar:$&#123;JAVA_HOME&#125;/lib/tools.jar</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]#source /etc/profile #使配置文件生效</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">验证java运行环境是否安装成功：</span><br><span class="line"></span><br><span class="line">[root@xuegod63 ~]#  java -version</span><br><span class="line"></span><br><span class="line">java version &quot;1.8.0_161&quot;</span><br><span class="line"></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_161-b12)</span><br><span class="line"></span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)</span><br><span class="line"></span><br><span class="line">如果出现安装的对应版本，说明java运行环境已经安装成功。</span><br><span class="line"></span><br><span class="line">注：这里只是升级了jdk的版本，因为在我安装的系统中已经安装了jdk。</span><br></pre></td></tr></table></figure><p>总结：</p><p>19.1  shell 基本语法</p><p>19.2  SHELL变量及运用</p><p>19.3  数学运算</p><p>19.4  实战-升级系统中的java版本到1.8版本-为后期安装Hadoop集群做准备</p>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SHELL编程前奏_小工具</title>
      <link href="/posts/12601.html"/>
      <url>/posts/12601.html</url>
      
        <content type="html"><![CDATA[<h1 id="本节课程目标"><a href="#本节课程目标" class="headerlink" title="本节课程目标"></a>本节课程目标</h1><ul><li>了解shell中的通配符</li><li>熟悉grep、cut、sort等小工具和shell中的通配符的使用</li></ul><h1 id="一、文本处理工具"><a href="#一、文本处理工具" class="headerlink" title="一、文本处理工具"></a>一、文本处理工具</h1><h2 id="1-grep工具"><a href="#1-grep工具" class="headerlink" title="1.grep工具"></a>1.grep工具</h2><blockquote><p>grep是**&#x3D;&#x3D;行&#x3D;&#x3D;**过滤工具；用于根据关键字进行行过滤</p></blockquote><h3 id="语法和选项"><a href="#语法和选项" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep [选项] &#x27;关键字&#x27; 文件名</span></span><br></pre></td></tr></table></figure><p><strong>常见选项：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS:</span><br><span class="line">    <span class="literal">-i</span>: 不区分大小写</span><br><span class="line">    <span class="literal">-v</span>: 查找不包含指定内容的行,反向选择</span><br><span class="line">    <span class="literal">-w</span>: 按单词搜索</span><br><span class="line">    <span class="literal">-o</span>: 打印匹配关键字</span><br><span class="line">    <span class="literal">-c</span>: 统计匹配到的行数</span><br><span class="line">    <span class="literal">-n</span>: 显示行号</span><br><span class="line">    <span class="literal">-r</span>: 逐层遍历目录查找</span><br><span class="line">    <span class="literal">-A</span>: 显示匹配行及后面多少行</span><br><span class="line">    <span class="literal">-B</span>: 显示匹配行及前面多少行</span><br><span class="line">    <span class="literal">-C</span>: 显示匹配行前后多少行</span><br><span class="line">    <span class="literal">-l</span>：只列出匹配的文件名</span><br><span class="line">    <span class="literal">-L</span>：列出不匹配的文件名</span><br><span class="line">    <span class="literal">-e</span>: 使用正则匹配</span><br><span class="line">    <span class="literal">-E</span>:使用扩展正则匹配</span><br><span class="line">    ^key:以关键字开头</span><br><span class="line">    key<span class="variable">$</span>:以关键字结尾</span><br><span class="line">    ^<span class="variable">$</span>:匹配空行</span><br><span class="line">    <span class="literal">--color</span>=auto ：可以将找到的关键词部分加上颜色的显示</span><br></pre></td></tr></table></figure><p><strong>颜色显示（别名设置）：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">临时设置：</span><br><span class="line"><span class="comment"># alias grep=&#x27;grep --color=auto&#x27;//只针对当前终端和当前用户生效</span></span><br><span class="line"></span><br><span class="line">永久设置：</span><br><span class="line"><span class="number">1</span>）全局（针对所有用户生效）</span><br><span class="line">vim /etc/bashrc</span><br><span class="line">alias grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line">source /etc/bashrc</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）局部（针对具体的某个用户）</span><br><span class="line">vim ~/.bashrc</span><br><span class="line">alias grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>举例说明：</strong></p><p>&#x3D;&#x3D;说明：不要直接使用&#x2F;etc&#x2F;passwd文件，将其拷贝到&#x2F;tmp下做实验！&#x3D;&#x3D;</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep -i root passwd忽略大小写匹配包含root的行</span></span><br><span class="line"><span class="comment"># grep -w ftp passwd 精确匹配ftp单词</span></span><br><span class="line"><span class="comment"># grep -w hello passwd 精确匹配hello单词;自己添加包含hello的行到文件</span></span><br><span class="line"><span class="comment"># grep -wo ftp passwd 打印匹配到的关键字ftp</span></span><br><span class="line"><span class="comment"># grep -n root passwd 打印匹配到root关键字的行好</span></span><br><span class="line"><span class="comment"># grep -ni root passwd 忽略大小写匹配统计包含关键字root的行</span></span><br><span class="line"><span class="comment"># grep -nic root passwd忽略大小写匹配统计包含关键字root的行数</span></span><br><span class="line"><span class="comment"># grep -i ^root passwd 忽略大小写匹配以root开头的行</span></span><br><span class="line"><span class="comment"># grep bash$ passwd 匹配以bash结尾的行</span></span><br><span class="line"><span class="comment"># grep -n ^$ passwd 匹配空行并打印行号</span></span><br><span class="line"><span class="comment"># grep ^# /etc/vsftpd/vsftpd.conf匹配以#号开头的行</span></span><br><span class="line"><span class="comment"># grep -v ^# /etc/vsftpd/vsftpd.conf匹配不以#号开头的行</span></span><br><span class="line"><span class="comment"># grep -A 5 mail passwd  匹配包含mail关键字及其后5行</span></span><br><span class="line"><span class="comment"># grep -B 5 mail passwd  匹配包含mail关键字及其前5行</span></span><br><span class="line"><span class="comment"># grep -C 5 mail passwd 匹配包含mail关键字及其前后5行</span></span><br></pre></td></tr></table></figure><h2 id="2-cut工具"><a href="#2-cut工具" class="headerlink" title="2. cut工具"></a>2. cut工具</h2><blockquote><p>cut是&#x3D;&#x3D;列&#x3D;&#x3D;截取工具，用于列的截取</p></blockquote><h3 id="语法和选项-1"><a href="#语法和选项-1" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cut 选项  文件名</span></span><br></pre></td></tr></table></figure><p><strong>常见选项：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-c</span>:以字符为单位进行分割,截取</span><br><span class="line"><span class="literal">-d</span>:自定义分隔符，默认为制表符\t</span><br><span class="line"><span class="operator">-f</span>:与<span class="literal">-d</span>一起使用，指定截取哪个区域</span><br></pre></td></tr></table></figure><p><strong>举例说明:</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cut -d: -f1 1.txt 以:冒号分割，截取第1列内容</span></span><br><span class="line"><span class="comment"># cut -d: -f1,6,7 1.txt 以:冒号分割，截取第1,6,7列内容</span></span><br><span class="line"><span class="comment"># cut -c4 1.txt 截取文件中每行第4个字符</span></span><br><span class="line"><span class="comment"># cut -c1-4 1.txt 截取文件中每行的1-4个字符</span></span><br><span class="line"><span class="comment"># cut -c4-10 1.txt 截取文件中每行的4-10个字符</span></span><br><span class="line"><span class="comment"># cut -c5- 1.txt 从第5个字符开始截取后面所有字符</span></span><br></pre></td></tr></table></figure><p><strong>课堂练习：</strong><br>用小工具列出你当系统的运行级别。5&#x2F;3</p><ol><li>如何查看系统运行级别<ul><li>命令<code>runlevel</code></li><li>文件<code>/etc/inittab</code></li></ul></li><li>如何过滤运行级别</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">runlevel |cut <span class="literal">-c3</span></span><br><span class="line">runlevel | cut <span class="literal">-d</span> <span class="string">&#x27; &#x27;</span> <span class="literal">-f2</span></span><br><span class="line">grep <span class="literal">-v</span> <span class="string">&#x27;^#&#x27;</span> /etc/inittab | cut <span class="literal">-d</span>: <span class="literal">-f2</span></span><br><span class="line">grep <span class="string">&#x27;^id&#x27;</span> /etc/inittab |cut <span class="literal">-d</span>: <span class="literal">-f2</span></span><br><span class="line">grep <span class="string">&quot;initdefault:<span class="variable">$</span>&quot;</span> /etc/inittab | cut <span class="literal">-c4</span></span><br><span class="line">grep <span class="literal">-v</span> ^<span class="comment"># /etc/inittab |cut -c4</span></span><br><span class="line">grep <span class="string">&#x27;id:&#x27;</span> /etc/inittab |cut <span class="literal">-d</span>: <span class="literal">-f2</span></span><br><span class="line">cut <span class="literal">-d</span><span class="string">&#x27;:&#x27;</span> <span class="literal">-f2</span> /etc/inittab |grep <span class="literal">-v</span> ^<span class="comment">#</span></span><br><span class="line">cut <span class="literal">-c4</span> /etc/inittab |tail <span class="literal">-1</span></span><br><span class="line">cut <span class="literal">-d</span>: <span class="literal">-f2</span> /etc/inittab |tail <span class="literal">-1</span></span><br></pre></td></tr></table></figure><h2 id="3-sort工具"><a href="#3-sort工具" class="headerlink" title="3. sort工具"></a>3. sort工具</h2><blockquote><p>sort工具用于排序;它将文件的每一行作为一个单位，从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</p></blockquote><h4 id="语法和选项-2"><a href="#语法和选项-2" class="headerlink" title="语法和选项"></a>语法和选项</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-u</span> ：去除重复行</span><br><span class="line"><span class="literal">-r</span> ：降序排列，默认是升序</span><br><span class="line"><span class="literal">-o</span> : 将排序结果输出到文件中,类似重定向符号&gt;</span><br><span class="line"><span class="literal">-n</span> ：以数字排序，默认是按字符排序</span><br><span class="line"><span class="literal">-t</span> ：分隔符</span><br><span class="line"><span class="literal">-k</span> ：第N列</span><br><span class="line"><span class="literal">-b</span> ：忽略前导空格。</span><br><span class="line"><span class="literal">-R</span> ：随机排序，每次运行的结果均不同</span><br></pre></td></tr></table></figure><p><strong>举例说明</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sort -n -t: -k3 1.txt 按照用户的uid进行升序排列</span></span><br><span class="line"><span class="comment"># sort -nr -t: -k3 1.txt 按照用户的uid进行降序排列</span></span><br><span class="line"><span class="comment"># sort -n 2.txt 按照数字排序</span></span><br><span class="line"><span class="comment"># sort -nu 2.txt 按照数字排序并且去重</span></span><br><span class="line"><span class="comment"># sort -nr 2.txt </span></span><br><span class="line"><span class="comment"># sort -nru 2.txt </span></span><br><span class="line"><span class="comment"># sort -nru 2.txt </span></span><br><span class="line"><span class="comment"># sort -n 2.txt -o 3.txt 按照数字排序并将结果重定向到文件</span></span><br><span class="line"><span class="comment"># sort -R 2.txt </span></span><br><span class="line"><span class="comment"># sort -u 2.txt </span></span><br></pre></td></tr></table></figure><h2 id="4-uniq工具"><a href="#4-uniq工具" class="headerlink" title="4.uniq工具"></a>4.uniq工具</h2><blockquote><p>uniq用于去除**&#x3D;&#x3D;连续&#x3D;&#x3D;<strong>的</strong>&#x3D;&#x3D;重复&#x3D;&#x3D;**行</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">常见选项：</span><br><span class="line"><span class="literal">-i</span>: 忽略大小写</span><br><span class="line"><span class="literal">-c</span>: 统计重复行次数</span><br><span class="line"><span class="literal">-d</span>:只显示重复行</span><br><span class="line"></span><br><span class="line">举例说明：</span><br><span class="line"><span class="comment"># uniq 2.txt </span></span><br><span class="line"><span class="comment"># uniq -d 2.txt </span></span><br><span class="line"><span class="comment"># uniq -dc 2.txt </span></span><br></pre></td></tr></table></figure><h2 id="5-tee工具"><a href="#5-tee工具" class="headerlink" title="5.tee工具"></a>5.tee工具</h2><blockquote><p>tee工具是从标准输入读取并写入到标准输出和文件，即：双向覆盖重定向（屏幕输出|文本输入）</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">选项：</span><br><span class="line"><span class="literal">-a</span> 双向追加重定向</span><br><span class="line"></span><br><span class="line"><span class="comment"># echo hello world</span></span><br><span class="line"><span class="comment"># echo hello world|tee file1</span></span><br><span class="line"><span class="comment"># cat file1 </span></span><br><span class="line"><span class="comment"># echo 999|tee -a file1</span></span><br><span class="line"><span class="comment"># cat file1 </span></span><br></pre></td></tr></table></figure><h2 id="6-diff工具"><a href="#6-diff工具" class="headerlink" title="6.diff工具"></a>6.diff工具</h2><blockquote><p>diff工具用于逐行比较文件的不同</p></blockquote><p>注意：diff描述两个文件不同的方式是告诉我们&#x3D;&#x3D;怎样改变第一个&#x3D;&#x3D;文件之后&#x3D;&#x3D;与第二个文件匹配&#x3D;&#x3D;。</p><h3 id="语法和选项-3"><a href="#语法和选项-3" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">diff</span> [选项] 文件<span class="number">1</span> 文件<span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong>常用选项：</strong></p><table><thead><tr><th>选项</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>-b</td><td>不检查空格</td><td></td></tr><tr><td>-B</td><td>不检查空白行</td><td></td></tr><tr><td>-i</td><td>不检查大小写</td><td></td></tr><tr><td>-w</td><td>忽略所有的空格</td><td></td></tr><tr><td>–normal</td><td>正常格式显示(默认)</td><td></td></tr><tr><td>-c</td><td>上下文格式显示</td><td></td></tr><tr><td>-u</td><td>合并格式显示</td><td></td></tr></tbody></table><p><strong>举例说明：</strong></p><ul><li>比较两个&#x3D;&#x3D;普通文件&#x3D;&#x3D;异同，文件准备：</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat file1</span></span><br><span class="line">aaaa</span><br><span class="line"><span class="number">111</span></span><br><span class="line">hello world</span><br><span class="line"><span class="number">222</span></span><br><span class="line"><span class="number">333</span></span><br><span class="line">bbb</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment">#</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat file2</span></span><br><span class="line">aaa</span><br><span class="line">hello</span><br><span class="line"><span class="number">111</span></span><br><span class="line"><span class="number">222</span></span><br><span class="line">bbb</span><br><span class="line"><span class="number">333</span></span><br><span class="line">world</span><br></pre></td></tr></table></figure><p>1）正常显示</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">diff</span>目的：file1如何改变才能和file2匹配</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff file1 file2</span></span><br><span class="line"><span class="number">1</span>c1,<span class="number">2</span>第一个文件的第<span class="number">1</span>行需要改变(c=change)才能和第二个文件的第<span class="number">1</span>到<span class="number">2</span>行匹配</span><br><span class="line">&lt; aaaa小于号<span class="string">&quot;&lt;&quot;</span>表示左边文件(file1)文件内容</span><br><span class="line"><span class="literal">---</span><span class="literal">---</span>表示分隔符</span><br><span class="line">&gt; aaa大于号<span class="string">&quot;&gt;&quot;</span>表示右边文件(file2)文件内容</span><br><span class="line">&gt; hello</span><br><span class="line"><span class="number">3</span>d3第一个文件的第<span class="number">3</span>行删除(d=delete)后才能和第二个文件的第<span class="number">3</span>行匹配</span><br><span class="line">&lt; hello world</span><br><span class="line"><span class="number">5</span>d4第一个文件的第<span class="number">5</span>行删除后才能和第二个文件的第<span class="number">4</span>行匹配</span><br><span class="line">&lt; <span class="number">333</span></span><br><span class="line"><span class="number">6</span>a6,<span class="number">7</span>第一个文件的第<span class="number">6</span>行增加(a=add)内容后才能和第二个文件的第<span class="number">6</span>到<span class="number">7</span>行匹配</span><br><span class="line">&gt; <span class="number">333</span>需要增加的内容在第二个文件里是<span class="number">333</span>和world</span><br><span class="line">&gt; world</span><br></pre></td></tr></table></figure><p>2）上下文格式显示</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff -c file1 file2</span></span><br><span class="line">前两行主要列出需要比较的文件名和文件的时间戳；文件名前面的符号***表示file1，<span class="literal">---</span>表示file2</span><br><span class="line">*** file1       <span class="number">2019</span><span class="literal">-04-16</span> <span class="number">16</span>:<span class="number">26</span>:<span class="number">05.748650262</span> +<span class="number">0800</span></span><br><span class="line"><span class="literal">---</span> file2       <span class="number">2019</span><span class="literal">-04-16</span> <span class="number">16</span>:<span class="number">26</span>:<span class="number">30.470646030</span> +<span class="number">0800</span></span><br><span class="line">***************我是分隔符</span><br><span class="line">*** <span class="number">1</span>,<span class="number">6</span> ****以***开头表示file1文件，<span class="number">1</span>,<span class="number">6</span>表示<span class="number">1</span>到<span class="number">6</span>行</span><br><span class="line">! aaaa!表示该行需要修改才与第二个文件匹配</span><br><span class="line">  <span class="number">111</span></span><br><span class="line">- hello world-表示需要删除该行才与第二个文件匹配</span><br><span class="line">  <span class="number">222</span></span><br><span class="line">- <span class="number">333</span>-表示需要删除该行才与第二个文件匹配</span><br><span class="line">  bbb</span><br><span class="line"><span class="literal">---</span> <span class="number">1</span>,<span class="number">7</span> <span class="literal">----</span>以<span class="literal">---</span>开头表示file2文件，<span class="number">1</span>,<span class="number">7</span>表示<span class="number">1</span>到<span class="number">7</span>行</span><br><span class="line">! aaa表示第一个文件需要修改才与第二个文件匹配</span><br><span class="line">! hello表示第一个文件需要修改才与第二个文件匹配</span><br><span class="line">  <span class="number">111</span></span><br><span class="line">  <span class="number">222</span></span><br><span class="line">  bbb</span><br><span class="line">+ <span class="number">333</span>表示第一个文件需要加上该行才与第二个文件匹配</span><br><span class="line">+ world表示第一个文件需要加上该行才与第二个文件匹配</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3）合并格式显示</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff -u file1 file2</span></span><br><span class="line">前两行主要列出需要比较的文件名和文件的时间戳；文件名前面的符号<span class="literal">---</span>表示file1，+++表示file2</span><br><span class="line"><span class="literal">---</span> file1       <span class="number">2019</span><span class="literal">-04-16</span> <span class="number">16</span>:<span class="number">26</span>:<span class="number">05.748650262</span> +<span class="number">0800</span></span><br><span class="line">+++ file2       <span class="number">2019</span><span class="literal">-04-16</span> <span class="number">16</span>:<span class="number">26</span>:<span class="number">30.470646030</span> +<span class="number">0800</span></span><br><span class="line"><span class="selector-tag">@</span><span class="selector-tag">@</span> <span class="literal">-1</span>,<span class="number">6</span> +<span class="number">1</span>,<span class="number">7</span> <span class="selector-tag">@</span><span class="selector-tag">@</span></span><br><span class="line"><span class="literal">-aaaa</span></span><br><span class="line">+aaa</span><br><span class="line">+hello</span><br><span class="line"> <span class="number">111</span></span><br><span class="line"><span class="literal">-hello</span> world</span><br><span class="line"> <span class="number">222</span></span><br><span class="line"><span class="literal">-333</span></span><br><span class="line"> bbb</span><br><span class="line">+<span class="number">333</span></span><br><span class="line">+world</span><br></pre></td></tr></table></figure><ul><li>比较两个&#x3D;&#x3D;目录不同&#x3D;&#x3D;</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">默认情况下也会比较两个目录里相同文件的内容</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">tmp</span>]<span class="comment"># diff dir1 dir2</span></span><br><span class="line"><span class="built_in">diff</span> dir1/file1 dir2/file1</span><br><span class="line"><span class="number">0</span>a1</span><br><span class="line">&gt; hello</span><br><span class="line">Only <span class="keyword">in</span> dir1: file3</span><br><span class="line">Only <span class="keyword">in</span> dir2: test1</span><br><span class="line">如果只需要比较两个目录里文件的不同，不需要进一步比较文件内容，需要加<span class="literal">-q</span>选项</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">tmp</span>]<span class="comment"># diff -q dir1 dir2</span></span><br><span class="line">Files dir1/file1 and dir2/file1 differ</span><br><span class="line">Only <span class="keyword">in</span> dir1: file3</span><br><span class="line">Only <span class="keyword">in</span> dir2: test1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>其他小技巧：</strong></p><p>有时候我们需要以一个文件为标准，去修改其他文件，并且修改的地方较多时，我们可以通过打补丁的方式完成。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）先找出文件不同，然后输出到一个文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff -uN file1 file2 &gt; file.patch</span></span><br><span class="line"><span class="literal">-u</span>:上下文模式</span><br><span class="line"><span class="literal">-N</span>:将不存在的文件当作空文件</span><br><span class="line"><span class="number">2</span>）将不同内容打补丁到文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># patch file1 file.patch</span></span><br><span class="line">patching file file1</span><br><span class="line"><span class="number">3</span>）测试验证</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff file1 file2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment">#</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-paste工具"><a href="#7-paste工具" class="headerlink" title="7. paste工具"></a>7. paste工具</h2><blockquote><p>paste工具用于合并文件行</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">常用选项：</span><br><span class="line"><span class="literal">-d</span>：自定义间隔符，默认是tab</span><br><span class="line"><span class="literal">-s</span>：串行处理，非并行</span><br></pre></td></tr></table></figure><h2 id="8-tr工具"><a href="#8-tr工具" class="headerlink" title="8. tr工具"></a>8. tr工具</h2><blockquote><p> tr用于字符转换，替换和删除；主要用于&#x3D;&#x3D;删除文件中控制字符&#x3D;&#x3D;或进行&#x3D;&#x3D;字符转换&#x3D;&#x3D;</p></blockquote><h3 id="语法和选项-4"><a href="#语法和选项-4" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">用法<span class="number">1</span>：命令的执行结果交给tr处理，其中string1用于查询，string2用于转换处理</span><br><span class="line"><span class="comment"># commands|tr  &#x27;string1&#x27;  &#x27;string2&#x27;</span></span><br><span class="line">用法<span class="number">2</span>：tr处理的内容来自文件，记住要使用<span class="string">&quot;&lt;&quot;</span>标准输入</span><br><span class="line"><span class="comment"># tr  &#x27;string1&#x27;  &#x27;string2&#x27; &lt; filename</span></span><br><span class="line"></span><br><span class="line">用法<span class="number">3</span>：匹配string1进行相应操作，如删除操作</span><br><span class="line"><span class="comment"># tr options &#x27;string1&#x27; &lt; filename</span></span><br></pre></td></tr></table></figure><p><strong>常用选项：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-d</span> 删除字符串<span class="number">1</span>中所有输入字符。</span><br><span class="line"><span class="literal">-s</span> 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串</span><br></pre></td></tr></table></figure><p><strong>常匹配字符串：</strong></p><table><thead><tr><th>字符串</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;a-z&#x3D;&#x3D;或[:lower:]</td><td>匹配所有小写字母</td><td>[a-zA-Z0-9]</td></tr><tr><td>&#x3D;&#x3D;A-Z&#x3D;&#x3D;或[:upper:]</td><td>匹配所有大写字母</td><td></td></tr><tr><td>&#x3D;&#x3D;0-9&#x3D;&#x3D;或[:digit:]</td><td>匹配所有数字</td><td></td></tr><tr><td>[:alnum:]</td><td>匹配所有字母和数字</td><td></td></tr><tr><td>[:alpha:]</td><td>匹配所有字母</td><td></td></tr><tr><td>[:blank:]</td><td>所有水平空白</td><td></td></tr><tr><td>[:punct:]</td><td>匹配所有标点符号</td><td></td></tr><tr><td>[:space:]</td><td>所有水平或垂直的空格</td><td></td></tr><tr><td>[:cntrl:]</td><td>所有控制字符</td><td>\f Ctrl-L        走行换页<br/>\n Ctrl-J  换行</td></tr><tr><td>\r Ctrl-M        回车</td><td></td><td></td></tr><tr><td>\t Ctrl-I  tab键</td><td></td><td></td></tr></tbody></table><p><strong>举例说明：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">shell01</span>]<span class="comment"># cat 3.txt 自己创建该文件用于测试</span></span><br><span class="line">ROOT:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>:x:<span class="number">4</span>:<span class="number">7</span>:<span class="built_in">lp</span>:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:<span class="number">5</span>:<span class="number">0</span>:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:<span class="number">6</span>:<span class="number">0</span>:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:<span class="number">7</span>:<span class="number">0</span>:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:<span class="number">8</span>:<span class="number">12</span>:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">uucp:x:<span class="number">10</span>:<span class="number">14</span>:uucp:/var/spool/uucp:/sbin/nologin</span><br><span class="line">boss02:x:<span class="number">516</span>:<span class="number">511</span>::/home/boss02:/bin/bash</span><br><span class="line">vip:x:<span class="number">517</span>:<span class="number">517</span>::/home/vip:/bin/bash</span><br><span class="line">stu1:x:<span class="number">518</span>:<span class="number">518</span>::/home/stu1:/bin/bash</span><br><span class="line">mailnull:x:<span class="number">47</span>:<span class="number">47</span>::/var/spool/mqueue:/sbin/nologin</span><br><span class="line">smmsp:x:<span class="number">51</span>:<span class="number">51</span>::/var/spool/mqueue:/sbin/nologin</span><br><span class="line">aaaaaaaaaaaaaaaaaaaa</span><br><span class="line">bbbbbb111111122222222222233333333cccccccc</span><br><span class="line">hello world <span class="number">888</span></span><br><span class="line"><span class="number">666</span></span><br><span class="line"><span class="number">777</span></span><br><span class="line"><span class="number">999</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># tr -d &#x27;[:/]&#x27; &lt; 3.txt 删除文件中的:和/</span></span><br><span class="line"><span class="comment"># cat 3.txt |tr -d &#x27;[:/]&#x27;删除文件中的:和/</span></span><br><span class="line"><span class="comment"># tr &#x27;[0-9]&#x27; &#x27;@&#x27; &lt; 3.txt 将文件中的数字替换为@符号</span></span><br><span class="line"><span class="comment"># tr &#x27;[a-z]&#x27; &#x27;[A-Z]&#x27; &lt; 3.txt 将文件中的小写字母替换成大写字母</span></span><br><span class="line"><span class="comment"># tr -s &#x27;[a-z]&#x27; &lt; 3.txt 匹配小写字母并将重复的压缩为一个</span></span><br><span class="line"><span class="comment"># tr -s &#x27;[a-z0-9]&#x27; &lt; 3.txt 匹配小写字母和数字并将重复的压缩为一个</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:digit:]&#x27; &lt; 3.txt 删除文件中的数字</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:blank:]&#x27; &lt; 3.txt 删除水平空白</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:space:]&#x27; &lt; 3.txt 删除所有水平和垂直空白</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h4><ol><li>使用小工具分别截取当前主机IP；截取NETMASK；截取广播地址；截取MAC地址</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d &#x27;[a-zA-Z ]&#x27;|cut -d: -f2,3,4</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span>:<span class="number">10.1</span>.<span class="number">1.255</span>:<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d &#x27;[a-zA-Z ]&#x27;|cut -d: -f2,3,4|tr &#x27;:&#x27; &#x27;\n&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;HWaddr&#x27;|cut -d: -f2-|cut -d&#x27; &#x27; -f4</span></span><br><span class="line"><span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">25</span>:AE:<span class="number">54</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;HW&#x27;|tr -s &#x27; &#x27;|cut -d&#x27; &#x27; -f5</span></span><br><span class="line"><span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:B4:<span class="number">9</span>E:<span class="number">4</span>E</span><br><span class="line"></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|cut -d: -f2|cut -d&#x27; &#x27; -f1</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|cut -d: -f2|tr -d &#x27;[ a-zA-Z]&#x27;</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|tr -d &#x27;[:a-zA-Z]&#x27;|tr &#x27; &#x27; &#x27;@&#x27;|tr -s &#x27;@&#x27;|tr &#x27;@&#x27; &#x27;\n&#x27;|grep -v ^$</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d [:alpha:]|tr &#x27;[ :]&#x27; &#x27;\n&#x27;|grep -v ^$</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep HWaddr|cut -d &#x27; &#x27; -f11</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep HWaddr|tr -s &#x27; &#x27;|cut -d&#x27; &#x27; -f5</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep HWaddr|tr -s &#x27; &#x27;|cut -d&#x27; &#x27; -f5</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d &#x27;a-zA-Z:&#x27;|tr &#x27; &#x27; &#x27;\n&#x27;|grep -v &#x27;^$&#x27;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>将系统中所有普通用户的用户名、密码和默认shell保存到一个文件中，要求用户名密码和默认shell之间用tab键分割</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep &#x27;bash$&#x27; passwd |grep -v &#x27;root&#x27;|cut -d: -f1,2,7|tr &#x27;:&#x27; &#x27;\t&#x27; |tee abc.txt</span></span><br></pre></td></tr></table></figure><h1 id="二、bash的特性"><a href="#二、bash的特性" class="headerlink" title="二、bash的特性"></a>二、bash的特性</h1><h2 id="1、命令和文件自动补全"><a href="#1、命令和文件自动补全" class="headerlink" title="1、命令和文件自动补全"></a>1、命令和文件自动补全</h2><p>Tab只能补全&#x3D;&#x3D;命令和文件&#x3D;&#x3D; （RHEL6&#x2F;Centos6）</p><h2 id="2、常见的快捷键"><a href="#2、常见的快捷键" class="headerlink" title="2、常见的快捷键"></a>2、常见的快捷键</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">^c   终止前台运行的程序</span><br><span class="line">^z  将前台运行的程序挂起到后台</span><br><span class="line">^d   退出 等价<span class="keyword">exit</span></span><br><span class="line">^l   清屏 </span><br><span class="line">^a |home  光标移到命令行的最前端</span><br><span class="line">^e |<span class="keyword">end</span>  光标移到命令行的后端</span><br><span class="line">^u   删除光标前所有字符</span><br><span class="line">^k   删除光标后所有字符</span><br><span class="line">^r 搜索历史命令</span><br></pre></td></tr></table></figure><h2 id="3-、-常用的通配符（重点）"><a href="#3-、-常用的通配符（重点）" class="headerlink" title="3 、&#x3D;&#x3D;常用的通配符（重点）&#x3D;&#x3D;"></a>3 、&#x3D;&#x3D;常用的通配符（重点）&#x3D;&#x3D;</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*:匹配<span class="number">0</span>或多个任意字符</span><br><span class="line">?:匹配任意单个字符</span><br><span class="line">[<span class="type">list</span>]:匹配[<span class="type">list</span>]中的任意单个字符,或者一组单个字符   [<span class="type">a</span>-<span class="type">z</span>]</span><br><span class="line">[!<span class="type">list</span>]: 匹配除list中的任意单个字符</span><br><span class="line">&#123;string1,string2,...&#125;：匹配string1,string2或更多字符串</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># rm -f file*</span></span><br><span class="line"><span class="comment"># cp *.conf  /dir1</span></span><br><span class="line"><span class="comment"># touch file&#123;1..5&#125;</span></span><br></pre></td></tr></table></figure><h2 id="4、-bash中的引号（重点）"><a href="#4、-bash中的引号（重点）" class="headerlink" title="4、&#x3D;&#x3D;bash中的引号（重点）&#x3D;&#x3D;"></a>4、&#x3D;&#x3D;bash中的引号（重点）&#x3D;&#x3D;</h2><ul><li>双引号””   :会把引号的内容当成整体来看待，允许通过$符号引用其他变量值</li><li>单引号’’     :会把引号的内容当成整体来看待，禁止引用其他变量值，shell中特殊符号都被视为普通字符</li><li>反撇号&#96;&#96;  :反撇号和$()一样，引号或括号里的命令会优先执行，如果存在嵌套，反撇号不能用</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo &quot;$(hostname)&quot;</span></span><br><span class="line">server</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo &#x27;$(hostname)&#x27;</span></span><br><span class="line"><span class="variable">$</span>(hostname)</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo &quot;hello world&quot;</span></span><br><span class="line">hello world</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo &#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo $(date +%F)</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo `echo $(date +%F)`</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo `date +%F`</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo `echo `date +%F``</span></span><br><span class="line">date +%F</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo $(echo `date +%F`)</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11-22</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS域名管理系统与LAMP编译安装</title>
      <link href="/posts/27993.html"/>
      <url>/posts/27993.html</url>
      
        <content type="html"><![CDATA[<h1 id="DNS域名管理系统与LAMP编译安装"><a href="#DNS域名管理系统与LAMP编译安装" class="headerlink" title="DNS域名管理系统与LAMP编译安装"></a>DNS域名管理系统与LAMP编译安装</h1><h1 id="一、DNS域名管理系统"><a href="#一、DNS域名管理系统" class="headerlink" title="一、DNS域名管理系统"></a>一、DNS域名管理系统</h1><h2 id="1、DNS两种解析"><a href="#1、DNS两种解析" class="headerlink" title="1、DNS两种解析"></a>1、DNS两种解析</h2><p>正向解析：把域名解析为对应的IP地址</p><p>反向解析：把IP地址解析为对应的域名</p><h2 id="2、DNS的反向解析"><a href="#2、DNS的反向解析" class="headerlink" title="2、DNS的反向解析"></a>2、DNS的反向解析</h2><p>目标：把10.1.1.13这个IP地址通过DNS服务器指向<a href="http://www.itcast.cluster域名/">www.itcast.cluster域名</a></p><p>第一步：开启网络的访问权限控制</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/named.conf</span></span><br><span class="line"><span class="number">12</span> options &#123;</span><br><span class="line"><span class="number">13</span>         listen<span class="literal">-on</span> port <span class="number">53</span> &#123; <span class="number">127.0</span>.<span class="number">0.1</span>;any; &#125;;</span><br><span class="line"><span class="number">14</span>         listen<span class="literal">-on-v6</span> port <span class="number">53</span> &#123; ::<span class="number">1</span>; &#125;;</span><br><span class="line"><span class="number">15</span>         directory       <span class="string">&quot;/var/named&quot;</span>;</span><br><span class="line"><span class="number">16</span>         dump<span class="operator">-file</span>       <span class="string">&quot;/var/named/data/cache_dump.db&quot;</span>;</span><br><span class="line"><span class="number">17</span>         statistics<span class="operator">-file</span> <span class="string">&quot;/var/named/data/named_stats.txt&quot;</span>;</span><br><span class="line"><span class="number">18</span>         memstatistics<span class="operator">-file</span> <span class="string">&quot;/var/named/data/named_mem_stats.txt&quot;</span>;</span><br><span class="line"><span class="number">19</span>         recursing<span class="operator">-file</span>  <span class="string">&quot;/var/named/data/named.recursing&quot;</span>;</span><br><span class="line"><span class="number">20</span>         secroots<span class="operator">-file</span>   <span class="string">&quot;/var/named/data/named.secroots&quot;</span>;</span><br><span class="line"><span class="number">21</span>         allow<span class="literal">-query</span>     &#123; localhost;any;&#125;;</span><br></pre></td></tr></table></figure><p>第二步：在zones文件中定义zone文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/named.rfc1912.zones</span></span><br><span class="line"><span class="number">49</span> zone <span class="string">&quot;1.1.10.in-addr.arpa&quot;</span> <span class="keyword">IN</span> &#123;</span><br><span class="line"><span class="number">50</span>         <span class="built_in">type</span> master;</span><br><span class="line"><span class="number">51</span>         file <span class="string">&quot;10.1.1.zone&quot;</span>;</span><br><span class="line"><span class="number">52</span>         allow<span class="literal">-update</span> &#123; none; &#125;;</span><br><span class="line"><span class="number">53</span> &#125;;</span><br></pre></td></tr></table></figure><p>第三步：cd &#x2F;var&#x2F;named进入到DNS zone配置文件目录，复制named.loopback文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /var/named</span></span><br><span class="line"><span class="comment"># cp -p named.loopback 10.1.1.zone</span></span><br></pre></td></tr></table></figure><p>第四步：编辑10.1.1.zone文件，把IP地址&#x3D;&gt;10.1.1.13指向<a href="http://www.itcast.cluster域名/">www.itcast.cluster域名</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$TTL</span> <span class="number">1</span>D</span><br><span class="line"><span class="selector-tag">@</span>       <span class="keyword">IN</span> SOA  <span class="selector-tag">@</span> rname.invalid. (</span><br><span class="line">                                        <span class="number">0</span>       ; serial</span><br><span class="line">                                        <span class="number">1</span>D      ; refresh</span><br><span class="line">                                        <span class="number">1</span><span class="built_in">H</span>      ; retry</span><br><span class="line">                                        <span class="number">1</span>W      ; expire</span><br><span class="line">                                        <span class="number">3</span><span class="built_in">H</span> )    ; minimum</span><br><span class="line">        NS      <span class="selector-tag">@</span></span><br><span class="line">        A       <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">        AAAA    ::<span class="number">1</span></span><br><span class="line">        PTR     localhost.</span><br><span class="line"><span class="comment">#增加一条反向解析，把10.1.1.13 =&gt; PTR =&gt; www.itcast.cluster</span></span><br><span class="line"><span class="number">13</span>      PTR     www.itcast.cluster</span><br></pre></td></tr></table></figure><p>第五步：检查与客户端测试</p><p>DNS服务器：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># named-checkconf /etc/named.conf</span></span><br><span class="line"><span class="comment"># named-checkconf /etc/named.rfc1912.zones</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd /var/named</span></span><br><span class="line"><span class="comment"># named-checkzone 10.1.1.zone 10.1.1.zone</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart named</span></span><br></pre></td></tr></table></figure><p>客户端检测：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &#x27;nameserver 10.1.1.12&#x27; &gt; /etc/resolv.conf</span></span><br><span class="line"><span class="comment"># nslookup 10.1.1.13</span></span><br><span class="line">www.itcast.cluster.<span class="number">1.1</span>.<span class="number">10</span>.in<span class="literal">-addr</span>.arpa.</span><br></pre></td></tr></table></figure><h2 id="3、VMware与CentOS7网络的小bug"><a href="#3、VMware与CentOS7网络的小bug" class="headerlink" title="3、VMware与CentOS7网络的小bug"></a>3、VMware与CentOS7网络的小bug</h2><p>DNS的临时配置方式 &#x3D;&gt; echo  ‘nameserver 10.1.1.12’ &gt; &#x2F;etc&#x2F;resolv.conf</p><blockquote><p>注：当VMware关闭或者挂起时，临时设置的DNS会被重置</p></blockquote><p>CentOS7版本中，有的时候，在网络配置时，明明设置了静态IP，但是无论重启网络、重启网卡，其设置的IP地址都没有生效。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig ens33</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ip a</span></span><br><span class="line"><span class="number">2</span>: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc pfifo_fast state UP <span class="built_in">group</span> default qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">68</span>:d8:bb brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet <span class="number">10.1</span>.<span class="number">1.29</span>/<span class="number">24</span> brd <span class="number">10.1</span>.<span class="number">1.255</span> scope global noprefixroute dynamic ens33</span><br><span class="line">       valid_lft <span class="number">1656</span>sec preferred_lft <span class="number">1656</span>sec</span><br><span class="line">    inet <span class="number">10.1</span>.<span class="number">1.11</span>/<span class="number">24</span> brd <span class="number">10.1</span>.<span class="number">1.255</span> scope global secondary ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::<span class="number">20</span>c:<span class="number">29</span>ff:fe68:d8bb/<span class="number">64</span> scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><blockquote><p>出现以上问题的主要原因在于图形化界面中的NetworkManager服务没有关闭！</p></blockquote><p>解决方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line"><span class="comment"># systemctl disable NetworkManager</span></span><br></pre></td></tr></table></figure><h2 id="4、多域DNS服务器搭建"><a href="#4、多域DNS服务器搭建" class="headerlink" title="4、多域DNS服务器搭建"></a>4、多域DNS服务器搭建</h2><p>需求：搭建一个DNS服务器，可以同时解析test.net和heima.cc域</p><table><thead><tr><th>编号</th><th>域名</th><th>IP地址</th></tr></thead><tbody><tr><td>1</td><td><a href="http://www.test.net/">www.test.net</a></td><td>10.1.1.13</td></tr><tr><td>2</td><td>bbs.heima.cc</td><td>10.1.1.13</td></tr></tbody></table><p>第一步：更改named.conf文件，设置网络访问权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/named.rfc1912.zones</span></span><br><span class="line"><span class="number">49</span> zone <span class="string">&quot;1.1.10.in-addr.arpa&quot;</span> <span class="keyword">IN</span> &#123;</span><br><span class="line"><span class="number">50</span>         <span class="built_in">type</span> master;</span><br><span class="line"><span class="number">51</span>         file <span class="string">&quot;10.1.1.zone&quot;</span>;</span><br><span class="line"><span class="number">52</span>         allow<span class="literal">-update</span> &#123; none; &#125;;</span><br><span class="line"><span class="number">53</span> &#125;;</span><br></pre></td></tr></table></figure><p>第二步：更改named.rfc1912.zones，添加test以及heima域</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/named.rfc1912.zones</span></span><br><span class="line">...</span><br><span class="line">zone <span class="string">&quot;test.net&quot;</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">        <span class="built_in">type</span> master;</span><br><span class="line">        file <span class="string">&quot;test.net.zone&quot;</span>;</span><br><span class="line">        allow<span class="literal">-update</span> &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone <span class="string">&quot;heima.cc&quot;</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">        <span class="built_in">type</span> master;</span><br><span class="line">        file <span class="string">&quot;heima.cc.zone&quot;</span>;</span><br><span class="line">        allow<span class="literal">-update</span> &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>第三步：进入&#x2F;var&#x2F;named目录，复制named.localhost</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /var/named</span></span><br><span class="line"><span class="comment"># cp -p named.localhost test.net.zone</span></span><br><span class="line"><span class="comment"># cp -p named.localhost heima.cc.zone</span></span><br></pre></td></tr></table></figure><p>第四步：编辑test.net.zone与heima.cc.zone文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim test.net.zone</span></span><br><span class="line">...</span><br><span class="line">www A <span class="number">10.1</span>.<span class="number">1.13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim heima.cc.zone</span></span><br><span class="line">...</span><br><span class="line">bbsA <span class="number">10.1</span>.<span class="number">1.13</span></span><br></pre></td></tr></table></figure><p>第五步：检测配置文件，然后启动named服务（重启）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># named-checkconf /etc/named.conf</span></span><br><span class="line"><span class="comment"># named-checkconf /etc/named.rfc1912.zones</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd /var/named</span></span><br><span class="line"><span class="comment"># named-checkzone test.net.zone test.net.zone</span></span><br><span class="line"><span class="comment"># named-checkzone heima.cc.zone heima.cc.zone</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart named</span></span><br></pre></td></tr></table></figure><h2 id="5、ntp服务器搭建"><a href="#5、ntp服务器搭建" class="headerlink" title="5、ntp服务器搭建"></a>5、ntp服务器搭建</h2><p>基础班ntp回顾：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate cn.ntp.org.cn</span></span><br></pre></td></tr></table></figure><p>虽然以上方式，可以实现对时间的校对！但是由于需要连接外网，其同步需要消耗一定的时间，那有没有更好的解决办法呢？</p><p>第一步：准备一台NTP时间服务器</p><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>备注信息</th></tr></thead><tbody><tr><td>1</td><td>ntp.itcast.cn</td><td>10.1.1.100</td><td>NTP内网时间服务器</td></tr></tbody></table><blockquote><p>扩展：在原有基础上，记住要关闭NetworkManager服务</p></blockquote><p>第二步：安装ntp服务软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install ntp -y</span></span><br></pre></td></tr></table></figure><p>第三步：更改配置文件，开启ntp服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ntp.conf</span></span><br><span class="line"><span class="number">13</span> restrict <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="number">14</span> restrict ::<span class="number">1</span></span><br><span class="line"><span class="comment"># 手工添加10.1.1.0网段，范围10.1.1.1 ~ 10.1.1.254</span></span><br><span class="line"><span class="number">15</span> restrict <span class="number">10.1</span>.<span class="number">1.0</span> mask <span class="number">255.255</span>.<span class="number">255.0</span></span><br></pre></td></tr></table></figure><p>第四步：启动ntpd服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate cn.ntp.org.cn</span></span><br><span class="line"><span class="comment"># systemctl restart ntpd</span></span><br></pre></td></tr></table></figure><p>到此NTP时间服务器配置完毕，以后所有的计算机都可以直接使用ntpdate同步此NTP服务器</p><p>DNS-MASTER、DNS-SLAVE</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate 10.1.1.100</span></span><br></pre></td></tr></table></figure><blockquote><p>10.1.1.100是内网NTP时间服务器的IP地址</p></blockquote><blockquote><p>除此以外，我们还可以使用计划任务，定期进行时间的同步(针对所有的客户端)</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br><span class="line">*/<span class="number">2</span> * * * * /usr/sbin/ntpdate <span class="number">10.1</span>.<span class="number">1.100</span> &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="6、DNS主从部署"><a href="#6、DNS主从部署" class="headerlink" title="6、DNS主从部署"></a>6、DNS主从部署</h2><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416140619919.png" alt="image-20200416140619919"></p><p>主从部署的核心思路：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. master和slave的系统时间保持一致</span><br><span class="line"><span class="number">2</span>. slave服务器上安装相应的软件（系统版本、软件版本保持一致）</span><br><span class="line"><span class="number">3</span>. 根据需求修改相应的配置文件（master和slave都应该去修改）</span><br><span class="line"><span class="number">4</span>. 主从同步的核心是slave同步master上的区域文件（zone文件）</span><br></pre></td></tr></table></figure><blockquote><p>master：主slave：从</p></blockquote><p>第一步：准备一台slave从服务器(略)</p><p>① 克隆 ② 更改主机名称以及IP地址（更改UUID编号、关闭NetworkManager）③ 关闭防火墙与SELinux ④ 配置YUM源</p><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>备注信息</th></tr></thead><tbody><tr><td>1</td><td>slave.itcast.cn</td><td>10.1.1.14</td><td>dns slave从服务器</td></tr></tbody></table><p>第二步：更改主dns服务器，允许其他的从服务器下载同步资源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/named.conf</span></span><br><span class="line"><span class="number">12</span> options &#123;</span><br><span class="line"><span class="number">13</span>         listen<span class="literal">-on</span> port <span class="number">53</span> &#123; <span class="number">127.0</span>.<span class="number">0.1</span>;any; &#125;;</span><br><span class="line"><span class="number">14</span>         listen<span class="literal">-on-v6</span> port <span class="number">53</span> &#123; ::<span class="number">1</span>; &#125;;</span><br><span class="line"><span class="number">15</span>         allow<span class="literal">-transfer</span> &#123;<span class="number">10.1</span>.<span class="number">1.14</span>; &#125;;=&gt;  允许从服务器的IP地址过来同步资源</span><br><span class="line"><span class="number">16</span>         directory       <span class="string">&quot;/var/named&quot;</span>;</span><br><span class="line"><span class="number">17</span>         dump<span class="operator">-file</span>       <span class="string">&quot;/var/named/data/cache_dump.db&quot;</span>;</span><br><span class="line"><span class="number">18</span>         statistics<span class="operator">-file</span> <span class="string">&quot;/var/named/data/named_stats.txt&quot;</span>;</span><br><span class="line"><span class="number">19</span>         memstatistics<span class="operator">-file</span> <span class="string">&quot;/var/named/data/named_mem_stats.txt&quot;</span>;</span><br><span class="line"><span class="number">20</span>         recursing<span class="operator">-file</span>  <span class="string">&quot;/var/named/data/named.recursing&quot;</span>;</span><br><span class="line"><span class="number">21</span>         secroots<span class="operator">-file</span>   <span class="string">&quot;/var/named/data/named.secroots&quot;</span>;</span><br><span class="line"><span class="number">22</span>         allow<span class="literal">-query</span>     &#123; localhost;any;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart named</span></span><br></pre></td></tr></table></figure><p>第三步：SLAVE从服务器配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install bind -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/named.conf</span></span><br><span class="line"><span class="number">12</span> options &#123;</span><br><span class="line"><span class="number">13</span>         listen<span class="literal">-on</span> port <span class="number">53</span> &#123; <span class="number">127.0</span>.<span class="number">0.1</span>;any; &#125;;</span><br><span class="line"><span class="number">14</span>         listen<span class="literal">-on-v6</span> port <span class="number">53</span> &#123; ::<span class="number">1</span>; &#125;;</span><br><span class="line"><span class="number">15</span>         directory       <span class="string">&quot;/var/named&quot;</span>;</span><br><span class="line"><span class="number">16</span>         dump<span class="operator">-file</span>       <span class="string">&quot;/var/named/data/cache_dump.db&quot;</span>;</span><br><span class="line"><span class="number">17</span>         statistics<span class="operator">-file</span> <span class="string">&quot;/var/named/data/named_stats.txt&quot;</span>;</span><br><span class="line"><span class="number">18</span>         memstatistics<span class="operator">-file</span> <span class="string">&quot;/var/named/data/named_mem_stats.txt&quot;</span>;</span><br><span class="line"><span class="number">19</span>         recursing<span class="operator">-file</span>  <span class="string">&quot;/var/named/data/named.recursing&quot;</span>;</span><br><span class="line"><span class="number">20</span>         secroots<span class="operator">-file</span>   <span class="string">&quot;/var/named/data/named.secroots&quot;</span>;</span><br><span class="line"><span class="number">21</span>         allow<span class="literal">-query</span>     &#123; localhost;any; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/named.rfc1912.zones</span></span><br><span class="line">zone <span class="string">&quot;test.net&quot;</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">        <span class="built_in">type</span> slave;</span><br><span class="line">        file <span class="string">&quot;slaves/test.net&quot;</span>;</span><br><span class="line">        masters &#123; <span class="number">10.1</span>.<span class="number">1.12</span>; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone <span class="string">&quot;heima.cc&quot;</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">        <span class="built_in">type</span> slave;</span><br><span class="line">        file <span class="string">&quot;slaves/heima.cc&quot;</span>;</span><br><span class="line">        masters &#123; <span class="number">10.1</span>.<span class="number">1.12</span>; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测配置文件是否有错（略）</span></span><br><span class="line"><span class="comment"># named-checkconf ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart named</span></span><br></pre></td></tr></table></figure><p>第四步：在Client客户端，把Slave从服务器的IP设置为DNS</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &#x27;nameserver 10.1.1.14&#x27; &gt; /etc/resolv.conf</span></span><br><span class="line"><span class="comment"># nslookup www.test.net</span></span><br></pre></td></tr></table></figure><h1 id="二、LAMP源码构建"><a href="#二、LAMP源码构建" class="headerlink" title="二、LAMP源码构建"></a>二、LAMP源码构建</h1><h2 id="1、项目背景"><a href="#1、项目背景" class="headerlink" title="1、项目背景"></a>1、项目背景</h2><p>为企业内部的开发人员，部署一套“预发布系统”，要求其环境与线上环境一模一样。</p><p>由于项目是基于PHP + MySQL进行开发设计的，所以我们需要选配环境。</p><p>LAMP &#x3D; Linux + Apache + MySQL + PHP</p><p>LNMP &#x3D; Linux + Nginx + MySQL + PHP</p><p>经过开发人员的沟通确认 &#x3D;&gt; LAMP作为预发布环境！</p><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416152428473.png" alt="image-20200416152428473"></p><h2 id="2、任务要求"><a href="#2、任务要求" class="headerlink" title="2、任务要求"></a>2、任务要求</h2><ul><li>&#x3D;&#x3D;<strong>源码</strong>部署LAMP环境&#x3D;&#x3D;，和生产保持一致</li><li>静态资源文件同步生产环境（生产发生改变立马同步到预发布平台）</li></ul><h2 id="3、环境准备"><a href="#3、环境准备" class="headerlink" title="3、环境准备"></a>3、环境准备</h2><p>系统环境：CentOS7.6</p><p>软件环境：AMP（Apache、MySQL以及PHP）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Apache——&gt;<span class="number">2.4</span>.<span class="number">37</span>（<span class="number">2.2</span>与<span class="number">2.4</span>）</span><br><span class="line">MySQL——&gt;<span class="number">5.6</span>.<span class="number">31</span>（<span class="number">5.5</span>、<span class="number">5.6</span>与<span class="number">5.7</span>）</span><br><span class="line">PHP——&gt;<span class="number">7.2</span>.<span class="number">17</span>（<span class="number">5.2</span>、<span class="number">5.4</span>、<span class="number">5.6</span>、<span class="number">7.0</span>、<span class="number">7.1</span>、<span class="number">7.2</span>）</span><br></pre></td></tr></table></figure><h2 id="4、系统环境"><a href="#4、系统环境" class="headerlink" title="4、系统环境"></a>4、系统环境</h2><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>备注信息</th></tr></thead><tbody><tr><td>1</td><td>web.itcast.cn</td><td>10.1.1.13</td><td>LAMP预发布环境</td></tr></tbody></table><p>① 更改主机名称、配置IP地址（静态IP、更改UUID编号、关闭NetworkManager）</p><p>② 关闭防火墙、SELinux</p><p>③ 配置YUM源（有网配公网，没网配光盘或自建YUM源）</p><h2 id="5、依赖软件安装"><a href="#5、依赖软件安装" class="headerlink" title="5、依赖软件安装"></a>5、依赖软件安装</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install cmake pcre-devel ncurses-devel openssl-devel libcurl-devel</span></span><br></pre></td></tr></table></figure><h2 id="6、AMP软件安装注意事项"><a href="#6、AMP软件安装注意事项" class="headerlink" title="6、AMP软件安装注意事项"></a>6、AMP软件安装注意事项</h2><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416154343314.png" alt="image-20200416154343314"></p><p>编译安装顺序：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Linux+Apache(<span class="number">2.4</span>)+MySQL(<span class="number">5.6</span>.<span class="number">31</span>)+PHP(<span class="number">7.2</span>.<span class="number">17</span>)</span><br><span class="line"></span><br><span class="line">Apache——&gt;MySQL——&gt;PHP 或者  MySQL——&gt;Apache——&gt;PHP</span><br></pre></td></tr></table></figure><h1 id="三、编译安装MySQL软件"><a href="#三、编译安装MySQL软件" class="headerlink" title="三、编译安装MySQL软件"></a>三、编译安装MySQL软件</h1><h2 id="1、安装需求"><a href="#1、安装需求" class="headerlink" title="1、安装需求"></a>1、安装需求</h2><table><thead><tr><th>软件版本</th><th>安装目录</th><th>数据目录</th><th>端口</th></tr></thead><tbody><tr><td>mysql-5.6.31</td><td>&#x2F;usr&#x2F;local&#x2F;mysql</td><td>&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data</td><td>3306</td></tr></tbody></table><h2 id="2、MySQL安装详解"><a href="#2、MySQL安装详解" class="headerlink" title="2、MySQL安装详解"></a>2、MySQL安装详解</h2><p>第一步：创建一个mysql系统账号（没有这个账号mysql无法运行）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -r -s /sbin/nologin mysql</span></span><br></pre></td></tr></table></figure><p>第二步：对软件进行解压</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xf mysql-5.6.31.tar.gz</span></span><br><span class="line"><span class="comment"># cd mysql-5.6.31</span></span><br></pre></td></tr></table></figure><p>第三步：使用cmake配置MySQL的安装向导</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim cmake.sh</span></span><br><span class="line">cmake . \</span><br><span class="line"><span class="literal">-DCMAKE_INSTALL_PREFIX</span>=/usr/local/mysql/ \</span><br><span class="line"><span class="literal">-DMYSQL_DATADIR</span>=/usr/local/mysql/<span class="keyword">data</span> \</span><br><span class="line"><span class="literal">-DENABLED_LOCAL_INFILE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_INNOBASE_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DMYSQL_TCP_PORT</span>=<span class="number">3306</span> \</span><br><span class="line"><span class="literal">-DDEFAULT_CHARSET</span>=utf8mb4 \</span><br><span class="line"><span class="literal">-DDEFAULT_COLLATION</span>=utf8mb4_general_ci \</span><br><span class="line"><span class="literal">-DWITH_EXTRA_CHARSETS</span>=all \</span><br><span class="line"><span class="literal">-DMYSQL_USER</span>=mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod +x cmake.sh</span></span><br><span class="line"><span class="comment"># ./cmake.sh</span></span><br></pre></td></tr></table></figure><p>第四步：make &amp;&amp; make install</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><p>第五步：更改目录权限以及初始化数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R mysql.mysql /usr/local/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd /usr/local/mysql</span></span><br><span class="line">删除/etc/my.cnf文件，如果不删除此文件，会导致初始化失败</span><br><span class="line"><span class="comment"># rm -f /etc/my.cnf</span></span><br><span class="line">初始化就是给mysql数据库一些初始化的数据（如账号、密码、数据文件，ll <span class="keyword">data</span>）</span><br><span class="line"><span class="comment"># ./scripts/mysql_install_db --user=mysql</span></span><br><span class="line"><span class="comment"># ll data</span></span><br><span class="line">这个目录如果产生了一个mysql的文件夹就代表初始化成功了</span><br></pre></td></tr></table></figure><p>第六步：把mysql的启动脚本copy到&#x2F;etc&#x2F;init.d目录下，起一个名称叫做mysql</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp support-files/mysql.server /etc/init.d/mysql</span></span><br><span class="line"><span class="comment"># service mysql start</span></span><br></pre></td></tr></table></figure><p>第七步：设置密码与环境变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/mysql</span></span><br><span class="line"><span class="comment"># bin/mysqladmin -u root password &#x27;123&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>生产环境下，密码一定要越复杂越好</p></blockquote><p>第八步：把&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin目录添加到环境变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &#x27;export PATH=$PATH:/usr/local/mysql/bin&#x27; &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">mysql&gt; <span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><h1 id="四、编译安装Apache软件"><a href="#四、编译安装Apache软件" class="headerlink" title="四、编译安装Apache软件"></a>四、编译安装Apache软件</h1><h2 id="1、源码安装依赖软件apr"><a href="#1、源码安装依赖软件apr" class="headerlink" title="1、源码安装依赖软件apr"></a>1、源码安装依赖软件apr</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">安装apr软件：</span><br><span class="line"><span class="comment"># tar xf apr-1.5.2.tar.bz2</span></span><br><span class="line"><span class="comment"># cd apr-1.5.2</span></span><br><span class="line"><span class="comment"># ./configure &amp;&amp; make &amp;&amp; make install</span></span><br><span class="line"></span><br><span class="line">安装apr<span class="literal">-util</span>软件：</span><br><span class="line"><span class="comment"># tar xf apr-util-1.5.4.tar.bz2</span></span><br><span class="line"><span class="comment"># cd apr-util-1.5.4/</span></span><br><span class="line"><span class="comment"># ./configure --with-apr=/usr/local/apr/bin/apr-1-config    指定软件apr的路径</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h2 id="2、编译安装Apache软件（重点）"><a href="#2、编译安装Apache软件（重点）" class="headerlink" title="2、编译安装Apache软件（重点）"></a>2、编译安装Apache软件（重点）</h2><p>第一步：解压软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove httpd -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar xf httpd-2.4.37.tar.bz2</span></span><br><span class="line"><span class="comment"># cd httpd-2.4.37</span></span><br></pre></td></tr></table></figure><p>第二步：编写apache.sh脚本进行软件安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim apache.sh</span></span><br><span class="line">./configure \</span><br><span class="line"><span class="literal">--enable-modules</span>=all \</span><br><span class="line"><span class="literal">--enable-mods-shared</span>=all \</span><br><span class="line"><span class="literal">--enable-so</span> \</span><br><span class="line"><span class="literal">--enable-rewrite</span> \</span><br><span class="line"><span class="literal">--with-pcre</span> \</span><br><span class="line"><span class="literal">--enable-ssl</span> \</span><br><span class="line"><span class="literal">--with-mpm</span>=prefork \</span><br><span class="line"><span class="literal">--with-apr</span>=/usr/local/apr/bin/apr<span class="literal">-1-config</span> \</span><br><span class="line"><span class="literal">--with-apr-util</span>=/usr/local/apr/bin/apu<span class="literal">-1-config</span></span><br></pre></td></tr></table></figure><p>第三步：给予x权限，然后make &amp;&amp; make  install</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod +x apache.sh</span></span><br><span class="line"><span class="comment"># ./apache.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><p>第四步：运行Apache软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/apache2/</span></span><br><span class="line"><span class="comment"># bin/apachectl</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416173436794.png" alt="image-20200416173436794"></p><h1 id="五、源码安装PHP软件"><a href="#五、源码安装PHP软件" class="headerlink" title="五、源码安装PHP软件"></a>五、源码安装PHP软件</h1><h2 id="1、安装说明"><a href="#1、安装说明" class="headerlink" title="1、安装说明"></a>1、安装说明</h2><p>第一步：对软件进行解压缩</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xf php-7.2.17.tar.xz</span></span><br><span class="line"><span class="comment"># cd php-7.2.17</span></span><br></pre></td></tr></table></figure><p>第二步：对php源码进行一个配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim php.sh</span></span><br><span class="line">./configure \</span><br><span class="line"><span class="literal">--with-apxs2</span>=/usr/local/apache2/bin/apxs \</span><br><span class="line"><span class="literal">--with-mysqli</span> \</span><br><span class="line"><span class="literal">--with-pdo-mysql</span> \</span><br><span class="line"><span class="literal">--with-zlib</span> \</span><br><span class="line"><span class="literal">--with-curl</span> \</span><br><span class="line"><span class="literal">--enable-zip</span> \</span><br><span class="line"><span class="literal">--with-gd</span> \</span><br><span class="line"><span class="literal">--with-freetype-dir</span> \</span><br><span class="line"><span class="literal">--with-jpeg-dir</span> \</span><br><span class="line"><span class="literal">--with-png-dir</span> \</span><br><span class="line"><span class="literal">--enable-sockets</span> \</span><br><span class="line"><span class="literal">--with-xmlrpc</span> \</span><br><span class="line"><span class="literal">--enable-soap</span> \</span><br><span class="line"><span class="literal">--enable-opcache</span> \</span><br><span class="line"><span class="literal">--enable-mbstring</span> \</span><br><span class="line"><span class="literal">--enable-mbregex</span> \</span><br><span class="line"><span class="literal">--enable-pcntl</span> \</span><br><span class="line"><span class="literal">--enable-shmop</span> \</span><br><span class="line"><span class="literal">--enable-sysvmsg</span> \</span><br><span class="line"><span class="literal">--enable-sysvsem</span> \</span><br><span class="line"><span class="literal">--enable-sysvshm</span> \</span><br><span class="line"><span class="literal">--enable-calendar</span> \</span><br><span class="line"><span class="literal">--enable-bcmath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod +x php.sh</span></span><br><span class="line"><span class="comment"># ./php.sh</span></span><br></pre></td></tr></table></figure><p>第三步：解决PHP依赖关系</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configure: error: libxml2 not found. Please check your libxml2 installation.</span><br></pre></td></tr></table></figure><p>出现以上提示，代表php与其他软件存在依赖关系：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install libxml2-devel -y</span></span><br></pre></td></tr></table></figure><p>除了以上这个依赖以外，还存在其他依赖：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install libjpeg-devel libpng-devel freetype-devel -y</span></span><br></pre></td></tr></table></figure><p>第四步：编译+安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><p>第五步：检查php有没有安装成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls /usr/local/apache2/modules/libphp7.so</span></span><br></pre></td></tr></table></figure><h2 id="2、配置Apache与PHP"><a href="#2、配置Apache与PHP" class="headerlink" title="2、配置Apache与PHP"></a>2、配置Apache与PHP</h2><p>第一步：打开Apache的配置文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/apache2/conf/httpd.conf</span></span><br><span class="line"><span class="number">209</span>行 ServerName localhost:<span class="number">80</span></span><br></pre></td></tr></table></figure><p>第二步：配置Apache语言支持（支持中文）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">159</span>行 LoadModule negotiation_module modules/mod_negotiation.so 此模块打开注释</span><br><span class="line"><span class="number">483</span>行 Include conf/extra/httpd<span class="literal">-languages</span>.conf  打开此选项，扩展配置文件就生效了</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>第三步：开启对PHP的支持</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">166</span>行 LoadModule php7_module modules/libphp7.so</span><br><span class="line">AddHandler php7<span class="literal">-script</span> .php</span><br><span class="line">AddType text/html .php</span><br></pre></td></tr></table></figure><p>第四步：添加index.php默认首页</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//默认主页加上index.php,并放在index.html前,支持php的首页文件</span><br><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line"><span class="number">270</span>行    DirectoryIndex index.php index.html</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>第五步：让Apache优先支持中文</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/apache2/conf/extra/httpd-languages.conf</span></span><br><span class="line"><span class="number">19</span>行 DefaultLanguage zh<span class="literal">-CN</span>  打开注释，默认语言集改为中文</span><br><span class="line"><span class="number">78</span>行 LanguagePriority zh<span class="literal">-CN</span> en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt<span class="literal">-BR</span> ru <span class="built_in">sv</span> tr zh<span class="literal">-TW</span>语言集优先集，把zh<span class="literal">-CN</span> 写到前面</span><br></pre></td></tr></table></figure><p>设置完成后，重启Apache软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/apache2</span></span><br><span class="line"><span class="comment"># bin/apachectl -k restart</span></span><br><span class="line"><span class="comment"># bin/apachectl -k restart</span></span><br><span class="line"></span><br><span class="line">备注：如果还不行，直接pkill httpd，然后bin/apachectl启动</span><br></pre></td></tr></table></figure><h2 id="3、编写php测试脚本"><a href="#3、编写php测试脚本" class="headerlink" title="3、编写php测试脚本"></a>3、编写php测试脚本</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/apache2/htdocs   htdocs就是apache的默认项目目录</span></span><br><span class="line"><span class="comment"># rm -f index.html</span></span><br><span class="line"><span class="comment"># vim index.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">        phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>到此，LAMP源码编译安装就结束了！</p><h1 id="六、使用LAMP部署Web项目"><a href="#六、使用LAMP部署Web项目" class="headerlink" title="六、使用LAMP部署Web项目"></a>六、使用LAMP部署Web项目</h1><h2 id="1、下载wordpress博客系统"><a href="#1、下载wordpress博客系统" class="headerlink" title="1、下载wordpress博客系统"></a>1、下载wordpress博客系统</h2><p>wordpress-4.7.3-zh_CN.tar.gz</p><h2 id="2、解压"><a href="#2、解压" class="headerlink" title="2、解压"></a>2、解压</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xf wordpress-4.7.3-zh_CN.tar.gz</span></span><br></pre></td></tr></table></figure><h2 id="3、创建一个项目目录"><a href="#3、创建一个项目目录" class="headerlink" title="3、创建一个项目目录"></a>3、创建一个项目目录</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /www</span></span><br><span class="line"><span class="comment"># mv wordpress /www/blog</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chown -R daemon.daemon /www/blog/</span></span><br></pre></td></tr></table></figure><h2 id="4、配置虚拟主机-一台服务器多个项目"><a href="#4、配置虚拟主机-一台服务器多个项目" class="headerlink" title="4、配置虚拟主机(一台服务器多个项目)"></a>4、配置虚拟主机(一台服务器多个项目)</h2><p>正常情况下：&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;htdocs目录下（相当于&#x2F;var&#x2F;www&#x2F;html）</p><p>一台服务器多个项目：使用虚拟主机</p><p>第一步：在httpd.conf配置文件中开启虚拟主机的配置文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/apache2/conf/httpd.conf</span></span><br><span class="line"><span class="comment"># Virtual hosts</span></span><br><span class="line"><span class="number">494</span>行 Include conf/extra/httpd<span class="literal">-vhosts</span>.conf//打开加载虚拟主机配置文件</span><br></pre></td></tr></table></figure><p>第二步：在&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf&#x2F;extra&#x2F;httpd-vhosts.conf定义项目</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/apache2/conf/extra/httpd-vhosts.conf</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416202109513.png" alt="image-20200416202109513"></p><p>第三步：重启Apache</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/apache2</span></span><br><span class="line"><span class="comment"># bin/apachectl -k stop</span></span><br><span class="line"><span class="comment"># bin/apachectl</span></span><br></pre></td></tr></table></figure><h2 id="5、在数据库中创建一个blog数据库"><a href="#5、在数据库中创建一个blog数据库" class="headerlink" title="5、在数据库中创建一个blog数据库"></a>5、在数据库中创建一个blog数据库</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">mysql&gt; create database blog default charset utf8;</span><br></pre></td></tr></table></figure><h2 id="6、在Windows中配置本地DNS"><a href="#6、在Windows中配置本地DNS" class="headerlink" title="6、在Windows中配置本地DNS"></a>6、在Windows中配置本地DNS</h2><p>运行（Windows + R） &#x3D;&gt; drivers + 回车：C:\Windows\System32\drivers\etc\hosts</p><p>Windows的DNS文件 &#x3D;&gt; 可以劫持域名，自定义域名指向：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10.1</span>.<span class="number">1.13</span> www.blog.com</span><br></pre></td></tr></table></figure><h2 id="7、使用Google浏览器或Firefox浏览器安装博客"><a href="#7、使用Google浏览器或Firefox浏览器安装博客" class="headerlink" title="7、使用Google浏览器或Firefox浏览器安装博客"></a>7、使用Google浏览器或Firefox浏览器安装博客</h2><p>第一次访问：报403 Forbidden</p><p>原因：默认情况下，httpd不允许其他主机访问项目目录</p><p>解决方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/apache2/conf/httpd.conf</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416203955556.png" alt="image-20200416203955556"></p><p>配置数据库：</p><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416204100546.png" alt="image-20200416204100546"></p><p>运行结果：</p><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20231223171611263.png" alt="image-20231223171611263"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAMBA文件共享与DNS域名服务</title>
      <link href="/posts/64154.html"/>
      <url>/posts/64154.html</url>
      
        <content type="html"><![CDATA[<h1 id="SAMBA文件共享与DNS域名服务"><a href="#SAMBA文件共享与DNS域名服务" class="headerlink" title="SAMBA文件共享与DNS域名服务"></a>SAMBA文件共享与DNS域名服务</h1><h1 id="一、SAMBA文件共享"><a href="#一、SAMBA文件共享" class="headerlink" title="一、SAMBA文件共享"></a>一、SAMBA文件共享</h1><h2 id="1、什么是SAMBA"><a href="#1、什么是SAMBA" class="headerlink" title="1、什么是SAMBA"></a>1、什么是SAMBA</h2><p>SMB（Server Message Block）协议实现文件共享，也称为CIFS（Common Internet File System ）</p><p>是Windows和类Unix系统之间共享文件的一种协议</p><p>客户端&#x3D;&#x3D;主要是Windows&#x3D;&#x3D;；支持多节点同时挂载以及并发写入</p><p>主要用于windows和Linux下的文件共享、打印共享</p><p>实现&#x3D;&#x3D;匿名与本地用户&#x3D;&#x3D;文件共享</p><h2 id="2、SAMBA主要进程"><a href="#2、SAMBA主要进程" class="headerlink" title="2、SAMBA主要进程"></a>2、SAMBA主要进程</h2><p>smbd进程    控制发布共享目录与权限、&#x3D;&#x3D;负责文件传输&#x3D;&#x3D;   &#x3D;&#x3D;TCP  139 445&#x3D;&#x3D;</p><p>nmbd进程       用于名称解析netbios   &#x3D;&#x3D;UDP 137 138&#x3D;&#x3D; ; 基于NETBIOS协议获得计算机名称——&gt;解析为相应IP地址，实现信息通讯 </p><p> NetBIOS是Network Basic Input&#x2F;Output System的简称，一般指用于局域网通信的一套API  </p><h2 id="3、SAMBA环境准备"><a href="#3、SAMBA环境准备" class="headerlink" title="3、SAMBA环境准备"></a>3、SAMBA环境准备</h2><p>第一步：从模板机中克隆一台Linux服务器，叫做SAMBA</p><p>第二步：更改主机名称与IP地址</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname samba.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">DNS1=<span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">DNS2=<span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line"><span class="comment"># systemctl restart network</span></span><br><span class="line">扩展：如果是多张网卡，建议使用ifdown ens33以及ifup ens33实现重启网络操作</span><br></pre></td></tr></table></figure><p>第三步：关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>第四步：配置yum源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><h2 id="4、SAMBA软件安装（服务器搭建）"><a href="#4、SAMBA软件安装（服务器搭建）" class="headerlink" title="4、SAMBA软件安装（服务器搭建）"></a>4、SAMBA软件安装（服务器搭建）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install samba -y</span></span><br><span class="line"><span class="comment"># rpm -qa |grep ^samba</span></span><br></pre></td></tr></table></figure><blockquote><p>SAMBA也是一个C&#x2F;S架构的软件，Client主要是Windows</p></blockquote><h2 id="5、了解smb的配置文件"><a href="#5、了解smb的配置文件" class="headerlink" title="5、了解smb的配置文件"></a>5、了解smb的配置文件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/samba/smb.conf</span></span><br><span class="line">[<span class="type">global</span>]  全局选项</span><br><span class="line">workgroup = MYGROUP                 定义samba服务器所在的工作组</span><br><span class="line">server string = Samba Server Version %v         smb服务的描述</span><br><span class="line">log file = /var/log/samba/log.%m            日志文件</span><br><span class="line">max log size = <span class="number">50</span>                   日志的最大大小KB  </span><br><span class="line">security = user             认证模式：share匿名|user用户密码|server外部服务器用户密码</span><br><span class="line">passdb backend = tdbsam         密码格式</span><br><span class="line">load printers = yes         加载打印机</span><br><span class="line">cups options = raw          打印机选项</span><br><span class="line">[<span class="type">homes</span>]                 局部选项（共享名称）</span><br><span class="line">comment = Home Directories      描述</span><br><span class="line">browseable = no      隐藏共享名称</span><br><span class="line">writable = yes      可读可写</span><br><span class="line">[<span class="type">printers</span>]      共享名称</span><br><span class="line">comment = All Printers       描述</span><br><span class="line">path = /var/spool/samba  本地的共享目录</span><br><span class="line">browseable = no  隐藏</span><br><span class="line">guest ok = no ——&gt;   public = no  需要帐号和密码访问</span><br><span class="line">writable = no  ——&gt;  read only =yes 不可写 </span><br><span class="line">printable = yes      打印选项</span><br><span class="line">[<span class="type">share</span>]</span><br><span class="line">path = /dir1</span><br><span class="line">guest ok = no</span><br><span class="line">writable = yes</span><br></pre></td></tr></table></figure><h2 id="6、SAMBA综合案例"><a href="#6、SAMBA综合案例" class="headerlink" title="6、SAMBA综合案例"></a>6、SAMBA综合案例</h2><p>搭建一个SAMBA服务，共享一个目录&#x2F;samba&#x2F;share,客户端使用user01&#x2F;123通过windows或者Linux可以在该目录里创建文件删除文件</p><p>第一步：SAMBA服务器环境准备</p><p>更改主机名称、IP地址、关闭防火墙、SELinux、配置YUM源</p><p>第二步：安装SAMBA软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install samba -y</span></span><br><span class="line"><span class="comment"># rpm -aq|grep  ^samba</span></span><br></pre></td></tr></table></figure><p>第三步：查询SAMBA生成文件列表（rpm  -ql）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ql samba</span></span><br><span class="line">/usr/sbin/smbd</span><br><span class="line">/usr/sbin/nmbd</span><br><span class="line"></span><br><span class="line">/usr/lib/systemd/system/smb.service</span><br><span class="line">/usr/lib/systemd/system/nmb.service</span><br></pre></td></tr></table></figure><p>第四步：在服务器端创建一个共享目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /samba/share -p</span></span><br></pre></td></tr></table></figure><p>第五步：编辑&#x2F;etc&#x2F;smb.conf配置文件，实现SAMBA共享</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/samba/smb.conf</span></span><br><span class="line">...</span><br><span class="line">[<span class="type">smb_share</span>]</span><br><span class="line">        comment = samba service</span><br><span class="line">        path = /samba/share</span><br><span class="line">        guest ok = no</span><br><span class="line">        writable = yes</span><br><span class="line">或者</span><br><span class="line">[<span class="type">samba_share</span>]</span><br><span class="line">        path = /samba/share</span><br><span class="line">        public = no</span><br><span class="line">        writable = yes</span><br><span class="line"></span><br><span class="line">备注：guest ok === public</span><br></pre></td></tr></table></figure><p>第六步：创建一个user01用户，然后添加到samba认证中，设置密码为123</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd user01</span></span><br><span class="line"><span class="comment"># smbpasswd -a user01</span></span><br><span class="line">New SMB password:<span class="number">123</span></span><br><span class="line">Retype new SMB password:<span class="number">123</span></span><br><span class="line">Added user user01.</span><br></pre></td></tr></table></figure><p>以上操作完成后，则SAMBA系统中增加了一个user01的账号以及123的密码</p><p>第七步：启动nmb与smb服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start nmb</span></span><br><span class="line"><span class="comment"># systemctl start smb</span></span><br></pre></td></tr></table></figure><p>第八步：基于Windows或Linux实现文件共享</p><p>Windows：</p><p>① 首先安装SAMBA支持Windows + X，选择控制面板</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415112837084.png" alt="image-20200415112837084"></p><p>② 找到Windows功能选项</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415112918419.png" alt="image-20200415112918419"></p><p>③ 安装SAMBA功能（客户端）</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415113145929.png" alt="image-20200415113145929"></p><p>④ 进入计算机（我的电脑），找到映射网络驱动器</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415113252801.png" alt="image-20200415113252801"></p><p>设置SAMBA服务器的地址信息：</p><p> <img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415113349174.png" alt="image-20200415113349174"></p><p>10.1.1.10 &#x3D;&gt; Linux服务器的IP地址</p><p>smb_share &#x3D;&gt; SAMBA标签</p><blockquote><p>挂载完成后，目录不可写？答：主要原因在于&#x2F;samba&#x2F;share目录没有写入权限</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -m u:user01:rwx /samba/share</span></span><br></pre></td></tr></table></figure><p>第九步：基于Linux或Linux实现文件共享</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># smbclient -L 10.1.1.10 -U user01</span></span><br></pre></td></tr></table></figure><p>使用smbclient查看目录信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># smbclient //10.1.1.10/smb_share -U user01</span></span><br></pre></td></tr></table></figure><p>把SAMBA挂载到Linux系统（类似NFS）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /u01</span></span><br><span class="line"><span class="comment"># mount.cifs -o user=user01,pass=123 //10.1.1.10/smb_share /u01</span></span><br></pre></td></tr></table></figure><p>访问控制说明：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">控制读写权限</span><br><span class="line">writable = yes/no</span><br><span class="line">readonly = yes/no</span><br><span class="line"></span><br><span class="line">如果资源可写，但只允许某些用户可写，其他都是只读</span><br><span class="line"><span class="built_in">write</span> list = admin, root, @staff（用户组）</span><br><span class="line">read list = mary, @students</span><br><span class="line"></span><br><span class="line">控制访问对象</span><br><span class="line">valid users = tom,mary,@itcast</span><br><span class="line">invalid users = tom</span><br><span class="line">注意：以上两个选项只能存在其中一个</span><br><span class="line"></span><br><span class="line">网络访问控制：</span><br><span class="line">hosts deny = <span class="number">192.168</span>.<span class="number">0</span>.   拒绝某个网段</span><br><span class="line">hosts allow = <span class="number">192.168</span>.<span class="number">0.254</span>  允许某个IP</span><br><span class="line">hosts deny = all  拒绝所有</span><br><span class="line">hosts allow = <span class="number">192.168</span>.<span class="number">0</span>. EXCEPT <span class="number">192.168</span>.<span class="number">0.254</span>  允许某个网段，但拒绝某个单个IP</span><br><span class="line">注意：deny和allow同时存在，allow优先</span><br></pre></td></tr></table></figure><h2 id="7、总结"><a href="#7、总结" class="headerlink" title="7、总结"></a>7、总结</h2><ol><li>ftp 局域网和外网都可以</li><li>nfs  局域网  挂载方式访问  mount.nfs  侧重于Linux与Linux之间</li><li>samba 局域网  直接访问(smbclinet)挂载的方式mount.cifs  侧重于Windows与Linux之间</li></ol><h1 id="二、DNS域名管理系统"><a href="#二、DNS域名管理系统" class="headerlink" title="二、DNS域名管理系统"></a>二、DNS域名管理系统</h1><h2 id="1、任务背景"><a href="#1、任务背景" class="headerlink" title="1、任务背景"></a>1、任务背景</h2><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415141710221.png" alt="image-20200415141710221"></p><p>解析内网域名，能够访问内网web应用。把 <a href="http://www.itcast.cluster/">www.itcast.cluster</a>   解析到内网服务器IP</p><h2 id="2、DNS概述"><a href="#2、DNS概述" class="headerlink" title="2、DNS概述"></a>2、DNS概述</h2><p><strong>DNS（domain name system ） 域名管理系统</strong></p><ul><li>域名：</li></ul><p>由特定的格式组成，用来表示互联网中&#x3D;&#x3D;某一台计算机或者计算机组的名称&#x3D;&#x3D;，能够使人更方便的访问互联网，而不用记住能够被机器直接读取的IP地址。</p><p>计算机 &#x3D;&gt; IP地址，互联网中的计算机都是通过IP地址进行互相访问的。(IP地址过于复杂)</p><p>域名：代替IP实现计算机的访问（高级 &#x3D;&gt; 上层应用，底层还是IP地址）</p><p>每个域名 &#x3D;&gt;  DNS服务器  &#x3D;&gt; 对应的IP地址</p><h3 id="☆-DNS的正向解析"><a href="#☆-DNS的正向解析" class="headerlink" title="☆ DNS的正向解析"></a>☆ DNS的正向解析</h3><p>域名的&#x3D;&#x3D;正向解析&#x3D;&#x3D;</p><p>将主机域名转换为对应的IP 地址，以便网络程序能够通过主机域名访问到对应的服务器主机</p><p><strong>域名——&gt;IP</strong>A记录</p><h3 id="☆-DNS的反向解析"><a href="#☆-DNS的反向解析" class="headerlink" title="☆ DNS的反向解析"></a>☆ DNS的反向解析</h3><p>域名的&#x3D;&#x3D;反向解析&#x3D;&#x3D;</p><p>将主机的IP地址转换为对应的域名，以便网络（服务）程序能够通过IP地址查询到主机的域名</p><p><strong>IP——&gt;域名</strong>PTR记录</p><h2 id="3、DNS的结构"><a href="#3、DNS的结构" class="headerlink" title="3、DNS的结构"></a>3、DNS的结构</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">域名：www.itheima.com</span><br><span class="line">DNS结构：www.itheima.com.  =&gt;  从右向左解析</span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415143616891.png" alt="image-20200415143616891"></p><h3 id="☆-根域（-）"><a href="#☆-根域（-）" class="headerlink" title="☆ 根域（.）"></a>☆ 根域（.）</h3><ul><li>在整个 DNS 系统的最上方一定是 . (小数点) 这个 DNS 服务器 (称为 root)，也叫”根域“。</li><li>根域 （13台 全世界只有13台。1个为主根服务器，放置在美国。其余12个均为辅根服务器，其中9个放置在美国，欧洲2个，位于英国和瑞典，亚洲1个，位于日本。）</li></ul><h3 id="☆-一级域名"><a href="#☆-一级域名" class="headerlink" title="☆ 一级域名&lt;顶级域|国家域&gt;"></a><strong>☆ 一级域名&lt;顶级域|国家域&gt;</strong></h3><p>com net edu gov org cc  io| cn uk us ru ja ko </p><p>.com ： 商业公司</p><p>.net  ：互联网公司</p><p>.edu ：教育（中小学、高中、大学…）</p><p>.gov ：政府</p><p>.io：存储设备，redis</p><p>.cn   ：中国域名（国家域）</p><h3 id="☆-二级域名-自己购买管理"><a href="#☆-二级域名-自己购买管理" class="headerlink" title="☆ 二级域名(自己购买管理)"></a>☆ <strong>二级域名</strong>(自己购买管理)</h3><p>qq.com**.**   baidu.com.    google.com. </p><h3 id="☆-域名机构"><a href="#☆-域名机构" class="headerlink" title="☆ 域名机构"></a><strong>☆ 域名机构</strong></h3><p>收费（新网|万网）<br>老牌免费域名：TK顶级域名、TK域名DNS、TK域名商</p><h2 id="4、DNS工作原理"><a href="#4、DNS工作原理" class="headerlink" title="4、DNS工作原理"></a>4、DNS工作原理</h2><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415145414259.png" alt="image-20200415145414259"></p><p>如果询问一次得到结果  递归查询    C-S<br>如果询问多次得到结果  迭代查询    S-S </p><p>**一次递归 多次迭代 **</p><h2 id="5、dig工具使用"><a href="#5、dig工具使用" class="headerlink" title="5、dig工具使用"></a>5、dig工具使用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dig +trace www.itcast.cn  追踪DNS的解析过程</span></span><br><span class="line"><span class="comment"># dig www.itcast.cn  正向解析</span></span><br><span class="line"><span class="comment"># dig -x IP地址    反向解析</span></span><br></pre></td></tr></table></figure><h1 id="三、DNS服务器的搭建"><a href="#三、DNS服务器的搭建" class="headerlink" title="三、DNS服务器的搭建"></a>三、DNS服务器的搭建</h1><h2 id="1、DNS服务器端软件"><a href="#1、DNS服务器端软件" class="headerlink" title="1、DNS服务器端软件"></a>1、DNS服务器端软件</h2><p>DNS 的&#x3D;&#x3D;域名解析&#x3D;&#x3D;都是 <strong>&#x3D;&#x3D;udp&#x2F;53&#x3D;&#x3D;</strong> . 主从之间的&#x3D;&#x3D;数据传输&#x3D;&#x3D;默认使用**&#x3D;&#x3D;tcp&#x2F;53&#x3D;&#x3D;**</p><p>DNS服务器端软件：</p><p>&#x3D;&#x3D;Bind&#x3D;&#x3D;是一款开放源码的DNS服务器软件，Bind由美国加州大学Berkeley（伯克利）分校开发和维护的，全名为Berkeley Internet Name Domain它是目前世界上使用最为广泛的DNS服务器软件，支持各种unix平台和windows平台。BIND现在由互联网系统协会（Internet Systems Consortium）负责开发与维护。</p><h2 id="2、DNS服务器搭建"><a href="#2、DNS服务器搭建" class="headerlink" title="2、DNS服务器搭建"></a>2、DNS服务器搭建</h2><h3 id="☆-第一步：环境准备"><a href="#☆-第一步：环境准备" class="headerlink" title="☆ 第一步：环境准备"></a>☆ 第一步：环境准备</h3><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>备注信息</th></tr></thead><tbody><tr><td>1</td><td>client.itcast.cn</td><td>10.1.1.11</td><td>client客户端，用于测试</td></tr><tr><td>2</td><td>dns.itcast.cn</td><td>10.1.1.12</td><td>dns服务器，用于实现域名解析</td></tr><tr><td>3</td><td>web.itcast.cn</td><td>10.1.1.13</td><td>web服务器，用于搭建内部web服务</td></tr></tbody></table><p>① 更改主机名称与IP地址</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname client.itcast.cn</span></span><br><span class="line"><span class="comment"># hostnamectl set-hostname dns.itcast.cn</span></span><br><span class="line"><span class="comment"># hostnamectl set-hostname web.itcast.cn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># su</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.11</span>/<span class="number">10.1</span>.<span class="number">1.12</span>/<span class="number">10.1</span>.<span class="number">1.13</span></span><br><span class="line">更改UUID编号的后<span class="number">3</span>位，必须是唯一的</span><br></pre></td></tr></table></figure><p>② 使用MX进行连接</p><p>③ 关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>④ 配置YUM源（有网配置公网YUM源、无网就配置光盘或自建YUM源）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><h3 id="☆-第二步：安装DNS软件"><a href="#☆-第二步：安装DNS软件" class="headerlink" title="☆ 第二步：安装DNS软件"></a>☆ 第二步：安装DNS软件</h3><p>DNS服务器：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install bind -y</span></span><br></pre></td></tr></table></figure><p>安装完毕后，可以使用rpm  -q查询是否安装成功：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -q bind</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -ql bind</span></span><br><span class="line"><span class="comment"># 日志轮转文件</span></span><br><span class="line">/etc/logrotate.d/named</span><br><span class="line"><span class="comment"># 配置文件目录</span></span><br><span class="line">/etc/named</span><br><span class="line"><span class="comment"># 主配置文件</span></span><br><span class="line">/etc/named.conf</span><br><span class="line"><span class="comment"># zone文件,定义域</span></span><br><span class="line">/etc/named.rfc1912.zones</span><br><span class="line"><span class="comment"># 服务管理脚本</span></span><br><span class="line">/usr/lib/systemd/system/named.service</span><br><span class="line"><span class="comment"># 二进制程序文件</span></span><br><span class="line">/usr/sbin/named</span><br><span class="line"><span class="comment"># 检测配置文件</span></span><br><span class="line">/usr/sbin/named<span class="literal">-checkconf</span></span><br><span class="line"><span class="comment"># 检测域文件</span></span><br><span class="line">/usr/sbin/named<span class="literal">-checkzone</span></span><br><span class="line"><span class="comment"># 根域服务器</span></span><br><span class="line">/var/named/named.ca</span><br><span class="line"><span class="comment"># 正向解析区域文件模板</span></span><br><span class="line">/var/named/named.localhost</span><br><span class="line"><span class="comment"># 反向解析区域文件模板</span></span><br><span class="line">/var/named/named.loopback</span><br><span class="line"><span class="comment"># dns服务器下载文件的默认路径</span></span><br><span class="line">/var/named/slaves</span><br><span class="line"><span class="comment"># 进程pid</span></span><br><span class="line">/var/rum/named</span><br></pre></td></tr></table></figure><blockquote><p>find主要用来搜索计算机中的文件，rpm主要用来检查计算机中是否安装过某个软件</p></blockquote><h3 id="☆-第三步：DNS正向解析配置-域名-IP"><a href="#☆-第三步：DNS正向解析配置-域名-IP" class="headerlink" title="☆ 第三步：DNS正向解析配置(域名&#x3D;&gt;IP)"></a>☆ 第三步：DNS正向解析配置(域名&#x3D;&gt;IP)</h3><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415162454902.png" alt="image-20200415162454902"></p><p>&#x2F;etc&#x2F;named.conf主要配置访问权限控制（哪些IP或哪些主机可以访问DNS服务器）</p><p>&#x2F;etc&#x2F;named.rfc1912.zones主要定义域名如何解析（正向解析），解析到具体哪个IP地址</p><p>① 对named.conf以及named.rfc1912.zones进行备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/named.conf /etc/named.conf.bak</span><br><span class="line"><span class="built_in">cp</span> /etc/named.rfc1912.zones /etc/named.rfc1912.zones.bak</span><br></pre></td></tr></table></figure><p>② named.conf主配置文件详解（访问权限控制）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/named.conf</span></span><br></pre></td></tr></table></figure><p>添加任何主机都可以访问的权限：</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415163918871.png" alt="image-20200415163918871"></p><p>③ zones子配置文件详解（域名应该指向哪个IP地址）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/named.rfc1912.zones</span></span><br><span class="line">...</span><br><span class="line">zone <span class="string">&quot;itcast.cluster&quot;</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">        <span class="built_in">type</span> master;</span><br><span class="line">        file <span class="string">&quot;itcast.cluster.zone&quot;</span>;</span><br><span class="line">        allow<span class="literal">-update</span> &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>扩展 &#x3D;&gt; vim &#x3D;&gt; ：19，23  co  42，把19-23行，copy到42行的后面</p></blockquote><p>④ 在&#x2F;var&#x2F;named目录创建itcast.cluster.zone文件定义正向解析</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /var/named</span></span><br><span class="line"><span class="comment"># cp -p named.localhost itcast.cluster.zone</span></span><br></pre></td></tr></table></figure><blockquote><p>扩展：-p代表复制文件时保留文件的原有属性</p></blockquote><p>⑤ 编辑itcast.cluster.zone文件，定义域名的指向</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim itcast.cluster.zone</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415170447838.png" alt="image-20200415170447838"></p><blockquote><p>扩展：zone文件的格式说明</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">zone文件详解</span><br><span class="line"><span class="comment"># $TTL  缓存的生存周期</span></span><br><span class="line"><span class="comment"># @ = zonename = itcast.com  当前域</span></span><br><span class="line"><span class="comment"># IN  互联网</span></span><br><span class="line"><span class="comment"># SOA 开始授权</span></span><br><span class="line"><span class="comment"># NS  dns服务端nameserver</span></span><br><span class="line"><span class="comment"># A   ipv4 正向</span></span><br><span class="line"><span class="comment"># AAAA IPV6</span></span><br><span class="line"><span class="comment"># CNAME 别名</span></span><br><span class="line"><span class="comment"># MX  邮件交互记录  5 数字代表优先级 数字越小优先级越高</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 0       ; serial    更新序列号</span></span><br><span class="line"><span class="comment"># 1D      ; refresh   更新间隔（从服务器下载数据）</span></span><br><span class="line"><span class="comment"># 1H      ; retry     失败重试</span></span><br><span class="line"><span class="comment"># 1W      ; expire    区域文件的过期时间</span></span><br><span class="line"><span class="comment"># 3H )    ; minimum   缓存的最小生存周期</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># D Day、H Hour、W Week</span></span><br></pre></td></tr></table></figure><h3 id="☆-第四步：检查named-conf与zones文件"><a href="#☆-第四步：检查named-conf与zones文件" class="headerlink" title="☆ 第四步：检查named.conf与zones文件"></a>☆ 第四步：检查named.conf与zones文件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># named-checkconf /etc/named.conf</span></span><br><span class="line"><span class="comment"># named-checkconf /etc/named.rfc1912.zones</span></span><br><span class="line"></span><br><span class="line">检查itcast.cluster.zone文件</span><br><span class="line"><span class="comment"># cd /var/named</span></span><br><span class="line"><span class="comment"># named-checkzone itcast.cluster.zone itcast.cluster.zone</span></span><br></pre></td></tr></table></figure><h3 id="☆-第五步：启动DNS服务（named）"><a href="#☆-第五步：启动DNS服务（named）" class="headerlink" title="☆ 第五步：启动DNS服务（named）"></a>☆ 第五步：启动DNS服务（named）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart named</span></span><br><span class="line"><span class="comment"># netstat -tnlp |grep named</span></span><br></pre></td></tr></table></figure><h2 id="3、Web服务搭建"><a href="#3、Web服务搭建" class="headerlink" title="3、Web服务搭建"></a>3、Web服务搭建</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install httpd -y</span></span><br><span class="line"><span class="comment"># systemctl start httpd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># echo &#x27;DNS Test ...&#x27; &gt; /var/www/html/index.html</span></span><br></pre></td></tr></table></figure><h2 id="4、测试DNS服务器的正向解析"><a href="#4、测试DNS服务器的正向解析" class="headerlink" title="4、测试DNS服务器的正向解析"></a>4、测试DNS服务器的正向解析</h2><p>Client：客户端服务器操作</p><h3 id="☆-添加DNS服务器"><a href="#☆-添加DNS服务器" class="headerlink" title="☆ 添加DNS服务器"></a>☆ 添加DNS服务器</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;nameserver 10.1.1.12&#x27;</span> &gt; /etc/resolv.conf</span><br><span class="line">注：电脑重启，网络刷新restart network，VMware挂起，临时DNS都会失效</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久添加</span></span><br><span class="line">vim /etc/sysconfig/network<span class="literal">-scripts</span>/ifcfg<span class="literal">-ens33</span></span><br><span class="line">DNS=<span class="number">10.1</span>.<span class="number">1.12</span></span><br></pre></td></tr></table></figure><h3 id="☆-使用nslookup检测正向解析是否生效"><a href="#☆-使用nslookup检测正向解析是否生效" class="headerlink" title="☆ 使用nslookup检测正向解析是否生效"></a>☆ 使用nslookup检测正向解析是否生效</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nslookup www.itcast.cluster</span></span><br></pre></td></tr></table></figure><h3 id="☆-使用elinks命令行浏览器或curl来实现访问"><a href="#☆-使用elinks命令行浏览器或curl来实现访问" class="headerlink" title="☆ 使用elinks命令行浏览器或curl来实现访问"></a>☆ 使用elinks命令行浏览器或curl来实现访问</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install elinks -y</span></span><br><span class="line"><span class="comment"># elinks</span></span><br><span class="line">输入www.itcast.cluster</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl http://www.itcast.cluster</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP、NFS以及SAMBA服务下</title>
      <link href="/posts/56482.html"/>
      <url>/posts/56482.html</url>
      
        <content type="html"><![CDATA[<h1 id="FTP、NFS以及SAMBA服务"><a href="#FTP、NFS以及SAMBA服务" class="headerlink" title="FTP、NFS以及SAMBA服务"></a>FTP、NFS以及SAMBA服务</h1><h1 id="一、FTP服务"><a href="#一、FTP服务" class="headerlink" title="一、FTP服务"></a>一、FTP服务</h1><h2 id="1、Linux下ftp客户端管理工具"><a href="#1、Linux下ftp客户端管理工具" class="headerlink" title="1、Linux下ftp客户端管理工具"></a>1、Linux下ftp客户端管理工具</h2><p>ftp、lftp都是Linux下ftp的客户端管理工具，但是需要独立安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install ftp lftp -y</span></span><br></pre></td></tr></table></figure><h3 id="☆-ftp工具"><a href="#☆-ftp工具" class="headerlink" title="☆ ftp工具"></a>☆ ftp工具</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ftp 10.1.1.10</span></span><br><span class="line">Connected to <span class="number">10.1</span>.<span class="number">1.10</span> (<span class="number">10.1</span>.<span class="number">1.10</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span>.<span class="number">2</span>)</span><br><span class="line">Name (<span class="number">10.1</span>.<span class="number">1.10</span>:root): 输入FTP的账号</span><br><span class="line"></span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line">Password: 输入FTP账号对应的密码</span><br><span class="line"></span><br><span class="line"><span class="number">230</span> Login successful.</span><br><span class="line">Remote system <span class="built_in">type</span> is UNIX.</span><br><span class="line"><span class="keyword">Using</span> binary mode to transfer files.</span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>求帮助：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; ?或help</span><br><span class="line">Commands may be abbreviated.  Commands are:</span><br><span class="line"></span><br><span class="line">!               debug           mdir            sendport        site</span><br><span class="line"><span class="variable">$</span>               <span class="built_in">dir</span>             mget            put             size</span><br><span class="line">account         disconnect      mkdir           <span class="built_in">pwd</span>             status</span><br><span class="line">append          <span class="keyword">exit</span>            mls             quit            struct</span><br><span class="line">ascii           form            mode            quote           system</span><br><span class="line">bell            get             modtime         recv            sunique</span><br><span class="line">binary          glob            mput            reget           tenex</span><br><span class="line">bye             hash            newer           rstatus         tick</span><br><span class="line">case            help            nmap            rhelp           trace</span><br><span class="line"><span class="built_in">cd</span>              idle            nlist           rename          <span class="built_in">type</span></span><br><span class="line">cdup            image           ntrans          reset           user</span><br><span class="line">chmod           lcd             open            restart         umask</span><br><span class="line">close           <span class="built_in">ls</span>              prompt          <span class="built_in">rmdir</span>           verbose</span><br><span class="line">cr              macdef          passive         runique         ?</span><br><span class="line">delete          mdelete         proxy           send</span><br></pre></td></tr></table></figure><p>第一个命令：ls命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>查看当前连接的FTP目录下有哪些文件。</p><p>第二个命令（快捷键）：Ctrl  + Shift + L</p><p>Ctrl + Shift + L代表清屏命令</p><p>第三个命令：help命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; help put</span><br><span class="line">put             send one file</span><br></pre></td></tr></table></figure><p>第四个命令：put与get命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; put 本地文件路径+名称 上传</span><br><span class="line">ftp&gt; get 远程文件路径+名称 下载</span><br></pre></td></tr></table></figure><p>第五个命令：批量上传或下载多个文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; mput 文件名称<span class="number">1</span> 文件名称<span class="number">2</span> 文件名称<span class="number">3</span> ...</span><br><span class="line">ftp&gt; mget 文件名称<span class="number">1</span> 文件名称<span class="number">2</span> 文件名称<span class="number">3</span> ...</span><br></pre></td></tr></table></figure><p>第六个命令：prompt屏蔽批量输出信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; prompt</span><br><span class="line">Interactive mode on.=&gt; 开启提示</span><br><span class="line"></span><br><span class="line">ftp&gt; prompt</span><br><span class="line">Interactive mode off.=&gt; 关闭提示</span><br></pre></td></tr></table></figure><p>第七个命令：quit命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; quit</span><br></pre></td></tr></table></figure><h3 id="☆-lftp工具：批量操作"><a href="#☆-lftp工具：批量操作" class="headerlink" title="☆ lftp工具：批量操作"></a>☆ lftp工具：批量操作</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lftp 用户名称@远程IP地址</span></span><br><span class="line">Password:用户名称对应的密码</span><br></pre></td></tr></table></figure><p>求帮助：help</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lftp&gt; help</span><br></pre></td></tr></table></figure><p>针对某个命令求帮助：help + 命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lftp&gt; help mirror</span><br></pre></td></tr></table></figure><p>案例：批量上传（把shop文件夹上传到FTP服务器端）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lftp&gt; mirror <span class="literal">-R</span> 本地文件夹名称</span><br></pre></td></tr></table></figure><p>案例：批量下载（把整个FTP下载到本地）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lftp&gt; mirror 远程FTP路径</span><br></pre></td></tr></table></figure><h2 id="2、FTP知识点补充"><a href="#2、FTP知识点补充" class="headerlink" title="2、FTP知识点补充"></a>2、FTP知识点补充</h2><h3 id="☆-FTP访问对象控制（黑名单）"><a href="#☆-FTP访问对象控制（黑名单）" class="headerlink" title="☆ FTP访问对象控制（黑名单）"></a>☆ FTP访问对象控制（黑名单）</h3><p>ftpusers黑名单</p><p>user_list默认是黑名单（可以成为白名单）</p><p>案例：默认情况下，root账号是否允许登录FTP服务器</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">ftp</span>]<span class="comment"># ftp 10.1.1.10</span></span><br><span class="line">Connected to <span class="number">10.1</span>.<span class="number">1.10</span> (<span class="number">10.1</span>.<span class="number">1.10</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span>.<span class="number">2</span>)</span><br><span class="line">Name (<span class="number">10.1</span>.<span class="number">1.10</span>:root): root</span><br><span class="line"><span class="number">530</span> Permission denied.</span><br><span class="line">Login failed.</span><br><span class="line">ftp&gt;</span><br><span class="line">原因：root用户在黑名单里/etc/vsftpd/ftpusers黑名单中</span><br></pre></td></tr></table></figure><p>案例：ftpusers与       user_list黑名单效果不同点</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ftpusers：</span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">ftp</span>]<span class="comment"># ftp 10.1.1.10</span></span><br><span class="line">Connected to <span class="number">10.1</span>.<span class="number">1.10</span> (<span class="number">10.1</span>.<span class="number">1.10</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span>.<span class="number">2</span>)</span><br><span class="line">Name (<span class="number">10.1</span>.<span class="number">1.10</span>:root): kefu</span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line">Password:</span><br><span class="line"><span class="number">530</span> Login incorrect.=&gt;       ftpusers被禁用，可以输入密码，返回<span class="number">530</span></span><br><span class="line">Login failed.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user_list：</span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">ftp</span>]<span class="comment"># ftp 10.1.1.10</span></span><br><span class="line">Connected to <span class="number">10.1</span>.<span class="number">1.10</span> (<span class="number">10.1</span>.<span class="number">1.10</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span>.<span class="number">2</span>)</span><br><span class="line">Name (<span class="number">10.1</span>.<span class="number">1.10</span>:root): kefu</span><br><span class="line"><span class="number">530</span> Permission denied.</span><br><span class="line">Login failed.</span><br><span class="line">原因：默认情况下user_list文件也是黑名单，如果在该文件里直接拒绝，不给输入密码的机会。</span><br></pre></td></tr></table></figure><p>案例：user_list可以从黑名单变成白名单（允许某个用户登录FTP系统服务器）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user_list要成为白名单，需要再配置文件里增加：</span><br><span class="line">userlist_deny=NO</span><br><span class="line">注意：如果user_list是白名单，那么必须在该文件里的用户才可以访问ftp服务。</span><br></pre></td></tr></table></figure><p>总结：</p><ol><li>用户在ftpusers文件中，那么用户不能访问ftp服务器</li><li>用户在user_list文件中，如果该文件是白名单，那么&#x3D;&#x3D;<strong>只</strong>&#x3D;&#x3D;在该文件中的用户可以访问ftp服务</li><li>如果user_list文件是白名单，用户即在ftpusers中又在user_list中，那么ftpusers拒绝优先</li></ol><h3 id="☆-FTP网络访问控制（限IP-限速）"><a href="#☆-FTP网络访问控制（限IP-限速）" class="headerlink" title="☆ FTP网络访问控制（限IP+限速）"></a>☆ FTP网络访问控制（限IP+限速）</h3><p>FTP必须支持tcp_wrappers</p><p>&#x2F;etc&#x2F;hosts.allow 允许</p><p>&#x2F;etc&#x2F;hosts.deny  拒绝</p><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E4%BB%A5%E5%8F%8ASAMBA%E6%9C%8D%E5%8A%A1%E4%B8%8B.assets/image-20200413113242257.png" alt="image-20200413113242257"></p><h4 id="☆-限制IP地址"><a href="#☆-限制IP地址" class="headerlink" title="☆ 限制IP地址"></a>☆ 限制IP地址</h4><p>案例：如何禁止某个IP或IP网段</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/hosts.deny</span></span><br><span class="line">服务程序:主机</span><br><span class="line">vsftpd:all                        全部拒绝</span><br><span class="line">vsftpd:all EXCEPT <span class="number">192.168</span>.<span class="number">0.2</span>    拒绝所有除了<span class="number">192.168</span>.<span class="number">0.2</span>  </span><br><span class="line">vsftpd:<span class="number">192.168</span>.<span class="number">0.254</span>  拒绝单个IP地址</span><br><span class="line"></span><br><span class="line">vsftpd:<span class="number">192.168</span>.<span class="number">0.254</span>:allow  </span><br><span class="line">//以上是允许<span class="number">192.168</span>.<span class="number">0.254</span>访问，类似/etc/hosts.allow里增加vsftpd:<span class="number">192.168</span>.<span class="number">0.254</span></span><br><span class="line"></span><br><span class="line">vsftpd:<span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">255.255</span>.<span class="number">255.0</span>   拒绝某个网段</span><br><span class="line">vsftpd:<span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">255.255</span>.<span class="number">255.0</span> EXCEPT <span class="number">192.168</span>.<span class="number">0.254</span>   拒绝某个网段，但是除了某个ip地址</span><br><span class="line">注意：子网掩码不支持<span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span>这种写法</span><br><span class="line"></span><br><span class="line">vim /etc/hosts.deny</span><br><span class="line">vsftpd,sshd:<span class="number">10.1</span>.<span class="number">1.1</span></span><br></pre></td></tr></table></figure><p>案例：如何判断某个服务是否支持tcp_wrappers</p><p>1）.&#x2F;configure &#x3D;&#x3D;–enable-libwrap&#x3D;&#x3D;  表示支持tcp_wrappers访问控制（源码安装看配置项）</p><p>2）rpm安装(也包括yum安装)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldd命令 +二进制程序，查询某个软件包含哪些模块</span></span><br></pre></td></tr></table></figure><p>案例：查询vsftpd与sshd是否支持tcp_wrappers</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldd /usr/sbin/vsftpd |grep libwrap*</span></span><br><span class="line">libwrap.so.<span class="number">0</span> =&gt; /lib64/libwrap.so.<span class="number">0</span> (<span class="number">0</span>x00007f2956480000)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ldd /usr/sbin/sshd |grep libwrap*</span></span><br><span class="line">libwrap.so.<span class="number">0</span> =&gt; /lib64/libwrap.so.<span class="number">0</span> (<span class="number">0</span>x00007f015ff29000)</span><br></pre></td></tr></table></figure><h4 id="☆-限制FTP流量"><a href="#☆-限制FTP流量" class="headerlink" title="☆ 限制FTP流量"></a>☆ 限制FTP流量</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">local_max_rate=<span class="number">0</span></span><br><span class="line"><span class="number">0</span>代表不限速</span><br><span class="line"></span><br><span class="line">local_max_rate=数值 + 字节</span><br></pre></td></tr></table></figure><h2 id="3、使用第三方平台视频"><a href="#3、使用第三方平台视频" class="headerlink" title="3、使用第三方平台视频"></a>3、使用第三方平台视频</h2><p>第一步：在Linux电脑中安装httpd（阿帕奇）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install httpd -y</span></span><br></pre></td></tr></table></figure><p>第二步：启动httpd</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start httpd</span></span><br></pre></td></tr></table></figure><p>第三步：在&#x2F;var&#x2F;www&#x2F;html项目目录中创建一个demo.html文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /var/www/html/demo.html</span></span><br><span class="line">&lt;iframe height=<span class="number">498</span> width=<span class="number">815</span> src=<span class="string">&#x27;https://player.youku.com/embed/XNDU4OTM3NzM0NA==&#x27;</span> frameborder=<span class="number">0</span> <span class="string">&#x27;allowfullscreen&#x27;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h1 id="二、NFS服务概述"><a href="#二、NFS服务概述" class="headerlink" title="二、NFS服务概述"></a>二、NFS服务概述</h1><h2 id="1、任务背景"><a href="#1、任务背景" class="headerlink" title="1、任务背景"></a>1、任务背景</h2><p>① 搭建NFS服务器（用于静态资源的存储如图片、视频、附件）</p><p>② 使用mount指定对NFS服务器进行挂载，挂载到Web服务器中</p><p>③ 对NFS服务器中的静态资源进行实时备份（inotify + rsync）</p><h2 id="2、环境准备"><a href="#2、环境准备" class="headerlink" title="2、环境准备"></a>2、环境准备</h2><table><thead><tr><th>编号</th><th>主机名称FQDN</th><th>IP地址</th><th>作用</th></tr></thead><tbody><tr><td>1</td><td>web.itcast.cn</td><td>10.1.1.11</td><td>Web服务器</td></tr><tr><td>2</td><td>nfs.itcast.cn</td><td>10.1.1.12</td><td>NFS服务器</td></tr><tr><td>3</td><td>backup.itcast.cn</td><td>10.1.1.13</td><td>Backup服务器</td></tr></tbody></table><p>第一步：设置计算机的在主机名称</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Web<span class="comment"># hostnamectl set-hostname web.itcast.cn</span></span><br><span class="line">NFS<span class="comment"># hostnamectl set-hostname nfs.itcast.cn</span></span><br><span class="line">Backup<span class="comment"># hostnamectl set-hostname backup.itcast.cn</span></span><br></pre></td></tr></table></figure><p>第二步：设置IP地址</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.11</span>   /<span class="number">10.1</span>.<span class="number">1.13</span>   /<span class="number">10.1</span>.<span class="number">1.13</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">DNS1=<span class="number">119.29</span>.<span class="number">29.29</span></span><br><span class="line">DNS2=<span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line"></span><br><span class="line">UUID必须是唯一的，所以要么删除，要么更改UUID的值（更改后<span class="number">3</span>位）</span><br></pre></td></tr></table></figure><p>第三步：关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">关闭防火墙</span><br><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line">关闭SELinux</span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>第四步：配置YUM源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum mackecache</span></span><br></pre></td></tr></table></figure><h2 id="3、NFS概述"><a href="#3、NFS概述" class="headerlink" title="3、NFS概述"></a>3、NFS概述</h2><p>NFS（Network File System）网络文件系统，主要用于<strong>Linux系统</strong>上实现文件共享的一种协议，其客户端<strong>主要是Linux</strong></p><p><strong>没有用户认证机制</strong>，且数据在网络上传送的时候是<strong>明文传送</strong>，一般只能在<strong>局域网</strong>中使用</p><p>支持多节点同时挂载及并发写入</p><p><strong>企业应用：为集群中的web server提供后端存储</strong>(做静态资源服务器)</p><h2 id="4、NFS组成"><a href="#4、NFS组成" class="headerlink" title="4、NFS组成"></a>4、NFS组成</h2><p>rpcbind ： 负责NFS的数据传输，远程过程调用  &#x3D;&#x3D;tcp&#x2F;udp协议 端口111&#x3D;&#x3D;</p><p>nfs-utils ：控制共享哪些文件，权限管理</p><blockquote><p>RPC（Remote Procedure Call Protocol）：<br>远程过程调用协议，它是一种通过网络从远程计算机程序上请求服务，不需要了解底层网络技术的协议。</p></blockquote><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E4%BB%A5%E5%8F%8ASAMBA%E6%9C%8D%E5%8A%A1%E4%B8%8B.assets/image-20200413154315842.png" alt="image-20200413154315842"></p><h2 id="5、与NFS相关的软件包"><a href="#5、与NFS相关的软件包" class="headerlink" title="5、与NFS相关的软件包"></a>5、与NFS相关的软件包</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nfs<span class="literal">-utils-1</span>.<span class="number">2.3</span><span class="literal">-26</span>.el6.x86_64 nfs服务的一个脚本控制工具（服务端与客户端）</span><br><span class="line">nfs4<span class="literal">-acl-tools-0</span>.<span class="number">3.3</span><span class="literal">-6</span>.el6.x86_64acl 工具包</span><br><span class="line">nfs<span class="literal">-utils-lib-1</span>.<span class="number">1.5</span><span class="literal">-4</span>.el6.x86_64  nfs 库文件</span><br></pre></td></tr></table></figure><h2 id="6、安装NFS软件"><a href="#6、安装NFS软件" class="headerlink" title="6、安装NFS软件"></a>6、安装NFS软件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install rpcbind nfs-utils -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -q rpcbind</span></span><br><span class="line"><span class="comment"># rpm -aq|grep ^nfs</span></span><br></pre></td></tr></table></figure><h2 id="7、NFS的配置文件"><a href="#7、NFS的配置文件" class="headerlink" title="7、NFS的配置文件"></a>7、NFS的配置文件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/exports</span></span><br><span class="line">共享目录   共享选项</span><br><span class="line">/share    *(ro,sync)</span><br><span class="line">/public  *(ro,sync)</span><br><span class="line"></span><br><span class="line">共享主机：</span><br><span class="line">*   ：代表所有主机</span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span>：代表共享给某个网段<span class="number">192.168</span>.<span class="number">0.1</span> ~ <span class="number">192.168</span>.<span class="number">0.254</span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span>(rw) <span class="number">192.168</span>.<span class="number">1.0</span>/<span class="number">24</span>(ro) :代表共享给不同网段</span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.254</span>：共享给某个IP</span><br><span class="line">*.itcast.cn:代表共享给某个域下的所有主机</span><br><span class="line"></span><br><span class="line">共享选项：</span><br><span class="line">ro：只读</span><br><span class="line">rw：读写</span><br><span class="line">sync：实时同步，直接写入磁盘(安全性最高)</span><br><span class="line">async：异步，先缓存数据在内存然后再同步磁盘(效率最高，但是有丢失文件风险)</span><br><span class="line">anonuid：设置访问nfs服务的用户的uid，uid需要在/etc/passwd中存在</span><br><span class="line">anongid：设置访问nfs服务的用户的gid</span><br><span class="line">root_squash ：默认选项 root用户创建的文件的属主和属组都变成nfsnobody,其他人nfs<span class="literal">-server</span>端是它自己，client端是nobody。(访问NFS服务器时，映射为匿名账号)</span><br><span class="line">no_root_squash：root用户创建的文件属主和属组还是root，其他人server端是它自己uid，client端是nobody。(访问NFS服务器时，映射为root管理员账号)</span><br><span class="line">all_squash： 不管是root还是其他普通用户创建的文件的属主和属组都是nfsnobody</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">anonuid和anongid参数和all_squash一起使用。</span><br><span class="line">all_squash表示不管是root还是其他普通用户从客户端所创建的文件在服务器端的拥有者和所属组都是nfsnobody；服务端为了对文件做相应管理，可以设置anonuid和anongid进而指定文件的拥有者和所属组</span><br></pre></td></tr></table></figure><h1 id="三、NFS任务解决方案"><a href="#三、NFS任务解决方案" class="headerlink" title="三、NFS任务解决方案"></a>三、NFS任务解决方案</h1><h2 id="1、搭建NFS服务器"><a href="#1、搭建NFS服务器" class="headerlink" title="1、搭建NFS服务器"></a>1、搭建NFS服务器</h2><p>第一步：安装软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install rpcbind nfs-utils -y</span></span><br></pre></td></tr></table></figure><p>第二步：创建一个共享目录，如&#x2F;share</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /share</span></span><br></pre></td></tr></table></figure><h2 id="2、编写NFS主配置文件"><a href="#2、编写NFS主配置文件" class="headerlink" title="2、编写NFS主配置文件"></a>2、编写NFS主配置文件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/exports</span></span><br><span class="line">共享目录   共享选项</span><br><span class="line">/share    <span class="number">10.1</span>.<span class="number">1.0</span>/<span class="number">24</span>(rw,sync)</span><br></pre></td></tr></table></figure><h2 id="3、启动相关的NFS服务"><a href="#3、启动相关的NFS服务" class="headerlink" title="3、启动相关的NFS服务"></a>3、启动相关的NFS服务</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start rpcbind</span></span><br><span class="line"><span class="comment"># systemctl start nfs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ss -naltp |grep 111       111端口</span></span><br></pre></td></tr></table></figure><h2 id="4、搭建Web服务器"><a href="#4、搭建Web服务器" class="headerlink" title="4、搭建Web服务器"></a>4、搭建Web服务器</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install httpd -y</span></span><br><span class="line"><span class="comment"># systemctl start httpd</span></span><br></pre></td></tr></table></figure><p>当Apache软件启动完毕后，会自动占用计算机的80端口。</p><p>80端口指向Web服务器的目录 &#x3D;&gt; &#x2F;var&#x2F;www&#x2F;html</p><p>所以项目源代码都可以直接存放于&#x2F;var&#x2F;www&#x2F;html目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;NFS实战演练&quot; &gt; /var/www/html/index.html</span></span><br></pre></td></tr></table></figure><h2 id="5、在Web服务器中挂载NFS"><a href="#5、在Web服务器中挂载NFS" class="headerlink" title="5、在Web服务器中挂载NFS"></a>5、在Web服务器中挂载NFS</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/www/html/media</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mount -t nfs 10.1.1.12:/share /var/www/html/media </span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># mount.nfs 10.1.1.12:/share /var/www/html/media</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos<span class="literal">-root</span>   <span class="number">17</span>G  <span class="number">5.1</span>G   <span class="number">12</span>G  <span class="number">30</span>% /</span><br><span class="line">devtmpfs                 <span class="number">894</span>M     <span class="number">0</span>  <span class="number">894</span>M   <span class="number">0</span>% /dev</span><br><span class="line">tmpfs                    <span class="number">910</span>M     <span class="number">0</span>  <span class="number">910</span>M   <span class="number">0</span>% /dev/shm</span><br><span class="line">tmpfs                    <span class="number">910</span>M   <span class="number">11</span>M  <span class="number">900</span>M   <span class="number">2</span>% /run</span><br><span class="line">tmpfs                    <span class="number">910</span>M     <span class="number">0</span>  <span class="number">910</span>M   <span class="number">0</span>% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               <span class="number">1014</span>M  <span class="number">179</span>M  <span class="number">836</span>M  <span class="number">18</span>% /boot</span><br><span class="line">tmpfs                    <span class="number">182</span>M   <span class="number">28</span>K  <span class="number">182</span>M   <span class="number">1</span>% /run/user/<span class="number">1000</span></span><br><span class="line">/dev/sr0                 <span class="number">4.3</span>G  <span class="number">4.3</span>G     <span class="number">0</span> <span class="number">100</span>% /run/media/itheima/CentOS <span class="number">7</span> x86_64</span><br><span class="line">tmpfs                    <span class="number">182</span>M     <span class="number">0</span>  <span class="number">182</span>M   <span class="number">0</span>% /run/user/<span class="number">0</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.12</span>:/share          <span class="number">17</span>G  <span class="number">5.1</span>G   <span class="number">12</span>G  <span class="number">30</span>% /var/www/html/media</span><br><span class="line"></span><br><span class="line">如果客户端没有安装nfs工具可能导致挂载失败：</span><br><span class="line">yum <span class="literal">-y</span> install nfs<span class="literal">-utils</span> nfs<span class="literal">-utils-lib</span> nfs4<span class="literal">-acl-tools</span></span><br></pre></td></tr></table></figure><h2 id="6、上传aws-mp4视频到NFS服务器的-share"><a href="#6、上传aws-mp4视频到NFS服务器的-share" class="headerlink" title="6、上传aws.mp4视频到NFS服务器的&#x2F;share"></a>6、上传aws.mp4视频到NFS服务器的&#x2F;share</h2><p>第一步：使用MX上传aws.mp4到&#x2F;share目录（NFS服务器）</p><p>第二步：在Web服务器中，ll  &#x2F;var&#x2F;www&#x2F;html&#x2F;media目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ll /var/www/html/media</span></span><br><span class="line">aws.mp4</span><br></pre></td></tr></table></figure><h2 id="7、在html网页中调用aws-mp4文件"><a href="#7、在html网页中调用aws-mp4文件" class="headerlink" title="7、在html网页中调用aws.mp4文件"></a>7、在html网页中调用aws.mp4文件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /var/www/html/index.html</span></span><br><span class="line">&lt;video width=<span class="string">&quot;800&quot;</span> height=<span class="string">&quot;450&quot;</span> controls&gt;</span><br><span class="line">&lt;source src=<span class="string">&quot;media/aws.mp4&quot;</span>&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><h2 id="8、对NFS服务器进行实时备份"><a href="#8、对NFS服务器进行实时备份" class="headerlink" title="8、对NFS服务器进行实时备份"></a>8、对NFS服务器进行实时备份</h2><p>NFS服务器：&#x2F;share目录有变化，马上rsync进行同步Backup备份服务器的&#x2F;backup目录</p><p>第一步：安装inotify工具(NFS服务器)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xf inotify-tools-3.14.tar.gz</span></span><br><span class="line"><span class="comment"># cd inotify-tools-3.14</span></span><br><span class="line"><span class="comment"># ./configure &amp;&amp; make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><p>第二步：编写rsync.sh脚本，监控&#x2F;share目录的变化</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim rsync.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">/usr/local/bin/inotifywait <span class="literal">-mrq</span> <span class="literal">-e</span> modify,delete,create,attrib,<span class="built_in">move</span> /share |<span class="keyword">while</span> read events</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    rsync <span class="literal">-a</span> <span class="literal">--delete</span> /share/ <span class="number">10.1</span>.<span class="number">1.13</span>:/backup/</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;`date +%F\ %T`出现事件<span class="variable">$events</span>&quot;</span> &gt;&gt; /var/log/rsync.log <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>第三步：给rsync添加x权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod +x rsync.sh</span></span><br></pre></td></tr></table></figure><p>第四步：把NFS服务器与Backup备份服务器进行免密登录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen</span></span><br><span class="line"><span class="comment"># ssh-copy-id root@10.1.1.13</span></span><br></pre></td></tr></table></figure><p>第五步：在Backup服务器中创建一个&#x2F;backup目录，用于实时备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /backup</span></span><br></pre></td></tr></table></figure><p>第六步：在NFS服务器中执行rsync脚本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nohup ./rsync.sh &amp;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP、NFS、SAMBA系统服务上</title>
      <link href="/posts/51956.html"/>
      <url>/posts/51956.html</url>
      
        <content type="html"><![CDATA[<h1 id="FTP、NFS、SAMBA系统服务"><a href="#FTP、NFS、SAMBA系统服务" class="headerlink" title="FTP、NFS、SAMBA系统服务"></a>FTP、NFS、SAMBA系统服务</h1><h1 id="一、rsync托管xinetd"><a href="#一、rsync托管xinetd" class="headerlink" title="一、rsync托管xinetd"></a>一、rsync托管xinetd</h1><h2 id="1、为什么要进行服务托管"><a href="#1、为什么要进行服务托管" class="headerlink" title="1、为什么要进行服务托管"></a>1、为什么要进行服务托管</h2><p>独立服务：独立启动脚本  ssh  ftp nfs dns …</p><p>依赖服务:   没有独立的启动脚本   rsync telnet  依赖xinetd服务（独立服务）</p><h2 id="2、如何将rsync托管给xinetd服务去管理？"><a href="#2、如何将rsync托管给xinetd服务去管理？" class="headerlink" title="2、如何将rsync托管给xinetd服务去管理？"></a>2、如何将rsync托管给xinetd服务去管理？</h2><p>第一步：在系统中安装xinetd服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install xinetd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -ql xinetd</span></span><br></pre></td></tr></table></figure><p>第二步：编写xinetd.conf文件（&#x2F;etc&#x2F;xinetd.conf）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man 5 xinetd.conf</span></span><br><span class="line">defaults</span><br><span class="line">&#123;</span><br><span class="line">only_from只允许访问</span><br><span class="line">no_access拒绝访问</span><br><span class="line">access_times控制访问服务的时间段</span><br><span class="line">log_type指定日志类型</span><br><span class="line">interface并发连接数</span><br><span class="line">per_source每个IP的最大连接数</span><br><span class="line">&#125;</span><br><span class="line">includedir /etc/xinetd.d子配置文件目录（追加rsync、telnet）</span><br></pre></td></tr></table></figure><p>第三步：手工创建&#x2F;etc&#x2F;xinetd.d&#x2F;rsync</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/xinetd.d/rsync</span></span><br><span class="line">service rsync</span><br><span class="line">&#123;</span><br><span class="line">disable = no</span><br><span class="line">flags = IPv6</span><br><span class="line">socket_type = stream</span><br><span class="line">wait = no</span><br><span class="line">user = root</span><br><span class="line">server = /usr/bin/rsync</span><br><span class="line">server_args = <span class="literal">--daemon</span></span><br><span class="line">log_on_failure += USERID</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">备注:disable = no //开关；no表示开启该服务；yes表示关闭服务</span><br></pre></td></tr></table></figure><p>第四步：重启xinetd服务（xinetd服务重启后，rsync服务也会随之重启，检查端口占用）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pkill rsync</span></span><br><span class="line"><span class="comment"># systemctl restart xinetd</span></span><br><span class="line"><span class="comment"># ss -naltp |grep 873</span></span><br><span class="line">LISTEN     :::<span class="number">873</span>      users:((<span class="string">&quot;xinetd&quot;</span>,pid=<span class="number">45079</span>,fd=<span class="number">5</span>))</span><br></pre></td></tr></table></figure><blockquote><p>在查询873端口占用时，发现只有xinetd服务，没有rsync服务，原因：rsync &#x3D;&gt; xinetd</p></blockquote><p>常见问题（经验值）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果我们在启动xinetd服务时，发现系统中的<span class="number">873</span>端口一直没有被占用，只能有一个问题：配置文件有错误！</span><br><span class="line">解决方案：<span class="built_in">cat</span> /var/log/messages</span><br><span class="line">一定要注意颜色的变化，有颜色变化代表是正确选项，没有，就肯定你在复制时惨咋了一些看不见的字符。</span><br></pre></td></tr></table></figure><h1 id="二、FTP服务概述"><a href="#二、FTP服务概述" class="headerlink" title="二、FTP服务概述"></a>二、FTP服务概述</h1><h2 id="1、FTP服务介绍"><a href="#1、FTP服务介绍" class="headerlink" title="1、FTP服务介绍"></a>1、FTP服务介绍</h2><p>FTP（File Transfer Protocol）是一种应用非常广泛并且古老的一个互联网文件传输协议。</p><blockquote><p>文件传输：文件上传与文件下载</p></blockquote><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412105703919.png" alt="image-20200412105703919"></p><ul><li>主要用于互联网中&#x3D;&#x3D;文件的双向传输&#x3D;&#x3D;（上传&#x2F;下载）、文件共享</li><li>跨平台   Linux、Windows</li><li>FTP是&#x3D;&#x3D;C&#x2F;S&#x3D;&#x3D;架构，拥有一个客户端和服务端，使用&#x3D;&#x3D;TCP协议&#x3D;&#x3D;作为底层传输协议，提供可靠的数据传输</li><li>FTP的默认端口 &#x3D;&#x3D;21号&#x3D;&#x3D;（命令端口）    &#x3D;&#x3D;20号&#x3D;&#x3D;（数据端口，主动模式下） <strong>默认被动模式</strong>下</li><li>FTP程序（软件）**&#x3D;&#x3D;vsftpd&#x3D;&#x3D;**</li></ul><blockquote><p>FTP软件名称 &#x3D;&gt; vsftpd &#x3D;&gt; vs（very secure ftp daemon） </p></blockquote><h2 id="2、FTP服务的客户端工具"><a href="#2、FTP服务的客户端工具" class="headerlink" title="2、FTP服务的客户端工具"></a>2、FTP服务的客户端工具</h2><ul><li>Linux：ftp、lftp（客户端程序）</li><li>Windows：FlashFXP(虚拟主机)、FileZilla、IE、Chrome、Firefox</li><li>lftp和ftp工具区别：<ul><li>lftp：默认是以&#x3D;&#x3D;匿名用户&#x3D;&#x3D;访问</li><li>ftp：默认是以&#x3D;&#x3D;用户名&#x2F;密码&#x3D;&#x3D;方式访问</li><li>lftp可以批量并且下载目录</li></ul></li></ul><h2 id="3、FTP的两种运行模式（了解）"><a href="#3、FTP的两种运行模式（了解）" class="headerlink" title="3、FTP的两种运行模式（了解）"></a>3、FTP的两种运行模式（了解）</h2><p>在FTP服务中，其一共拥有两种模式（主动模式 + 被动模式）</p><blockquote><p>参考点，FTP的服务器端。如果是FTP服务器端主动连接客户端&#x3D;&gt;主动模式，如果是客户端主动连接FTP服务器端&#x3D;&gt;被动模式。</p></blockquote><h3 id="☆-主动模式"><a href="#☆-主动模式" class="headerlink" title="☆ 主动模式"></a>☆ 主动模式</h3><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412114935141.png" alt="image-20200412114935141"></p><p>cmd：命令端口（发送FTP请求）</p><p>data：数据端口（后期用于传输数据）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 客户端打开大于<span class="number">1023</span>的随机命令端口和大于<span class="number">1023</span>的随机数据端口向服务的的<span class="number">21</span>号端口发起请求</span><br><span class="line"><span class="number">2</span>. 服务端的<span class="number">21</span>号命令端口响应客户端的随机命令端口</span><br><span class="line"><span class="number">3</span>. 服务端的<span class="number">20</span>号端口主动请求连接客户端的随机数据端口</span><br><span class="line"><span class="number">4</span>. 客户端的随机数据端口进行确认</span><br></pre></td></tr></table></figure><h3 id="☆-被动模式"><a href="#☆-被动模式" class="headerlink" title="☆ 被动模式"></a>☆ 被动模式</h3><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412120219384.png" alt="image-20200412120219384"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 客户端打开大于<span class="number">1023</span>的随机命令端口和大于<span class="number">1023</span>的随机数据端口向服务的的<span class="number">21</span>号端口发起请求</span><br><span class="line"><span class="number">2</span>. 服务端的<span class="number">21</span>号命令端口响应客户端的随机命令端口</span><br><span class="line"><span class="number">3</span>. 客户端主动连接服务端打开的大于<span class="number">1023</span>的随机数据端口</span><br><span class="line"><span class="number">4</span>. 服务端进行确认</span><br></pre></td></tr></table></figure><p>FTP默认使用的就是被动模式！</p><h2 id="4、搭建FTP服务（重要）"><a href="#4、搭建FTP服务（重要）" class="headerlink" title="4、搭建FTP服务（重要）"></a>4、搭建FTP服务（重要）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 关闭防火墙和selinux</span><br><span class="line"><span class="number">2</span>. 配置yum源(<span class="built_in">mount</span> /dev/sr0 /mnt)</span><br><span class="line"><span class="number">3</span>. 软件三部曲</span><br><span class="line"><span class="number">4</span>. 了解配置文件</span><br><span class="line"><span class="number">5</span>. 根据需求修改配置文件来完成服务的搭建</span><br><span class="line"><span class="number">6</span>. 启动服务，开机自启动</span><br><span class="line"><span class="number">7</span>. 测试验证</span><br></pre></td></tr></table></figure><p>第一步：关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>第二步：配置YUM源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">有网配置公网YUM源（阿里、清华、华为），没网就配置本地YUM源</span><br><span class="line"><span class="comment"># mount /dev/sr0 /mnt</span></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><p>第三步：安装vsftpd软件（FTP &#x3D;&gt; vsftpd）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install vsftpd -y</span></span><br></pre></td></tr></table></figure><p>第四步：启动ftp服务并添加到开机启动项中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start vsftpd</span></span><br><span class="line"><span class="comment"># systemctl enable vsftpd</span></span><br></pre></td></tr></table></figure><p>第五步：测试FTP是否安装成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig ens33</span></span><br><span class="line">inet <span class="number">10.1</span>.<span class="number">1.10</span>  netmask <span class="number">255.255</span>.<span class="number">255.0</span>  broadcast <span class="number">10.1</span>.<span class="number">1.255</span></span><br></pre></td></tr></table></figure><p>☆ 基于浏览器的访问</p><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412141644833.png" alt="image-20200412141644833"></p><p>☆ 基于Windows资源管理器的访问</p><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412142019101.png" alt="image-20200412142019101"></p><p>☆ 基于FlashFxp、FileZilla软件</p><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412142522460.png" alt="image-20200412142522460"></p><p>☆ 基于ftp以及lftp命令进行连接（Linux与Linux之间的FTP文件传输）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> yum install ftp lftp <span class="literal">-y</span></span><br><span class="line"><span class="comment"># ftp 10.1.1.10</span></span><br></pre></td></tr></table></figure><h2 id="5、FTP的配置文件详解（重要）"><a href="#5、FTP的配置文件详解（重要）" class="headerlink" title="5、FTP的配置文件详解（重要）"></a>5、FTP的配置文件详解（重要）</h2><p>在Server服务器端，使用rpm  -ql  vsftpd</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ql vsftpd</span></span><br><span class="line">/usr/lib/systemd/system/vsftpd.service启动脚本</span><br><span class="line">/etc/vsftpd配置文件的目录</span><br><span class="line">/etc/vsftpd/ftpusers    用户列表文件，黑名单</span><br><span class="line">/etc/vsftpd/user_list    用户列表文件，可黑可白（默认是黑名单）</span><br><span class="line">/etc/vsftpd/vsftpd.conf配置文件(主配置文件)</span><br><span class="line">/usr/sbin/vsftpd程序本身（二进制的命令）</span><br><span class="line">/var/ftp匿名用户的默认数据根目录</span><br><span class="line">/var/ftp/pub匿名用户的扩展数据目录</span><br></pre></td></tr></table></figure><p>vsftpd配置文件详解：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep -v ^# /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">anonymous_enable=YES支持匿名用户访问</span><br><span class="line">local_enable=YES支持非匿名用户,普通账号登录，默认进入到自己家目录</span><br><span class="line">write_enable=YES写总开关</span><br><span class="line">local_umask=<span class="number">022</span>反掩码  file:<span class="number">644</span>  rw- <span class="built_in">r</span><span class="literal">--</span> <span class="built_in">r</span><span class="literal">--</span> <span class="built_in">dir</span>:<span class="number">755</span></span><br><span class="line">dirmessage_enable=YES启用消息功能</span><br><span class="line">xferlog_enable=YES开启或启用xferlog日志</span><br><span class="line">connect_from_port_20=YES支持主动模式（默认被动模式）</span><br><span class="line">xferlog_std_format=YESxferlog日志格式</span><br><span class="line">listen=YES    ftp服务独立模式下的监听</span><br><span class="line"></span><br><span class="line">pam_service_name=vsftpd指定认证文件</span><br><span class="line">userlist_enable=YES启用用户列表</span><br><span class="line">tcp_wrappers=YES支持tcp_wrappers功能(FTP限速操作)</span><br></pre></td></tr></table></figure><blockquote><p># man  5  vsftpd.conf </p></blockquote><h1 id="三、FTP任务解决方案"><a href="#三、FTP任务解决方案" class="headerlink" title="三、FTP任务解决方案"></a>三、FTP任务解决方案</h1><h2 id="1、任务背景"><a href="#1、任务背景" class="headerlink" title="1、任务背景"></a>1、任务背景</h2><p>简单来说：根据我们所学的内容（FTP）搭建一个客户服务系统（主要涉及客服资料上传与下载）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 客服人员必须使用用户名密码(kefu/<span class="number">123</span>)的方式登录服务器来下载相应文档</span><br><span class="line"><span class="number">2</span>. 不允许匿名用户访问</span><br><span class="line"><span class="number">3</span>. 客服部门的相关文档保存在指定的目录里/<span class="keyword">data</span>/kefu    local_root=/<span class="keyword">data</span>/kefu</span><br><span class="line"><span class="number">4</span>. 客服用户使用用户kefu/<span class="number">123</span>登录后就只能在默认的/<span class="keyword">data</span>/kefu目录里活动</span><br></pre></td></tr></table></figure><h2 id="2、创建客服账号-Server"><a href="#2、创建客服账号-Server" class="headerlink" title="2、创建客服账号(Server)"></a>2、创建客服账号(Server)</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd kefu</span></span><br><span class="line"><span class="comment"># echo 123 |passwd --stdin kefu</span></span><br></pre></td></tr></table></figure><h2 id="3、不允许匿名用户访问"><a href="#3、不允许匿名用户访问" class="headerlink" title="3、不允许匿名用户访问"></a>3、不允许匿名用户访问</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"><span class="number">12</span>行 anonymous_enable=NO</span><br></pre></td></tr></table></figure><p>配置修改完毕后，一定要重启vsftpd服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart vsftpd</span></span><br></pre></td></tr></table></figure><h2 id="4、指定账号访问的目录"><a href="#4、指定账号访问的目录" class="headerlink" title="4、指定账号访问的目录"></a>4、指定账号访问的目录</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /data/kefu -p</span></span><br><span class="line"><span class="comment"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"><span class="number">17</span>行 local_root=/<span class="keyword">data</span>/kefu</span><br></pre></td></tr></table></figure><h2 id="5、限定kefu-123只能在-data-kefu目录下活动"><a href="#5、限定kefu-123只能在-data-kefu目录下活动" class="headerlink" title="5、限定kefu&#x2F;123只能在&#x2F;data&#x2F;kefu目录下活动"></a>5、限定kefu&#x2F;123只能在&#x2F;data&#x2F;kefu目录下活动</h2><p>禁锢kefu用户只能在&#x2F;data&#x2F;kefu目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/vsftp/vsftpd.conf</span></span><br><span class="line"><span class="number">18</span>行 chroot_local_user=YES</span><br></pre></td></tr></table></figure><p>配置修改完毕后，一定要重启vsftpd服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart vsftpd</span></span><br></pre></td></tr></table></figure><h1 id="四、经验值"><a href="#四、经验值" class="headerlink" title="四、经验值"></a>四、经验值</h1><h2 id="1、500-OOPS"><a href="#1、500-OOPS" class="headerlink" title="1、500 OOPS"></a>1、500 OOPS</h2><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412171758761.png" alt="image-20200412171758761"></p><p>以上问题主要出现在FTP2.3.5以后的版本中，当然你可以使用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qi vsftpd 查看版本信息</span></span><br></pre></td></tr></table></figure><p>解决方案：</p><p>① 去除写权限（治标不治本）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod a-w /home/dhj</span></span><br></pre></td></tr></table></figure><p>② 核心解决方案，添加一个选项</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"><span class="number">19</span>行 allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure><h2 id="2、无法上传"><a href="#2、无法上传" class="headerlink" title="2、无法上传"></a>2、无法上传</h2><p>之所以无法上传，主要原因在于kefu这个账号对于&#x2F;data&#x2F;kefu文件夹没有w写权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -R -m u:kefu:rwx /data/kefu</span></span><br><span class="line"><span class="comment"># systemctl restart vsftpd</span></span><br></pre></td></tr></table></figure><h2 id="3、禁锢目录补充"><a href="#3、禁锢目录补充" class="headerlink" title="3、禁锢目录补充"></a>3、禁锢目录补充</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">18</span>行 chroot_local_user=YES  禁锢所有用户</span><br></pre></td></tr></table></figure><p>需求：我们能不能给一小部分用户开通非禁锢权限。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"><span class="number">105</span>行 chroot_list_enable=YES    开启用户列表文件</span><br><span class="line"><span class="number">107</span>行 chroot_list_file=/etc/vsftpd/chroot_list指定用户列表文件</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> kefu &gt;&gt; /etc/vsftpd/chroot_list        代表客服这个账号不会被禁锢在指定目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart vsftpd</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统下数据同步服务RSYNC</title>
      <link href="/posts/4370.html"/>
      <url>/posts/4370.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统下数据同步服务RSYNC"><a href="#Linux系统下数据同步服务RSYNC" class="headerlink" title="Linux系统下数据同步服务RSYNC"></a>Linux系统下数据同步服务RSYNC</h1><h1 id="一、RSYNC概述"><a href="#一、RSYNC概述" class="headerlink" title="一、RSYNC概述"></a>一、RSYNC概述</h1><h2 id="1、什么是rsync"><a href="#1、什么是rsync" class="headerlink" title="1、什么是rsync"></a>1、什么是rsync</h2><p>rsync的好姐妹</p><ul><li>sync 同步：刷新文件系统缓存，强制将修改过的数据块写入磁盘，并且更新超级块。</li><li>async 异步：将数据先放到缓冲区，再周期性（一般是30s）的去同步到磁盘。</li><li>rsync 远程同步：&#x3D;&#x3D;remote  synchronous&#x3D;&#x3D;</li></ul><p>数据同步过程</p><p>sync数据同步 &#x3D;&gt; 保存文件（目标）&#x3D;&gt; 强制把缓存中的数据写入磁盘（立即保存），实时性要求比较高的场景</p><p>asyn数据异步 &#x3D;&gt; 保存文件（目标）&#x3D;&gt; 将数据先放到缓冲区，再周期性（一般是30s）的去同步到磁盘，适合大批量数据同步的场景</p><h2 id="2、rsync特点"><a href="#2、rsync特点" class="headerlink" title="2、rsync特点"></a>2、rsync特点</h2><ul><li><p>可以镜像保存整个目录树和文件系统</p></li><li><p>可以保留原有的权限(permission,mode)，owner,group,时间(修改时间,modify time)，软硬链接，文件acl，文件属性(attributes)信息等</p></li><li><p>传输&#x3D;&#x3D;效率高&#x3D;&#x3D;，使用同步算法，只比较变化的（增量备份）</p><p>file1.txt file2.txt file3.txt(A服务器)</p><p>rsync实现数据同步&#x3D;&gt;  只同步file3.txt &#x3D;&gt; 增量备份</p><p>file1.txt file2.txt(B服务器)</p></li><li><p>支持匿名传输，方便网站镜像；也可以做验证，加强安全</p></li></ul><h2 id="3、rsync与scp的区别"><a href="#3、rsync与scp的区别" class="headerlink" title="3、rsync与scp的区别"></a>3、rsync与scp的区别</h2><p>两者都可以实现远程同步，但是相对比而言，rsync能力更强</p><p>① 支持增量备份<br>② 数据同步时保持文件的原有属性</p><h1 id="二、RSYNC的使用"><a href="#二、RSYNC的使用" class="headerlink" title="二、RSYNC的使用"></a>二、RSYNC的使用</h1><h2 id="1、基本语法"><a href="#1、基本语法" class="headerlink" title="1、基本语法"></a>1、基本语法</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man rsync</span></span><br><span class="line">NAME</span><br><span class="line">       rsync — a fast, versatile, remote (and local) file<span class="literal">-copying</span> tool</span><br><span class="line">       //一种快速、通用、远程（和本地）的文件复制工具</span><br><span class="line">SYNOPSIS</span><br><span class="line">   //本地文件同步</span><br><span class="line">   Local:rsync [<span class="type">OPTION...</span>] SRC... [<span class="type">DEST</span>]</span><br><span class="line">   //远程文件同步</span><br><span class="line">       Access via remote shell:</span><br><span class="line">         Pull: rsync [<span class="type">OPTION...</span>] [<span class="type">USER</span><span class="selector-tag">@</span>]HOST:SRC... [<span class="type">DEST</span>]</span><br><span class="line">         Push: rsync [<span class="type">OPTION...</span>] SRC... [<span class="type">USER</span><span class="selector-tag">@</span>]HOST:DEST        </span><br><span class="line">OPTION选项说明</span><br><span class="line"><span class="literal">-v</span>    详细模式输出</span><br><span class="line"><span class="literal">-a</span>    归档模式，递归的方式传输文件，并保持文件的属性，equals <span class="literal">-rlptgoD</span></span><br><span class="line"><span class="literal">-r</span>    递归拷贝目录</span><br><span class="line"><span class="literal">-l</span>保留软链接</span><br><span class="line"><span class="literal">-p</span>    保留原有权限</span><br><span class="line"><span class="literal">-t</span>     保留原有时间（修改）</span><br><span class="line"><span class="literal">-g</span>    保留属组权限</span><br><span class="line"><span class="literal">-o</span>     保留属主权限</span><br><span class="line"><span class="literal">-D</span>    等于<span class="literal">--devices</span>  <span class="literal">--specials</span>    表示支持b,c,s,p类型的文件</span><br><span class="line"><span class="literal">-R</span>    保留相对路径</span><br><span class="line"><span class="literal">-H</span>    保留硬链接</span><br><span class="line"><span class="literal">-A</span>    保留ACL策略</span><br><span class="line"><span class="literal">-e</span>     指定要执行的远程shell命令，ssh更改端口常用选项</span><br><span class="line"><span class="literal">-E</span>     保留可执行权限</span><br><span class="line"><span class="literal">-X</span>     保留扩展属性信息  a属性</span><br></pre></td></tr></table></figure><blockquote><p>PUSH：推，相当于上传；PULL：拉，相当于下载</p></blockquote><h2 id="2、本地文件同步"><a href="#2、本地文件同步" class="headerlink" title="2、本地文件同步"></a>2、本地文件同步</h2><p>本地文件同步简单理解就是把文件从一个位置（同步&#x3D;&gt;拷贝）到另外一个位置（类似cp）</p><p>案例：&#x2F;dir1、&#x2F;dir2与&#x2F;dir3，&#x2F;dir1中创建三个文件file1、file2、file3，使用rsync本地同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /dir1</span></span><br><span class="line"><span class="comment"># mkdir /dir2</span></span><br><span class="line"><span class="comment"># mkdir /dir3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># touch /dir1/file&#123;1..3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rsync -av /dir1/ /dir2=&gt;   把/dir1目录中的所有文件拷贝到/dir2目录中</span></span><br><span class="line"><span class="comment"># rsync -av /dir1 /dir3=&gt;   把/dir1目录整体同步到/dir3目录中</span></span><br></pre></td></tr></table></figure><p>案例：rsync -R选项的应用（保留相对路径）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -avR /dir1/ /dir2</span></span><br></pre></td></tr></table></figure><p>案例：rsync –delete（删除目标目录里多余的文件）</p><p>&#x2F;dir1    &#x3D;&#x3D;&#x3D;  &#x2F;dir2</p><p>file1、file2 file1、file2、file3</p><p>rsync –delete同步后，会自动删除file3文件。（让dir1与dir2目录中的文件高度一致）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av --delete /dir1/ /dir2</span></span><br></pre></td></tr></table></figure><h2 id="3、远程文件同步"><a href="#3、远程文件同步" class="headerlink" title="3、远程文件同步"></a>3、远程文件同步</h2><p>Push：上传文件到远程服务器端</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av 本地文件或目录 远程用户名@远程服务器的IP地址:目标路径</span></span><br></pre></td></tr></table></figure><p>案例：把linux.txt文档传输到远程服务器端（10.1.1.100）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av linux.txt </span></span><br></pre></td></tr></table></figure><p>案例：把shop文件夹传输到远程服务器端（10.1.1.100）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av shop root@10.1.1.100:/root</span></span><br></pre></td></tr></table></figure><p>Pull：下载文件到本地服务器端</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av 远程用户名@远程服务器的IP:目标文件或目录 本地存储位置</span></span><br></pre></td></tr></table></figure><p>案例：把远程服务器（10.1.1.100）的&#x2F;etc&#x2F;hosts文件下载到本地</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av root@10.1.1.100:/etc/hosts ./</span></span><br></pre></td></tr></table></figure><p>案例：把远程服务器（10.1.1.100）的&#x2F;shop文件夹下载到本地</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av root@10.1.1.100:/shop ./</span></span><br></pre></td></tr></table></figure><p><strong>思考：</strong></p><p>问题1：rsync远程同步数据时，默认情况下为什么需要密码？如果不想要密码同步怎么实现？</p><p>rsync在远程同步时，之所以要输入密码的主要原因在于其底层还是基于SSH服务的。SSH有两种认证方式，如果没有配置免密则默认使用用户名+密码的认证方式。</p><p>不想要密码同步，可以考虑使用SSH免密操作。</p><p>Code &#x3D;&gt; Backup</p><p>Code：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen -t rsa -P &quot;&quot;</span></span><br><span class="line"><span class="comment"># ssh-copy-id root@10.1.1.100</span></span><br></pre></td></tr></table></figure><p>问题2：如果Backup服务器端更改了SSH的默认密码，那这个数据该如何？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  rsync -e &quot;ssh -p 10086&quot; -av rsync.txt root@10.1.1.100:/root</span></span><br></pre></td></tr></table></figure><h2 id="4、rsync作为系统服务"><a href="#4、rsync作为系统服务" class="headerlink" title="4、rsync作为系统服务"></a>4、rsync作为系统服务</h2><p>默认情况下，rsync只是作为一个命令来进行使用的（ps在查询进程时，找不到对应的服务），但是rsync提供了一种作为系统服务的实现方式。</p><p>Linux系统服务的思路：</p><p>对外提供服务——&gt;端口监听——&gt;&#x3D;&#x3D;启动服务&#x3D;&#x3D;——&gt;启动脚本——&gt;配置文件</p><p>第一步：启动rsyncd服务（CentOS6中没有，CentOS7中有这个服务）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start rsyncd</span></span><br></pre></td></tr></table></figure><p>如果企业中使用到操作系统为CentOS6版本，则没有启动脚本。必须求帮助：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man rsync</span></span><br><span class="line"><span class="comment"># rsync --help</span></span><br><span class="line">Use <span class="string">&quot;rsync --daemon --help&quot;</span> to see the daemon<span class="literal">-mode</span> command<span class="literal">-line</span> options.</span><br><span class="line"></span><br><span class="line">CentOS6：rsync作为系统服务</span><br><span class="line"><span class="comment"># touch /etc/rsyncd.conf</span></span><br><span class="line"><span class="comment"># rsync --daemon</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ps -ef|grep rsync</span></span><br><span class="line"><span class="comment"># netstat -tunlp |grep rsync=&gt;  -t tcp  -u udp</span></span><br></pre></td></tr></table></figure><blockquote><p>注：如果rsync作为系统服务单独运行，则其底层就不需要SSH服务了！</p></blockquote><p>第二步：rsyncd服务的配置文件&#x2F;etc&#x2F;rsyncd.conf</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man 5 rsyncd.conf</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1RSYNC.assets/image-20200525153441596.png" alt="image-20200525153441596"></p><h1 id="三、任务解决方案-重点"><a href="#三、任务解决方案-重点" class="headerlink" title="三、任务解决方案(重点)"></a>三、任务解决方案(重点)</h1><h2 id="1、环境准备"><a href="#1、环境准备" class="headerlink" title="1、环境准备"></a>1、环境准备</h2><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1RSYNC.assets/image-20200525111900826.png" alt="image-20200525111900826"></p><table><thead><tr><th>编号</th><th>IP地址</th><th>主机名称</th><th>角色</th></tr></thead><tbody><tr><td>1</td><td>10.1.1.10</td><td>code.itcast.cn</td><td>Code（MIS）</td></tr><tr><td>2</td><td>10.1.1.100</td><td>backup.itcast.cn</td><td>Backup（Backup）</td></tr></tbody></table><p>第一步：关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>第二步：更改主机名称</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname code.itcast.cn</span></span><br><span class="line"><span class="comment"># hostnamectl set-hostname backup.itcast.cn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># su</span></span><br></pre></td></tr></table></figure><p>第三步：更改IP地址（静态IP）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line"><span class="built_in">TYPE</span>=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">DNS1=<span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">DNS2=<span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">UUID=<span class="string">&quot;a5bb176c-c05c-4bdb-8975-a4aafa2fc90u&quot;</span>=&gt;    更改UUID的后<span class="number">3</span>位</span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line"><span class="built_in">TYPE</span>=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.100</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">DNS1=<span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">DNS2=<span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">UUID=<span class="string">&quot;a5bb176c-c05c-4bdb-8975-a4aafa2fc56y&quot;</span>=&gt;    更改UUID的后<span class="number">3</span>位</span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><p>第四步：关闭NetworkManager</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line"><span class="comment"># systemctl disable NetworkManager</span></span><br></pre></td></tr></table></figure><p>第五步：配置YUM源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">略</span><br></pre></td></tr></table></figure><p>第六步：时间同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate cn.ntp.org.cn</span></span><br></pre></td></tr></table></figure><h2 id="2、任务解决方案"><a href="#2、任务解决方案" class="headerlink" title="2、任务解决方案"></a>2、任务解决方案</h2><p>&#x3D;&#x3D;Code：10.1.1.10服务器&#x3D;&#x3D;</p><p>第一步：准备代码文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /app/java_project -p</span></span><br><span class="line"><span class="comment"># mkdir /app/java_project/aa&#123;1..3&#125;</span></span><br><span class="line"><span class="comment"># touch /app/java_project/file&#123;1..9&#125;.java</span></span><br></pre></td></tr></table></figure><p>第二步：把rsync作为系统服务运行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/rsyncd.conf</span></span><br><span class="line">[<span class="type">app</span>]</span><br><span class="line">path=/app/java_project</span><br><span class="line">log file=/var/log/rsync.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl start rsyncd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ps -ef |grep rsync</span></span><br><span class="line"><span class="comment"># netstat -tnlp |grep rsync</span></span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;Backup：10.1.1.100&#x3D;&#x3D;</p><p>第三步：创建备份目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /backup/app1_java -p</span></span><br></pre></td></tr></table></figure><p>第四步：测试rsync是否可以连接到rsync服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -a root@10.1.1.10::</span></span><br><span class="line">app</span><br><span class="line"><span class="literal">-a</span>：获取rsync服务对应的同步目录标签</span><br></pre></td></tr></table></figure><p>下载文件到本地</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av root@10.1.1.10::app /backup/app1_java</span></span><br></pre></td></tr></table></figure><p>第五步：编写计划任务 + Shell的脚本文件，自动实现代码备份</p><p>① 编写计划任务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> * * * /root/rsync_java.sh </span><br></pre></td></tr></table></figure><p>② 编写rsync_java.sh脚本程序</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim rsync_java.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">rsync <span class="literal">-av</span> root@<span class="number">10.1</span>.<span class="number">1.10</span>::app /backup/app1_java &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod +x rsync_java.sh</span></span><br></pre></td></tr></table></figure><h2 id="3、任务总结"><a href="#3、任务总结" class="headerlink" title="3、任务总结"></a>3、任务总结</h2><p>Code代码服务器 &#x3D;&gt; 10.1.1.10&#x2F;app&#x2F;java_project</p><p>Backup备份服务器 &#x3D;&gt; 10.1.1.100</p><p>Code：</p><p>① 准备代码</p><p>② 编写&#x2F;etc&#x2F;rsyncd.conf文件，定义同步代码目录</p><p>③ 启动rsyncd服务</p><p>Backup：</p><p>① 测试rsync是否可以连接到Code服务器上的rsyncd服务</p><p>② 创建备份目录</p><p>③ 编写计划任务，凌晨1点03去Code服务器同步代码</p><p>④ 编写rsync_java.sh文件，实现同步操作</p><h1 id="四、RSYNC课程扩展"><a href="#四、RSYNC课程扩展" class="headerlink" title="四、RSYNC课程扩展"></a>四、RSYNC课程扩展</h1><h2 id="1、给RSYNC服务添加密码"><a href="#1、给RSYNC服务添加密码" class="headerlink" title="1、给RSYNC服务添加密码"></a>1、给RSYNC服务添加密码</h2><p>Code服务器：</p><p>① 打开&#x2F;etc&#x2F;rsyncd.conf配置文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/rsyncd.conf</span></span><br><span class="line">[<span class="type">app</span>]</span><br><span class="line">path=/app/java_project</span><br><span class="line">log file=/var/log/rsync.log</span><br><span class="line">auth users = user1,user2=&gt;   用户名</span><br><span class="line">secrets file = /etc/rsyncd.secrets=&gt;   密码文件</span><br></pre></td></tr></table></figure><p>② 在&#x2F;etc目录下创建rsyncd.secrets文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/rsyncd.secrets</span></span><br><span class="line">user1:<span class="number">123</span> =&gt;   设置密码，用户名:密码</span><br><span class="line">user2:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>③ 更改密码文件权限为600</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod 600 /etc/rsyncd.secrets </span></span><br></pre></td></tr></table></figure><p>④ 重启rsyncd服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart rsyncd</span></span><br></pre></td></tr></table></figure><p>Backup备份服务器：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av user1@10.1.1.10::app ./</span></span><br><span class="line">Password:<span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="2、RSYNC集合INOTIFY工具实现代码实时同步-重点"><a href="#2、RSYNC集合INOTIFY工具实现代码实时同步-重点" class="headerlink" title="2、RSYNC集合INOTIFY工具实现代码实时同步(重点)"></a>2、RSYNC集合INOTIFY工具实现代码实时同步(重点)</h2><p>第一步：在Code服务器端安装inotify-tools工具（监控器）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xf inotify-tools-3.13.tar.gz -C /usr/local/</span></span><br><span class="line"><span class="comment"># cd /usr/local/inotify-tools-3.14</span></span><br><span class="line"><span class="comment"># ./configure</span></span><br><span class="line"><span class="comment"># make </span></span><br><span class="line"><span class="comment"># make install</span></span><br><span class="line"></span><br><span class="line">安装完后，就会产生下面两个命令</span><br><span class="line">/usr/local/bin/inotifywait      等待</span><br><span class="line">/usr/local/bin/inotifywatch     看守</span><br><span class="line"></span><br><span class="line">/usr/local/bin/inotifywait</span><br><span class="line"><span class="literal">-m</span> : 一直监控某个目录，create、delete、modify等行为</span><br><span class="line"><span class="literal">-r</span> : 递归，不仅仅监控目录还要监控目录下的文件</span><br><span class="line"><span class="literal">-q</span> : 获取操作信息，但是不输出</span><br><span class="line"></span><br><span class="line"><span class="literal">-e</span> : 哪些行为需要被监控，modify,delete,create,attrib,<span class="built_in">move</span></span><br><span class="line">modify: 文件被修改</span><br><span class="line">delete: 文件被删除</span><br><span class="line">create: 文件被创建</span><br><span class="line">attrib: 文件属性被修改</span><br><span class="line"><span class="built_in">move</span>: 文件被移动</span><br></pre></td></tr></table></figure><p>第二步：编写inotify.sh</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim inotify.sh</span></span><br><span class="line">/usr/local/bin/inotifywait <span class="literal">-mrq</span> <span class="literal">-e</span> modify,delete,create,attrib,<span class="built_in">move</span> /app/java_project |<span class="keyword">while</span> read events</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">rsync <span class="literal">-av</span> <span class="literal">--delete</span> /app/java_project/ root@<span class="number">10.1</span>.<span class="number">1.100</span>:/backup/app1_java</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;`date +%F\ %T`出现事件<span class="variable">$events</span>&quot;</span> &gt;&gt; /var/log/rsync.log <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">我对/app/java_project做了两件事</span><br><span class="line">① 在目录下创建了一个file9.java=&gt;   create</span><br><span class="line">② 在目录下删除了一个file5.java=&gt;   delete</span><br><span class="line">create,delete =&gt; <span class="keyword">while</span> =&gt; 执行两次</span><br><span class="line">create</span><br><span class="line">rsync数据同步</span><br><span class="line">delete</span><br><span class="line">rsync数据同步</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;usr&#x2F;local&#x2F;bin&#x2F;inotifywait -mrq -e modify,delete,create,attrib,move</p></blockquote><p>第三步：添加可执行权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod +x inotify.sh</span></span><br></pre></td></tr></table></figure><p>第四步：让inotify.sh文件一直执行下去</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nohup ./inotify.sh  &amp;</span></span><br><span class="line">&amp; : 让inotify.sh在计算机后台运行，可以使用jobs命令查看，<span class="built_in">kill</span> %编号结束，当我们退出终端时，这个执行会自动结束</span><br><span class="line">nohup : 让程序一直在后台运行，即使我们关闭了终端</span><br></pre></td></tr></table></figure><p>扩展：如何查看rsync.log日志文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /var/log/rsync.log</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程管理SSH服务</title>
      <link href="/posts/2312.html"/>
      <url>/posts/2312.html</url>
      
        <content type="html"><![CDATA[<h1 id="远程管理SSH服务"><a href="#远程管理SSH服务" class="headerlink" title="远程管理SSH服务"></a>远程管理SSH服务</h1><h1 id="一、搭建SSH服务"><a href="#一、搭建SSH服务" class="headerlink" title="一、搭建SSH服务"></a>一、搭建SSH服务</h1><h2 id="1、关闭防火墙与SELinux"><a href="#1、关闭防火墙与SELinux" class="headerlink" title="1、关闭防火墙与SELinux"></a>1、关闭防火墙与SELinux</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭firewalld防火墙</span></span><br><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="comment"># 关闭开机自启动</span></span><br><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭selinux</span></span><br><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">setenforce <span class="number">0</span></span><br><span class="line"><span class="comment"># 修改配置文件  永久关闭</span></span><br><span class="line">vim /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h2 id="2、配置yum源"><a href="#2、配置yum源" class="headerlink" title="2、配置yum源"></a>2、配置yum源</h2><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524092213836.png" alt="image-20200524092213836"></p><p>JumpServer配置外网YUM源 &#x3D;&gt; 阿里云</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span></span><br><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><p>RealServer配置本地YUM源 &#x3D;&gt; 把光盘镜像作为仓库（自建YUM仓库）</p><p>① 挂载光盘</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /mnt/cdrom</span></span><br><span class="line"><span class="comment"># mount -o ro /dev/sr0 /mnt/cdrom</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod +x /etc/rc.local</span></span><br><span class="line"><span class="comment"># echo &#x27;mount -o ro /dev/sr0 /mnt/cdrom&#x27; &gt;&gt; /etc/rc.local</span></span><br></pre></td></tr></table></figure><p>② 编写local.repo文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/yum.repos.d</span></span><br><span class="line"><span class="comment"># vim local.repo</span></span><br><span class="line">[<span class="type">local</span>]</span><br><span class="line">name=local yum</span><br><span class="line">baseurl=file:///mnt/cdrom</span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="3、openssh软件的安装"><a href="#3、openssh软件的安装" class="headerlink" title="3、openssh软件的安装"></a>3、openssh软件的安装</h2><p>SSH服务底层的软件名称叫做openssh，open开源，ssh就是ssh服务。openssh属于C&#x2F;S架构软件，其拥有客户端与服务器端。</p><p>客户端：ssh</p><p>服务端：openssh-server</p><p>安装步骤：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install openssh -y</span></span><br></pre></td></tr></table></figure><p>检查openssh是否安装成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa |grep openssh</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># yum list installed |grep openssh</span></span><br></pre></td></tr></table></figure><p>获取openssh生成的文件列表</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ql openssh-server</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">/etc/ssh/sshd_config    =&gt;      ssh服务的主配置文件</span><br><span class="line">/etc/sysconfig/sshd</span><br><span class="line"><span class="comment"># 服务管理脚本</span></span><br><span class="line">/usr/lib/systemd/system/sshd.service=&gt;      systemctl <span class="built_in">start</span> sshd</span><br><span class="line"><span class="comment"># 文件共享服务 提供文件上传下载的服务</span></span><br><span class="line">/usr/libexec/openssh/sftp<span class="literal">-server</span></span><br><span class="line"><span class="comment"># 二进制文件程序文件</span></span><br><span class="line">/usr/sbin/sshd</span><br><span class="line"><span class="comment"># 公钥生成工具</span></span><br><span class="line">/usr/sbin/sshd<span class="literal">-keygen</span></span><br><span class="line"><span class="comment"># man手册</span></span><br><span class="line">/usr/share/<span class="built_in">man</span>/man5/sshd_config.<span class="number">5</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man8/sftp<span class="literal">-server</span>.<span class="number">8</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man8/sshd.<span class="number">8</span>.gz</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ql openssh-clients</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端配置文件</span></span><br><span class="line">/etc/ssh/ssh_config</span><br><span class="line"><span class="comment"># 远程copy命令 服务器间进行文件传输</span></span><br><span class="line">/usr/bin/scp</span><br><span class="line"><span class="comment"># sftp客户端  上传下载文件操作</span></span><br><span class="line">/usr/bin/sftp</span><br><span class="line">/usr/bin/slogin</span><br><span class="line">/usr/bin/ssh</span><br><span class="line">/usr/bin/ssh<span class="literal">-add</span></span><br><span class="line">/usr/bin/ssh<span class="literal">-agent</span></span><br><span class="line">/usr/bin/ssh<span class="literal">-copy-id</span></span><br><span class="line">/usr/bin/ssh<span class="literal">-keyscan</span></span><br><span class="line"><span class="comment"># 客户端man手册</span></span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/scp.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/sftp.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/slogin.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/ssh<span class="literal">-add</span>.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/ssh<span class="literal">-agent</span>.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/ssh<span class="literal">-copy-id</span>.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/ssh<span class="literal">-keyscan</span>.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/ssh.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man5/ssh_config.<span class="number">5</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man8/ssh<span class="literal">-pkcs11-helper</span>.<span class="number">8</span>.gz</span><br></pre></td></tr></table></figure><h2 id="4、查看并修改ssh服务端的配置文件"><a href="#4、查看并修改ssh服务端的配置文件" class="headerlink" title="4、查看并修改ssh服务端的配置文件"></a>4、查看并修改ssh服务端的配置文件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man 5 sshd_config</span></span><br></pre></td></tr></table></figure><p>RealServer：禁止root账号远程登录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man 5 sshd_config</span></span><br><span class="line">PermitRootLogin=&gt; yes or no，默认为yes 代表允许通过root账号远程登录此服务器</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config</span></span><br><span class="line"><span class="number">38</span>行 PermitRootLogin no</span><br></pre></td></tr></table></figure><h2 id="5、sshd服务管理"><a href="#5、sshd服务管理" class="headerlink" title="5、sshd服务管理"></a>5、sshd服务管理</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart sshd=&gt;   重启</span></span><br><span class="line"><span class="comment"># systemctl status sshd=&gt;  状态</span></span><br><span class="line"><span class="comment"># systemctl stop sshd=&gt;   停止</span></span><br><span class="line"><span class="comment"># systemctl start sshd=&gt;   启动</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl enable sshd=&gt; 开机自启动</span></span><br><span class="line"><span class="comment"># systemctl disable sshd=&gt;  开机不自启</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ps -ef |grep sshd=&gt; 进程</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># netstat -tnlp |grep sshd=&gt;  端口</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># ss -naltp |grep sshd</span></span><br></pre></td></tr></table></figure><h1 id="二、SSH服务任务解决方案"><a href="#二、SSH服务任务解决方案" class="headerlink" title="二、SSH服务任务解决方案"></a>二、SSH服务任务解决方案</h1><h2 id="1、创建用户并授权"><a href="#1、创建用户并授权" class="headerlink" title="1、创建用户并授权"></a>1、创建用户并授权</h2><p>JumpServer跳板机创建用户并授权</p><p>第一步：创建用户与用户组（html前端组，tom与jerry）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建html前端组</span></span><br><span class="line"><span class="comment"># groupadd html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建组内用户tom与jerry</span></span><br><span class="line"><span class="comment"># useradd -g html tom</span></span><br><span class="line"><span class="comment"># useradd -g html jerry</span></span><br></pre></td></tr></table></figure><p>第二步：为用户添加密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo 123456 |passwd --stdin tom</span></span><br><span class="line"><span class="comment"># echo 123456 |passwd --stdin jerry</span></span><br></pre></td></tr></table></figure><p>第三步：为开发人员创建数据目录并且设置相应的权限</p><p>① 创建用户的数据目录：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /code/html=&gt;    前端组</span></span><br><span class="line"><span class="comment"># ll -d /code/html</span></span><br><span class="line">drwxr<span class="literal">-xr-x</span>. <span class="number">2</span> root root <span class="number">6</span> May <span class="number">24</span> <span class="number">10</span>:<span class="number">36</span> /code/html</span><br></pre></td></tr></table></figure><p>② 更改目录的文件所属组（更改为html，代表html组内成员可以对这个目录进行管理）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chgrp -R html /code/html</span></span><br><span class="line">drwxr<span class="literal">-xr-x</span>. <span class="number">2</span> root html <span class="number">6</span> May <span class="number">24</span> <span class="number">10</span>:<span class="number">36</span> /code/html</span><br><span class="line"><span class="comment"># chmod -R g+w /code/html</span></span><br><span class="line">drwxrwxr<span class="literal">-x</span>. <span class="number">2</span> root html <span class="number">6</span> May <span class="number">24</span> <span class="number">10</span>:<span class="number">36</span> /code/html</span><br></pre></td></tr></table></figure><p>③ 添加粘滞位权限，防止误删除操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod 1770 /code/html</span></span><br><span class="line">drwxrwx<span class="literal">--T</span>. <span class="number">2</span> root html <span class="number">6</span> May <span class="number">24</span> <span class="number">10</span>:<span class="number">36</span> /code/html</span><br></pre></td></tr></table></figure><h2 id="2、测试用户权限"><a href="#2、测试用户权限" class="headerlink" title="2、测试用户权限"></a>2、测试用户权限</h2><p>测试用户权限是否设置成功，可以结合第1步一起完成</p><h2 id="3、禁用root登录"><a href="#3、禁用root登录" class="headerlink" title="3、禁用root登录"></a>3、禁用root登录</h2><p>RealServer服务器端：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config</span></span><br><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure><h2 id="4、更改SSH默认端口"><a href="#4、更改SSH默认端口" class="headerlink" title="4、更改SSH默认端口"></a>4、更改SSH默认端口</h2><p>RealServer服务器端：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config</span></span><br><span class="line"><span class="number">17</span>行 Port <span class="number">3712</span></span><br></pre></td></tr></table></figure><h2 id="5、重启SSH服务"><a href="#5、重启SSH服务" class="headerlink" title="5、重启SSH服务"></a>5、重启SSH服务</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart sshd</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># systemctl reload sshd</span></span><br></pre></td></tr></table></figure><p>restart与reload的本质区别：</p><p>① restart其实相当于stop然后在start</p><p>② reload不停止现有业务，只是重新加载sshd对应的配置文件</p><h2 id="6、在RealServer创建一个code账号"><a href="#6、在RealServer创建一个code账号" class="headerlink" title="6、在RealServer创建一个code账号"></a>6、在RealServer创建一个code账号</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd code</span></span><br><span class="line"><span class="comment"># echo 123456 |passwd --stdin code</span></span><br></pre></td></tr></table></figure><p>测试：在JumpServer远程连接RealServer</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh -p 3721 code@11.1.1.100</span></span><br></pre></td></tr></table></figure><h2 id="7、SSH客户端不验证指纹"><a href="#7、SSH客户端不验证指纹" class="headerlink" title="7、SSH客户端不验证指纹"></a>7、SSH客户端不验证指纹</h2><p>第一次连接远程服务器时：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">&#x27;11.1.1.100 (11.1.1.100)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:Y/cQNWWkX15o2MsJ5HOQBI2m8S33qIA+x3zys8J4pOY.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:76:61:86:8b:d5:ee:bf:9c:60:e6:12:fa:f6:f0:74:36.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span><span class="number">11.1</span>.<span class="number">1.100</span><span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br></pre></td></tr></table></figure><p>如果我们不想验证指纹，可以通过更改SSH客户端的配置文件</p><p>JumpServer：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/ssh_config</span></span><br><span class="line"><span class="number">35</span>行 StrictHostKeyChecking no</span><br></pre></td></tr></table></figure><h2 id="8、用专业工具pwgen生成用户密码"><a href="#8、用专业工具pwgen生成用户密码" class="headerlink" title="8、用专业工具pwgen生成用户密码"></a>8、用专业工具pwgen生成用户密码</h2><p>在实际生产环境中，其用户密码一定不要手工设置，建议使用专业的密码生成工具如pwgen。</p><p>① 安装随机密码生成工具pwgen</p><p>② 使用pwgen工具生成随机密码</p><p>③ 给账号code设置密码</p><p>第一步：创建code开发者账号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd code</span></span><br></pre></td></tr></table></figure><p>第二步：配置EPEL源，安装pwgen工具</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><p>第三步：安装pwgen密码生成工具</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install pwgen -y</span></span><br></pre></td></tr></table></figure><p>第四步：使用pwgen生成随机密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pwgen -cnBs1 10 1</span></span><br></pre></td></tr></table></figure><p>扩展：pwgen密码生成器的使用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pwgen --help</span></span><br><span class="line"><span class="comment"># 用法: pwgen 选项参数 长度 生成个数</span></span><br><span class="line">Usage: pwgen [ <span class="type">OPTIONS</span> ] [ <span class="type">pw_length</span> ] [ <span class="type">num_pw</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码中至少包含一个大写字母</span></span><br><span class="line"><span class="literal">-c</span> or –capitalize</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码中不包含大写字母</span></span><br><span class="line"><span class="literal">-A</span> or –no<span class="literal">-capitalize</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码中至少包含一个数字</span></span><br><span class="line"><span class="literal">-n</span> or –numerals</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码中不包含数字</span></span><br><span class="line"><span class="literal">-0</span> or –no<span class="literal">-numerals</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码中至少包含一个特殊符号</span></span><br><span class="line"><span class="literal">-y</span> or –symbols</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成完全随机密码</span></span><br><span class="line"><span class="literal">-s</span> or –secure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码中不包含歧义字符（例如1,l,O,0）</span></span><br><span class="line"><span class="literal">-B</span> or –ambiguous</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用SHA1 hash给定的文件作为一个随机种子</span></span><br><span class="line"><span class="literal">-H</span> or –sha1=path/to/file[<span class="comment">#seed]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在列中打印生成的密码</span></span><br><span class="line">-<span class="type">C</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不要在列中打印生成的密码，即一行一个密码</span></span><br><span class="line">-<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不要使用任何元音，以避免偶然的脏话</span></span><br><span class="line">-<span class="type">v</span> <span class="type">or</span> –<span class="type">no</span>-<span class="type">vowels</span></span><br></pre></td></tr></table></figure><h1 id="三、SSH服务补充"><a href="#三、SSH服务补充" class="headerlink" title="三、SSH服务补充"></a>三、SSH服务补充</h1><h2 id="1、scp命令"><a href="#1、scp命令" class="headerlink" title="1、scp命令"></a>1、scp命令</h2><p>主要功能：用于Linux系统与Linux系统之间进行文件的传输（上传、下载）</p><p>上传：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp [选项] 本地文件路径 远程用户名@远程服务器的IP地址:远程文件存储路径</span></span><br><span class="line"><span class="literal">-r</span> : 递归上传，主要针对文件夹</span><br><span class="line"><span class="literal">-P</span> : 更换了SSH服务的默认端口必须使用<span class="literal">-P</span>选项</span><br></pre></td></tr></table></figure><p>下载：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp [选项] 远程用户名@远程服务器的IP地址:远程文件路径 本地文件存储路径</span></span><br><span class="line"><span class="literal">-r</span> : 递归上传，主要针对文件夹</span><br><span class="line"><span class="literal">-P</span> : 更换了SSH服务的默认端口必须使用<span class="literal">-P</span>选项</span><br></pre></td></tr></table></figure><h2 id="2、踢出用户"><a href="#2、踢出用户" class="headerlink" title="2、踢出用户"></a>2、踢出用户</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前在线用户</span></span><br><span class="line">w</span><br><span class="line"><span class="comment"># 踢出某个账号</span></span><br><span class="line">pkill <span class="literal">-kill</span> <span class="literal">-t</span> pts/<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="四、SSH免密登录解决方案"><a href="#四、SSH免密登录解决方案" class="headerlink" title="四、SSH免密登录解决方案"></a>四、SSH免密登录解决方案</h1><h2 id="1、为什么需要免密登录"><a href="#1、为什么需要免密登录" class="headerlink" title="1、为什么需要免密登录"></a>1、为什么需要免密登录</h2><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524154610968.png" alt="image-20200524154610968"></p><h2 id="2、SSH认证原理（基于用户名密码-基于密钥对）"><a href="#2、SSH认证原理（基于用户名密码-基于密钥对）" class="headerlink" title="2、SSH认证原理（基于用户名密码+基于密钥对）"></a>2、SSH认证原理（基于用户名密码+基于密钥对）</h2><p>① 回顾基于用户名密码的认证方式</p><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524155050868.png" alt="image-20200524155050868"></p><p>② 基于密钥对（公钥与私钥）的认证方式 &#x3D;&gt; 免密登录</p><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524155421332.png" alt="image-20200524155421332"></p><p>A主机 &#x3D;&gt; JumpServer，B主机 &#x3D;&gt; RealServer</p><p>第一步：在A主机（JumpServer）生成一个密钥对（公钥和私钥）</p><p>第二步：把A主机的公钥通过网络拷贝到B主机（RealServer）上，然后把其内容追加到B主机的~&#x2F;.ssh&#x2F;authorized_keys</p><p>第三步：由A主机（JumpServer）向B主机（RealServer）发起登录请求，然后直接在B主机上进行公钥比对（判断A主机的公钥是否已经存储在B主机的authorized_keys文件中），如果存在且正确，则生成一个随机的字符串（如itcast），然后使用A主机的公钥对其加密得到加密的后字符串（如dXdh,34njasz!z.）</p><p>第四步：通过网络，由B主机讲刚才生成的加密后的字符串传输给主机A，主机A接收到加密后的字符串以后，使用自己本地存储的私钥进行解密操作（得到itcast）</p><p>第五步：把解密得到的itcast发送到B主机，然后验证与刚才生成的字符串是否一致，如果一致，返回登录成功。反之，则返回登录失败。</p><p>到此免密登录全部完成！</p><h2 id="3、SSH免密登录的具体实现"><a href="#3、SSH免密登录的具体实现" class="headerlink" title="3、SSH免密登录的具体实现"></a>3、SSH免密登录的具体实现</h2><p>SSH免密的实现思路一共分为三个步骤（三步走）</p><p>第一步：在A主机针对某个账号（tom或jerry）生成公钥与私钥</p><p>第二步：使用某些方法把公钥发送到B主机中，然后追加到authorized_keys文件中</p><p>第三步：测试是否实现免密登录</p><h3 id="☆-方法一：比较常用-tom"><a href="#☆-方法一：比较常用-tom" class="headerlink" title="☆ 方法一：比较常用(tom)"></a>☆ 方法一：比较常用(tom)</h3><p>① 在A主机针对某个账号生成公钥与私钥</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524163237742.png" alt="image-20200524163237742"></p><blockquote><p>注：如果不想一路确认，可以在ssh-keygen -P “”，直接生成公私钥</p></blockquote><p>② 使用ssh-copy-id把公钥文件中的内容传输到服务器端的~&#x2F;.ssh&#x2F;authorized_keys文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-copy-id -p 3712 code@11.1.1.100</span></span><br><span class="line">code@<span class="number">11.1</span>.<span class="number">1.100</span><span class="string">&#x27;s password:123456</span></span><br></pre></td></tr></table></figure><p>③ 在JumpServer客户端测试免密登录是否成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh -p 3721 code@11.1.1.100</span></span><br></pre></td></tr></table></figure><h3 id="☆-方法二：集群常用-jerry"><a href="#☆-方法二：集群常用-jerry" class="headerlink" title="☆ 方法二：集群常用(jerry)"></a>☆ 方法二：集群常用(jerry)</h3><p>① 生成公钥与私钥</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen</span></span><br></pre></td></tr></table></figure><p>② 把id_rsa.pub文件，scp到RealServer服务器端</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp -P 3721 ~/.ssh/id_rsa.pub code@11.1.1.100:/home/code/</span></span><br></pre></td></tr></table></figure><p>③ 在RealServer服务器端，把id_rsa.pub文件中的内容追加到~&#x2F;.ssh&#x2F;authorized_keys文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"><span class="comment"># cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><blockquote><p>注意事项：以上配置也比较简单，但是实际应用时要注意文件的权限</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RealServer：</span><br><span class="line">~/.ssh : <span class="number">700</span></span><br><span class="line">~/.ssh/authorized_keys : <span class="number">600</span></span><br></pre></td></tr></table></figure><p>④ 测试免密是否成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh -p 3721 code@11.1.1.100</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下yum源配置实战</title>
      <link href="/posts/17304.html"/>
      <url>/posts/17304.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux下yum源配置实战"><a href="#Linux下yum源配置实战" class="headerlink" title="Linux下yum源配置实战"></a>Linux下yum源配置实战</h1><h1 id="一、Linux下软件包的管理"><a href="#一、Linux下软件包的管理" class="headerlink" title="一、Linux下软件包的管理"></a>一、Linux下软件包的管理</h1><h2 id="1、软件安装方式"><a href="#1、软件安装方式" class="headerlink" title="1、软件安装方式"></a>1、软件安装方式</h2><p>① RPM包管理（需要单独解决依赖问题）</p><p>② YUM包管理（需要有网络及YUM仓库的支持，会自动从互联网下载软件，自动解决依赖）</p><p>③ 源码安装（安装过程比较复杂，源码安装三步走。优点：定制性很强）</p><p>软件：主线版（mainline），稳定版（stable）</p><h2 id="2、源码安装的配置过程"><a href="#2、源码安装的配置过程" class="headerlink" title="2、源码安装的配置过程"></a>2、源码安装的配置过程</h2><p>在Linux系统中，源码安装一共分为三步（三步走）：</p><p>第一步：配置过程（配置软件的安装路径）</p><p>第二步：编译过程（把软件由源代码编译成可以安装的程序）</p><p>第三步：安装过程（把编译后的程序进行安装）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./configure &amp;&amp; make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h2 id="3、详解源码安装的配置过程（定制）"><a href="#3、详解源码安装的配置过程（定制）" class="headerlink" title="3、详解源码安装的配置过程（定制）"></a>3、详解源码安装的配置过程（定制）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd 软件源码包</span></span><br><span class="line"><span class="comment"># ./configure [选项]</span></span><br><span class="line"><span class="comment"># ./configure --help</span></span><br><span class="line"></span><br><span class="line"><span class="literal">--prefix</span>=... Directories to put files <span class="keyword">in</span> /usr/local 软件家目录</span><br><span class="line"><span class="literal">--bindir</span>=... <span class="variable">$prefix</span>/bin 命令的目录</span><br><span class="line"><span class="literal">--etcdir</span>=... <span class="variable">$prefix</span>/etc 配置文件的目录 httpd =&gt; /etc/httpd/httpd.conf</span><br><span class="line"><span class="literal">--mandir</span>=... <span class="variable">$prefix</span>/share/<span class="built_in">man</span> <span class="built_in">man</span>文档路径</span><br><span class="line"><span class="literal">--locale</span>=... <span class="variable">$prefix</span>/share/locale 语言编码</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="4、详解编译过程"><a href="#4、详解编译过程" class="headerlink" title="4、详解编译过程"></a>4、详解编译过程</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make</span></span><br></pre></td></tr></table></figure><blockquote><p>在Linux操作系统中，make主要功能就是将其他语言的源代码打包成Linux可以识别安装的程序。编译过程需要一个gcc软件（开发工具）的支持！</p></blockquote><h2 id="5、安装过程"><a href="#5、安装过程" class="headerlink" title="5、安装过程"></a>5、安装过程</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make install</span></span><br></pre></td></tr></table></figure><h2 id="6、axel多线程下载软件源码安装"><a href="#6、axel多线程下载软件源码安装" class="headerlink" title="6、axel多线程下载软件源码安装"></a>6、axel多线程下载软件源码安装</h2><p>第一步：获取axel多线程下载软件</p><p>第二步：上传axel软件包到Linux系统中</p><p>第三步：安装axel软件(源码安装三步走&#x3D;&gt;配置+编译+安装)</p><p>① 对软件进行解压缩操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zxf axel-2.4.tar.gz</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># tar -xf axel-2.4.tar.gz</span></span><br></pre></td></tr></table></figure><p>② 使用cd命令切换到axel目录中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd axel-2.4</span></span><br></pre></td></tr></table></figure><p>③ 对axel软件进行配置（不采用默认配置）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./configure --help</span></span><br><span class="line">Usage: ./configure [<span class="type">OPTIONS</span>]</span><br><span class="line">Option          Description                             Default</span><br><span class="line"><span class="literal">--prefix</span>=...    Directories to put files <span class="keyword">in</span>             /usr/local</span><br><span class="line"><span class="literal">--bindir</span>=...                                            <span class="variable">$prefix</span>/bin</span><br><span class="line"><span class="literal">--etcdir</span>=...                                            <span class="variable">$prefix</span>/etc</span><br><span class="line"><span class="literal">--mandir</span>=...                                            <span class="variable">$sharedir</span>/<span class="built_in">man</span></span><br><span class="line"><span class="literal">--locale</span>=...                                            <span class="variable">$sharedir</span>/locale</span><br></pre></td></tr></table></figure><p>设置axel软件的安装路径为&#x2F;opt&#x2F;axel</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./configure --prefix=/opt/axel</span></span><br></pre></td></tr></table></figure><p>④ 对axel软件进行编译与安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make</span></span><br><span class="line"><span class="comment"># make install</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">&amp;&amp; ：逻辑与，如果make编译成功会立即执行右边的make install安装程序，如果make编译失败，则以上程序会停止执行，然后抛出错误。</span><br></pre></td></tr></table></figure><p>第四步：测试与使用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">yunwei</span> ~]<span class="comment"># axel http://mirrors.163.com/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line">bash: axel: command not found...</span><br></pre></td></tr></table></figure><p>出现以上问题的主要原因在于：我们没有采用默认的安装方式，所以导致当我们执行axel命令时，其找不到对应的软件。</p><p>第五步：解决命令无法访问问题</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一种方式：采用软链接形式（类似Windows中的快捷方式）</span><br><span class="line">第二种方式：使用环境变量（重要，Linux中的环境变量）</span><br></pre></td></tr></table></figure><h2 id="7、使用软链接解决command-not-found"><a href="#7、使用软链接解决command-not-found" class="headerlink" title="7、使用软链接解决command not found"></a>7、使用软链接解决command not found</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># which axel</span></span><br><span class="line">/usr/bin/which: no axel <span class="keyword">in</span> (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ll /opt/axel/bin</span></span><br><span class="line">axel</span><br><span class="line"></span><br><span class="line">解决方案：给/opt/axel/bin/axel创建一个快捷方式到/usr/local/bin</span><br><span class="line"><span class="comment"># ln -s /opt/axel/bin/axel /usr/local/bin/axel </span></span><br><span class="line"></span><br><span class="line">基本语法：</span><br><span class="line"><span class="comment"># ln -s  源文件路径 软链接路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># axel http://mirrors.163.com/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7</span></span><br></pre></td></tr></table></figure><h2 id="8、使用环境变量解决command-not-found"><a href="#8、使用环境变量解决command-not-found" class="headerlink" title="8、使用环境变量解决command not found"></a>8、使用环境变量解决command not found</h2><p>环境变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">终端 =&gt; 命令 =&gt; 系统的环境变量(PATH =&gt; /etc/profile) =&gt; 一些命令的存放路径</span><br></pre></td></tr></table></figure><p>axel多线程下载软件，通过源码的方式安装成功后，由于没有使用默认的安装路径，导致axel这个命令没有出现在系统的环境变量中，所以其会出现command not found。</p><p>第一步：查询当前系统的环境变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo $PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure><p>第二步：把axel所在目录添加到环境变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">① 使用vim编辑/etc/profile文件，追加到最后一行</span><br><span class="line"><span class="comment"># vim /etc/profile</span></span><br><span class="line">...</span><br><span class="line">export PATH=<span class="variable">$PATH:</span>/opt/axel/bin</span><br><span class="line"><span class="comment"># source /etc/profile=&gt;   代表让以上配置立即生效</span></span><br><span class="line"></span><br><span class="line">② 使用<span class="built_in">echo</span>命令向/etc/profile文件中追加一行</span><br><span class="line"><span class="comment"># echo &#x27;export PATH=$PATH:/opt/axel/bin&#x27; &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><p>第三步：测试axel命令是否可以使用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># axel http://mirrors.163.com/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7</span></span><br></pre></td></tr></table></figure><h2 id="9、解决源码安装软件手册找不到问题"><a href="#9、解决源码安装软件手册找不到问题" class="headerlink" title="9、解决源码安装软件手册找不到问题"></a>9、解决源码安装软件手册找不到问题</h2><p>问题重现：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">axel</span>]<span class="comment"># man axel</span></span><br><span class="line">No manual entry <span class="keyword">for</span> axel</span><br><span class="line">原因：找不到指定的<span class="built_in">man</span>文档</span><br></pre></td></tr></table></figure><p>解决方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">axel</span>]<span class="comment"># vim /etc/man.config</span></span><br><span class="line">...</span><br><span class="line">增加如下内容：</span><br><span class="line">MANPATH /opt/axel/share/<span class="built_in">man</span></span><br></pre></td></tr></table></figure><h2 id="10、卸载源码安装的软件"><a href="#10、卸载源码安装的软件" class="headerlink" title="10、卸载源码安装的软件"></a>10、卸载源码安装的软件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一步：进入到源码的安装包中</span><br><span class="line"><span class="comment"># cd axel-2.4</span></span><br><span class="line"><span class="comment"># make uninstall=&gt;   安装软件的安装包等程序</span></span><br><span class="line"><span class="comment"># make distclean    =&gt;   卸载编译与配置过程</span></span><br><span class="line">第二步：删除软件的目录</span><br><span class="line"><span class="comment"># rm -rf /opt/axel</span></span><br></pre></td></tr></table></figure><h1 id="二、YUM源概述"><a href="#二、YUM源概述" class="headerlink" title="二、YUM源概述"></a>二、YUM源概述</h1><h2 id="1、yum源作用"><a href="#1、yum源作用" class="headerlink" title="1、yum源作用"></a>1、yum源作用</h2><p>&#x3D;&#x3D;软件包管理器&#x3D;&#x3D;，类似360的软件管家</p><p><img src="/../assets/blog_res/Linux%E4%B8%8Byum%E6%BA%90%E9%85%8D%E7%BD%AE%E5%AE%9E%E6%88%98.assets/image-20200405144405069.png" alt="image-20200405144405069"></p><h2 id="2、yum源优点"><a href="#2、yum源优点" class="headerlink" title="2、yum源优点"></a>2、yum源优点</h2><p>RPM安装（下载软件、单独安装、需要解决依赖关系）</p><p>源码安装（下载软件的源码包，解压，进入目录&#x3D;&gt;配置+编译+安装）</p><p>yum源：相当于rpm软件包管理的升级版</p><p>能够&#x3D;&#x3D;解决软件包之间的依赖关系&#x3D;&#x3D;，提高运维人员的工作效率。</p><blockquote><p>yum源底层还是基于RPM进行软件安装操作的，所以yum安装软件后，我们也可以通过rpm  -qa  |grep  软件名称</p></blockquote><h2 id="3、yum源分类"><a href="#3、yum源分类" class="headerlink" title="3、yum源分类"></a>3、yum源分类</h2><h3 id="☆-本地yum源"><a href="#☆-本地yum源" class="headerlink" title="☆ 本地yum源"></a>☆ 本地yum源</h3><p>yum仓库在&#x3D;&#x3D;本地&#x3D;&#x3D;（系统光盘&#x2F;镜像文件） &#x3D;&gt;  不需要网络的支持</p><h3 id="☆-网络yum源"><a href="#☆-网络yum源" class="headerlink" title="☆ 网络yum源"></a>☆ 网络yum源</h3><p>yum仓库不在本地，在&#x3D;&#x3D;远程&#x3D;&#x3D;</p><ul><li><p>国内较知名的网络源（aliyun源，163源，sohu源，知名大学开源镜像等）</p><p>​阿里源：<a href="https://opsx.alibaba.com/mirror">https://opsx.alibaba.com/mirror</a></p><p>​网易源：<a href="http://mirrors.163.com/">http://mirrors.163.com/</a></p><p>​搜狐源：<a href="http://mirrors.sohu.com/">http://mirrors.sohu.com/</a></p><p>​清华源：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></p></li><li><p>国外较知名的网络源（centos源、redhat源、扩展[^epel]源等）</p></li><li><p>&#x3D;&#x3D;特定软件&#x3D;&#x3D;相关的网络源（Nginx、MySQL、Zabbix等）</p></li></ul><h2 id="4、本机yum源备份（重要）"><a href="#4、本机yum源备份（重要）" class="headerlink" title="4、本机yum源备份（重要）"></a>4、本机yum源备份（重要）</h2><p>第一步：使用cd命令切换到&#x2F;etc&#x2F;yum.repos.d目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/yum.repos.d/</span></span><br></pre></td></tr></table></figure><p>第二步：对所有的仓库文件进行备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zcf repo.tar.gz *.repo</span></span><br></pre></td></tr></table></figure><p>第三步：删除所有的以.repo结尾的仓库文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf *.repo</span></span><br></pre></td></tr></table></figure><h1 id="三、本地YUM源配置"><a href="#三、本地YUM源配置" class="headerlink" title="三、本地YUM源配置"></a>三、本地YUM源配置</h1><h2 id="1、本地YUM配置"><a href="#1、本地YUM配置" class="headerlink" title="1、本地YUM配置"></a>1、本地YUM配置</h2><p>① 使用光盘镜像作为YUM源仓库</p><p>② 下载很多软件，使用软件包作为YUM源仓库</p><h2 id="2、使用光盘镜像作为YUM源仓库"><a href="#2、使用光盘镜像作为YUM源仓库" class="headerlink" title="2、使用光盘镜像作为YUM源仓库"></a>2、使用光盘镜像作为YUM源仓库</h2><p>第一步：在VMware系统中装在CentOS7.6系统的光盘镜像</p><p> <img src="/../assets/blog_res/Linux%E4%B8%8Byum%E6%BA%90%E9%85%8D%E7%BD%AE%E5%AE%9E%E6%88%98.assets/image-20200405151939433.png" alt="image-20200405151939433"></p><p>第二步：把光盘挂载到某个目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rm -rf /mnt/*</span></span><br><span class="line"><span class="comment"># mount -o ro /dev/sr0 /mnt</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-o</span> ：挂载方式，ro代表以readonly=&gt;只读的方式进行挂载</span><br><span class="line">              rw代表以read/<span class="built_in">write</span>=&gt;读写的方式进行挂载</span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN <span class="built_in">RM</span>  SIZE RO <span class="built_in">TYPE</span> MOUNTPOINT</span><br><span class="line">sda               <span class="number">8</span>:<span class="number">0</span>    <span class="number">0</span>   <span class="number">20</span>G  <span class="number">0</span> disk</span><br><span class="line">├─sda1            <span class="number">8</span>:<span class="number">1</span>    <span class="number">0</span>    <span class="number">1</span>G  <span class="number">0</span> part /boot</span><br><span class="line">└─sda2            <span class="number">8</span>:<span class="number">2</span>    <span class="number">0</span>   <span class="number">19</span>G  <span class="number">0</span> part</span><br><span class="line">  ├─centos<span class="literal">-root</span> <span class="number">253</span>:<span class="number">0</span>    <span class="number">0</span>   <span class="number">17</span>G  <span class="number">0</span> lvm  /</span><br><span class="line">  └─centos<span class="literal">-swap</span> <span class="number">253</span>:<span class="number">1</span>    <span class="number">0</span>    <span class="number">2</span>G  <span class="number">0</span> lvm  [<span class="type">SWAP</span>]</span><br><span class="line">sr0              <span class="number">11</span>:<span class="number">0</span>    <span class="number">1</span>  <span class="number">4.3</span>G  <span class="number">0</span> rom  /mnt</span><br></pre></td></tr></table></figure><blockquote><p>卸载或解挂可以使用umount &#x2F;mnt</p></blockquote><p>第三步：把光盘挂载添加到开机启动文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod +x /etc/rc.local</span></span><br><span class="line"><span class="comment"># echo &#x27;mount -o ro /dev/sr0 /mnt&#x27; &gt;&gt; /etc/rc.local</span></span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;etc&#x2F;rc.local，属于系统的开机启动文件。系统启动后，会自动加载并执行这个文件</p></blockquote><p>第四步：编写本地YUM仓库文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">创建一个以*.repo结尾的文件，名称任意</span><br><span class="line"><span class="comment"># vim local.repo</span></span><br><span class="line">[<span class="type">local</span>]</span><br><span class="line">name=local yum</span><br><span class="line">baseurl=file:///mnt</span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br><span class="line"><span class="comment"># yum repolist all</span></span><br><span class="line"></span><br><span class="line">注：file://本地协议路径，后面跟仓库的具体路径</span><br></pre></td></tr></table></figure><blockquote><p>yum仓库的标准格式</p><p>[仓库标识名称]，名称任意，在一个文件中可以拥有多个标识</p><p>name&#x3D;仓库名称</p><p>baseurl&#x3D;仓库的路径，支持多种格式，file:&#x2F;&#x2F;本地路径，ftp:&#x2F;&#x2F;，http:&#x2F;&#x2F;或https:&#x2F;&#x2F;</p><p>gpgcheck&#x3D;gpg密钥，值可以是0（代表不检测），1（代表检测，如果是1，下方还要定义一个gpgkey&#x3D;密钥连接）</p><p>enabled&#x3D;是否启动当前仓库，值可以0，也可以是1，默认为1，代表启动仓库</p></blockquote><p>第五步：测试本地YUM仓库是否可用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install httpd -y</span></span><br></pre></td></tr></table></figure><h2 id="3、扩展man-5"><a href="#3、扩展man-5" class="headerlink" title="3、扩展man 5"></a>3、扩展man 5</h2><p>在Linux系统中，给定我们一个配置文件，怎么查询这个文件中每一个选项的作用呢？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man 命令</span></span><br></pre></td></tr></table></figure><p>扩展：man  5   配置文件名称</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man 5 yum.conf</span></span><br></pre></td></tr></table></figure><h1 id="四、网络YUM源配置"><a href="#四、网络YUM源配置" class="headerlink" title="四、网络YUM源配置"></a>四、网络YUM源配置</h1><h2 id="1、网络YUM源的分类"><a href="#1、网络YUM源的分类" class="headerlink" title="1、网络YUM源的分类"></a>1、网络YUM源的分类</h2><p>① 使用比较知名平台的YUM源（阿里云、腾讯、清华）</p><p>② 有些特定软件（如Nginx、MySQL、Zabbix等等）需要根据官网文档自定义网络YUM源</p><h2 id="2、使用知名平台的YUM源"><a href="#2、使用知名平台的YUM源" class="headerlink" title="2、使用知名平台的YUM源"></a>2、使用知名平台的YUM源</h2><p>​阿里源：<a href="https://opsx.alibaba.com/mirror">https://opsx.alibaba.com/mirror</a></p><p>​网易源：<a href="http://mirrors.163.com/">http://mirrors.163.com/</a></p><p>​搜狐源：<a href="http://mirrors.sohu.com/">http://mirrors.sohu.com/</a></p><p>​清华源：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></p><p>腾讯源、华为源…</p><blockquote><p>百度搜索 &#x3D;&gt; 华为 mirror镜像源</p></blockquote><p>案例：配置阿里云的yum源</p><p>第一步：百度，搜索你想要的YUM源，进入官网，找到CentOS</p><p><img src="/../assets/blog_res/Linux%E4%B8%8Byum%E6%BA%90%E9%85%8D%E7%BD%AE%E5%AE%9E%E6%88%98.assets/image-20200405162153722.png" alt="image-20200405162153722"></p><p>第二步：根据官网提示，配置阿里云的YUM源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><h2 id="3、扩展：EPEL源配置"><a href="#3、扩展：EPEL源配置" class="headerlink" title="3、扩展：EPEL源配置"></a>3、扩展：EPEL源配置</h2><p>什么是EPEL源？</p><p>答：EPEL是对官网源的一个扩展。</p><p>CentOS-Base.repo文件 &#x3D;&gt; 基础源（官方在带的YUM源）</p><p>epel.repo文件 &#x3D;&gt; 扩展源，是对官方YUM源的一个补充</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install epel-release -y</span></span><br></pre></td></tr></table></figure><p>比如：会跑的小火车就是在epel源中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install sl -y</span></span><br><span class="line"><span class="comment"># sl</span></span><br></pre></td></tr></table></figure><h2 id="4、特定软件的YUM源配置"><a href="#4、特定软件的YUM源配置" class="headerlink" title="4、特定软件的YUM源配置"></a>4、特定软件的YUM源配置</h2><p>比如特殊的几个软件，如Nginx、MySQL、Zabbix</p><p>Nginx：<a href="http://www.nginx.org/">http://www.nginx.org</a></p><p>MySQL：<a href="https://www.mysql.com/">https://www.mysql.com/</a></p><p>Zabbix：<a href="https://www.zabbix.com/">https://www.zabbix.com/</a></p><p>找到官方文档，把YUM源配置，写入到一下文件中（repo文件）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/yum.repos.d</span></span><br><span class="line"><span class="comment"># vim nginx.repo</span></span><br><span class="line">[<span class="type">nginx</span>-<span class="type">stable</span>]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=true</span><br></pre></td></tr></table></figure><p>清理缓存：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><p>安装Nginx：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install nginx -y</span></span><br></pre></td></tr></table></figure><h1 id="五、自建YUM源仓库"><a href="#五、自建YUM源仓库" class="headerlink" title="五、自建YUM源仓库"></a>五、自建YUM源仓库</h1><h2 id="1、缓存安装软件包"><a href="#1、缓存安装软件包" class="headerlink" title="1、缓存安装软件包"></a>1、缓存安装软件包</h2><p>什么时候需要缓存软件？</p><ul><li>下次还需要安装相同版本的软件包</li><li>由于网络原因导致网络安装非常慢，将软件包缓存下来，配置本地仓库</li></ul><h2 id="2、如何缓存软件安装包"><a href="#2、如何缓存软件安装包" class="headerlink" title="2、如何缓存软件安装包"></a>2、如何缓存软件安装包</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/yum.conf</span></span><br><span class="line">[<span class="type">main</span>]</span><br><span class="line">cachedir=/var/cache/yum/<span class="variable">$basearch</span>/<span class="variable">$releasever</span>定义软件包的缓存路径</span><br><span class="line">keepcache=<span class="number">1</span><span class="number">1</span>开启缓存；<span class="number">0</span>关闭</span><br><span class="line">debuglevel=<span class="number">2</span></span><br><span class="line">logfile=/var/log/yum.log</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="3、把软件及依赖软件全部下载到某个路径"><a href="#3、把软件及依赖软件全部下载到某个路径" class="headerlink" title="3、把软件及依赖软件全部下载到某个路径"></a>3、把软件及依赖软件全部下载到某个路径</h2><p>只下载不安装软件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install --downloadonly --downloaddir=保存路径 软件名称</span></span><br></pre></td></tr></table></figure><p>案例：下载samba软件及依赖软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /soft</span></span><br><span class="line"><span class="comment"># yum install --downloadonly --downloaddir=/soft samba</span></span><br></pre></td></tr></table></figure><h2 id="4、自定义YUM仓库"><a href="#4、自定义YUM仓库" class="headerlink" title="4、自定义YUM仓库"></a>4、自定义YUM仓库</h2><p>第一步：在系统中安装createrepo制作仓库的软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install createrepo -y</span></span><br></pre></td></tr></table></figure><p>第二步：把&#x2F;soft文件夹做成一个本地的自建仓库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># createrepo /soft</span></span><br></pre></td></tr></table></figure><p>第三步：在&#x2F;etc&#x2F;yum.repos.d目录中创建一个soft.repo的仓库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line"><span class="comment"># vim soft.repo</span></span><br><span class="line">[<span class="type">soft</span>]</span><br><span class="line">name=soft yum</span><br><span class="line">baseurl=file:///soft</span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">enabled=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>清理缓存+重建缓存：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux高级命令（扩展）</title>
      <link href="/posts/58843.html"/>
      <url>/posts/58843.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux高级命令（扩展）"><a href="#Linux高级命令（扩展）" class="headerlink" title="Linux高级命令（扩展）"></a>Linux高级命令（扩展）</h1><h1 id="一、find命令"><a href="#一、find命令" class="headerlink" title="一、find命令"></a>一、find命令</h1><h2 id="1、find命令作用"><a href="#1、find命令作用" class="headerlink" title="1、find命令作用"></a>1、find命令作用</h2><p>在Linux操作系统中，find命令主要用于进行文件的搜索。</p><h2 id="2、基本语法"><a href="#2、基本语法" class="headerlink" title="2、基本语法"></a>2、基本语法</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find 搜索路径 [选项 选项的值] ...</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-name</span> ：根据文件的名称搜索文件，支持*通配符</span><br><span class="line"><span class="literal">-type</span> ：f代表普通文件、d代表文件夹</span><br></pre></td></tr></table></figure><p>案例：搜索计算机中的所有文件，然后找到httpd.conf文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /etc -name &quot;httpd.conf&quot; -type f</span></span><br></pre></td></tr></table></figure><h2 id="3、-星号通配符"><a href="#3、-星号通配符" class="headerlink" title="3、*星号通配符"></a>3、*星号通配符</h2><p>在Linux操作系统中，我们想要查找的文件名称不是特别清晰（只记住了前面或后面的字符），这个时候就可以使用*星号通配符了。</p><p>案例：获取&#x2F;etc目录下，所有后缀名为.conf的文件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /etc -name &quot;*.conf&quot; -type f</span></span><br></pre></td></tr></table></figure><p>案例：在&#x2F;etc目录下，搜索所有以httpd开头的文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /etc -name &quot;httpd*&quot; -type f</span></span><br></pre></td></tr></table></figure><h2 id="4、根据文件修改时间搜索文件"><a href="#4、根据文件修改时间搜索文件" class="headerlink" title="4、根据文件修改时间搜索文件"></a>4、根据文件修改时间搜索文件</h2><h3 id="☆-聊一下Windows中的文件时间概念？"><a href="#☆-聊一下Windows中的文件时间概念？" class="headerlink" title="☆ 聊一下Windows中的文件时间概念？"></a>☆ 聊一下Windows中的文件时间概念？</h3><p> <img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331112114347.png" alt="image-20200331112114347"></p><p>创建时间：代表这个文件什么时间被创建</p><p>访问时间：代表这个文件什么时间被访问</p><p>修改时间：代表这个文件什么时间被修改</p><h3 id="☆-使用stat命令获取文件的最后修改时间"><a href="#☆-使用stat命令获取文件的最后修改时间" class="headerlink" title="☆ 使用stat命令获取文件的最后修改时间"></a>☆ 使用stat命令获取文件的最后修改时间</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># stat 文件名称</span></span><br><span class="line">Modify: <span class="number">2020</span><span class="literal">-03-31</span> <span class="number">10</span>:<span class="number">25</span>:<span class="number">20.609010605</span> +<span class="number">0800</span></span><br></pre></td></tr></table></figure><h3 id="☆-创建文件时设置修改时间以及修改文件的修改时间"><a href="#☆-创建文件时设置修改时间以及修改文件的修改时间" class="headerlink" title="☆ 创建文件时设置修改时间以及修改文件的修改时间"></a>☆ 创建文件时设置修改时间以及修改文件的修改时间</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch -m -d &quot;日期时间格式&quot; 文件名称</span></span><br></pre></td></tr></table></figure><p>作用：① 如果文件不存在，则自动创建该文件，然后设置其最后的修改时间</p><p>​     ② 如果文件存在，touch命令就是只修改文件的最后修改时间</p><p>案例：创建一个a.txt文件，设置最后修改时间为2020-03-30 00:00</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch -m -d &quot;2020-03-30 00:00&quot; a.txt</span></span><br></pre></td></tr></table></figure><p>案例：创建一个b.txt文件，然后在设置文件的最后修改时间为2020-03-29 00:00</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch b.txt</span></span><br><span class="line"><span class="comment"># touch -m -d &quot;2020-03-29 00:00&quot; b.txt</span></span><br></pre></td></tr></table></figure><p>案例：创建一个c.txt文件，设置最后修改时间为2020-03-28 00:00</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch -m -d &quot;2020-03-28 00:00&quot; c.txt</span></span><br></pre></td></tr></table></figure><h3 id="☆-根据文件的-最后修改时间-搜索文件"><a href="#☆-根据文件的-最后修改时间-搜索文件" class="headerlink" title="☆ 根据文件的&#x3D;&#x3D;最后修改时间&#x3D;&#x3D;搜索文件"></a>☆ 根据文件的&#x3D;&#x3D;最后修改时间&#x3D;&#x3D;搜索文件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find 搜索路径 -mtime +days/-day3</span></span><br><span class="line"><span class="literal">-mtime</span> ：根据文件的最后修改时间搜索文件</span><br><span class="line">+ ：加号，代表搜索几天之前的文件信息</span><br><span class="line">- ：减号，代表搜索几天以内的文件信息</span><br></pre></td></tr></table></figure><p>案例：搜索3天以前的文件信息（不包含第3天的，而且只搜索.txt格式）</p><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331113956170.png" alt="image-20200331113956170"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find ./ -name &quot;*.txt&quot; -mtime +3</span></span><br></pre></td></tr></table></figure><p>案例：搜索3天以内的文件信息（只搜索.txt格式）</p><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331120315628.png" alt="image-20200331120315628"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find ./ -name &quot;*.txt&quot; -mtime -3</span></span><br></pre></td></tr></table></figure><h2 id="5、扩展选项-exec选项"><a href="#5、扩展选项-exec选项" class="headerlink" title="5、扩展选项-exec选项"></a>5、扩展选项-exec选项</h2><p>案例：删除Linux系统中&#x2F;var&#x2F;log目录下10天以前的日志信息（日志文件格式*.log结尾）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /var/log -name &quot;*.log&quot; -mtime +10</span></span><br></pre></td></tr></table></figure><p>第一种解决方案：使用管道命令|</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /var/log -name &quot;*.log&quot; -mtime +10 |rm -rf</span></span><br></pre></td></tr></table></figure><p>以上命令并不能正确的执行删除操作，原因在于rm命令和ls命令一样，都不支持管道。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /var/log -name &quot;*.log&quot; -mtime +10 |xargs rm -rf</span></span><br></pre></td></tr></table></figure><p>第二种解决方案：使用find命令 + -exec选项</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /var/log -name &quot;*.log&quot; -mtime +10 -exec rm -rf &#123;&#125; \;</span></span><br></pre></td></tr></table></figure><h2 id="6、根据文件的大小搜索文件"><a href="#6、根据文件的大小搜索文件" class="headerlink" title="6、根据文件的大小搜索文件"></a>6、根据文件的大小搜索文件</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find 搜索路径 -size [文件大小，常用单位：k，M，G]</span></span><br><span class="line">size值  : 搜索等于size值大小的文件</span><br><span class="line"><span class="literal">-size</span>值 : [<span class="number">0</span>, <span class="type">size</span>值)</span><br><span class="line">+<span class="type">size</span>值 : (<span class="type">size</span>值,正无穷大)</span><br></pre></td></tr></table></figure><p>案例：搜索&#x2F;root目录下大小为5M的文件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find ./ -type f -size 5M</span></span><br></pre></td></tr></table></figure><p>案例：搜索&#x2F;root目录下大小为5M以内的文件信息（5M&gt;size&gt;&#x3D;0）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find ./ -type f -size -5M</span></span><br></pre></td></tr></table></figure><p>案例：搜索&#x2F;目录中，文件大小大于100M的文件信息（size&gt;100M）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find / -type f -size +100M</span></span><br></pre></td></tr></table></figure><h2 id="7、dd扩展命令"><a href="#7、dd扩展命令" class="headerlink" title="7、dd扩展命令"></a>7、dd扩展命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dd if=/dev/zero of=文件名称 bs=1M count=1</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="keyword">if</span>代表输入文件</span><br><span class="line">of代表输出文件</span><br><span class="line">bs代表字节为单位的块大小。</span><br><span class="line">count代表被复制的块。</span><br><span class="line">其中/dev/zero是一个字符设备，会不断返回<span class="number">0</span>值字节。</span><br></pre></td></tr></table></figure><p>主要功能：在Linux操作系统中，生成某个大小的测试文件！</p><p>案例：使用dd创建一个1M大小的sun.txt文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dd if=/dev/zero of=moon.txt bs=1M count=1</span></span><br></pre></td></tr></table></figure><p>案例：使用dd创建一个5M大小的moon.txt文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dd if=/dev/zero of=moon.txt bs=5M count=1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> = input file</span><br><span class="line">of = output file</span><br></pre></td></tr></table></figure><h1 id="二、tree命令"><a href="#二、tree命令" class="headerlink" title="二、tree命令"></a>二、tree命令</h1><h2 id="1、tree命令的主要作用"><a href="#1、tree命令的主要作用" class="headerlink" title="1、tree命令的主要作用"></a>1、tree命令的主要作用</h2><p>Windows和Linux都有tree命令，主要功能是创建文件列表，将所有文件以树的形式列出来</p><h2 id="2、使用yum命令安装tree"><a href="#2、使用yum命令安装tree" class="headerlink" title="2、使用yum命令安装tree"></a>2、使用yum命令安装tree</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install tree -y</span></span><br></pre></td></tr></table></figure><h2 id="3、以树状结构显示路径下的文件信息"><a href="#3、以树状结构显示路径下的文件信息" class="headerlink" title="3、以树状结构显示路径下的文件信息"></a>3、以树状结构显示路径下的文件信息</h2><p>案例：以树状结构显示当前目录下的文件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tree </span></span><br></pre></td></tr></table></figure><p>案例：以树状结构显示&#x2F;var&#x2F;log目录下的文件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tree /var/log</span></span><br></pre></td></tr></table></figure><h1 id="三、scp命令"><a href="#三、scp命令" class="headerlink" title="三、scp命令"></a>三、scp命令</h1><h2 id="1、scp命令的主要作用"><a href="#1、scp命令的主要作用" class="headerlink" title="1、scp命令的主要作用"></a>1、scp命令的主要作用</h2><p>scp命令的主要作用是实现Linux与Linux系统之间的文件传输。</p><blockquote><p>完成以上实战需要两个Linux系统，解决方案可以使用克隆操作（先关机后克隆）快速生成一个Linux系统</p></blockquote><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331153615311.png" alt="image-20200331153615311"></p><h2 id="2、scp效果图"><a href="#2、scp效果图" class="headerlink" title="2、scp效果图"></a>2、scp效果图</h2><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331154917349.png" alt="image-20200331154917349"></p><p>scp传输要求：两台计算机所使用的操作系统都必须是Linux操作系统。</p><blockquote><p>ssh: connect to host 10.1.1.17 port 22: Connection refused<br>lost connection</p><p>出现以上问题的主要原因在于SCP命令时基于SSH协议，所以两台服务器的sshd服务必须处于开启状态，否则无法完成上传与下载操作。</p></blockquote><h2 id="3、下载文件或目录"><a href="#3、下载文件或目录" class="headerlink" title="3、下载文件或目录"></a>3、下载文件或目录</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp [选项] 用户名@linux主机地址:资源路径  linux本地文件路径</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-r</span> ：代表递归操作，主要针对文件夹</span><br></pre></td></tr></table></figure><p>案例：从10.1.1.17服务器下载&#x2F;root路径下的video.mp4文件到本地的&#x2F;root目录下</p><p>10.1.1.16：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp root@10.1.1.17:/root/video.mp4 ./</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;10.1.1.17 (10.1.1.17)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:Wcxibo2ZQulm6bV+jEakz8IniwFgE6CUHopCxYjexrI.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:48:25:21:93:ef:2b:22:25:5f:95:39:56:0c:8e:ff:75.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span><span class="number">10.1</span>.<span class="number">1.17</span><span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">root@10.1.1.17&#x27;</span>s password:<span class="number">123456</span></span><br></pre></td></tr></table></figure><p>案例：从10.1.1.17服务器下载&#x2F;root路径下的shop文件夹到本地的&#x2F;root目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp -r root@10.1.1.17:/root/shop ./</span></span><br><span class="line">root@<span class="number">10.1</span>.<span class="number">1.17</span><span class="string">&#x27;s password:123456</span></span><br></pre></td></tr></table></figure><h2 id="4、上传文件或目录"><a href="#4、上传文件或目录" class="headerlink" title="4、上传文件或目录"></a>4、上传文件或目录</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp [选项] linux本地文件路径 用户名@linux主机地址:远程路径</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-r</span> ：递归操作</span><br></pre></td></tr></table></figure><p>案例：把10.1.1.16服务器上的&#x2F;root&#x2F;video.mp4上传到10.1.1.17服务器的&#x2F;root目录下</p><p>10.1.1.16：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp /root/video.mp4 root@10.1.1.17:/root/</span></span><br></pre></td></tr></table></figure><p>案例：把10.1.1.16服务器上的&#x2F;root&#x2F;shop文件夹上传到10.1.1.17服务器的&#x2F;root目录下</p><p>10.1.1.16：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp -r /root/shop root@10.1.1.17:/root/</span></span><br></pre></td></tr></table></figure><h1 id="四、计划任务-tar命令实现文件备份"><a href="#四、计划任务-tar命令实现文件备份" class="headerlink" title="四、计划任务+tar命令实现文件备份"></a>四、计划任务+tar命令实现文件备份</h1><h2 id="1、回顾计划任务"><a href="#1、回顾计划任务" class="headerlink" title="1、回顾计划任务"></a>1、回顾计划任务</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab [选项]</span></span><br><span class="line"><span class="literal">-l</span> : list缩写，查询当前用户的计划任务信息</span><br><span class="line"><span class="literal">-e</span> : edit缩写，编辑计划任务</span><br></pre></td></tr></table></figure><h2 id="2、计划任务格式"><a href="#2、计划任务格式" class="headerlink" title="2、计划任务格式"></a>2、计划任务格式</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">分 时 日 月 周 执行的命令（要求使用完整路径,which命令）</span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331164953190.png" alt="image-20200331164953190"></p><blockquote><p>周的范围比较特殊，正常情况下，只有周一 ~ 周日 1-7，但是计划任务范围0-7，0和7都代表周日</p></blockquote><h2 id="3、案例"><a href="#3、案例" class="headerlink" title="3、案例"></a>3、案例</h2><p>案例：每天的凌晨2点0分把&#x2F;etc目录备份一次&#x2F;tmp目录下，要求把&#x2F;etc打包成etc.tar.gz格式</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br><span class="line">分 时 日 月 周 /usr/bin/tar <span class="literal">-zcf</span> /tmp/etc.tar.gz /etc</span><br><span class="line"><span class="number">0</span> <span class="number">2</span> * * * /usr/bin/tar <span class="literal">-zcf</span> /tmp/etc.tar.gz /etc</span><br></pre></td></tr></table></figure><p>以上案例虽然可以实现对&#x2F;etc目录的备份，但是有一个小缺点：每次备份时，生成的文件名称是一致的，这样后面备份的文件就会把前面备份的文件进行覆盖！</p><p>&#x3D;&#x3D;案例：备份文件时，要求按时间作为备份文件的名称&#x3D;&#x3D;</p><p>&#x2F;tmp&#x2F;etc-20200331.tar.gz</p><p>&#x2F;tmp&#x2F;etc-20200401.tar.gz</p><p>…</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> * * * /usr/bin/tar <span class="literal">-zcf</span> /tmp/etc-<span class="variable">$</span>(date +<span class="string">&quot;\%Y\%m\%d&quot;</span>).tar.gz/etc</span><br><span class="line"></span><br><span class="line">重点：</span><br><span class="line">/tmp/etc-<span class="variable">$</span>(date +<span class="string">&quot;\%Y\%m\%d&quot;</span>).tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>经验之谈：如果在编写计划任务时，出现了%百分号，前面必须添加一个反斜杠\进行转义，否则计划任务会失效！</p></blockquote><h2 id="4、扩展命令：date"><a href="#4、扩展命令：date" class="headerlink" title="4、扩展命令：date"></a>4、扩展命令：date</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date +&quot;时间格式&quot;</span></span><br><span class="line">%F : 年-月-日</span><br><span class="line">%T : 小时:分钟:秒</span><br><span class="line">%Y : Year,年</span><br><span class="line">%m : month,月</span><br><span class="line">%d : day,日</span><br><span class="line">%<span class="built_in">H</span> : Hour,小时</span><br><span class="line">%M : Minute,分钟</span><br><span class="line">%S : Second,秒</span><br></pre></td></tr></table></figure><p>案例：获取计算机的系统时间</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date</span></span><br></pre></td></tr></table></figure><p>案例：获取年月日信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date +&quot;&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux高级命令（扩展）三</title>
      <link href="/posts/15049.html"/>
      <url>/posts/15049.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux高级命令（扩展）"><a href="#Linux高级命令（扩展）" class="headerlink" title="Linux高级命令（扩展）"></a>Linux高级命令（扩展）</h1><h1 id="一、date命令"><a href="#一、date命令" class="headerlink" title="一、date命令"></a>一、date命令</h1><h2 id="1、date命令的作用"><a href="#1、date命令的作用" class="headerlink" title="1、date命令的作用"></a>1、date命令的作用</h2><p>date命令的主要作用：用于获取计算机操作系统的系统时间</p><h2 id="2、获取计算机的系统时间"><a href="#2、获取计算机的系统时间" class="headerlink" title="2、获取计算机的系统时间"></a>2、获取计算机的系统时间</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date</span></span><br></pre></td></tr></table></figure><h2 id="3、定制时间格式"><a href="#3、定制时间格式" class="headerlink" title="3、定制时间格式"></a>3、定制时间格式</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date +&quot;%F %T %Y %m %d %H %M %S&quot;</span></span><br><span class="line">%F : <span class="number">2020</span><span class="literal">-04-03</span></span><br><span class="line">%T : <span class="number">09</span>:<span class="number">45</span>:<span class="number">36</span></span><br><span class="line">%Y : 年</span><br><span class="line">%m : 月</span><br><span class="line">%d : 日</span><br><span class="line">%<span class="built_in">H</span> : 小时</span><br><span class="line">%M : 分钟</span><br><span class="line">%S : 秒</span><br></pre></td></tr></table></figure><p>案例：获取系统时间，时间格式要求20200403</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date +&quot;%Y%m%d&quot;</span></span><br></pre></td></tr></table></figure><h2 id="4、设置计算机的系统时间（慎用）"><a href="#4、设置计算机的系统时间（慎用）" class="headerlink" title="4、设置计算机的系统时间（慎用）"></a>4、设置计算机的系统时间（慎用）</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date -s &quot;年-月-日 小时:分钟:秒&quot;</span></span><br></pre></td></tr></table></figure><p>案例：把当前系统时间设置为2020-04-10</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date -s &quot;2020-04-10&quot;</span></span><br></pre></td></tr></table></figure><h2 id="5、ntpdate手工同步时间"><a href="#5、ntpdate手工同步时间" class="headerlink" title="5、ntpdate手工同步时间"></a>5、ntpdate手工同步时间</h2><p>如果时间错乱了，没有关系，只需要使用ntpdate手工重置一下即可。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate cn.ntp.org.cn</span></span><br></pre></td></tr></table></figure><h1 id="二、普通权限rwx"><a href="#二、普通权限rwx" class="headerlink" title="二、普通权限rwx"></a>二、普通权限rwx</h1><h2 id="1、rwx对文件的影响"><a href="#1、rwx对文件的影响" class="headerlink" title="1、rwx对文件的影响"></a>1、rwx对文件的影响</h2><h3 id="☆-r对文件的影响"><a href="#☆-r对文件的影响" class="headerlink" title="☆ r对文件的影响"></a>☆ r对文件的影响</h3><ul><li><p>针对&#x3D;&#x3D;目录&#x3D;&#x3D;</p><p>一个目录拥有r权限，说明可以查看该&#x3D;&#x3D;目录里的内容&#x3D;&#x3D;（ls命令列出）</p></li><li><p>针对&#x3D;&#x3D;普通文件&#x3D;&#x3D;</p><p>一个普通文件拥有r权限，说明可以查看该&#x3D;&#x3D;文件的内容&#x3D;&#x3D;(cat&#x2F;head&#x2F;tail&#x2F;less&#x2F;more等命令查看)</p></li><li><p>读权限&#x3D;&#x3D;<strong>r</strong>&#x3D;&#x3D;（read）用数字表示是**&#x3D;&#x3D;4&#x3D;&#x3D;**</p></li></ul><h3 id="☆-w对文件的影响"><a href="#☆-w对文件的影响" class="headerlink" title="☆ w对文件的影响"></a>☆ w对文件的影响</h3><ul><li><p>针对&#x3D;&#x3D;目录&#x3D;&#x3D;</p><p>一个目录拥有w权限，说明可以在该目录里&#x3D;&#x3D;<strong>创建、删除、重命名</strong>&#x3D;&#x3D;等操作（mkdir&#x2F;touch&#x2F;mv&#x2F;rm等）</p></li><li><p>针对&#x3D;&#x3D;普通文件&#x3D;&#x3D;</p><p>一个普通文件拥有w权限，说明可以&#x3D;&#x3D;<strong>修改</strong>&#x3D;&#x3D;该&#x3D;&#x3D;文件的<strong>内容</strong>&#x3D;&#x3D;（vi&#x2F;vim编辑器编辑文件）</p></li><li><p>写权限&#x3D;&#x3D;<strong>w</strong>&#x3D;&#x3D;（write）用数字表示是&#x3D;&#x3D;<strong>2</strong>&#x3D;&#x3D;</p></li></ul><blockquote><p>如果我们想在Linux系统中删除某个文件，不是看这个文件有什么权限，而是要看这个文件所处的上级目录是否具有w权限。</p></blockquote><h3 id="☆-x对文件的影响"><a href="#☆-x对文件的影响" class="headerlink" title="☆ x对文件的影响"></a>☆ x对文件的影响</h3><ul><li><p>针对&#x3D;&#x3D;目录&#x3D;&#x3D;</p><p>一个目录拥有x权限，说明可以&#x3D;&#x3D;<strong>进入或切换到</strong>&#x3D;&#x3D;该目录里（cd命令）</p></li><li><p>针对&#x3D;&#x3D;普通文件&#x3D;&#x3D;</p><p>一个普通文件拥有x权限，说明可以&#x3D;&#x3D;<strong>执行</strong>&#x3D;&#x3D;该文件（一般程序文件、脚本文件、命令都需要执行权限）</p><p>shell.sh &#x3D;&gt; 类似Windows中的exe文件</p></li><li><p>执行权限&#x3D;&#x3D;<strong>x</strong>&#x3D;&#x3D;（execute）用数字表示是&#x3D;&#x3D;<strong>1</strong>&#x3D;&#x3D;</p></li></ul><h2 id="2、图解常见操作权限"><a href="#2、图解常见操作权限" class="headerlink" title="2、图解常见操作权限"></a>2、图解常见操作权限</h2><p>&#x2F;</p><p>&#x2F;dir1  &#x2F;dir2</p><p>&#x2F;dir1&#x2F;file1</p><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403113406787.png" alt="image-20200403113406787"></p><h2 id="3、用户身份"><a href="#3、用户身份" class="headerlink" title="3、用户身份"></a>3、用户身份</h2><p>U ： user，代表文件的拥有者（默认为文件的创建者）</p><p>G ：group，与文件所属组同组的用户（组内用户）</p><p>O ：other，既不是拥有者，也不是所属组内的用户，这些用户就称之为其他用户</p><p>a &#x3D; UGO，代表所有用户</p><h2 id="4、如何判断不同身份的用户对文件的权限"><a href="#4、如何判断不同身份的用户对文件的权限" class="headerlink" title="4、如何判断不同身份的用户对文件的权限"></a>4、如何判断不同身份的用户对文件的权限</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -l</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># ll</span></span><br><span class="line"></span><br><span class="line">注：ll代表红帽以及CentOS系统专有的一个命令，等价于<span class="built_in">ls</span> <span class="literal">-l</span>。但是其他系统可能并不支持</span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403114702172.png" alt="image-20200403114702172"></p><h2 id="5、权限的设置（重点）"><a href="#5、权限的设置（重点）" class="headerlink" title="5、权限的设置（重点）"></a>5、权限的设置（重点）</h2><p>① 字母方式（ugo + rwx）</p><p>② 数字方式（4 2 1）</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod [选项] 字母形式或数字形式 文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-R</span> : 递归设置，针对文件家（目录）</span><br></pre></td></tr></table></figure><h3 id="☆-字母形式-三步走"><a href="#☆-字母形式-三步走" class="headerlink" title="☆ 字母形式(三步走)"></a>☆ 字母形式(三步走)</h3><p>第一步：确认给谁设置权限（u，g，o，ugo&#x3D;a）</p><p>第二步：怎么设置权限（+， -， &#x3D;）</p><p>第三步：授予什么样的权限（r，w，x）</p><p>案例：给readme.txt设置权限，要求文件拥有者rwx权限，所属组内用户rw，其他用户r权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod u=rwx,g=rw,o=r readme.txt</span></span><br></pre></td></tr></table></figure><h3 id="☆-数字形式-421"><a href="#☆-数字形式-421" class="headerlink" title="☆ 数字形式(421)"></a>☆ 数字形式(421)</h3><p>read &#x3D; 4</p><p>write &#x3D; 2</p><p>execute &#x3D; 1</p><p>777</p><p>644</p><p>755</p><blockquote><p>7 &#x3D; 4 + 2 + 1 &#x3D; r + w + x &#x3D; rwx</p><p>6 &#x3D; 4 + 2 &#x3D; rw</p><p>5 &#x3D; 4 + 1 &#x3D; rx</p></blockquote><p>案例：设置shop文件夹权限为777（所有拥有都拥有rwx）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod -R 777 shop</span></span><br></pre></td></tr></table></figure><h2 id="6、练习题"><a href="#6、练习题" class="headerlink" title="&#x3D;&#x3D;6、练习题&#x3D;&#x3D;"></a>&#x3D;&#x3D;6、练习题&#x3D;&#x3D;</h2><ol><li>创建5个用户user01~user05和一个admin组</li><li>将user01~user03用户加入到admin组里</li><li>user01用户在其家目录里创建file1~file3三个文件</li><li>user02用户编辑&#x2F;home&#x2F;user01&#x2F;file1文件的内容：good good study,day day up!</li><li>user05用户往&#x2F;home&#x2F;user01&#x2F;file1文件里追加内容：I known</li><li>user04用删除&#x2F;home&#x2F;user01家目录的所有文件</li></ol><h1 id="三、高级权限"><a href="#三、高级权限" class="headerlink" title="三、高级权限"></a>三、高级权限</h1><h2 id="1、在Linux系统中有哪些高级权限"><a href="#1、在Linux系统中有哪些高级权限" class="headerlink" title="1、在Linux系统中有哪些高级权限"></a>1、在Linux系统中有哪些高级权限</h2><p>① 冒险位（u + s） &#x3D;&gt; S</p><ul><li>冒险位，指文件操作者(用户)&#x3D;&#x3D;临时拥有&#x3D;&#x3D;文件&#x3D;&#x3D;拥有者&#x3D;&#x3D;的权限</li><li>冒险位，一般针对的是&#x3D;&#x3D;命令&#x3D;&#x3D;或者&#x3D;&#x3D;脚本文件&#x3D;&#x3D;</li><li>冒险位，用字母表示是&#x3D;&#x3D;s或S&#x3D;&#x3D;；数字表示是&#x3D;&#x3D;4&#x3D;&#x3D;</li><li>冒险位的设置：<code>chmod u+s 文件名</code>或者<code>chmod 4xxx 文件名</code></li></ul><blockquote><p>主要针对可执行的二进制文件，如&#x2F;usr&#x2F;bin&#x2F;passwd文件</p></blockquote><p>② 强制位（g + s）</p><ul><li><p>强制位，一般针对的是&#x3D;&#x3D;目录&#x3D;&#x3D;</p><p>如果一个目录拥有强制位，那么&#x3D;&#x3D;任何用户&#x3D;&#x3D;在该目录里所创建的任何文件的&#x3D;&#x3D;属组&#x3D;&#x3D;都会继承&#x3D;&#x3D;该目录的属组&#x3D;&#x3D;。</p></li><li><p>强制位，用字母表示是&#x3D;&#x3D;s或S&#x3D;&#x3D;；数字表示是&#x3D;&#x3D;2&#x3D;&#x3D;</p></li><li><p>强制位的设置：<code>chmod g+s 文件名</code>或者<code>chmod 2xxx 文件名</code></p></li></ul><blockquote><p>主要针对目录进行设置，比如shop目录，文件拥有者root，所属组itheima，g+s</p><p>这样以后我们在shop目录下创建的所有文件的所属组都会继承shop文件夹的itheima</p></blockquote><p>③ 粘滞位（o + t） &#x3D;&gt; T</p><ul><li><p>粘滞位，一般针对的是&#x3D;&#x3D;公共目录&#x3D;&#x3D;</p><p>如果一个公共目录拥有粘滞位，那么该目录下的文件，只有&#x3D;&#x3D;root&#x3D;&#x3D;和&#x3D;&#x3D;文件的创建&#x3D;&#x3D;者可以删除，其他人只能自己管理自己。（A用户不能删除B用户创建的文件）</p></li><li><p>粘滞位，用字母表示是&#x3D;&#x3D;t或T&#x3D;&#x3D;；数字表示是&#x3D;&#x3D;1&#x3D;&#x3D;</p></li><li><p>粘滞位的设置：<code>chmod o+t 文件名</code>或者<code>chmod 1xxx 文件名</code></p></li></ul><h1 id="四、默认权限-了解"><a href="#四、默认权限-了解" class="headerlink" title="四、默认权限(了解)"></a>四、默认权限(了解)</h1><h2 id="1、什么是文件的默认权限"><a href="#1、什么是文件的默认权限" class="headerlink" title="1、什么是文件的默认权限"></a>1、什么是文件的默认权限</h2><p>所谓文件的默认权限(遮罩权限)，是指用户创建文件后，&#x3D;&#x3D;文件天生&#x3D;&#x3D;就有的权限，不需要设置。</p><h2 id="2、文件默认权限由谁控制"><a href="#2、文件默认权限由谁控制" class="headerlink" title="2、文件默认权限由谁控制"></a>2、文件默认权限由谁控制</h2><p>文件默认权限由一个叫做**&#x3D;&#x3D;umask&#x3D;&#x3D;**的东西来控制。</p><h2 id="3、文件或目录的最高权限"><a href="#3、文件或目录的最高权限" class="headerlink" title="3、文件或目录的最高权限"></a>3、文件或目录的最高权限</h2><p>目录：最高权限0777，简写就是777</p><p>文件：最高权限0666，简写就是666</p><p>默认目录权限 &#x3D; 0777 - umask</p><p>默认文件权限 &#x3D; 0666 - umask</p><h2 id="4、获取umask值"><a href="#4、获取umask值" class="headerlink" title="4、获取umask值"></a>4、获取umask值</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umask</span></span><br></pre></td></tr></table></figure><p>默认umask值，root账号0022</p><h2 id="5、临时或永久更改umask值（慎用，只了解）"><a href="#5、临时或永久更改umask值（慎用，只了解）" class="headerlink" title="5、临时或永久更改umask值（慎用，只了解）"></a>5、临时或永久更改umask值（慎用，只了解）</h2><h3 id="☆-临时设置umask值"><a href="#☆-临时设置umask值" class="headerlink" title="☆ 临时设置umask值"></a>☆ 临时设置umask值</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umask 0002</span></span><br><span class="line">只在当前终端当前进程中有效</span><br></pre></td></tr></table></figure><h3 id="☆-永久设置umask值（写入系统配置）"><a href="#☆-永久设置umask值（写入系统配置）" class="headerlink" title="☆ 永久设置umask值（写入系统配置）"></a>☆ 永久设置umask值（写入系统配置）</h3><p>配置文件说明：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">全局配置文件（针对所有用户所有进程） =&gt;  针对所有用户有效</span><br><span class="line">/etc/profile</span><br><span class="line">系统和用户的环境变量信息，当用户第一次登录时,该文件被读取</span><br><span class="line">/etc/bashrc</span><br><span class="line">每个运行的bash信息（系统别名、函数及默认权限的定义），当bash被打开时,该文件被读取</span><br><span class="line"></span><br><span class="line">局部配置文件（针对某个特定用户以及用户的所有进程）=&gt;  针对当前用户有效</span><br><span class="line">~/.bashrc</span><br><span class="line">当前用户的bash信息，当用户登录和每次打开新的shell时该文件被读取</span><br><span class="line">~/.bash_profile</span><br><span class="line">当前用户的环境变量，当用户登录时，该文件被读取</span><br><span class="line">~/.bash_history</span><br><span class="line">保存当前用户历史命令的文件</span><br><span class="line">~/.bash_logout</span><br><span class="line">当用户退出bash或者终端时，会首先执行该文件里的代码，然后再退出</span><br></pre></td></tr></table></figure><p>案例：更改umask值，针对所有用户有效，umask值设置为0002</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/bashrc</span></span><br><span class="line">...</span><br><span class="line">umask <span class="number">0002</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># source /etc/bashrc   =&gt;   让umask值立即生效</span></span><br></pre></td></tr></table></figure><p>案例：更改umask值，只针对itheima用户有效，umask值设置为0002</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - itheima</span></span><br><span class="line">[<span class="type">itheima</span>@<span class="type">localhost</span> ~] <span class="comment"># vim ~/.bashrc</span></span><br><span class="line">...</span><br><span class="line">umask <span class="number">0002</span></span><br></pre></td></tr></table></figure><h1 id="五、更改文件的拥有者以及所属组"><a href="#五、更改文件的拥有者以及所属组" class="headerlink" title="五、更改文件的拥有者以及所属组"></a>五、更改文件的拥有者以及所属组</h1><h2 id="1、什么是拥有者什么是所属组"><a href="#1、什么是拥有者什么是所属组" class="headerlink" title="1、什么是拥有者什么是所属组"></a>1、什么是拥有者什么是所属组</h2><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403153324872.png" alt="image-20200403153324872"></p><h2 id="2、更改文件的拥有者与所属组"><a href="#2、更改文件的拥有者与所属组" class="headerlink" title="2、更改文件的拥有者与所属组"></a>2、更改文件的拥有者与所属组</h2><p>有些软件或程序要求比较特殊，其如果想正常运行，拥有者与所属组必须是某个值。</p><blockquote><p>如mysql数据库，其要求系统中必须有一个mysql的系统账号，而且要求其安装目录的文件拥有者以及所属组都必须是mysql</p></blockquote><h2 id="3、chown更改文件拥有者"><a href="#3、chown更改文件拥有者" class="headerlink" title="3、chown更改文件拥有者"></a>3、chown更改文件拥有者</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown [选项] 新文件拥有者 文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-R</span> ：递归设置，主要针对文件夹</span><br></pre></td></tr></table></figure><h2 id="4、chgrp更改文件的所属组"><a href="#4、chgrp更改文件的所属组" class="headerlink" title="4、chgrp更改文件的所属组"></a>4、chgrp更改文件的所属组</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chgrp [选项] 新文件所属组 文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-R</span> ：递归设置，主要针对文件夹</span><br></pre></td></tr></table></figure><h2 id="5、chown同时修改文件属主以及属组"><a href="#5、chown同时修改文件属主以及属组" class="headerlink" title="5、chown同时修改文件属主以及属组"></a>5、chown同时修改文件属主以及属组</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown [选项] 新的文件拥有者:新的文件所属组 文件名称</span></span><br><span class="line"><span class="comment"># chown [选项] 新的文件拥有者.新的文件所属组 文件名称</span></span><br><span class="line"></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-R</span> ：递归设置，主要针对文件夹</span><br></pre></td></tr></table></figure><h1 id="六、ACL访问权限控制（扩展）"><a href="#六、ACL访问权限控制（扩展）" class="headerlink" title="六、ACL访问权限控制（扩展）"></a>六、ACL访问权限控制（扩展）</h1><h2 id="1、ACL能做什么"><a href="#1、ACL能做什么" class="headerlink" title="1、ACL能做什么"></a>1、ACL能做什么</h2><ol><li>ACL访问控制策略可以作为前面所讲&#x3D;&#x3D;权限的补充&#x3D;&#x3D;，&#x3D;&#x3D;更加细&#x3D;&#x3D;的来控制文件的权限</li><li>ACL策略可以&#x3D;&#x3D;只针对某个用户&#x3D;&#x3D;在文件上有相应权限</li><li>ACL策略也可以&#x3D;&#x3D;只针对多个用户或者一个组&#x3D;&#x3D;里的所有用户在文件上有相应权限</li></ol><h2 id="2、getfacl"><a href="#2、getfacl" class="headerlink" title="2、getfacl"></a>2、getfacl</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># getfacl = get + file + acl =&gt; 获取某个文件的ACL权限</span></span><br></pre></td></tr></table></figure><p>案例：获取readme.txt文件的ACL权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># getfacl readme.txt</span></span><br></pre></td></tr></table></figure><h2 id="3、setfacl"><a href="#3、setfacl" class="headerlink" title="3、setfacl"></a>3、setfacl</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常用选项：</span><br><span class="line"><span class="literal">-m</span> 修改或者设置ACL策略</span><br><span class="line"><span class="literal">-R</span> 递归授权，对目录下已存在的目录或文件有acl策略，但新建的文件没有</span><br><span class="line"><span class="literal">-x</span> 去掉某个用户或者某个组的权限</span><br><span class="line"><span class="literal">-b</span> 删除所有的acl策略</span><br><span class="line"><span class="literal">-d</span> 默认ACL策略，只针对目录，该目录下新建的目录和文件都会继承acl策略</span><br><span class="line">mask: 定义除其他人和所有者外的最大权限</span><br></pre></td></tr></table></figure><p>案例：修改readme.txt文件的ACL权限（给itheima这个账号开通rw权限）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -m u:itheima:rw readme.txt</span></span><br><span class="line"></span><br><span class="line">u代表user</span><br><span class="line">itheima代表具体的某个用户</span><br><span class="line">rw代表权限</span><br></pre></td></tr></table></figure><p>案例：修改shop文件夹的ACL权限（给itheima组开通rwx权限）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -R -m g:itheima:rwx shop</span></span><br><span class="line"></span><br><span class="line">g代表<span class="built_in">group</span></span><br><span class="line">itheima代表具体的某个用户组名称</span><br><span class="line">rwx代表用户组权限</span><br></pre></td></tr></table></figure><p>案例：删除某个用户权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -x u:itheima readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：删除所有的ACL权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -b readme.txt</span></span><br></pre></td></tr></table></figure><h1 id="七、Linux下软件的安装方式"><a href="#七、Linux下软件的安装方式" class="headerlink" title="七、Linux下软件的安装方式"></a>七、Linux下软件的安装方式</h1><h2 id="1、Linux下有哪些软件安装方式"><a href="#1、Linux下有哪些软件安装方式" class="headerlink" title="1、Linux下有哪些软件安装方式"></a>1、Linux下有哪些软件安装方式</h2><p>① RPM软件包管理（软件名称.rpm）</p><p>② YUM软件包管理（使用yum命令install + 软件名称） &#x3D;&gt; 下载 + 安装一体化</p><p>③ 源码编译安装（相对来说是最复杂的一种方式）</p><h2 id="2、软件包类型"><a href="#2、软件包类型" class="headerlink" title="2、软件包类型"></a>2、软件包类型</h2><h3 id="☆-二进制软件包-rpm包"><a href="#☆-二进制软件包-rpm包" class="headerlink" title="☆ 二进制软件包(rpm包)"></a>☆ 二进制软件包(rpm包)</h3><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403162253401.png" alt="image-20200403162253401"></p><ol><li>二进制包，指的是已经[^编译]好了的软件包，只需要&#x3D;&#x3D;直接安装&#x3D;&#x3D;就可以使用。</li><li>二进制包，&#x3D;&#x3D;不需要编译&#x3D;&#x3D;，直接下载安装即可</li><li>二进制包，需要根据自己的计算机CPU以及操作系统去&#x3D;&#x3D;选择合适&#x3D;&#x3D;的</li></ol><blockquote><p>类似Windows中的.exe文件，如qq.exe</p></blockquote><h3 id="☆-软件源码包（重点）"><a href="#☆-软件源码包（重点）" class="headerlink" title="☆ 软件源码包（重点）"></a>☆ 软件源码包（重点）</h3><p>什么是源码包？有什么特点？</p><ol><li>源码包，指的是程序员写的原始的&#x3D;&#x3D;程序代码文件&#x3D;&#x3D;，&#x3D;&#x3D;不能&#x3D;&#x3D;够&#x3D;&#x3D;直接&#x3D;&#x3D;在计算机上&#x3D;&#x3D;运行&#x3D;&#x3D;。</li><li>源码包，需要进行&#x3D;&#x3D;编译&#x3D;&#x3D;，变成&#x3D;&#x3D;二进制的软件包后&#x3D;&#x3D;，才可安装使用</li><li>源码包，一般可以在任何的计算机上安装使用</li><li>源码包，命名方式一般为：<ul><li><code>软件包名.tar.gz</code></li><li><code>软件包名.tar.bz2</code></li><li><code>软件包名.tar.xz</code></li><li><code>软件包名.zip</code></li></ul></li></ol><blockquote><p>类似于腾讯QQ开发工程师 &#x3D;&gt; QQ的源代码发给你了 .c &#x3D;&gt;  编译 &#x3D;&gt; QQ.exe文件</p></blockquote><h3 id="☆-二进制源码包-src-rpm"><a href="#☆-二进制源码包-src-rpm" class="headerlink" title="☆ 二进制源码包(.src.rpm)"></a>☆ 二进制源码包(.src.rpm)</h3><p>什么是二进制源码包？有什么特点？</p><ol><li>二进制源码包，是一个&#x3D;&#x3D;半成品&#x3D;&#x3D;，安装后不能直接使用</li><li>二进制源码包，需要使用<code>rpmbuild</code>工具重建成真正的<code>rpm</code>包或者重建成源码包才可安装使用</li><li>二进制源码包，命名方式一般为：<ul><li>mysql-community-5.7.25-1.el6.&#x3D;&#x3D;src.&#x3D;&#x3D;rpm</li><li>mysql-community-5.7.25-1.el7.&#x3D;&#x3D;src&#x3D;&#x3D;.rpm</li></ul></li></ol><h2 id="3、常见的二进制软件包"><a href="#3、常见的二进制软件包" class="headerlink" title="3、常见的二进制软件包"></a>3、常见的二进制软件包</h2><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403163136297.png" alt="image-20200403163136297"></p><h2 id="4、总结二进制包和源码包区别"><a href="#4、总结二进制包和源码包区别" class="headerlink" title="4、总结二进制包和源码包区别"></a>4、总结二进制包和源码包区别</h2><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403163218589.png" alt="image-20200403163218589"></p><h2 id="5、二进制软件包的安装方式"><a href="#5、二进制软件包的安装方式" class="headerlink" title="5、二进制软件包的安装方式"></a>5、二进制软件包的安装方式</h2><p>① 基于RPM进行安装（先下载软件然后本地进行安装）</p><p>② 基于YUM进行安装（在线下载然后安装）</p><h2 id="6、RPM软件包安装"><a href="#6、RPM软件包安装" class="headerlink" title="6、RPM软件包安装"></a>6、RPM软件包安装</h2><h3 id="☆-获取软件"><a href="#☆-获取软件" class="headerlink" title="☆ 获取软件"></a>☆ 获取软件</h3><p>Linux只是内核，Linux发行版本：GNU&#x2F;Linux</p><ol><li>RedHat&#x2F;Centos光盘或官方网站 <a href="ftp://ftp.redhat.com/">ftp://ftp.redhat.com</a></li><li>推荐网站<ul><li><a href="http://www.rpmfind.net/">www.rpmfind.net</a></li><li>rpm.pbone.net</li></ul></li><li>相应软件官方网站 <ul><li><a href="http://www.mysql.com/">http://www.mysql.com</a></li><li><a href="http://nginx.org/packages/">http://nginx.org/packages/</a></li></ul></li></ol><h3 id="☆-如何选择合适的软件"><a href="#☆-如何选择合适的软件" class="headerlink" title="☆ 如何选择合适的软件"></a>☆ 如何选择合适的软件</h3><ol><li>选择&#x3D;&#x3D;适合当前系统&#x3D;&#x3D;的版本号<ul><li>找不到适合的，才去尝试别的系统版本号  </li><li>el6兼容el5；el5无法安装 el6</li></ul></li><li>选择&#x3D;&#x3D;适合当前计算机cpu&#x3D;&#x3D;的架构<ul><li>x86_64包，只能安装在64位的系统上 </li><li>i386,i586,i686的软件包可以安装在32和64位系统上  </li><li>noarch表示这个软件包与硬件构架无关，可以通用  </li><li>32位系统不能安装64位包</li></ul></li></ol><p><strong>建议</strong>： 建议不要跨大版本号去安装软件包，尽量使用当前系统版本自带软件包安装</p><h3 id="☆-rpm软件包的安装、卸载以及升级"><a href="#☆-rpm软件包的安装、卸载以及升级" class="headerlink" title="☆ rpm软件包的安装、卸载以及升级"></a>☆ rpm软件包的安装、卸载以及升级</h3><p>安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh 软件包名称</span></span><br></pre></td></tr></table></figure><p>卸载：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -e 软件包名称 [--nodeps强制]</span></span><br></pre></td></tr></table></figure><p>查询：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -q 软件名称</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># rpm -qa |grep 软件名称</span></span><br></pre></td></tr></table></figure><p>升级：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh 软件包名称</span></span><br></pre></td></tr></table></figure><blockquote><p>注：rpm -Uvh不仅可以升级软件，其实它也可以安装软件。</p></blockquote><p>RPM包管理：以上操作都比较简单，但是在实际应用过程中，可能会遇到问题，很多rpm软件包在安装时都会提示软件依赖。那这个问题如何解决呢？</p><p>方法一：根据提示一个一个软件包安装，先解决依赖在回来安装软件</p><p>方法二：使用yum  install 安装rpm软件包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install 软件名称.rpm</span></span><br></pre></td></tr></table></figure><blockquote><p>以上安装方式的最大好处是，如果安装软件时，产生了依赖，不用担心，yum会自动帮助我们解决这些问题的！</p></blockquote><h2 id="7、源码安装"><a href="#7、源码安装" class="headerlink" title="7、源码安装"></a>7、源码安装</h2><h3 id="☆-获取软件的源码包"><a href="#☆-获取软件的源码包" class="headerlink" title="☆ 获取软件的源码包"></a>☆ 获取软件的源码包</h3><p>可以去某个软件的官网获取，官网一般摆放的都是源码包*.tar.gz</p><h3 id="☆-源码安装三步走"><a href="#☆-源码安装三步走" class="headerlink" title="☆ 源码安装三步走"></a>☆ 源码安装三步走</h3><p>① 配置.&#x2F;configure（配置软件安装路径，也可以不配置，不配置使用默认路径）</p><p>② 编译make（把软件的源代码做成类似rpm的可以直接按照的软件）</p><p>③ 安装make install（把刚才编译好的程序进行安装到Linux系统）</p><h3 id="☆-使用源码安装安装cmatrix代码雨"><a href="#☆-使用源码安装安装cmatrix代码雨" class="headerlink" title="☆ 使用源码安装安装cmatrix代码雨"></a>☆ 使用源码安装安装cmatrix代码雨</h3><p>第一步：对软件进行解压缩</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zxf cmatrix-1.2a.tar.gz</span></span><br></pre></td></tr></table></figure><blockquote><p># tar   xf   cmatrix-1.2a.tar.gz，因为默认解压都是使用gzip工具</p></blockquote><p>第二步：进入到cmatrix文件夹，然后对软件进行配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd cmatrix-1.2a</span></span><br><span class="line"><span class="comment"># ./configure=&gt;  设置软件默认安装的位置等信息</span></span><br></pre></td></tr></table></figure><p>第三步：编译软件，使用make命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make</span></span><br></pre></td></tr></table></figure><p>常见错误：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmatrix.c:<span class="number">37</span>:<span class="number">20</span>: fatal error: curses.h: No such file or directory</span><br><span class="line">出现以上问题的主要原因在于系统中没有找到ncurses<span class="literal">-devel</span>软件包</span><br></pre></td></tr></table></figure><p>解决方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install gcc gcc-c++ ncurses-devel -y</span></span><br></pre></td></tr></table></figure><p>第四步：安装软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make install</span></span><br></pre></td></tr></table></figure><p>总结：</p><p>进入解压后的软件目录  &#x3D;&gt;  .&#x2F;configure &#x3D;&gt; make &#x3D;&gt; make install</p><h3 id="☆-测试代码雨效果"><a href="#☆-测试代码雨效果" class="headerlink" title="☆ 测试代码雨效果"></a>☆ 测试代码雨效果</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cmatrix</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux高级命令（扩展）二</title>
      <link href="/posts/22792.html"/>
      <url>/posts/22792.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux高级命令（扩展）"><a href="#Linux高级命令（扩展）" class="headerlink" title="Linux高级命令（扩展）"></a>Linux高级命令（扩展）</h1><h1 id="一、Linux下用户管理"><a href="#一、Linux下用户管理" class="headerlink" title="一、Linux下用户管理"></a>一、Linux下用户管理</h1><h2 id="1、用户概念以及基本作用"><a href="#1、用户概念以及基本作用" class="headerlink" title="1、用户概念以及基本作用"></a>1、用户概念以及基本作用</h2><p><strong>用户：</strong>指的是&#x3D;&#x3D;Linux操作系统中&#x3D;&#x3D;用于管理系统或者服务的&#x3D;&#x3D;人&#x3D;&#x3D;</p><p>一问：管理系统到底在<strong>管理什么</strong>？</p><p>答：Linux下一切皆<strong>文件</strong>，所以用户管理的是相应的&#x3D;&#x3D;文件&#x3D;&#x3D;</p><p>二问：<strong>如何管理</strong>文件呢？</p><p>答：</p><ol><li>文件&#x3D;&#x3D;基本管理&#x3D;&#x3D;，比如文件的创建、删除、复制、查找、打包压缩等；文件的权限增加、减少等；</li><li>文件&#x3D;&#x3D;高级管理&#x3D;&#x3D;，比如<strong>程序文件</strong>的安装、卸载、配置等。终极目的是对外提供稳定的服务。</li></ol><h2 id="2、用户的类别"><a href="#2、用户的类别" class="headerlink" title="2、用户的类别"></a>2、用户的类别</h2><p>① root超级管理员，&#x3D;&#x3D;在Linux系统中拥有至高无上的权力&#x3D;&#x3D;。</p><p>② 系统用户，CentOS6&#x3D;&gt; 1 ~ 499，CentOS7&#x3D;&gt; 1 ~ 999，系统账号&#x3D;&#x3D;默认不允许登录&#x3D;&#x3D;</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -s /sbin/nologin 系统用户</span></span><br></pre></td></tr></table></figure><p>③ 普通用户，大部分是由root管理员创建的，UID的取值范围：CentOS6&#x3D;&gt; 500 ~ 60000，CentOS7&#x3D;&gt; 1000 ~ 60000，&#x3D;&#x3D;对系统进行有限的管理维护操作&#x3D;&#x3D;</p><p>总结</p><p>① 用户指的是操作系统上&#x3D;&#x3D;管理系统或服务&#x3D;&#x3D;的&#x3D;&#x3D;人&#x3D;&#x3D;，是人，就有相关的&#x3D;&#x3D;属性信息&#x3D;&#x3D;</p><p>② 用户的属性信息包括但不限于，如：&#x3D;&#x3D;家目录、唯一身份标识(UID)、所属组(GID)&#x3D;&#x3D;等</p><p>③ 今天我们讨论的用户指的是&#x3D;&#x3D;普通用户&#x3D;&#x3D;，即由管理员创建的用户</p><h2 id="3、用户管理"><a href="#3、用户管理" class="headerlink" title="3、用户管理"></a>3、用户管理</h2><p>与用户管理相关的几个单词 &#x3D;&gt; user（用户）、add（添加）、mod（修改）、del（删除）</p><p>① 用户添加  useradd</p><p>② 用户修改  usermod</p><p>③ 用户删除  userdel</p><h3 id="☆-useradd用户添加"><a href="#☆-useradd用户添加" class="headerlink" title="☆ useradd用户添加"></a>☆ useradd用户添加</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd [选项 选项的值] 新用户名称</span></span><br><span class="line"><span class="literal">-u</span>指定用户uid，唯一标识，必须唯一</span><br><span class="line"><span class="literal">-g</span>指定用户的默认组(主组)</span><br><span class="line"><span class="literal">-G</span>指定用户附加组(一个用户可以加入多个组，但是默认组只有一个)</span><br><span class="line"><span class="literal">-d</span>指定用户家目录(每个用户都有一个自己的家，并且默认在/home/xxx)</span><br><span class="line"><span class="literal">-s</span>指定用户默认shell，常见/bin/bash或/sbin/nologin</span><br><span class="line"></span><br><span class="line">扩展：</span><br><span class="line"><span class="literal">-r</span>  指定用户为系统用户，如创建一个系统账号mysql</span><br></pre></td></tr></table></figure><p>案例：在Linux系统中创建一个账号zhangsan</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd zhangsan</span></span><br></pre></td></tr></table></figure><p>问题：一个用户创建成功后，如何判断是否添加到系统？</p><p>答：第一种方案我们可以通过tail命令查看&#x2F;etc&#x2F;passwd文件</p><p>​ 第二种方案我们可以使用id命令查看zhangsan信息</p><p>案例：在Linux系统中创建一个账号lisi，指定用户的家目录为&#x2F;rhome&#x2F;lisi</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /rhome</span></span><br><span class="line"><span class="comment"># useradd -d /rhome/lisi lisi</span></span><br></pre></td></tr></table></figure><blockquote><p>当我们为用户自定义家目录时，其上级目录必须是真实存在的，如&#x2F;rhome</p></blockquote><p>案例：在Linux系统中创建一个mysql账号，要求真实存在的，但是其不允许登录操作系统</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -s /sbin/nologin mysql</span></span><br></pre></td></tr></table></figure><p>案例：在Linux系统中创建一个mysql系统账号，要求真实存在，但是不允许登录操作系统</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># userdel -r mysql</span></span><br><span class="line"><span class="comment"># useradd -r -s /sbin/nologin mysql</span></span><br></pre></td></tr></table></figure><h3 id="☆-与用户相关的文件"><a href="#☆-与用户相关的文件" class="headerlink" title="☆ 与用户相关的文件"></a>☆ 与用户相关的文件</h3><p>Linux中一切皆文件，所以保存用户的信息的也是一个文件 &#x3D;&gt; &#x2F;etc&#x2F;passwd</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/passwd</span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">第<span class="number">1</span>列：用户名称</span><br><span class="line">第<span class="number">2</span>列：用户密码，使用一个x占位符，真实密码存储在/etc/shadow文件中</span><br><span class="line">第<span class="number">3</span>列：用户的编号UID，<span class="number">0</span>，<span class="number">1</span><span class="literal">-999</span>，<span class="number">1000</span> ~ <span class="number">60000</span></span><br><span class="line">第<span class="number">4</span>列：用户的主组编号GID</span><br><span class="line">第<span class="number">5</span>列：用户的备注信息（扩展，可以使用<span class="literal">-c</span>进行指定） useradd <span class="literal">-c</span> <span class="string">&quot;mysql&quot;</span> mysql</span><br><span class="line">第<span class="number">6</span>列：用户的家目录，/root，超级管理员的家/home，普通账号的家</span><br><span class="line">第<span class="number">7</span>列：用户的Shell文件，常见/bin/bash或/sbin/nologin=&gt;/bin/false</span><br></pre></td></tr></table></figure><h3 id="☆-usermod用户修改"><a href="#☆-usermod用户修改" class="headerlink" title="☆ usermod用户修改"></a>☆ usermod用户修改</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod [选项 选项的值] 用户名称</span></span><br><span class="line"><span class="literal">-u</span>指定用户uid，唯一标识，必须唯一</span><br><span class="line"><span class="literal">-g</span>指定用户的默认组(主组)</span><br><span class="line"><span class="literal">-G</span>指定用户附加组(一个用户可以加入多个组，但是默认组只有一个)</span><br><span class="line"><span class="literal">-d</span>指定用户家目录(每个用户都有一个自己的家，并且默认在/home/xxx)</span><br><span class="line"><span class="literal">-s</span>指定用户默认shell</span><br></pre></td></tr></table></figure><p>案例：修改zhangsan账号的主组为itheima组（只能指定一个）</p><p>① 可以获取itheima组的编号信息GID</p><p>② 使用usermod  -g  GID编号修改某个用户的主组信息</p><blockquote><p>其实在usermod修改用户的主组中，usermod  -g  可以使用GID编号也可以使用组名称</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/group |grep itheima</span></span><br><span class="line"><span class="comment"># usermod -g 1000 zhangsan</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -g itheima zhangsan</span></span><br></pre></td></tr></table></figure><p>案例：修改lisi账号的附加组，将其添加到itheima中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -G 1000 lisi</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -G itheima lisi</span></span><br></pre></td></tr></table></figure><p>案例：创建一个itcast组，在创建一个wangwu的账号，修改wangwu的附加组为itcast与itheima</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd itcast</span></span><br><span class="line"><span class="comment"># useradd wangwu</span></span><br><span class="line"><span class="comment"># usermod -G itcast,itheima wangwu</span></span><br></pre></td></tr></table></figure><p>问题：如果一个用户同时拥有多个附属组，怎么查看呢？</p><p>答：使用id命令即可</p><p>案例：修改用户zhangsan的家目录为&#x2F;rhome&#x2F;zhangsan（默认&#x2F;home&#x2F;zhangsan）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /rhome/zhangsan</span></span><br><span class="line"><span class="comment"># usermod -d /rhome/zhangsan zhangsan</span></span><br><span class="line"><span class="comment"># su - zhangsan</span></span><br><span class="line"><span class="literal">-bash-4</span>.<span class="number">2</span><span class="variable">$</span></span><br><span class="line">出现以上问题的主要原因在于：我们迁移用户的家目录时，没有迁移家目录中的配置文件<span class="string">&quot;家具&quot;</span></span><br><span class="line"></span><br><span class="line">解决方案：</span><br><span class="line">① 家目录已经迁移，我们把/etc/skel中的文件，<span class="built_in">copy</span>到新家中</span><br><span class="line"><span class="comment"># cp -a /etc/skel/. /rhome/zhangsan/</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-a</span> ：all所有，复制时，保留文件的原有属性</span><br><span class="line">② 家目录还没有迁移，准备迁移时，使用usermod <span class="literal">-md</span> /rhome/zhangsan 用户名</span><br><span class="line"><span class="literal">-m</span> ：<span class="built_in">move</span>，迁移家目录时，把<span class="string">&quot;家具&quot;</span>一起迁移到新的家目录</span><br><span class="line"><span class="comment"># usermod -md /rhome/zhangsan zhangsan</span></span><br></pre></td></tr></table></figure><blockquote><p>注：要求&#x2F;rhome&#x2F;zhangsan必须是真实存在的！</p></blockquote><p>案例：当我们创建了某个账号，但是不希望这个账号登录操作系统</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -s /sbin/nologin 用户名称</span></span><br></pre></td></tr></table></figure><h3 id="☆-userdel用户的删除"><a href="#☆-userdel用户的删除" class="headerlink" title="☆ userdel用户的删除"></a>☆ userdel用户的删除</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># userdel [选项] 用户名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-r</span> ：删除用户的同时，删除用户的家目录</span><br><span class="line"><span class="operator">-f</span> ：强制删除用户（即使用户处于登录状态）</span><br></pre></td></tr></table></figure><p>案例：删除zhangsan这个账号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># userdel zhangsan</span></span><br></pre></td></tr></table></figure><p>案例：删除zhangsan这个账号，同时删除这个账号的家</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># userdel -r zhangsan</span></span><br></pre></td></tr></table></figure><p>案例：删除某个正在使用的账号（强制删除）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># userdel -f zhangsan</span></span><br></pre></td></tr></table></figure><h2 id="4、用户密码"><a href="#4、用户密码" class="headerlink" title="4、用户密码"></a>4、用户密码</h2><h3 id="☆-passwd修改用户密码"><a href="#☆-passwd修改用户密码" class="headerlink" title="☆ passwd修改用户密码"></a>☆ passwd修改用户密码</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># passwd [用户名称]</span></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>.管理员root可以给任何用户修改密码</span><br><span class="line"><span class="number">2</span>.普通用户可以自己给自己修改密码，但是密码复杂度要符合规范(大小写、特殊字符、长度)</span><br></pre></td></tr></table></figure><p>案例：使用root账号给itheima用户修改密码，新密码为123456</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - root</span></span><br><span class="line"><span class="comment"># passwd itheima</span></span><br><span class="line">Changing password <span class="keyword">for</span> user itheima.</span><br><span class="line">New password:</span><br><span class="line">BAD PASSWORD: The password is shorter than <span class="number">8</span> characters</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure><p>案例：切换到itheima这个账号，自己给自己修改密码（密码规范）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - itheima</span></span><br><span class="line"><span class="comment"># passwd</span></span><br><span class="line">Changing password <span class="keyword">for</span> user itheima.</span><br><span class="line">Changing password <span class="keyword">for</span> itheima.</span><br><span class="line">(current) UNIX password:</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure><h3 id="☆-–stdin修改用户密码"><a href="#☆-–stdin修改用户密码" class="headerlink" title="☆ –stdin修改用户密码"></a>☆ –stdin修改用户密码</h3><p>–stdin ：标准输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo 123 |passwd --stdin itheima</span></span><br><span class="line"><span class="comment"># history -c =&gt;         清除history历史记录</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：以上方式操作非常简单，但是以上命令会留在history历史命令中！</p></blockquote><h2 id="5、chage更改用户的账号信息"><a href="#5、chage更改用户的账号信息" class="headerlink" title="5、chage更改用户的账号信息"></a>5、chage更改用户的账号信息</h2><p>背景：很多公司运维工程师刚入职，都会默认得到一个服务器的管理账号，密码默认，如123456，我们有没有办法让运维工程师在第一次登陆操作系统后，强制要求其更新密码。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chage --help</span></span><br><span class="line"><span class="literal">-l</span>：列出用户的详细密码状态;</span><br><span class="line"><span class="literal">-d</span> 日期：修改 /etc/shadow 文件中指定用户密码信息的第<span class="number">3</span>个字段，也就是最后一次修改密码的日期，格式为 YYYY<span class="literal">-MM-DD</span>;</span><br><span class="line"><span class="literal">-m</span> 天数：修改密码最短保留的天数，也就是 /etc/shadow 文件中的第<span class="number">4</span>个字段;</span><br><span class="line">注：几天后才能修改一次密码</span><br><span class="line"><span class="literal">-M</span> 天数：修改密码的有效期，也就是 /etc/shadow 文件中的第<span class="number">5</span>个字段;</span><br><span class="line">注：每隔多少天更新一次密码</span><br><span class="line"><span class="literal">-W</span> 天数：修改密码到期前的警告天数，也就是 /etc/shadow 文件中的第<span class="number">6</span>个字段;</span><br><span class="line"><span class="literal">-i</span> 天数：修改密码过期后的宽限天数，也就是 /etc/shadow 文件中的第<span class="number">7</span>个字段;</span><br><span class="line">注：过期后还可以使用的天数，达到这个天数后，账号失效</span><br><span class="line"></span><br><span class="line"><span class="literal">-E</span> 日期：修改账号失效日期，格式为 YYYY<span class="literal">-MM-DD</span>，也就是 /etc/shadow 文件中的第<span class="number">8</span>个字段;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;案例：新创建一个账号lamp，设置初始化密码为123456。要求用户第一次登陆后必须强制修改用户的密码。&#x3D;&#x3D;</p><p>解决思路：把密码的最后修改时间重置为0（回到1970年1月1日）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd lamp</span></span><br><span class="line"><span class="comment"># echo 123456 |passwd --stdin lamp</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chage -d 0 lamp</span></span><br></pre></td></tr></table></figure><p>运行效果：</p><p> <img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%BA%8C.assets/image-20200401154801244.png" alt="image-20200401154801244"></p><p>案例：设置lamp账号的过期时间为2010-04-10</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chage -E &quot;2020-04-10&quot; lamp</span></span><br></pre></td></tr></table></figure><p>案例：设置lamp账号的10天后过期（延伸）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chage -E $(date +%F -d &#x27;+10 days&#x27;) lamp</span></span><br><span class="line">%F：YYYY<span class="literal">-mm-dd</span>，格式<span class="number">2020</span><span class="literal">-04-01</span></span><br><span class="line"><span class="literal">-d</span>：多少天以后的日期</span><br></pre></td></tr></table></figure><p>案例：设置mysql用户60天后密码过期，至少7天后才能修改密码，密码过期前7天开始收到告警信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd mysql</span></span><br><span class="line"><span class="comment"># echo 123456 |passwd --stdin mysql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chage -M 60 -m 7 -W 7 mysql</span></span><br></pre></td></tr></table></figure><h2 id="☆-练习题-："><a href="#☆-练习题-：" class="headerlink" title="☆ &#x3D;&#x3D;练习题&#x3D;&#x3D;："></a>☆ &#x3D;&#x3D;练习题&#x3D;&#x3D;：</h2><p>创建3个普通用户stu1~stu3,要求如下：</p><ol><li>stu1默认创建，密码为123</li><li>stu2的家目录为&#x2F;rhome&#x2F;redhat&#x2F;stu2,密码为123</li><li>stu3用户不能登录操作系统，密码为123</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6、用户组管理"><a href="#6、用户组管理" class="headerlink" title="6、用户组管理"></a>6、用户组管理</h2><h3 id="☆-用户和组的关系"><a href="#☆-用户和组的关系" class="headerlink" title="☆ 用户和组的关系"></a>☆ 用户和组的关系</h3><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%BA%8C.assets/image-20200401112755448.png" alt="image-20200401112755448"></p><p><strong>核心：</strong>&#x3D;&#x3D;组的目的是为了方便管理用户&#x3D;&#x3D;</p><ul><li>用户是操作系统上管理维护系统或服务的人</li><li>组是用户的一个&#x3D;&#x3D;属性信息&#x3D;&#x3D;</li><li>任何一个用户&#x3D;&#x3D;默认都会有&#x3D;&#x3D;一个&#x3D;&#x3D;主组&#x3D;&#x3D;(默认组)</li><li>一个用户除了主组也&#x3D;&#x3D;可以有多个其他组&#x3D;&#x3D;(<strong>附加组</strong>)</li></ul><p><strong>一问：</strong>用户的主组和附加组到底有啥关系呢？</p><p><strong>答：</strong>用户的主组和附加组&#x3D;&#x3D;半毛钱关系都木有&#x3D;&#x3D;</p><p><strong>二问：</strong>那要这个主组或者附加组有啥用呢？</p><p><strong>答：</strong>肯定是<strong>有用</strong>的，组的目的是方便管理用户，用户的目的是管理&#x3D;&#x3D;操作文件&#x3D;&#x3D;，文件就有&#x3D;&#x3D;权限&#x3D;&#x3D;这个属性。</p><ol><li>用户要操作一些文件，文件是由用户创建，不同用户创建的文件的&#x3D;&#x3D;属性信息&#x3D;&#x3D;也就不一样</li><li>文件的属性都有啥呢？比如，文件的&#x3D;&#x3D;创建者&#x3D;&#x3D;，文件&#x3D;&#x3D;属于哪个组&#x3D;&#x3D;，文件大小，文件时间等</li><li>其中，不同用户所创建的&#x3D;&#x3D;文件的属组&#x3D;&#x3D;就是&#x3D;&#x3D;该用户的主组&#x3D;&#x3D;(默认组)</li><li>A用户附加组也有可能是其他用户的主组，道理同上（权限章节再细细体会组的作用）</li></ol><h3 id="☆-用户组管理"><a href="#☆-用户组管理" class="headerlink" title="☆ 用户组管理"></a>☆ 用户组管理</h3><p>group组，添加add，修改mod，删除del</p><p>groupadd 添加用户组</p><p>groupmod 修改用户组</p><p>groupdel  删除用户组</p><h3 id="☆-添加用户组"><a href="#☆-添加用户组" class="headerlink" title="☆ 添加用户组"></a>☆ 添加用户组</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd [选项 选项的值] 用户组名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-g</span> ：创建用户组时指定用户组编号GID，<span class="number">0</span>代表超级管理员root组，<span class="number">1</span><span class="literal">-999</span>代表系统用户组，<span class="number">1000</span>以后代表普通用户组</span><br></pre></td></tr></table></figure><p>案例：在系统中创建一个admin组</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd admin</span></span><br></pre></td></tr></table></figure><p>案例：在系统中创建一个itcast组，并指定用户组的编号为1200</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 1200 itcast</span></span><br></pre></td></tr></table></figure><p>问题：用户组创建完成后，如何判断是否创建成功？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -1 /etc/group</span></span><br></pre></td></tr></table></figure><h3 id="☆-与用户组相关的文件"><a href="#☆-与用户组相关的文件" class="headerlink" title="☆ 与用户组相关的文件"></a>☆ 与用户组相关的文件</h3><p>在Linux系统中，与用户组相关的文件 &#x3D;&gt; &#x2F;etc&#x2F;group</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/group</span></span><br><span class="line">root:x:<span class="number">0</span>:</span><br><span class="line">第<span class="number">1</span>列：代表用户组的组名称</span><br><span class="line">第<span class="number">2</span>列：代表用户组的组密码，使用一个x占位符（基本已经不使用了）</span><br><span class="line">第<span class="number">3</span>列：代表用户的组ID编号GID的值</span><br><span class="line">第<span class="number">4</span>列：代表用户组内的用户信息</span><br></pre></td></tr></table></figure><h3 id="☆-修改用户组"><a href="#☆-修改用户组" class="headerlink" title="☆ 修改用户组"></a>☆ 修改用户组</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupmod [选项 选项的值] 用户组名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-g</span> ：gid缩写，代表修改用户所属组的ID编号</span><br><span class="line"><span class="literal">-n</span> ：name缩写，代表修改用户组的名称</span><br></pre></td></tr></table></figure><p>案例：更改itcast用户的GID编号（从1200 &#x3D;&gt; 1005）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupmod -g 1005 itcast</span></span><br></pre></td></tr></table></figure><h3 id="☆-删除用户组"><a href="#☆-删除用户组" class="headerlink" title="☆ 删除用户组"></a>☆ 删除用户组</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupdel 用户组的名称</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：在Linux操作系统中，如果想删除某个用户组，必须要保证这个组不能是某个用户的主组。</p></blockquote><p>案例：删除itcast用户组</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupdel itcast</span></span><br></pre></td></tr></table></figure><p>案例：删除admin用户组</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupdel admin</span></span><br></pre></td></tr></table></figure><h2 id="7、附属组管理"><a href="#7、附属组管理" class="headerlink" title="7、附属组管理"></a>7、附属组管理</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gpasswd [选项 选项的值] 用户组的名称</span></span><br><span class="line"><span class="literal">-a</span> ：添加用户到组，append追加</span><br><span class="line"><span class="literal">-d</span> ：从组中删除成员，delete移除</span><br><span class="line"><span class="literal">-A</span> ：指定管理员，Admin管理员</span><br><span class="line"><span class="literal">-M</span> ：指定组成员，可以批量添加用户到组中</span><br><span class="line"></span><br><span class="line">问题解析：<span class="literal">-a</span>与<span class="literal">-M</span>到底有啥区别？</span><br><span class="line"><span class="literal">-a</span>一次只能追加一个用户到附属组中（<span class="literal">-a</span>，append，追加的形式，原有用户不覆盖）</span><br><span class="line"><span class="literal">-M</span>一次可以追加多个用户到附属组中（覆盖追加，先把原有用户删除，然后添加我们的用户）</span><br></pre></td></tr></table></figure><p>案例：创建3个用户user01~user03，将user01添加到sysadmin组里（附属组）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd user01</span></span><br><span class="line"><span class="comment"># useradd user02</span></span><br><span class="line"><span class="comment"># useradd user03</span></span><br><span class="line"><span class="comment"># groupadd sysadmin</span></span><br><span class="line"></span><br><span class="line">① 方案<span class="number">1</span></span><br><span class="line"><span class="comment"># usermod -G sysadmin user01</span></span><br><span class="line">② 方案<span class="number">2</span></span><br><span class="line"><span class="comment"># gpasswd -a user01 sysadmin</span></span><br></pre></td></tr></table></figure><p>案例：把user02、user03添加到sysadmin组中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">① 方案<span class="number">1</span></span><br><span class="line"><span class="comment"># gpasswd -a user02 sysadmin</span></span><br><span class="line"><span class="comment"># gpasswd -a user03 sysadmin</span></span><br><span class="line"></span><br><span class="line">② 方案<span class="number">2</span></span><br><span class="line"><span class="comment"># gpasswd -M user02,user03 sysadmin</span></span><br></pre></td></tr></table></figure><p>案例：从附属组中移除某个账号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gpasswd -d 移除的用户名称 附属组名称</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gpasswd -d user03 sysadmin</span></span><br><span class="line">Removing user user03 from <span class="built_in">group</span> sysadmin</span><br></pre></td></tr></table></figure><h2 id="☆-练习题-：-1"><a href="#☆-练习题-：-1" class="headerlink" title="☆ &#x3D;&#x3D;练习题&#x3D;&#x3D;："></a>☆ &#x3D;&#x3D;练习题&#x3D;&#x3D;：</h2><p>1、创建一个admin组，组id为900</p><p>2、创建一个用户tom,并且admin组作为tom用户的附加组（要求在建立用户的时候就完成）,密码为123</p><p>3、创建一个用户jack,要求在建立用户之后使用gpasswd把jack加入到admin组，密码为123</p><p>4、给admin组设定一个默认密码为123 （gpasswd命令）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gpasswd admin组名称</span></span><br></pre></td></tr></table></figure><blockquote><p>移除gpasswd -r  admin组名称，代表移除组密码</p></blockquote><p>5、把tom用户设定为admin组的组管理员</p><blockquote><p>gpasswd -A tom admin</p></blockquote><h2 id="☆-作业1"><a href="#☆-作业1" class="headerlink" title="☆ &#x3D;&#x3D;作业1&#x3D;&#x3D;"></a>☆ &#x3D;&#x3D;作业1&#x3D;&#x3D;</h2><ol><li><p>创建一个公司itcast，3个部门财务(cw)，人事(rs)，市场(sc)</p><p>说明：&#x3D;&#x3D;实际是创建4个组&#x3D;&#x3D;，分别为itcast、cw、rs、sc，没有包含的关系</p></li><li><p>每个部门创建2个用户，如 cw01 cw02，rs01，rs02，sc01，sc02；boss01管理公司所有部门；说明：boss01管理所有部门说明，boss01的附加组为财务、人事和市场部门</p></li><li><p>所有用户账号有效期3个月&lt;90天&gt;，第一次登录强制修改密码，每隔15天更新一次密码；默认密码为123456</p></li></ol><h2 id="☆-作业2"><a href="#☆-作业2" class="headerlink" title="☆ &#x3D;&#x3D;作业2&#x3D;&#x3D;"></a>☆ &#x3D;&#x3D;作业2&#x3D;&#x3D;</h2><ol><li>添加3个用户，用户harry，natasha，sarsh，要求harry，natasha用户的附加组为admin组，sarsh用户的登录shell为非交互式shell。密码均为redhat</li><li>修改harry用户的家目录为&#x2F;home&#x2F;heima&#x2F;redhat&#x2F;harry</li><li>修改natasha，sarsh用户的主组为heima，并且可以登录系统</li></ol><h1 id="二、文件权限管理"><a href="#二、文件权限管理" class="headerlink" title="二、文件权限管理"></a>二、文件权限管理</h1><h2 id="1、什么是权限"><a href="#1、什么是权限" class="headerlink" title="1、什么是权限"></a>1、什么是权限</h2><p><strong>权限：</strong>在计算机&#x3D;&#x3D;系统中&#x3D;&#x3D;，权限是指某个&#x3D;&#x3D;计算机用户&#x3D;&#x3D;具有&#x3D;&#x3D;使用软件资源的权利&#x3D;&#x3D;。</p><h2 id="2、权限的目的"><a href="#2、权限的目的" class="headerlink" title="2、权限的目的"></a>2、权限的目的</h2><p>文件权限的设置目的：&#x3D;&#x3D;是想让某个用户有权利操作文件&#x3D;&#x3D;</p><h2 id="3、权限的分类"><a href="#3、权限的分类" class="headerlink" title="3、权限的分类"></a>3、权限的分类</h2><ul><li><p><strong>普通权限</strong>rwx</p><p>用户正常情况去操作文件所具有的权限</p></li><li><p><strong>高级权限</strong>st</p><p>用户对某个文件操作有特殊需求，而普通权限不能满足，需要给文件设置高级权限</p></li><li><p><strong>默认权限</strong>umask</p><p>用户在系统中创建一个文件，该文件默认都会有一个权限，该权限是默认有的</p></li></ul><p><strong>注意：</strong></p><p>权限是&#x3D;&#x3D;设置在文件上&#x3D;&#x3D;的，而不是用户</p><h2 id="4、普通权限rwx（重点）"><a href="#4、普通权限rwx（重点）" class="headerlink" title="4、普通权限rwx（重点）"></a>4、普通权限rwx（重点）</h2><h3 id="☆-read读权限"><a href="#☆-read读权限" class="headerlink" title="☆ read读权限"></a>☆ read读权限</h3><ul><li><p>针对&#x3D;&#x3D;目录&#x3D;&#x3D;</p><p>一个目录拥有r权限，说明可以查看该&#x3D;&#x3D;目录里的内容&#x3D;&#x3D;（ls命令列出）</p></li><li><p>针对&#x3D;&#x3D;普通文件&#x3D;&#x3D;</p><p>一个普通文件拥有r权限，说明可以查看该&#x3D;&#x3D;文件的内容&#x3D;&#x3D;(cat&#x2F;head&#x2F;tail&#x2F;less&#x2F;more等命令查看)</p></li><li><p>读权限&#x3D;&#x3D;<strong>r</strong>&#x3D;&#x3D;（read）用数字表示是**&#x3D;&#x3D;4&#x3D;&#x3D;**</p></li></ul><h3 id="☆-write写权限"><a href="#☆-write写权限" class="headerlink" title="☆ write写权限"></a>☆ write写权限</h3><ul><li><p>针对&#x3D;&#x3D;目录&#x3D;&#x3D;</p><p>一个目录拥有w权限，说明可以在该目录里&#x3D;&#x3D;<strong>创建、删除、重命名</strong>&#x3D;&#x3D;等操作（mkdir&#x2F;touch&#x2F;mv&#x2F;rm等）</p></li><li><p>针对&#x3D;&#x3D;普通文件&#x3D;&#x3D;</p><p>一个普通文件拥有w权限，说明可以&#x3D;&#x3D;<strong>修改</strong>&#x3D;&#x3D;该&#x3D;&#x3D;文件的<strong>内容</strong>&#x3D;&#x3D;（vi&#x2F;vim编辑器编辑文件）</p></li><li><p>写权限&#x3D;&#x3D;<strong>w</strong>&#x3D;&#x3D;（write）用数字表示是&#x3D;&#x3D;<strong>2</strong>&#x3D;&#x3D;</p></li></ul><h3 id="☆-execute执行权限"><a href="#☆-execute执行权限" class="headerlink" title="☆ execute执行权限"></a>☆ execute执行权限</h3><ul><li><p>针对&#x3D;&#x3D;目录&#x3D;&#x3D;</p><p>一个目录拥有x权限，说明可以&#x3D;&#x3D;<strong>进入或切换到</strong>&#x3D;&#x3D;该目录里（cd命令）</p></li><li><p>针对&#x3D;&#x3D;普通文件&#x3D;&#x3D;</p><p>一个普通文件拥有x权限，说明可以&#x3D;&#x3D;<strong>执行</strong>&#x3D;&#x3D;该文件（一般程序文件、脚本文件、命令都需要执行权限）</p></li><li><p>执行权限&#x3D;&#x3D;<strong>x</strong>&#x3D;&#x3D;（execute）用数字表示是&#x3D;&#x3D;<strong>1</strong>&#x3D;&#x3D;</p></li></ul><p>rwx &#x3D; 读写执行 &#x3D; 4 + 2 + 1</p><h3 id="☆-没有权限"><a href="#☆-没有权限" class="headerlink" title="☆ -没有权限"></a>☆ -没有权限</h3><p>没有任何权限用横杠&#x3D;&#x3D;-&#x3D;&#x3D;表示，数字表示是&#x3D;&#x3D;<strong>0</strong>&#x3D;&#x3D;</p><h2 id="5、理解UGO"><a href="#5、理解UGO" class="headerlink" title="5、理解UGO"></a>5、理解UGO</h2><p>UGO，指的是&#x3D;&#x3D;<strong>用户身份</strong>&#x3D;&#x3D;，每个字母代表&#x3D;&#x3D;不同的&#x3D;&#x3D;用户身份。</p><ul><li><p>U（the user who owns it）</p><p>文件的&#x3D;&#x3D;拥有者&#x3D;&#x3D;(owner)或者&#x3D;&#x3D;创建者&#x3D;&#x3D;</p></li><li><p>G（other users in the file’s &#x3D;&#x3D;g&#x3D;&#x3D;roup）</p><p>在文件的所属组（默认是创建文件的用户的主组）里的用户</p></li><li><p>O（&#x3D;&#x3D;o&#x3D;&#x3D;ther users &#x3D;&#x3D;not in&#x3D;&#x3D; the file’s group）</p><p>既不是文件的创建者，也不在文件属组里的用户，称为其他人</p></li></ul><p>注意：</p><p>​除了上面ugo以外，还有一个字母&#x3D;&#x3D;<strong>a</strong>&#x3D;&#x3D;（all users）,表示&#x3D;&#x3D;所有用户&#x3D;&#x3D;，包含ugo</p><h2 id="6、查看文件的权限"><a href="#6、查看文件的权限" class="headerlink" title="6、查看文件的权限"></a>6、查看文件的权限</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -l 文件名称</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># ll 文件名称</span></span><br></pre></td></tr></table></figure><blockquote><p>注：如果查看一个文件夹的权限，建议使用-d</p></blockquote><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%BA%8C.assets/image-20231223170850987.png" alt="image-20231223170850987"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH远程管理服务</title>
      <link href="/posts/46890.html"/>
      <url>/posts/46890.html</url>
      
        <content type="html"><![CDATA[<h1 id="SSH远程管理服务"><a href="#SSH远程管理服务" class="headerlink" title="SSH远程管理服务"></a>SSH远程管理服务</h1><h1 id="一、SSH概述"><a href="#一、SSH概述" class="headerlink" title="一、SSH概述"></a>一、SSH概述</h1><p>​     熟悉Linux的人那肯定都对SSH不陌生。ssh是一种用于安全访问远程服务器的协议，远程管理工具。它之所以集万千宠爱为一身，就是因为它的安全性。那么它到底是怎么样来保证安全的呢？到底是如何工作的呢？</p><h2 id="1、加密算法（了解）"><a href="#1、加密算法（了解）" class="headerlink" title="1、加密算法（了解）"></a>1、加密算法（了解）</h2><h3 id="☆-对称加密算法-DES"><a href="#☆-对称加密算法-DES" class="headerlink" title="☆ 对称加密算法(DES)"></a>☆ 对称加密算法(DES)</h3><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523093832693.png" alt="image-20200523093832693"></p><ol><li>Jack想要给Harry发送信息一个信息Ａ，为了安全起见，Jack使用一种加密算法，比如给信息通过加一个数字B得到一个新的数字C，然后以公开的方式发送给Harry</li><li>Harry接受到数字C后，通过减去一个数字B得到最终的真正的信息A</li><li>Jack发送给Harry的信息A称为明文；加密后的信息C称为密文；加密用的B称之为密钥</li><li>加密算法（方法）可以很复杂，不一定是加和减，也可以是乘和除等等</li><li>以上过程中，加密和解密的秘钥是同一个密钥B</li></ol><p><strong>总结：</strong></p><ol><li>发送方使用**&#x3D;&#x3D;密钥&#x3D;&#x3D;<strong>将&#x3D;&#x3D;<strong>明文数据</strong>&#x3D;&#x3D;加密成</strong>&#x3D;&#x3D;密文&#x3D;&#x3D;**，然后发送出去</li><li>接收方收到密文后，使用&#x3D;&#x3D;同一个密钥&#x3D;&#x3D;将密文解密成明文进行读取</li></ol><h3 id="☆-非对称加密算法-RSA"><a href="#☆-非对称加密算法-RSA" class="headerlink" title="☆ 非对称加密算法(RSA)"></a>☆ 非对称加密算法(RSA)</h3><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523095219704.png" alt="image-20200523095219704"></p><ol><li>首先Harry生成一对有相互关系的密钥对，比如e（公钥）和f（私钥）；其中公钥是可以公开给所有人的，私钥必须Harry本人私自留存，不得泄露。</li><li>当Jack发送请求时，Harry会把自己的公钥e发送给Jack</li><li>Jack拿着Harry的公钥e通过一种加密算法将信息Ａ加密成密文Ｃ，以公开的方式发送给Harry</li><li>Harry收到密文Ｃ后，通过自己本地留存的私钥ｆ将密文解密成最终的信息A</li><li>以上过程中，加密使用的是公钥e，解密使用的是私钥f；使用不同的秘钥加解密</li></ol><p><strong>总结：</strong></p><ol><li>发送方使用接收方发送过来的**&#x3D;&#x3D;公钥&#x3D;&#x3D;<strong>将&#x3D;&#x3D;<strong>明文数据</strong>&#x3D;&#x3D;加密成</strong>&#x3D;&#x3D;密文&#x3D;&#x3D;**，然后发送出去</li><li>接收方收到密文后，使用自己本地留存的&#x3D;&#x3D;<strong>私钥</strong>&#x3D;&#x3D;将密文解密成明文进行读取</li></ol><h3 id="☆-对称加密与非对称加密区别"><a href="#☆-对称加密与非对称加密区别" class="headerlink" title="☆ 对称加密与非对称加密区别"></a>☆ 对称加密与非对称加密区别</h3><ul><li>&#x3D;&#x3D;<strong>对称加密</strong>&#x3D;&#x3D;<ol><li>使用&#x3D;&#x3D;同一个密钥&#x3D;&#x3D;进行加密和解密，密钥容易泄露</li><li>&#x3D;&#x3D;加密速度快&#x3D;&#x3D;，效率高，&#x3D;&#x3D;数据传输&#x3D;&#x3D;速度&#x3D;&#x3D;快&#x3D;&#x3D;，安全性较&#x3D;&#x3D;低&#x3D;&#x3D;</li></ol></li><li>&#x3D;&#x3D;<strong>非对称加密</strong>&#x3D;&#x3D;<ol><li>使用&#x3D;&#x3D;不同的密钥&#x3D;&#x3D;（公钥和私钥）进行加密和解密</li><li>&#x3D;&#x3D;加密速度&#x3D;&#x3D;远远&#x3D;&#x3D;慢&#x3D;&#x3D;于对称加密，&#x3D;&#x3D;数据传输&#x3D;&#x3D;速度&#x3D;&#x3D;慢&#x3D;&#x3D;，安全性较&#x3D;&#x3D;高&#x3D;&#x3D;</li></ol></li></ul><h2 id="2、环境准备（任务背景）"><a href="#2、环境准备（任务背景）" class="headerlink" title="2、环境准备（任务背景）"></a>2、环境准备（任务背景）</h2><p>第一步：把现有的CentOS7操作系统恢复快照（刚装完系统的Linux服务器） &#x3D;&gt; 母机（模板机）</p><p>第二步：对CentOS7操作系统进行克隆，生成JumpServer与RealServer（线上生产服务器）</p><table><thead><tr><th>编号</th><th>IP地址</th><th>主机名称</th><th>角色信息</th></tr></thead><tbody><tr><td>1</td><td>10.1.1.37(NAT)<br />11.1.1.10(仅主机)</td><td>jumpserver.itcast.cn</td><td>JumpServer</td></tr><tr><td>2</td><td>11.1.1.100(仅主机)</td><td>realserver.itcast.cn</td><td>RealServer</td></tr></tbody></table><h2 id="3、SSH基于用户名密码的认证原理"><a href="#3、SSH基于用户名密码的认证原理" class="headerlink" title="3、SSH基于用户名密码的认证原理"></a>3、SSH基于用户名密码的认证原理</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh [选项] 远程服务器的用户名@远程服务器的IP地址</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-p</span>：指定ssh服务的端口号，默认为<span class="number">22</span></span><br></pre></td></tr></table></figure><p>案例：通过JumpServer与RealServer远程连接，了解SSH基于用户名密码的认证原理</p><p>JumpServer：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh root@10.1.1.38</span></span><br></pre></td></tr></table></figure><p>认证原理：</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523112338294.png" alt="image-20200523112338294"></p><ol><li><p>SSH客户端向SSH服务端发起一个登录请求</p></li><li><p>SSH服务端将自己的公钥发送给SSH客户端</p><p>注意：如果是第一次访问，则提示以下内容：</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh远程登录操作 首次</span></span><br><span class="line">ssh <span class="number">192.168</span>.<span class="number">19.101</span></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line"><span class="comment"># 无法确认主机的真实性</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.19.101 (192.168.19.101)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:Y/cQNWWkX15o2MsJ5HOQBI2m8S33qIA+x3zys8J4pOY.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:76:61:86:8b:d5:ee:bf:9c:60:e6:12:fa:f6:f0:74:36.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span><span class="number">192.168</span>.<span class="number">19.101</span><span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">#说明：</span></span><br><span class="line"><span class="string">#当客户端输入yes确认对方的公钥指纹后,server端的公钥就会被存放到客户机的用户家目录里~/.ssh/known_hosts文件中，下次再访问就直接通过密码登录，不需要再确认公钥。</span></span><br></pre></td></tr></table></figure><ol><li><p>SSH客户端使用服务端发过来的公钥将自己的密码加密并且发送给SSH服务端</p></li><li><p>SSH服务端收到SSH客户端发过来的加密密码后使用本地留存的私钥进行解密</p></li><li><p>SSH服务端将解密出来的密码和<code>/etc/shadow</code>文件里的用户密码对比认证</p></li><li><p>SSH服务端认证成功，则返回登录成功结果，并发送一个随机会话口令给客户端，该口令用于后面两台主机进行数据传输的一个临时加密会话口令</p></li></ol><h2 id="4、SSH总结"><a href="#4、SSH总结" class="headerlink" title="4、SSH总结"></a>4、SSH总结</h2><ul><li>SSH是Linux下远程管理的工具，相比Telnet安全，运维人员必备的神器！</li><li>SSH的全称Secure Shell，安全的shell，是Client&#x2F;Server架构，默认&#x3D;&#x3D;端口号为22，TCP协议&#x3D;&#x3D;</li><li>SSH其实用于商业，而OpenSSH即为开源的，在Linux中默认安装</li></ul><h1 id="二、SSH服务搭建"><a href="#二、SSH服务搭建" class="headerlink" title="二、SSH服务搭建"></a>二、SSH服务搭建</h1><h2 id="1、所有服务的搭建思路"><a href="#1、所有服务的搭建思路" class="headerlink" title="1、所有服务的搭建思路"></a>1、所有服务的搭建思路</h2><ul><li>关闭防火墙和selinux(实验环境都先关闭掉)</li><li>配置yum源(公网源或者本地源)</li><li>软件安装和检查</li><li>了解并修改配置文件（核心）</li><li>启动服务检查运行状态并设置开机自启动</li></ul><h2 id="2、搭建SSH服务器（JumpServer与RealServer）"><a href="#2、搭建SSH服务器（JumpServer与RealServer）" class="headerlink" title="2、搭建SSH服务器（JumpServer与RealServer）"></a>2、搭建SSH服务器（JumpServer与RealServer）</h2><p>第一步：关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>第二步：配置YUM源</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523142205752.png" alt="image-20200523142205752"></p><p>JumpServer配置外网YUM源 &#x3D;&gt; 阿里云</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span></span><br><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><p>RealServer配置本地YUM源 &#x3D;&gt; 把光盘镜像作为仓库（自建YUM仓库）</p><p>① 挂载光盘</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /mnt/cdrom</span></span><br><span class="line"><span class="comment"># mount -o ro /dev/sr0 /mnt/cdrom</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod +x /etc/rc.local</span></span><br><span class="line"><span class="comment"># echo &#x27;mount -o ro /dev/sr0 /mnt/cdrom&#x27; &gt;&gt; /etc/rc.local</span></span><br></pre></td></tr></table></figure><p>② 编写local.repo文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/yum.repos.d</span></span><br><span class="line"><span class="comment"># vim local.repo</span></span><br><span class="line">[<span class="type">local</span>]</span><br><span class="line">name=local yum</span><br><span class="line">baseurl=file:///mnt/cdrom</span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="3、VMware中的三种网络"><a href="#3、VMware中的三种网络" class="headerlink" title="3、VMware中的三种网络"></a>3、VMware中的三种网络</h2><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523145610295.png" alt="image-20200523145610295"></p><p> <img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523145635628.png" alt="image-20200523145635628"></p><p>由上图可知：在VMware中，一共存在3种网络模式。</p><table><thead><tr><th>选择网络连接属性</th><th>意义</th></tr></thead><tbody><tr><td>Use bridged networking（使用桥接网络）</td><td>使用（连接）VMnet0虚拟交换机，此时虚拟机相当于网络上的一台独立计算机，与主机一样，拥有一个独立的IP地址</td></tr><tr><td>Use network address translation（NAT）（使用NAT网络）</td><td>使用（连接）VMnet8虚拟交换机，此时虚拟机可以通过主机单向访问网络上的其他工作站（包括Internet网络），其他工作站不能访问虚拟机</td></tr><tr><td>Use Host-Only networking（仅主机网络）</td><td>使用（连接）VMnet1虚拟交换机，此时虚拟机只能与虚拟机、主机互连，与网络上的其他工作站不能访问</td></tr></tbody></table><p>VMnet0 桥接模式 ： 和物理真机连接在同一交换机，相当于系统与Windows处于同一个网段</p><p>① 与物理真机同网段，如192.168.43.X</p><p>② 桥接模式可以连接外网（有网络）</p><p>桥接模式中，Linux系统就相当于一台独立的计算机，与Windows物理真机处于同一个网络环境中。</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523152614843.png" alt="image-20200523152614843"></p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523155503251.png" alt="image-20200523155503251"></p><p>VMnet1 仅主机模式：封闭的网络环境，仅能与Windows物理真机进行连接。无法连接外网</p><p>① 与物理真机不在同一个网段，拥有独立的IP网段</p><p>② 仅主机模式仅能用于内部连通（VMware&#x3D;&gt;JumpServer、RealServer）</p><p>③ 仅主机模式无法连接外网</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523152724509.png" alt="image-20200523152724509"></p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523160615196.png" alt="image-20200523160615196"></p><p>VMnet8 NAT模式：相当于一个独立的网络环境，与物理真机不处于同一个网段。但是其可以通过虚拟网络路由器（NAT地址转化）连接外网。</p><p>①  与物理真机不在同一个网段，拥有独立的IP网段</p><p>② 不仅可以进行内部连接（VMware&#x3D;&gt; CentOS6、CentOS7）</p><p>③ 拥有一个虚拟的路由器（NAT设备）可以让我们虚拟机连接到外网环境</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523153126141.png" alt="image-20200523153126141"></p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523162436168.png" alt="image-20200523162436168"></p><h2 id="4、静态IP配置"><a href="#4、静态IP配置" class="headerlink" title="4、静态IP配置"></a>4、静态IP配置</h2><h3 id="☆-JumpServer网卡配置"><a href="#☆-JumpServer网卡配置" class="headerlink" title="☆ JumpServer网卡配置"></a>☆ JumpServer网卡配置</h3><p>给JumpServer配置两张网卡（NAT模式 + 仅主机模式）</p><p> <img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523163054314.png" alt="image-20200523163054314"></p><p>添加仅主机模式网卡：</p><p> <img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523163439258.png" alt="image-20200523163439258"></p><p>重启network网络，然后使用ifconfig获取仅主机模式的网卡信息。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart network</span></span><br><span class="line"><span class="comment"># ifconfig</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523163634762.png" alt="image-20200523163634762"></p><p>由上图可知，仅主机模式的网卡为ens37，NAT模式网卡为ens33。遇到一个问题，ens37这张网卡没有配置文件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/sysconfig/network-scripts/</span></span><br><span class="line"><span class="comment"># ls</span></span><br></pre></td></tr></table></figure><p>添加ens37配置文件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp ifcfg-ens33 ifcfg-ens37</span></span><br><span class="line"><span class="comment"># vim ifcfg-ens37</span></span><br><span class="line"><span class="built_in">TYPE</span>=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">IPADDR=<span class="number">11.1</span>.<span class="number">1.10</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">NAME=<span class="string">&quot;ens37&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens37&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br></pre></td></tr></table></figure><p>重启计算机网络：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><h3 id="☆-关闭NetworkManager"><a href="#☆-关闭NetworkManager" class="headerlink" title="☆ 关闭NetworkManager"></a>☆ 关闭NetworkManager</h3><p>Linux图形化界面中的网络管理器，有些时候我们设置了静态IP。但是重启网络后，其并没有生效或者和你设置的IP地址不一致，很可能是由于NetworkManager工具的影响。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line"><span class="comment"># systemctl disable NetworkManager</span></span><br></pre></td></tr></table></figure><h3 id="☆-RealServer网卡配置"><a href="#☆-RealServer网卡配置" class="headerlink" title="☆ RealServer网卡配置"></a>☆ RealServer网卡配置</h3><p>把NAT模式的网卡更改为仅主机模式，然后设置一个静态IP地址。</p><p> <img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523170732237.png" alt="image-20200523170732237"></p><p>由于现在只有一张网卡，所以仅主机模式对应的网卡为ens33，配置：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line"><span class="built_in">TYPE</span>=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">IPADDR=<span class="number">11.1</span>.<span class="number">1.100</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br></pre></td></tr></table></figure><p>设置完成后，重启计算机网络</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line"><span class="comment"># systemctl disable NetworkManager</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2D安装指南</title>
      <link href="/posts/49318.html"/>
      <url>/posts/49318.html</url>
      
        <content type="html"><![CDATA[<h1 id="个人博客安装live2d插件"><a href="#个人博客安装live2d插件" class="headerlink" title="个人博客安装live2d插件"></a>个人博客安装live2d插件</h1><p>参考资料：</p><p><a href="https://polar-bear.eu.org/2023/06/27/wei-wang-zhan-tian-jia-live2d">为网站添加live2D | polar-bear～Blog</a></p><h3 id="第一步，安装插件"><a href="#第一步，安装插件" class="headerlink" title="第一步，安装插件"></a>第一步，安装插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h3 id="第二步，选择安装的模型"><a href="#第二步，选择安装的模型" class="headerlink" title="第二步，选择安装的模型"></a>第二步，选择安装的模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-miku</span><br></pre></td></tr></table></figure><p>此处的：live2d-widget-model-tororo就是模型安装的名称</p><p>模型数量很多，个人选择的是miku的模型。</p><p>效果如图：</p><p><img src="/../assets/blog_res/live2D%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97.assets/image-20231223123135263.png" alt="image-20231223123135263"></p><p>非q版，有其他模型人物选择，如参考的资料作者选择的就是猫猫。</p><p>其他可选插件模型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure><p>只需替换后面的名称即可下载。</p><h3 id="第三步，添加live2d的代码使其运行在网站博客之中"><a href="#第三步，添加live2d的代码使其运行在网站博客之中" class="headerlink" title="第三步，添加live2d的代码使其运行在网站博客之中"></a>第三步，添加live2d的代码使其运行在网站博客之中</h3><p>在站点配置下的_config.yml文件之中添加以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  debug: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-tororo #这里改为你模型的名字</span><br><span class="line">  display:</span><br><span class="line">    position: right  #left放左，right放右</span><br><span class="line">    width: 180</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br><span class="line">  react:</span><br><span class="line">    opacity: 0.7</span><br></pre></td></tr></table></figure><p>以下是代码的参数含义，引用原文解释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">- `enable`：设置为 `true` 表示启用Live2D插件，允许在网站上显示Live2D模型。</span><br><span class="line">- `scriptFrom`：设置为 `local` 表示从本地加载插件的JavaScript文件。</span><br><span class="line">- `pluginRootPath`：Live2D插件根目录的路径。在这个示例中，设置为 `live2dw/`。</span><br><span class="line">- `pluginJsPath`：插件JavaScript文件存放的路径。在这个示例中，设置为 `lib/`。</span><br><span class="line">- `pluginModelPath`：Live2D模型文件存放的路径。在这个示例中，设置为 `assets/`。</span><br><span class="line">- `tagMode`：设置为 `false` 表示不以标签形式展示Live2D模型。</span><br><span class="line">- `debug`：设置为 `false` 表示关闭调试模式。</span><br><span class="line"></span><br><span class="line">接下来是具体的模型相关设置：</span><br><span class="line"></span><br><span class="line">- `model.use`：指定使用的Live2D模型的名称。在这个示例中，模型名字被设置为 `live2d-widget-model-tororo`，您可以更改为您想要使用的模型的名字。</span><br><span class="line">- `display.position`：指定Live2D模型在网页中的位置，可以设置为 `left` 或 `right`。</span><br><span class="line">- `display.width`：指定Live2D模型的宽度。</span><br><span class="line">- `display.height`：指定Live2D模型的高度。</span><br><span class="line"></span><br><span class="line">接下来是移动设备的显示设置：</span><br><span class="line"></span><br><span class="line">- `mobile.show`：设置为 `true` 表示在移动设备上显示Live2D模型。</span><br><span class="line"></span><br><span class="line">最后是交互相关设置：</span><br><span class="line"></span><br><span class="line">- `react.opacity`：指定Live2D模型的透明度。</span><br><span class="line"></span><br><span class="line">请注意，这些参数可以根据您的需求进行调整和修改，以适应您的网站设计和Live2D模型的要求。</span><br></pre></td></tr></table></figure><p>设置好之后运行就可以正常显示了，中途未出现任何错误，感谢大佬polar-bear的教程。</p><p>这里是大佬的博客：<a href="https://polar-bear.eu.org/">polar-bear～Blog - Websites that record life</a></p><p>这里是大佬的b站：<a href="https://space.bilibili.com/1326131544">阿巴吧吧巴啊的个人空间-阿巴吧吧巴啊个人主页-哔哩哔哩视频 (bilibili.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>半同步复制与MHA高可用架构设计</title>
      <link href="/posts/16175.html"/>
      <url>/posts/16175.html</url>
      
        <content type="html"><![CDATA[<h1 id="半同步复制与MHA高可用架构设计"><a href="#半同步复制与MHA高可用架构设计" class="headerlink" title="半同步复制与MHA高可用架构设计"></a>半同步复制与MHA高可用架构设计</h1><h1 id="一、半同步复制"><a href="#一、半同步复制" class="headerlink" title="一、半同步复制"></a>一、半同步复制</h1><h2 id="1、什么是半同步复制"><a href="#1、什么是半同步复制" class="headerlink" title="1、什么是半同步复制"></a>1、什么是半同步复制</h2><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/image-20200901093404443.png" alt="image-20200901093404443"></p><p>所谓的半同步复制就是master每commit一个事务(简单来说就是做一个改变数据的操作）,要确保slave接受完主服务器发送的binlog日志文件&#x3D;&#x3D;并写入到自己的中继日志relay log里&#x3D;&#x3D;，然后会给master信号，告诉对方已经接收完毕，这样master才能把事物成功&#x3D;&#x3D;commit&#x3D;&#x3D;。这样就保证了master-slave的&#x3D;&#x3D;数据绝对的一致&#x3D;&#x3D;（但是以牺牲&#x3D;&#x3D;master的性能为代价&#x3D;&#x3D;).但等待时间也是可以调整的。</p><h2 id="2、半同步复制的基本实现"><a href="#2、半同步复制的基本实现" class="headerlink" title="2、半同步复制的基本实现"></a>2、半同步复制的基本实现</h2><p>第一步：准备一套M-S的主从架构（建议使用基于GTIDs架构设计）</p><p>第二步：给MASTER与SLAVE安装plugin插件(&#96;$basedir&#x2F;lib&#x2F;plugin&#x2F;)</p><p>MASTER：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; install plugin rpl_semi_sync_master soname <span class="string">&#x27;semisync_master.so&#x27;</span>;</span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>SLAVE：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; install plugin rpl_semi_sync_slave soname <span class="string">&#x27;semisync_slave.so&#x27;</span>;</span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>第三步：激活MASTER与SLAVE服务器中的半同步复制插件</p><p>MASTER：</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global rpl_semi_sync_master_enabled=on;</span><br><span class="line">mysql&gt; show global status like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>SLAVE：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global rpl_semi_sync_slave_enabled=on;</span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>第四步：在SLAVE服务器中重启IO线程</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; stop slave IO_THREAD;</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave IO_THREAD;</span><br></pre></td></tr></table></figure><p>第五步：测试验证半同步复制</p><p>当slave从库的IO_Thread 线程将binlog日志接受完毕后，要给master一个确认，如果超过10s未收到slave的接收确认信号，那么就会自动转换为传统的异步复制模式。</p><p>1）master插入一条记录，查看slave是否有成功返回</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into db_itheima.tb_student values (null,<span class="string">&#x27;j&#x27;</span>);</span><br><span class="line">mysql&gt; show global status like <span class="string">&#x27;rpl_semi_sync%_yes_tx&#x27;</span>; </span><br><span class="line">+<span class="literal">-----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name               | Value |</span><br><span class="line">+<span class="literal">-----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Rpl_semi_sync_master_yes_tx |  <span class="number">1</span>    |</span><br><span class="line">表示这次事物成功从slave返回一次确认信号</span><br><span class="line">+<span class="literal">-----------------------------</span>+<span class="literal">-------</span>+</span><br></pre></td></tr></table></figure><p>2）模拟slave服务器故障</p><p>SLAVE：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld stop</span></span><br></pre></td></tr></table></figure><p>MASTER：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into db_itheima.tb_student values (null,<span class="string">&#x27;k&#x27;</span>); </span><br><span class="line">mysql&gt; insert into db_itheima.tb_student values (null,<span class="string">&#x27;l&#x27;</span>); </span><br><span class="line">这次插入一个值需要等待<span class="number">10</span>秒（默认的等待时间)</span><br><span class="line">mysql&gt; insert into db_itheima.tb_student values (null,<span class="string">&#x27;m&#x27;</span>); </span><br><span class="line">现在自动转成了原来的异步模式</span><br></pre></td></tr></table></figure><p>3）重新启动半同步复制</p><p>SLAVE：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld start</span></span><br><span class="line"><span class="comment"># mysql -P 3310 -p</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global rpl_semi_sync_slave_enabled=on;</span><br><span class="line">mysql&gt; stop slave IO_THREAD;</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave IO_THREAD;</span><br></pre></td></tr></table></figure><p>master需要等到slave确认后才能提交，如果等不到确认消息，master等待10s种后自动变成异步同步;slave启起来后，master上改变的数据还是会自动复制过来，数据又回到一致。</p><h2 id="3、等待时间的修改（默认10s）"><a href="#3、等待时间的修改（默认10s）" class="headerlink" title="3、等待时间的修改（默认10s）"></a>3、等待时间的修改（默认10s）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global rpl_semi_sync_master_timeout=<span class="number">3600000</span>;</span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">---------</span>+</span><br><span class="line">| Variable_name                      | Value   |</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">---------</span>+</span><br><span class="line">| rpl_semi_sync_master_enabled       | ON      |</span><br><span class="line">| rpl_semi_sync_master_timeout       | <span class="number">3600000</span> |</span><br><span class="line">| rpl_semi_sync_master_trace_level   | <span class="number">32</span>      |</span><br><span class="line">| rpl_semi_sync_master_wait_no_slave | ON      |</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">---------</span>+</span><br></pre></td></tr></table></figure><h2 id="4、卸载半同步复制插件（不需要时）"><a href="#4、卸载半同步复制插件（不需要时）" class="headerlink" title="4、卸载半同步复制插件（不需要时）"></a>4、卸载半同步复制插件（不需要时）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> plugin_name,load_option from information_schema.plugins;</span><br><span class="line">mysql&gt; uninstall plugin 插件名称;</span><br></pre></td></tr></table></figure><h2 id="补充：mysqld重启后，需要手工启动主从同步"><a href="#补充：mysqld重启后，需要手工启动主从同步" class="headerlink" title="补充：mysqld重启后，需要手工启动主从同步"></a>补充：mysqld重启后，需要手工启动主从同步</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld stop</span></span><br><span class="line"><span class="comment"># service mysqld start</span></span><br><span class="line"><span class="comment"># mysql -P 3310 -p</span></span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">Slave_IO_Running: No</span><br><span class="line">Slave_SQL_Running: No</span><br></pre></td></tr></table></figure><p>以上情况代表，mysqld重启后，主从同步也会随之关闭，需要手工开启。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br></pre></td></tr></table></figure><h1 id="二、MHA简介"><a href="#二、MHA简介" class="headerlink" title="二、MHA简介"></a>二、MHA简介</h1><h2 id="1、什么是MHA"><a href="#1、什么是MHA" class="headerlink" title="1、什么是MHA"></a>1、什么是MHA</h2><p>MHA（Master High Availability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本DeNA公司youshimaton（现就职于Facebook公司）开发，是一套优秀的作为MySQL高可用性环境下&#x3D;&#x3D;故障切换和主从提升&#x3D;&#x3D;的高可用软件。在MySQL故障切换过程中，MHA能做到在0~30秒之内自动完成数据库的故障切换操作，并且在进行故障切换的过程中，MHA能在&#x3D;&#x3D;较大程度&#x3D;&#x3D;上保证数据的一致性，以达到真正意义上的高可用。</p><h2 id="2、MHA工作原理"><a href="#2、MHA工作原理" class="headerlink" title="2、MHA工作原理"></a>2、MHA工作原理</h2><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/image-20200901105954602.png" alt="image-20200901105954602"></p><ol><li>当master出现故障时，通过对比slave之间I&#x2F;O线程读取master上binlog的位置，选取最接近的slave做为最新的slave（latest slave）。 </li><li>其它slave通过与latest slave对比&#x3D;&#x3D;生成差异中继日志，并应用&#x3D;&#x3D;。</li><li>在latest slave上&#x3D;&#x3D;应用从master保存的binlog&#x3D;&#x3D;，同时将latest slave&#x3D;&#x3D;提升为master&#x3D;&#x3D;。</li><li>最后在其它slave上应用相应的差异中继日志并开始从新的master开始复制.</li></ol><h2 id="3、MHA组件"><a href="#3、MHA组件" class="headerlink" title="3、MHA组件"></a>3、MHA组件</h2><ul><li><p><strong>MHA Manager</strong>(管理节点) </p><p>MHA Manager可以单独部署在一台独立的机器上管理多个&#x3D;&#x3D;master-slave集群&#x3D;&#x3D;，也可以部署在一台slave节点上。</p></li><li><p><strong>MHA Node</strong>（数据节点）</p><p>MHA Node运行在&#x3D;&#x3D;每台MySQL服务器&#x3D;&#x3D;上，MHA Manager会定时探测集群中的master节点，当master出现故障时，它可以自动将数据的slave提升为新的master，然后将所有其他的slave重新指向新的master。整个故障转移过程对应用程序完全透明。</p></li></ul><h2 id="4、MHA组件介绍"><a href="#4、MHA组件介绍" class="headerlink" title="4、MHA组件介绍"></a>4、MHA组件介绍</h2><ul><li>MHA Manager</li></ul><p> 运行一些工具，比如masterha_manager工具实现&#x3D;&#x3D;自动监控MySQL Master&#x3D;&#x3D;和实现&#x3D;&#x3D;master故障切换&#x3D;&#x3D;，其它工具手动实现master故障切换、在线mater转移、连接检查等等。一个Manager可以管理多 个master-slave集群</p><ul><li>MHA Node</li></ul><p> 部署在所有运行MySQL的服务器上，无论是master还是slave。主要有三个作用：</p><p>1）保存二进制日志</p><pre><code> 如果能够访问故障master，会拷贝master的二进制日志</code></pre><p> 2）应用差异中继日志</p><p>​从拥有最新数据的slave上生成差异中继日志，然后应用差异日志。</p><p> 3）清除中继日志</p><pre><code> 在不停止SQL线程的情况下删除中继日志</code></pre><h2 id="5、MHA中工具介绍"><a href="#5、MHA中工具介绍" class="headerlink" title="5、MHA中工具介绍"></a>5、MHA中工具介绍</h2><h4 id="㈠-Manager工具"><a href="#㈠-Manager工具" class="headerlink" title="㈠ Manager工具"></a>㈠ Manager工具</h4><table><thead><tr><th>工具</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;masterha_check_ssh&#x3D;&#x3D;</td><td>检查MHA的SSH配置</td></tr><tr><td>&#x3D;&#x3D;masterha_check_repl&#x3D;&#x3D;</td><td>检查MySQL复制</td></tr><tr><td>&#x3D;&#x3D;masterha_manager&#x3D;&#x3D;</td><td>启动MHA</td></tr><tr><td>&#x3D;&#x3D;masterha_check_status&#x3D;&#x3D;</td><td>检测当前MHA运行状态</td></tr><tr><td>masterha_master_monitor</td><td>监测master是否宕机</td></tr><tr><td>masterha_master_switch</td><td>控制故障转移(自动或手动)</td></tr><tr><td>masterha_conf_host</td><td>添加或删除配置的server信息</td></tr></tbody></table><h4 id="㈡-Node工具"><a href="#㈡-Node工具" class="headerlink" title="㈡ Node工具"></a>㈡ Node工具</h4><table><thead><tr><th>工具</th><th>说明</th></tr></thead><tbody><tr><td>save_binary_logs</td><td>保存和复制master的二进制日志</td></tr><tr><td>apply_diff_relay_logs</td><td>识别差异的中继日志事件并应用于其它slave</td></tr><tr><td>filter_mysqlbinlog</td><td>去除不必要的ROLLBACK事件(MHA已不再使用这个工具)</td></tr><tr><td>purge_relay_logs</td><td>清除中继日志(不会阻塞SQL线程)</td></tr></tbody></table><p><em>&#x3D;&#x3D;注意：Node这些工具通常由MHA Manager的脚本触发,无需人手操作&#x3D;&#x3D;。</em></p><h1 id="三、MHA部署架构"><a href="#三、MHA部署架构" class="headerlink" title="三、MHA部署架构"></a>三、MHA部署架构</h1><h2 id="1、部署规划"><a href="#1、部署规划" class="headerlink" title="1、部署规划"></a>1、部署规划</h2><table><thead><tr><th>角色</th><th>IP</th><th>主机名</th><th>server-id</th><th>功能</th><th>备注</th></tr></thead><tbody><tr><td>MHA-Manager</td><td>10.1.1.40</td><td>mha.itcast.cn</td><td>—</td><td>管理节点</td><td></td></tr><tr><td>MHA-Node（Master）</td><td>10.1.1.10</td><td>master.itcast.cn</td><td>10</td><td>数据节点</td><td>写</td></tr><tr><td>MHA-Node（Slave1）</td><td>10.1.1.20</td><td>slave1.itcast.cn</td><td>20</td><td>数据节点</td><td>读</td></tr><tr><td>MHA-Node（Slave2）</td><td>10.1.1.30</td><td>slave2.itcast.cn</td><td>30</td><td>数据节点</td><td>读</td></tr></tbody></table><p>##2、系统和软件版本</p><table><thead><tr><th>系统版本</th><th>MySQL版本</th><th>MHA版本</th></tr></thead><tbody><tr><td>CentOS  7.6</td><td>MySQL-5.7.31</td><td>mha4mysql-manager-0.57      mha4mysql-node-0.57</td></tr></tbody></table><h2 id="3、系统环境初始化"><a href="#3、系统环境初始化" class="headerlink" title="3、系统环境初始化"></a>3、系统环境初始化</h2><p>第一步：克隆机器，首先启动MASTER，然后在一次启动SLAVE1、SLAVE2以及MHA</p><p>第二步：更改计算机的主机名称</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname master.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hostnamectl set-hostname slave1.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hostnamectl set-hostname slave2.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hostnamectl set-hostname mha.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br></pre></td></tr></table></figure><p>第三步：更改IP地址以及绑定主机名称及IP地址到&#x2F;etc&#x2F;hosts文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">...</span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.10</span>、IPADDR=<span class="number">10.1</span>.<span class="number">1.20</span>、IPADDR=<span class="number">10.1</span>.<span class="number">1.30</span>、IPADDR=<span class="number">10.1</span>.<span class="number">1.40</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line"><span class="comment"># systemctl disable NetworkManager</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><p>使用MX连接4台服务器，绑定IP地址与主机名称到&#x2F;etc&#x2F;hosts文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/hosts</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.10</span> master.itcast.cn</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.20</span> slave1.itcast.cn</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.30</span> slave2.itcast.cn</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.40</span> mha.itcast.cn</span><br></pre></td></tr></table></figure><p>第四步：关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># sed -i &#x27;/SELINUX=enforcing/cSELINUX=disabled&#x27; /etc/selinux/config</span></span><br></pre></td></tr></table></figure><p>第五步：配置YUM源</p><p>基础源（略，建议使用腾讯源）</p><p>配置epel源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.cloud.tencent.com/repo/epel-7.repo</span></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><p>配置本地自建仓库的yum源</p><p>① 上传mha-yum软件包到&#x2F;soft&#x2F;mha目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /soft/mha</span></span><br></pre></td></tr></table></figure><p>② 配置本地yum源，当我们使用yum时，可以自动找到mha-yum这个仓库目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/yum.repos.d/local.repo</span></span><br><span class="line">[<span class="type">mha</span>]</span><br><span class="line">name=mha soft</span><br><span class="line">baseurl=file:///soft/mha/mha<span class="literal">-yum</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>测试MHA依赖软件库的安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install perl<span class="literal">-DBD-MySQL</span> \</span><br><span class="line">perl<span class="literal">-Config-Tiny</span> \</span><br><span class="line">perl<span class="literal">-Time-HiRes</span> \</span><br><span class="line">perl<span class="literal">-Mail-Sender</span> \</span><br><span class="line">perl<span class="literal">-Mail-Sendmail</span> \</span><br><span class="line">perl<span class="literal">-MIME-Base32</span> \</span><br><span class="line">perl<span class="literal">-MIME-Charset</span> \</span><br><span class="line">perl<span class="literal">-MIME-EncWords</span> \</span><br><span class="line">perl<span class="literal">-Params-Classify</span> \</span><br><span class="line">perl<span class="literal">-Params-Validate</span>.x86_64 \</span><br><span class="line">perl<span class="literal">-Log-Dispatch</span> \</span><br><span class="line">perl<span class="literal">-Parallel-ForkManager</span> \</span><br><span class="line">net<span class="literal">-tools</span></span><br></pre></td></tr></table></figure><p>第六步：ntpdate时间同步（非常重要）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate 182.92.12.11</span></span><br></pre></td></tr></table></figure><h2 id="4、部署MySQL主从复制环境"><a href="#4、部署MySQL主从复制环境" class="headerlink" title="4、部署MySQL主从复制环境"></a>4、部署MySQL主从复制环境</h2><p>数据库安装位置：&#x2F;usr&#x2F;local&#x2F;mysql</p><p>数据库的数据目录：&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data</p><p>套接字文件：&#x2F;tmp&#x2F;mysql.sock</p><p>端口设置：3306</p><p>配置文件位置：&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;my.cnf（MySQL &#x3D;&gt; 安装目录下 &#x3D;&gt; &#x2F;etc目录下）</p><h3 id="☆-MASTER主服务器"><a href="#☆-MASTER主服务器" class="headerlink" title="☆ MASTER主服务器"></a>☆ MASTER主服务器</h3><p>第一步：上传软件到&#x2F;root目录</p><p>第二步：使用脚本安装MySQL软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim mysql.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum install libaio <span class="literal">-y</span></span><br><span class="line">tar <span class="literal">-xf</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span>.tar.gz</span><br><span class="line"><span class="built_in">mv</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span> /usr/local/mysql</span><br><span class="line">useradd <span class="literal">-r</span> <span class="literal">-s</span> /sbin/nologin mysql</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/my.cnf</span><br><span class="line"><span class="built_in">cd</span> /usr/local/mysql</span><br><span class="line">mkdir mysql<span class="literal">-files</span></span><br><span class="line">chown mysql:mysql mysql<span class="literal">-files</span></span><br><span class="line">chmod <span class="number">750</span> mysql<span class="literal">-files</span></span><br><span class="line">bin/mysqld <span class="literal">--initialize</span> <span class="literal">--user</span>=mysql <span class="literal">--basedir</span>=/usr/local/mysql &amp;&gt; /root/password.txt</span><br><span class="line">bin/mysql_ssl_rsa_setup <span class="literal">--datadir</span>=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line"><span class="built_in">cp</span> support<span class="literal">-files</span>/mysql.server /etc/init.d/mysqld</span><br><span class="line">service mysqld <span class="built_in">start</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=$PATH:/usr/local/mysql/bin&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># source mysql.sh</span></span><br></pre></td></tr></table></figure><p>第三步：设置MySQL密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -p</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> password=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>第四步：进行安全初始化</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql_secure_installation</span></span><br></pre></td></tr></table></figure><p>第五步：编写MASTER主机中my.cnf配置文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/mysql/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">port=<span class="number">3306</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/<span class="keyword">data</span>/master.err</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">10</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysqld restart</span></span><br></pre></td></tr></table></figure><h3 id="☆-SLAVE1-SLAVE2从服务器"><a href="#☆-SLAVE1-SLAVE2从服务器" class="headerlink" title="☆ SLAVE1&#x2F;SLAVE2从服务器"></a>☆ SLAVE1&#x2F;SLAVE2从服务器</h3><p>第一步：上传MySQL软件到服务器端</p><p>第二步：使用脚本安装MySQL，但是不需要进行初始化</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim mysql.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum install libaio <span class="literal">-y</span></span><br><span class="line">tar <span class="literal">-xf</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span>.tar.gz</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /usr/local/mysql</span><br><span class="line"><span class="built_in">mv</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span> /usr/local/mysql</span><br><span class="line">useradd <span class="literal">-r</span> <span class="literal">-s</span> /sbin/nologin mysql</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/my.cnf</span><br><span class="line"><span class="built_in">cd</span> /usr/local/mysql</span><br><span class="line">mkdir mysql<span class="literal">-files</span></span><br><span class="line">chown mysql:mysql mysql<span class="literal">-files</span></span><br><span class="line">chmod <span class="number">750</span> mysql<span class="literal">-files</span></span><br><span class="line"><span class="built_in">cp</span> support<span class="literal">-files</span>/mysql.server /etc/init.d/mysqld</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=$PATH:/usr/local/mysql/bin&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># source mysql.sh</span></span><br></pre></td></tr></table></figure><p>第三步：使用rsync把MASTER服务器中的data数据目录同步到SLAVE1与SLAVE2</p><p>MASTER：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /usr/local/mysql/data/auto.cnf</span></span><br><span class="line"><span class="comment"># rsync -av /usr/local/mysql/data root@10.1.1.20:/usr/local/mysql/</span></span><br><span class="line"><span class="comment"># rsync -av /usr/local/mysql/data root@10.1.1.30:/usr/local/mysql/</span></span><br></pre></td></tr></table></figure><p>第四步：给SLAVE1与SLAVE2配置my.cnf文件</p><p>SLAVE1：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/mysql/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">port=<span class="number">3306</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/<span class="keyword">data</span>/slave1.err</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog</span><br><span class="line">relay<span class="literal">-log</span>=/usr/local/mysql/<span class="keyword">data</span>/relaylog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">20</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line"><span class="built_in">skip-slave</span><span class="literal">-start</span></span><br></pre></td></tr></table></figure><p>SLAVE2：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/mysql/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">port=<span class="number">3306</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/<span class="keyword">data</span>/slave2.err</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog</span><br><span class="line">relay<span class="literal">-log</span>=/usr/local/mysql/<span class="keyword">data</span>/relaylog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">30</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line"><span class="built_in">skip-slave</span><span class="literal">-start</span></span><br></pre></td></tr></table></figure><p>配置完成后，启动MySQL软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld restart</span></span><br></pre></td></tr></table></figure><h3 id="☆-配置主从数据同步"><a href="#☆-配置主从数据同步" class="headerlink" title="☆ 配置主从数据同步"></a>☆ 配置主从数据同步</h3><p>第一步：在MASTER服务器中创建一个slave同步账号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;slave&#x27;</span><span class="string">@&#x27;10.1.1.%&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; grant replication slave on *.* to &#x27;slave&#x27;@&#x27;10.1.1.%&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br></pre></td></tr></table></figure><p>第二步：创建一个mha账号（方便后期MHA监控主从同步状态）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;mha&#x27;</span><span class="string">@&#x27;10.1.1.40&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; grant all privileges on *.* to &#x27;mha&#x27;@&#x27;10.1.1.40&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br></pre></td></tr></table></figure><p>第三步：在SLAVE1与SLAVE2中配置主从数据同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=<span class="string">&#x27;10.1.1.10&#x27;</span>,master_port=<span class="number">3306</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;123&#x27;</span>,master_auto_position=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">mysql&gt; show slave status\G</span><br></pre></td></tr></table></figure><p>到此整个一主两从就配置完毕了！</p><h2 id="5、MHA软件的安装"><a href="#5、MHA软件的安装" class="headerlink" title="5、MHA软件的安装"></a>5、MHA软件的安装</h2><h3 id="㈠-不同节点安装软件"><a href="#㈠-不同节点安装软件" class="headerlink" title="㈠ 不同节点安装软件"></a>㈠ 不同节点安装软件</h3><p>说明：在所有节点安装 &#x3D;&#x3D;mha-node&#x3D;&#x3D; 软件包，在 &#x3D;&#x3D;mha 管理&#x3D;&#x3D;端再安装 mha-manager 软件包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">slave1</span> ~]<span class="comment"># yum -y install mha4mysql-node-0.57-0.el7.noarch.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">slave2</span> ~]<span class="comment"># yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># yum –y install mha4mysql-manager-0.57-0.el7.noarch.rpm</span></span><br></pre></td></tr></table></figure><blockquote><p>如果已经提前安装依赖软件，则大家可以使用rpm -ivh直接安装</p></blockquote><h3 id="㈡-配置ssh互信（免密登录）"><a href="#㈡-配置ssh互信（免密登录）" class="headerlink" title="㈡ 配置ssh互信（免密登录）"></a>㈡ 配置ssh互信（免密登录）</h3><p>说明：</p><ol><li>在生产环境中几乎都是禁止root远程登陆服务器的，所以ssh免密码登陆要在admin用户下进行配置，这是处于安全角度考虑出发。 </li><li>admin用户可以是任意普通用户</li><li>该普通用户用于mha的管理节点远程访问mysql复制组中的所有主机，完成一些其他工作</li></ol><p>第一步：在所有机器上创建一个普通账号admin，密码123</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd admin</span></span><br><span class="line"><span class="comment"># echo 123|passwd --stdin admin</span></span><br></pre></td></tr></table></figure><p>第二步：配置mha主机到其他主机的admin用户互信</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mha端：</span><br><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># su - admin</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> ~]<span class="variable">$</span> ssh<span class="literal">-keygen</span> <span class="literal">-P</span> <span class="string">&quot;&quot;</span> <span class="operator">-f</span> ~/.ssh/id_rsa</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> ~]<span class="variable">$</span> <span class="built_in">cd</span> .ssh/</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> <span class="type">.ssh</span>]<span class="variable">$</span> <span class="built_in">ls</span></span><br><span class="line">id_rsa  id_rsa.pub</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> <span class="type">.ssh</span>]<span class="variable">$</span> <span class="built_in">mv</span> id_rsa.pub authorized_keys</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> <span class="type">.ssh</span>]<span class="variable">$</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">10</span> <span class="number">20</span> <span class="number">30</span>;<span class="keyword">do</span> scp <span class="literal">-r</span> ../.ssh/ <span class="number">10.1</span>.<span class="number">1</span>.<span class="variable">$i:</span>~/;done</span><br><span class="line"></span><br><span class="line">测试免密登录：</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> <span class="type">.ssh</span>]<span class="variable">$</span> ssh <span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> <span class="type">.ssh</span>]<span class="variable">$</span> ssh <span class="number">10.1</span>.<span class="number">1.20</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> <span class="type">.ssh</span>]<span class="variable">$</span> ssh <span class="number">10.1</span>.<span class="number">1.30</span></span><br></pre></td></tr></table></figure><blockquote><p>疑问：SSH免密只需要拷贝公钥，但是以上代码是把整个.ssh目录拷贝过去了。</p><p>答：因为MHA的互信，要求不仅仅是MHA免密到MASTER、SLAVE1、SLAVE2，MASTER也要免密到MHA、SLAVE1、SLAVE2…</p></blockquote><h3 id="㈢-配置admin用户的sudo权限"><a href="#㈢-配置admin用户的sudo权限" class="headerlink" title="㈢ 配置admin用户的sudo权限"></a>㈢ 配置admin用户的sudo权限</h3><p>MASTER主机上：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># vim /etc/sudoers.d/admin</span></span><br><span class="line"><span class="comment">#User_Alias  表示具有sudo权限的用户列表; Host_Alias表示主机的列表</span></span><br><span class="line">User_Alias MYSQL_USERS = admin</span><br><span class="line"><span class="comment">#Runas_Alias  表示用户以什么身份登录</span></span><br><span class="line">Runas_Alias MYSQL_RUNAS = root</span><br><span class="line"><span class="comment">#Cmnd_Alias  表示允许执行命令的列表（命令需要使用完整路径）</span></span><br><span class="line">Cmnd_Alias MYSQL_CMNDS = /sbin/ifconfig,/sbin/arping</span><br><span class="line">MYSQL_USERS ALL = (MYSQL_RUNAS) NOPASSWD: MYSQL_CMNDS</span><br></pre></td></tr></table></figure><p>把这个权限分发给SLAVE1与SLAVE2一份（当故障发生时，从服务器也可以自己设置VIP）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># for i in 20 30;do scp /etc/sudoers.d/admin 10.1.1.$i:/etc/sudoers.d/;done</span></span><br></pre></td></tr></table></figure><p>测试admin用户是否可以挂载VIP（只能在MASTER机器上挂载VIP）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - admin</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">master</span> ~]<span class="variable">$</span> sudo /sbin/ifconfig ens33:<span class="number">1</span> <span class="number">10.1</span>.<span class="number">1.100</span> broadcast <span class="number">10.1</span>.<span class="number">1.255</span> netmask <span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">master</span> ~]<span class="variable">$</span> sudo /sbin/arping <span class="literal">-fqc</span> <span class="number">5</span> <span class="literal">-w</span> <span class="number">5</span> <span class="literal">-I</span> ens33 <span class="literal">-s</span> <span class="number">10.1</span>.<span class="number">1.100</span> <span class="literal">-U</span> <span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">master</span> ~]<span class="variable">$</span> ip a </span><br><span class="line"></span><br><span class="line">补充：</span><br><span class="line">arping：用来向局域网内的其它主机发送ARP请求的指令，可以用来测试局域网内的某个IP是否已被使用。</span><br><span class="line"></span><br><span class="line"><span class="operator">-f</span>：收到第一个响应包后退出。</span><br><span class="line"><span class="literal">-q</span>：quite模式，不显示输出。 </span><br><span class="line"><span class="literal">-c</span>：发送指定的count个ARP REQUEST包后停止。如果指定了<span class="literal">-w</span>参数，则会等待相同数量的ARP REPLY包，直到超时为止。</span><br><span class="line"><span class="literal">-w</span>：指定一个超时时间，单位为秒，arping在到达指定时间后退出，无论期间发送或接收了多少包。在这种情况下，arping在发送完指定的count（<span class="literal">-c</span>）个包后并不会停止，而是等待到超时或发送的count个包都进行了回应后才会退出。 </span><br><span class="line"><span class="literal">-I</span>：指定设备名，用来发送ARP REQUEST包的网络设备的名称。</span><br><span class="line"><span class="literal">-D</span>：重复地址探测模式，用来检测有没有IP地址冲突，如果没有IP冲突则返回<span class="number">0</span>。 </span><br><span class="line"><span class="literal">-s</span>：设置发送ARP包的IP资源地址</span><br><span class="line"><span class="literal">-U</span>：无理由的（强制的）ARP模式去更新别的主机上的ARP CACHE列表中的本机的信息，不需要响应。</span><br><span class="line"><span class="literal">-h</span>：显示帮助页。 </span><br></pre></td></tr></table></figure><h3 id="㈣-创建mha相关配置文件"><a href="#㈣-创建mha相关配置文件" class="headerlink" title="㈣ 创建mha相关配置文件"></a>㈣ 创建mha相关配置文件</h3><p>MHA服务器：创建工作目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># mkdir /etc/mha/</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># mkdir -p /data/mha/masterha/app1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># chown -R admin. /data/mha</span></span><br></pre></td></tr></table></figure><p>创建mha局部配置文件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># vim /etc/mha/app1.conf</span></span><br><span class="line">[<span class="type">server</span> <span class="type">default</span>]</span><br><span class="line"><span class="comment"># 设置监控用户和密码（修改1）</span></span><br><span class="line">user=mha</span><br><span class="line">password=<span class="number">123</span></span><br><span class="line"><span class="comment"># 设置复制环境中的复制用户和密码（修改2）</span></span><br><span class="line">repl_user=slave</span><br><span class="line">repl_password=<span class="number">123</span></span><br><span class="line"><span class="comment"># 设置ssh的登录用户名（修改3）</span></span><br><span class="line">ssh_user=admin</span><br><span class="line"><span class="comment"># 设置监控主库,发送ping包的时间间隔,默认是3秒,尝试三次没有回应的时候自动进行failover</span></span><br><span class="line">ping_interval=<span class="number">3</span></span><br><span class="line"><span class="comment"># 设置mgr的工作目录</span></span><br><span class="line">manager_workdir=/<span class="keyword">data</span>/mha/masterha/app1</span><br><span class="line"><span class="comment"># 设置mysql master保存binlog的目录,以便MHA可以找到master的二进制日志（修改4）</span></span><br><span class="line">master_binlog_dir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line"><span class="comment"># 设置master的pid文件（修改5）</span></span><br><span class="line">master_pid_file=/usr/local/mysql/<span class="keyword">data</span>/master.itcast.cn.pid</span><br><span class="line"><span class="comment"># 设置mysql master在发生切换时保存binlog的目录（在mysql master上创建这个目录）</span></span><br><span class="line">remote_workdir=/<span class="keyword">data</span>/mysql/mha</span><br><span class="line"><span class="comment"># 设置mgr日志文件（MHA遇到问题，主要看这个日志）</span></span><br><span class="line">manager_log=/<span class="keyword">data</span>/mha/masterha/app1/app1<span class="literal">-3306</span>.log</span><br><span class="line"><span class="comment"># MHA到master的监控之间出现问题,MHA Manager将会尝试从slave1和slave2登录到master上</span></span><br><span class="line">secondary_check_script=/usr/bin/masterha_secondary_check <span class="literal">-s</span> <span class="number">10.1</span>.<span class="number">1.20</span> <span class="literal">-s</span> <span class="number">10.1</span>.<span class="number">1.30</span> <span class="literal">--user</span>=admin <span class="literal">--port</span>=<span class="number">22</span> <span class="literal">--master_host</span>=<span class="number">10.1</span>.<span class="number">1.10</span> <span class="literal">--master_port</span>=<span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置自动failover时候的切换脚本（故障发生时，自动挂载VIP到SLAVE1或SLAVE2）</span></span><br><span class="line">master_ip_failover_script=<span class="string">&quot;/etc/mha/master_ip_failover.sh 10.1.1.100 1&quot;</span></span><br><span class="line"><span class="comment"># 设置手动切换时候的切换脚本</span></span><br><span class="line"><span class="comment">#master_ip_online_change_script=&quot;/etc/mha/master_ip_online_change.sh 10.1.1.100 1&quot;</span></span><br><span class="line"><span class="comment"># 设置故障发生后关闭故障主机脚本</span></span><br><span class="line"><span class="comment"># shutdown_script=&quot;/etc/mha/power_manager&quot;</span></span><br><span class="line">[<span class="type">server1</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">port= <span class="number">3306</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">[<span class="type">server2</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.20</span></span><br><span class="line">port= <span class="number">3306</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">[<span class="type">server3</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.30</span></span><br><span class="line">port= <span class="number">3306</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="㈤-上传相应脚本-etc-mha目录，然后更改配置信息，授权"><a href="#㈤-上传相应脚本-etc-mha目录，然后更改配置信息，授权" class="headerlink" title="㈤ 上传相应脚本&#x2F;etc&#x2F;mha目录，然后更改配置信息，授权"></a>㈤ 上传相应脚本&#x2F;etc&#x2F;mha目录，然后更改配置信息，授权</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># ls /etc/mha/</span></span><br><span class="line">app1.conf  master_ip_failover.sh</span><br><span class="line">注意：脚本内容中要修改网卡名字和连接用户为admin</span><br><span class="line">my <span class="variable">$vip</span>  = shift;</span><br><span class="line">my <span class="variable">$interface</span> = <span class="string">&#x27;ens33&#x27;</span>;网卡名（<span class="number">38</span>行）</span><br><span class="line">my <span class="variable">$key</span> = shift;</span><br><span class="line">...</span><br><span class="line">sub stop_vip() &#123;</span><br><span class="line">    my <span class="variable">$ssh_user</span> = <span class="string">&quot;admin&quot;</span>;用户名（<span class="number">110</span>行）</span><br><span class="line">    print <span class="string">&quot;=======<span class="variable">$ssh_stop_vip</span>==================\n&quot;</span>;</span><br><span class="line">    `ssh <span class="variable">$ssh_user</span>\<span class="selector-tag">@</span><span class="variable">$orig_master_host</span> \<span class="string">&quot; <span class="variable">$ssh_stop_vip</span> \&quot;</span>`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">mha</span> ~]<span class="comment"># chmod +x /etc/mha/master_ip_*</span></span><br></pre></td></tr></table></figure><h2 id="6、检测SSH互信以及MySQL主从状态"><a href="#6、检测SSH互信以及MySQL主从状态" class="headerlink" title="6、检测SSH互信以及MySQL主从状态"></a>6、检测SSH互信以及MySQL主从状态</h2><p>MHA：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - admin</span></span><br><span class="line"><span class="comment"># 检测SSH互信</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> ~]<span class="variable">$</span> masterha_check_ssh <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br><span class="line"><span class="comment"># 检测集群状态</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> ~]<span class="variable">$</span> masterha_check_repl <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br></pre></td></tr></table></figure><h2 id="7、检查MHA状态，然后运行MHA（监控开始）"><a href="#7、检查MHA状态，然后运行MHA（监控开始）" class="headerlink" title="7、检查MHA状态，然后运行MHA（监控开始）"></a>7、检查MHA状态，然后运行MHA（监控开始）</h2><p>MHA：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> ~]<span class="variable">$</span> masterha_check_status <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br><span class="line">app1 is stopped(<span class="number">2</span>:NOT_RUNNING).</span><br><span class="line"></span><br><span class="line">开启MHA Manager监控（关键，代表启动MHA）：</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> ~]<span class="variable">$</span> nohup masterha_manager <span class="literal">--conf</span>=/etc/mha/app1.conf <span class="literal">--remove_dead_master_conf</span> <span class="literal">--ignore_last_failover</span> &amp;</span><br><span class="line"></span><br><span class="line">再次查看监控状态：</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mha</span> ~]<span class="variable">$</span> masterha_check_status <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br><span class="line">app1 (pid:<span class="number">8913</span>) is running(<span class="number">0</span>:PING_OK), master:<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"><span class="number">1</span>. 如果正常，会显示”PING_OK ”，否则会显示”NOT_RUNNING ”，说明 MHA监控没有开启</span><br><span class="line"><span class="number">2</span>. 使用admin用户启动监控，否则会报权限拒绝</span><br><span class="line"><span class="number">3</span>. 手动停止监控命令:masterha_stop <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br></pre></td></tr></table></figure><p>其实到此，咱们MHA就已经配置完毕了！</p><h1 id="四、自动Failover测试"><a href="#四、自动Failover测试" class="headerlink" title="四、自动Failover测试"></a>四、自动Failover测试</h1><h2 id="1、在MASTER服务器安装测试工具"><a href="#1、在MASTER服务器安装测试工具" class="headerlink" title="1、在MASTER服务器安装测试工具"></a>1、在MASTER服务器安装测试工具</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># yum -y install sysbench</span></span><br></pre></td></tr></table></figure><h2 id="2、插入测试数据"><a href="#2、插入测试数据" class="headerlink" title="2、插入测试数据"></a>2、插入测试数据</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">master服务器上创建测试库test</span><br><span class="line">mysql&gt; create database test charset utf8mb4;</span><br><span class="line">Query OK, <span class="number">1</span> row affected (<span class="number">0.17</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to <span class="string">&#x27;mha&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;; </span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.14 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.11 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; exit</span></span><br><span class="line"><span class="string">Bye</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@master ~]# sysbench /usr/share/sysbench/oltp_read_only.lua \</span></span><br><span class="line"><span class="string"> --mysql-host=10.1.1.10  --mysql-port=3306  --mysql-user=mha \</span></span><br><span class="line"><span class="string"> --mysql-password=123  --mysql-socket=/tmp/mysql.sock \</span></span><br><span class="line"><span class="string"> --mysql-db=test  --db-driver=mysql  --tables=1 \</span></span><br><span class="line"><span class="string"> --table-size=100000 --report-interval=10 --threads=128 --time=120 prepare</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">mysql&gt; select count(*) from sbtest1;</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">| count(*) |</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">|   100000 |</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">1 row in set (0.01 sec)</span></span><br></pre></td></tr></table></figure><h2 id="3、拍摄快照"><a href="#3、拍摄快照" class="headerlink" title="3、拍摄快照"></a>3、拍摄快照</h2><p>MHA、MASTER、SLAVE1、SLAVE2</p><h2 id="4、模拟MASTER服务器故障"><a href="#4、模拟MASTER服务器故障" class="headerlink" title="4、模拟MASTER服务器故障"></a>4、模拟MASTER服务器故障</h2><p>MHA服务器：监控日志</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># tail -f /data/mha/masterha/app1/app1-3306.log</span></span><br></pre></td></tr></table></figure><p>MASTER服务器：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld stop</span></span><br></pre></td></tr></table></figure><p>MHA日志显示结果：</p><p>故障切换：</p><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/image-20200901174326023.png" alt="image-20200901174326023"></p><p>VIP漂移：</p><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/image-20200901174341745.png" alt="image-20200901174341745"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1、管理节点配置文件错误"><a href="#1、管理节点配置文件错误" class="headerlink" title="1、管理节点配置文件错误"></a>1、管理节点配置文件错误</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># cat /etc/mha/app1.conf</span></span><br><span class="line">[<span class="type">server</span> <span class="type">default</span>]</span><br><span class="line"><span class="comment"># 设置监控用户和密码,该用户是master上创建的数据库管理账号，拥有所有权限</span></span><br><span class="line">user=mha</span><br><span class="line">password=<span class="number">123</span></span><br><span class="line"><span class="comment"># 设置复制环境中的复制用户和密码，注意需要有以下权限：</span></span><br><span class="line"><span class="comment">#REPLICATION SLAVE和REPLICATION CLIENT</span></span><br><span class="line">repl_user=slave</span><br><span class="line">repl_password=<span class="number">123</span></span><br><span class="line"><span class="comment"># 设置ssh的登录用户名</span></span><br><span class="line">ssh_user=admin</span><br><span class="line">....</span><br><span class="line">[<span class="type">server1</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">port= <span class="number">3306</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">[<span class="type">server2</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.20</span></span><br><span class="line">port= <span class="number">3306</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">[<span class="type">server3</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.30</span></span><br><span class="line">port= <span class="number">3306</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">注意：一定要配置正确的IP和端口号</span><br></pre></td></tr></table></figure><h3 id="2、配置MHA时数据只读设置"><a href="#2、配置MHA时数据只读设置" class="headerlink" title="2、配置MHA时数据只读设置"></a>2、配置MHA时数据只读设置</h3><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/%E9%94%99%E8%AF%AF1.png" alt="错误1"></p><p>解决办法：设置从服务器为只读</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> <span class="selector-tag">@</span>@global.read_only=<span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;read_only&#x27;</span>;</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| read_only     | ON    |</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、复制用户权限密码错误"><a href="#3、复制用户权限密码错误" class="headerlink" title="3、复制用户权限密码错误"></a>3、复制用户权限密码错误</h3><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/%E9%94%99%E8%AF%AF2.png" alt="错误2"></p><p>原因：</p><ol><li>复制用户slave没有相关权限，REPLICATION SLAVE和&#x3D;&#x3D;REPLICATION CLIENT&#x3D;&#x3D;</li><li>从服务器没有创建复制用户</li></ol><h3 id="4、其他错误"><a href="#4、其他错误" class="headerlink" title="4、其他错误"></a>4、其他错误</h3><p>MHA集群至少需要2个slave，所以如果只有一台slave的话，检查也是通不过的！</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从复制架构</title>
      <link href="/posts/13613.html"/>
      <url>/posts/13613.html</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL主从复制架构"><a href="#MySQL主从复制架构" class="headerlink" title="MySQL主从复制架构"></a>MySQL主从复制架构</h1><h1 id="一、MySQL集群概述"><a href="#一、MySQL集群概述" class="headerlink" title="一、MySQL集群概述"></a>一、MySQL集群概述</h1><p>1、集群的主要类型</p><ul><li>高可用集群（High Available Cluster，HA Cluster）</li><li>高可用集群是指通过<strong>特殊的软件</strong>把独立的服务器连接起来，组成一个能够<strong>提供故障切换</strong>（Fail Over）功能的集群</li></ul><h2 id="2、如何衡量高可用"><a href="#2、如何衡量高可用" class="headerlink" title="2、如何衡量高可用"></a>2、如何衡量高可用</h2><table><thead><tr><th>可用性级别(指标)</th><th>年度宕机时间</th><th>描述</th><th>叫法</th></tr></thead><tbody><tr><td>99%</td><td>3.65天&#x2F;年</td><td>基本可用系统</td><td>2个9</td></tr><tr><td>99.9%</td><td>8.76小时&#x2F;年</td><td>可用系统</td><td>3个9</td></tr><tr><td>99.99%</td><td>52.6分钟&#x2F;年</td><td>高可用系统</td><td>4个9</td></tr><tr><td>99.999%</td><td>5.3分钟&#x2F;年</td><td>抗故障系统</td><td>5个9</td></tr><tr><td>99.9999%</td><td>32秒&#x2F;年</td><td>容错系统</td><td>6个9</td></tr></tbody></table><p>计算方法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>年 = <span class="number">365</span>天 = <span class="number">8760</span>小时</span><br><span class="line"><span class="number">99</span>% = <span class="number">8760</span> * <span class="number">1</span>% = <span class="number">8760</span> * <span class="number">0.01</span> = <span class="number">87.6</span>小时=<span class="number">3.65</span>天</span><br><span class="line"><span class="number">99.9</span> = <span class="number">8760</span> * <span class="number">0.1</span>% = <span class="number">8760</span> * <span class="number">0.001</span> = <span class="number">8.76</span>小时</span><br><span class="line"><span class="number">99.99</span> = <span class="number">8760</span> * <span class="number">0.0001</span> = <span class="number">0.876</span>小时 = <span class="number">0.876</span> * <span class="number">60</span> = <span class="number">52.6</span>分钟</span><br><span class="line"><span class="number">99.999</span> = <span class="number">8760</span> * <span class="number">0.00001</span> = <span class="number">0.0876</span>小时 = <span class="number">0.0876</span> * <span class="number">60</span> = <span class="number">5.26</span>分钟</span><br></pre></td></tr></table></figure><p>##3、常用的集群架构</p><ul><li>&#x3D;&#x3D;<strong>MySQL Replication</strong>&#x3D;&#x3D;</li><li>MySQL Cluster</li><li>MySQL Group Replication （MGR）   5.7.17    多主一从</li><li>MariaDB Galera Cluster </li><li>&#x3D;&#x3D;MHA&#x3D;&#x3D;|Keepalived|HeartBeat|Lvs，Haproxy等技术构建高可用集群</li></ul><h1 id="二、MySQL复制简介"><a href="#二、MySQL复制简介" class="headerlink" title="二、MySQL复制简介"></a>二、MySQL复制简介</h1><h2 id="1、什么是MySQL复制"><a href="#1、什么是MySQL复制" class="headerlink" title="1、什么是MySQL复制"></a>1、什么是MySQL复制</h2><ul><li>Replication可以实现将数据从一台数据库服务器（master）复制到一台到多台数据库服务器(slave)</li><li>默认情况下，属于<strong>异步</strong>复制，所以无需维持长连接</li></ul><h2 id="2、-MySQL复制原理（重点）"><a href="#2、-MySQL复制原理（重点）" class="headerlink" title="2、 MySQL复制原理（重点）"></a>2、 MySQL复制原理（重点）</h2><p>简单来说，master将数据库的改变写入**&#x3D;&#x3D;二进制日志&#x3D;&#x3D;<strong>，slave同步这些二进制日志，并根据这些二进制日志进行</strong>&#x3D;&#x3D;数据重演操作&#x3D;&#x3D;**，实现数据异步同步。</p><p>master：主</p><p>slave：从</p><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831095948344.png" alt="image-20200831095948344"></p><p><strong>详细描述：</strong></p><p>当主从同步配置完毕后：</p><ol><li>slave端的IO线程发送请求给master端的binlog dump线程</li><li>master端binlog dump线程&#x3D;&#x3D;获取二进制日志&#x3D;&#x3D;信息(&#x3D;&#x3D;文件名和位置信息&#x3D;&#x3D;)发送给slave端的IO线程</li><li>salve端IO线程获取到的内容&#x3D;&#x3D;依次&#x3D;&#x3D;写到slave端relay log(中继日志)里，并把master端的bin-log文件名和位置记录到master.info里</li><li>salve端的SQL线程，检测到relay  log中内容更新，就会解析relay log里更新的内容，并&#x3D;&#x3D;执行这些操作&#x3D;&#x3D;，从而达到和master数据一致</li></ol><blockquote><p>扩展：relay log中继日志</p></blockquote><p><strong>作用：</strong>记录从(slave)服务器接收来自主(master)服务器的二进制日志.</p><p><strong>场景：</strong>用于&#x3D;&#x3D;主从复制&#x3D;&#x3D;</p><blockquote><p> master主服务器将自己的二进制日志发送给slave从服务器，slave先保存在自己的&#x3D;&#x3D;中继日志中&#x3D;&#x3D;，然后再执行自己本地的relay log里的sql达到数据库更改和master保持一致。</p></blockquote><p><strong>如何开启？</strong></p><p>默认中继日志&#x3D;&#x3D;没有开启&#x3D;&#x3D;，可以通过修改配置文件完成开启，如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line"><span class="comment">#指定二进制日志存放位置及文件名</span></span><br><span class="line">relay<span class="literal">-log</span>=/mysql_3306/<span class="keyword">data</span>/relaylog</span><br></pre></td></tr></table></figure><h2 id="3、MySQL复制架构"><a href="#3、MySQL复制架构" class="headerlink" title="3、MySQL复制架构"></a>3、MySQL复制架构</h2><h3 id="㈠-双机热备（AB复制）"><a href="#㈠-双机热备（AB复制）" class="headerlink" title="㈠  双机热备（AB复制）"></a>㈠  双机热备（AB复制）</h3><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831102317979.png" alt="image-20200831102317979"></p><p><strong>默认情况下，master接受读写请求，slave只接受读请求以减轻master的压力。</strong></p><h3 id="㈡-级联复制"><a href="#㈡-级联复制" class="headerlink" title="㈡  级联复制"></a>㈡  级联复制</h3><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831102431703.png" alt="image-20200831102431703"></p><p><strong>优点：</strong>进一步分担读压力</p><p><strong>缺点：</strong>slave1 出现故障，后面的所有级联slave服务器都会同步失败</p><h3 id="㈢-并联复制（一主多从）"><a href="#㈢-并联复制（一主多从）" class="headerlink" title="㈢ 并联复制（一主多从）"></a>㈢ 并联复制（一主多从）</h3><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831102645559.png" alt="image-20200831102645559"></p><p><strong>优点：</strong>解决上面的slave1的单点故障，同时也分担读压力</p><p><strong>缺点：</strong>间接增加master的压力（传输二进制日志压力）</p><h3 id="㈣-双主复制（了解）"><a href="#㈣-双主复制（了解）" class="headerlink" title="㈣ 双主复制（了解）"></a>㈣ 双主复制（了解）</h3><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831102830372.png" alt="image-20200831102830372"></p><p><strong>特点：</strong></p><p>从命名来看，两台master好像都能接受读、写请求，但实际上，往往运作的过程中，同一时刻只有其中一台master会接受写请求，另外一台接受读请求。</p><h1 id="三、MySQL主从复制的搭建（AB复制）"><a href="#三、MySQL主从复制的搭建（AB复制）" class="headerlink" title="三、MySQL主从复制的搭建（AB复制）"></a>三、MySQL主从复制的搭建（AB复制）</h1><p>##1、传统AB复制架构(M-S)</p><p><strong>说明</strong>：在配置MySQL主从架构时，必须保证数据库的版本高度一致，统一版本为5.7.31</p><h2 id="2、环境规划"><a href="#2、环境规划" class="headerlink" title="2、环境规划"></a>2、环境规划</h2><table><thead><tr><th>编号</th><th>主机名称</th><th>主机IP地址</th><th>角色信息</th></tr></thead><tbody><tr><td>1</td><td>master.itcast.cn</td><td>10.1.1.10</td><td>MASTER主服务器</td></tr><tr><td>2</td><td>slave.itcast.cn</td><td>10.1.1.100</td><td>SLAVE从服务器</td></tr></tbody></table><h2 id="3、安装前准备工作"><a href="#3、安装前准备工作" class="headerlink" title="3、安装前准备工作"></a>3、安装前准备工作</h2><p>第一步：克隆两台全新的数据库服务器，MASTER&#x2F;SLAVE</p><p>第二步：首先启动MASTER，然后启动SLAVE，更改主机名称</p><p>Master：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname master.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br></pre></td></tr></table></figure><p>Slave：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname slave.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br></pre></td></tr></table></figure><p>第三步：更改静态IP配置，把Master和Slave都配置与规划一致，然后关闭NetworkManager</p><p>Master：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">...</span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Slave：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">...</span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Master&#x2F;Slave：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line"><span class="comment"># systemctl disable NetworkManager</span></span><br></pre></td></tr></table></figure><p>设置完成后，重启网络，然后使用MX连接Master与Slave。</p><p>第四步：由于两台机器处于集群架构，需要互相连接。绑定主机名称与IP地址到&#x2F;etc&#x2F;hosts</p><p>Master&#x2F;Slave：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/hosts</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.10</span> master.itcast.cn</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.100</span> slave.itcast.cn</span><br></pre></td></tr></table></figure><p>第五步：关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"><span class="comment"># systemctl list-unit-files|grep firewalld</span></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># sed -i &#x27;/^SELINUX=/cSELINUX=disabled&#x27; /etc/selinux/config</span></span><br></pre></td></tr></table></figure><p>第六步：配置yum源（建议使用腾讯源）</p><p>配置参考以前笔记（略）</p><p>第七步：时间同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate 182.92.12.11</span></span><br></pre></td></tr></table></figure><h2 id="4、MySQL主从复制核心思路"><a href="#4、MySQL主从复制核心思路" class="headerlink" title="4、MySQL主从复制核心思路"></a>4、MySQL主从复制核心思路</h2><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831111825894.png" alt="image-20200831111825894"></p><ol><li>slave必须安装相同版本的mysql数据库软件</li><li>master端必须开启&#x3D;&#x3D;二进制日志&#x3D;&#x3D;；slave端必须开启&#x3D;&#x3D;relay log日志&#x3D;&#x3D;</li><li>master端和slave端的server-id号&#x3D;&#x3D;不能一致&#x3D;&#x3D;</li><li>slave端配置向master来同步数据<ul><li>master端必须创建一个复制用户</li><li>保证master和slave端&#x3D;&#x3D;初始数据一致&#x3D;&#x3D;</li><li>配置主从复制（slave端）</li></ul></li></ol><h2 id="5、MySQL主从复制的具体实践"><a href="#5、MySQL主从复制的具体实践" class="headerlink" title="5、MySQL主从复制的具体实践"></a>5、MySQL主从复制的具体实践</h2><h3 id="第一步：上传MySQL软件包到Master与Slave"><a href="#第一步：上传MySQL软件包到Master与Slave" class="headerlink" title="第一步：上传MySQL软件包到Master与Slave"></a>第一步：上传MySQL软件包到Master与Slave</h3><h3 id="第二步：在Master端安装、初始化以及运行mysql软件"><a href="#第二步：在Master端安装、初始化以及运行mysql软件" class="headerlink" title="第二步：在Master端安装、初始化以及运行mysql软件"></a>第二步：在Master端安装、初始化以及运行mysql软件</h3><p>安装需求：</p><table><thead><tr><th>选项</th><th>值（自定义也可以采用默认形式）</th></tr></thead><tbody><tr><td>安装路径</td><td>&#x2F;usr&#x2F;local&#x2F;mysql</td></tr><tr><td>数据路径</td><td>&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data</td></tr><tr><td>端口号</td><td>3306</td></tr></tbody></table><h4 id="①-安装MySQL软件"><a href="#①-安装MySQL软件" class="headerlink" title="① 安装MySQL软件"></a>① 安装MySQL软件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim mysql.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum install libaio <span class="literal">-y</span></span><br><span class="line">tar <span class="literal">-xf</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span>.tar.gz</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /usr/local/mysql</span><br><span class="line"><span class="built_in">mv</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span> /usr/local/mysql</span><br><span class="line">useradd <span class="literal">-r</span> <span class="literal">-s</span> /sbin/nologin mysql</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/my.cnf</span><br><span class="line"><span class="built_in">cd</span> /usr/local/mysql</span><br><span class="line">mkdir mysql<span class="literal">-files</span></span><br><span class="line">chown mysql:mysql mysql<span class="literal">-files</span></span><br><span class="line">chmod <span class="number">750</span> mysql<span class="literal">-files</span></span><br><span class="line">bin/mysqld <span class="literal">--initialize</span> <span class="literal">--user</span>=mysql <span class="literal">--basedir</span>=/usr/local/mysql &amp;&gt; /root/password.txt</span><br><span class="line">bin/mysql_ssl_rsa_setup <span class="literal">--datadir</span>=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line"><span class="built_in">cp</span> support<span class="literal">-files</span>/mysql.server /etc/init.d/mysqld</span><br><span class="line">service mysqld <span class="built_in">start</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=$PATH:/usr/local/mysql/bin&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># source mysql.sh</span></span><br></pre></td></tr></table></figure><blockquote><p>Shell脚本其实就是命令的堆砌，把一堆Linux命令写在同一个文件中，一起执行。</p></blockquote><h4 id="②-安全配置"><a href="#②-安全配置" class="headerlink" title="② 安全配置"></a>② 安全配置</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql_secure_installation</span></span><br></pre></td></tr></table></figure><h4 id="③-配置my-cnf（重点开启二进制日志）"><a href="#③-配置my-cnf（重点开启二进制日志）" class="headerlink" title="③ 配置my.cnf（重点开启二进制日志）"></a>③ 配置my.cnf（重点开启二进制日志）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/mysql</span></span><br><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">port=<span class="number">3306</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/<span class="keyword">data</span>/master.err</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog=&gt;  一定要开启二进制日志</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">10</span></span><br><span class="line">character_set_server=utf8mb4 =&gt;    utf8mb4相当于utf8升级版</span><br><span class="line"></span><br><span class="line">配置完成后，重启mysqld服务</span><br><span class="line"><span class="comment"># service mysqld restart</span></span><br><span class="line"><span class="comment"># chkconfig --add mysqld</span></span><br><span class="line"><span class="comment"># chkconfig mysqld on</span></span><br></pre></td></tr></table></figure><h3 id="第三步：在Slave从服务器端安装mysql软件（不需要初始化）"><a href="#第三步：在Slave从服务器端安装mysql软件（不需要初始化）" class="headerlink" title="第三步：在Slave从服务器端安装mysql软件（不需要初始化）"></a>第三步：在Slave从服务器端安装mysql软件（不需要初始化）</h3><h4 id="①-安装MySQL软件-1"><a href="#①-安装MySQL软件-1" class="headerlink" title="① 安装MySQL软件"></a>① 安装MySQL软件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim mysql.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum install libaio <span class="literal">-y</span></span><br><span class="line">tar <span class="literal">-xf</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span>.tar.gz</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /usr/local/mysql</span><br><span class="line"><span class="built_in">mv</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span> /usr/local/mysql</span><br><span class="line">useradd <span class="literal">-r</span> <span class="literal">-s</span> /sbin/nologin mysql</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/my.cnf</span><br><span class="line"><span class="built_in">cd</span> /usr/local/mysql</span><br><span class="line">mkdir mysql<span class="literal">-files</span></span><br><span class="line">chown mysql:mysql mysql<span class="literal">-files</span></span><br><span class="line">chmod <span class="number">750</span> mysql<span class="literal">-files</span></span><br><span class="line"><span class="built_in">cp</span> support<span class="literal">-files</span>/mysql.server /etc/init.d/mysqld</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=$PATH:/usr/local/mysql/bin&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><blockquote><p>相对于主服务器MySQL的安装与配置，从服务器端不需要进行初始化操作，因为其数据将来都来自于主服务器。</p></blockquote><h4 id="②-配置my-cnf文件"><a href="#②-配置my-cnf文件" class="headerlink" title="② 配置my.cnf文件"></a>② 配置my.cnf文件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/mysql</span></span><br><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">port=<span class="number">3310</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/<span class="keyword">data</span>/slave.err</span><br><span class="line">relay<span class="literal">-log</span>=/usr/local/mysql/<span class="keyword">data</span>/relaylog=&gt;    开启中继日志</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">100</span></span><br><span class="line">character_set_server=utf8mb4</span><br></pre></td></tr></table></figure><h4 id="③-把master主服务器的数据目录同步到slave从服务器"><a href="#③-把master主服务器的数据目录同步到slave从服务器" class="headerlink" title="③ 把master主服务器的数据目录同步到slave从服务器"></a>③ 把master主服务器的数据目录同步到slave从服务器</h4><p>a. 把MASTER服务器中的mysqld停止掉</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld stop</span></span><br></pre></td></tr></table></figure><p>b. 把MASTER服务器中的&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data目录下的auto.cnf文件删除</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /usr/local/mysql/data/auto.cnf</span></span><br></pre></td></tr></table></figure><blockquote><p>没安装一个mysql软件，其data数据目录都会产生一个auto.cnf文件，里面是一个唯一性的编号，相当于我们每个人的身份证号码。</p></blockquote><p>c. 把MASTER服务器中&#x2F;usr&#x2F;local&#x2F;mysql中的data目录拷贝一份到SLAVE从服务器的&#x2F;usr&#x2F;local&#x2F;mysql目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync -av /usr/local/mysql/data root@10.1.1.100:/usr/local/mysql/</span></span><br></pre></td></tr></table></figure><p>d. 同步完成后，把主服务器与从服务器中的mysqld启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld start</span></span><br></pre></td></tr></table></figure><h4 id="常见问题解决方案"><a href="#常见问题解决方案" class="headerlink" title="常见问题解决方案"></a>常见问题解决方案</h4><p>☆ 常见问题1：MySQL无法启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld start</span></span><br><span class="line">Redirecting to /bin/systemctl <span class="built_in">start</span> mysqld.service</span><br><span class="line">Failed to <span class="built_in">start</span> mysqld.service: Unit not found.</span><br></pre></td></tr></table></figure><p>出现以上问题的主要原因在于&#x2F;etc&#x2F;init.d目录中没有mysqld这个文件换句话说，就是你没有cp mysql.server脚本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span></span><br><span class="line">记住：/etc/init.d目录中的文件叫什么名字，我们service的时候就应该使用什么名字</span><br><span class="line"><span class="comment"># service mysqld start</span></span><br></pre></td></tr></table></figure><p>☆ 常见错误2：MySQL没有安装在&#x2F;usr&#x2F;local&#x2F;mysql目录中，service也无法启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld start</span></span><br><span class="line">无法启动的原因可能是你的MySQL并没有安装在/usr/local/mysql目录中，因为/etc/init.d/mysqld脚本中的basedir与datadir默认指向的都是/usr/local/mysql</span><br></pre></td></tr></table></figure><p>所以如果我们更换了mysql的安装位置，则必须更改&#x2F;etc&#x2F;init.d&#x2F;mysqld脚本中basedir与datadir目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/init.d/mysqld</span></span><br><span class="line">basedir=你的安装路径</span><br><span class="line">datadir=你的安装路径/<span class="keyword">data</span></span><br></pre></td></tr></table></figure><p>☆ 常见问题3：因为my.cnf配置文件导致mysql无法启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql=&gt;    安装路径</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span>=&gt;    数据目录</span><br><span class="line">socket=/tmp/mysql.sock=&gt;    GLIBC默认就是/tmp/mysql.sock</span><br><span class="line">port=<span class="number">3310</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/slave.err=&gt; 错误日志到底放在哪里</span><br><span class="line">relay<span class="literal">-log</span>=/usr/local/mysql/<span class="keyword">data</span>/relaylog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">100</span></span><br><span class="line">character_set_server=utf8mb4</span><br></pre></td></tr></table></figure><p>启动报错：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Starting MySQL.<span class="number">2020</span><span class="literal">-08-31T07</span>:<span class="number">17</span>:<span class="number">06.554270</span>Z mysqld_safe error: log<span class="literal">-error</span> <span class="built_in">set</span> to <span class="string">&#x27;/usr/local/mysql/slave.err&#x27;</span>, however file don<span class="string">&#x27;t exists. Create writable for user &#x27;</span>mysql<span class="string">&#x27;.</span></span><br><span class="line"><span class="string"> ERROR! The server quit without updating PID file (/usr/local/mysql/data/slave.itcast.cn.pid).</span></span><br></pre></td></tr></table></figure><p>产生以上问题的主要原因在于mysql这个用户对&#x2F;usr&#x2F;local&#x2F;mysql文件夹没有写入权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ll -d /usr/local/mysql</span></span><br><span class="line">drwxr<span class="literal">-xr-x</span> <span class="number">11</span> <span class="number">7161</span> <span class="number">31415</span> <span class="number">174</span> Aug <span class="number">31</span> <span class="number">15</span>:<span class="number">16</span> /usr/local/mysql</span><br><span class="line">发现文件拥有者位置与所属组位置都是两个数字，正常应该是文件拥有者的名称与文件所属组的名称。但是由于GLIBC已经提前打包了，我们解压后，如果在我们系统中，找不到原文件对应的文件拥有着与所属组，则以两个数字代替文件拥有者与所属组的显示。</span><br></pre></td></tr></table></figure><p>解决方案：</p><p>方案一：建议把错误日志，丢在数据目录中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">...</span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/<span class="keyword">data</span>/slave.err</span><br></pre></td></tr></table></figure><p>方案二：直接更改&#x2F;usr&#x2F;local&#x2F;mysql目录的权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R mysql.mysql /usr/local/mysql</span></span><br></pre></td></tr></table></figure><h4 id="④-配置MASTER-SLAVE主从同步"><a href="#④-配置MASTER-SLAVE主从同步" class="headerlink" title="④ 配置MASTER-SLAVE主从同步"></a>④ 配置MASTER-SLAVE主从同步</h4><p>a. 在MASTER主服务器中创建一个账号，专门用于实现数据同步</p><p>MySQL5.7及以下版本：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant replication slave on *.* to <span class="string">&#x27;slave&#x27;</span><span class="string">@&#x27;10.1.1.%&#x27; identified by &#x27;123&#x27;;</span></span><br></pre></td></tr></table></figure><p>MySQL新版本中：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;slave&#x27;</span><span class="string">@&#x27;10.1.1.%&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; grant replication slave on *.* to &#x27;slave&#x27;@&#x27;10.1.1.%&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br></pre></td></tr></table></figure><p>b. 在MASTER中锁表，然后查看二进制文件的名称及位置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush tables with read lock;</span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">----------</span>+<span class="literal">--------------</span>+<span class="literal">------------------</span>+<span class="literal">-------------------</span>+</span><br><span class="line">| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">----------</span>+<span class="literal">--------------</span>+<span class="literal">------------------</span>+<span class="literal">-------------------</span>+</span><br><span class="line">| binlog.<span class="number">000002</span> |      <span class="number">597</span> |              |                  |                   |</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">----------</span>+<span class="literal">--------------</span>+<span class="literal">------------------</span>+<span class="literal">-------------------</span>+</span><br></pre></td></tr></table></figure><p>c. 在SLAVE从服务器中，使用change master to指定主服务器，并实现数据同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=<span class="string">&#x27;10.1.1.10&#x27;</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;123&#x27;</span>,master_port=<span class="number">3306</span>,master_log_file=<span class="string">&#x27;binlog.000002&#x27;</span>,master_log_pos=<span class="number">597</span>;</span><br><span class="line"></span><br><span class="line">master_host：主机的IP地址</span><br><span class="line">master_user：主机的user账号</span><br><span class="line">master_password：主机的user账号密码</span><br><span class="line">master_port：主机MySQL的端口号</span><br><span class="line">master_log_file：二进制日志文件名称</span><br><span class="line">master_log_pos：二进制日志文件位置</span><br></pre></td></tr></table></figure><blockquote><p>技巧：主从复制的change master to语句记不住怎么办？答：求帮助，mysql&gt; help change master to;</p><p>CHANGE MASTER TO<br>MASTER_HOST&#x3D;’master2.example.com’,<br>MASTER_USER&#x3D;’replication’,<br>MASTER_PASSWORD&#x3D;’password’,<br>MASTER_PORT&#x3D;3306,<br>MASTER_LOG_FILE&#x3D;’master2-bin.001’,<br>MASTER_LOG_POS&#x3D;4,<br>MASTER_CONNECT_RETRY&#x3D;10;</p></blockquote><p>d. 启动slave数据同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">mysql&gt; show slave status\G</span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831155637556.png" alt="image-20200831155637556"></p><h4 id="常见问题解决方案-1"><a href="#常见问题解决方案-1" class="headerlink" title="常见问题解决方案"></a>常见问题解决方案</h4><p>在配置主从时，一般遇到错误，大部分都是change master to语句写错了（80%），解决方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; reset slave;</span><br><span class="line">mysql&gt; change master to master_host=<span class="string">&#x27;10.1.1.10&#x27;</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;123&#x27;</span>,master_port=<span class="number">3306</span>,master_log_file=<span class="string">&#x27;binlog.000002&#x27;</span>,master_log_pos=<span class="number">597</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br></pre></td></tr></table></figure><h4 id="⑤-主MASTER服务器解锁"><a href="#⑤-主MASTER服务器解锁" class="headerlink" title="⑤ 主MASTER服务器解锁"></a>⑤ 主MASTER服务器解锁</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; unlock tables;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ol><li>主从复制必须保证两台数据库实例的&#x3D;&#x3D;server-id不一致&#x3D;&#x3D;</li><li>主服务器&#x3D;&#x3D;必须开启二进制日志&#x3D;&#x3D;；从服务器&#x3D;&#x3D;必须开启中继日志&#x3D;&#x3D;</li><li>主从复制搭建&#x3D;&#x3D;必须保证初始数据一致&#x3D;&#x3D;</li><li>主服务器必须要给从服务器&#x3D;&#x3D;创建一个复制用户，并授予复制权限&#x3D;&#x3D;</li><li>Master—&gt;Slave架构，&#x3D;&#x3D;主写会同步到从&#x3D;&#x3D;；而&#x3D;&#x3D;从写不会同步到主&#x3D;&#x3D;</li></ol><h2 id="6、SLAVE从服务器不小心写入数据解决方案"><a href="#6、SLAVE从服务器不小心写入数据解决方案" class="headerlink" title="6、SLAVE从服务器不小心写入数据解决方案"></a>6、SLAVE从服务器不小心写入数据解决方案</h2><p>正常情况下：</p><p>MASTER既可以读，也可以写。但是SLAVE从服务器，只能执行读取操作。一旦我们在SLAVE从服务器中写入数据，则主从架构会失败。</p><p>SLAVE：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># show slave status\G</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831165406201.png" alt="image-20200831165406201"></p><p>遇到以上问题：如果数量较少，还可以通过跳过当前语句的方式解决。但是如果从服务器写入数据过多，则以上架构必须要重新搭建了！</p><p>解决方案：</p><p>问：</p><p>如果由于人为操作或者其他原因直接将数据更改到从服务器导致数据同步失效，怎么解决？</p><p>答：可以通过变量<code>sql_slave_skip_counter</code>临时跳过事务进行处理</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SET</span> GLOBAL sql_slave_skip_counter = N  N代表跳过N个事务</span><br><span class="line">举例说明：</span><br><span class="line">mysql&gt; <span class="built_in">SET</span> GLOBAL sql_slave_skip_counter=<span class="number">1</span>;</span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">注意：</span><br><span class="line"><span class="number">1</span>. 跳过事务应该在slave上进行</span><br><span class="line"><span class="number">2</span>. 传统的AB复制方式可以使用变量：sql_slave_skip_counter，基于GTIDs的方式不支持</span><br></pre></td></tr></table></figure><h1 id="四、基于GTIDs的AB复制架构-M-S"><a href="#四、基于GTIDs的AB复制架构-M-S" class="headerlink" title="四、基于GTIDs的AB复制架构(M-S)"></a>四、基于GTIDs的AB复制架构(M-S)</h1><h2 id="1、GTIDs概述"><a href="#1、GTIDs概述" class="headerlink" title="1、GTIDs概述"></a>1、GTIDs概述</h2><ul><li><strong>什么是GTIDs以及有什么特点？</strong></li></ul><ol><li><p>GTIDs（Global transaction identifiers）&#x3D;&#x3D;全局事务标识符&#x3D;&#x3D;，是mysql 5.6新加入的一项技术</p></li><li><p>当使用GTIDs时，每一个事务都可以被&#x3D;&#x3D;识别并且跟踪&#x3D;&#x3D; </p></li><li><p>添加新的slave或者当发生故障需要将master身份或者角色迁移到slave上时，都无需考虑是哪一个二进制日志以及哪个position值，&#x3D;&#x3D;极大简化了相关操作&#x3D;&#x3D;</p></li><li><p>GTIDs是完全基于事务的，因此&#x3D;&#x3D;不支持MYISAM存储引擎&#x3D;&#x3D; </p></li><li><p>&#x3D;&#x3D;GTID由source_id和transaction_id组成&#x3D;&#x3D;： </p><p>1）source_id来自于server_uuid,可以在auto.cnf中看到</p><p>2）transation_id是一个序列数字，自动生成.</p></li></ol><ul><li><strong>使用GTIDs的限制条件有哪些？</strong></li></ul><ol><li>不支持非事务引擎（MyISAM），因为可能会导致多个gtid分配给同一个事务</li><li>create table … select 语句不支持（主库语法报错）</li><li>create&#x2F;drop <strong>temporary table</strong> 语句不支持</li><li>必须使用enforce-gtid-consistency参数 </li><li>sql-slave-skip-counter不支持(传统的跳过错误方式) </li><li>GTID复制环境中必须要求统一开启和GTID或者关闭GTID </li><li>在mysql 5.6.7之前，使用&#x3D;&#x3D;mysql_upgrade&#x3D;&#x3D;命令会出现问题</li></ol><h2 id="2、基于GTIDs的主从复制"><a href="#2、基于GTIDs的主从复制" class="headerlink" title="2、基于GTIDs的主从复制"></a>2、基于GTIDs的主从复制</h2><p>在生产环境中，大多数情况下使用的MySQL5.6基本上都是从5.5或者更低的版本升级而来，这就意味着之前的mysql replication方案是基于传统的方式部署，并且已经在运行，因此，接下来我们就利用已有的环境升级至基于GITDs的Replication</p><p>〇 思路</p><ol><li>修改配置文件支持GTIDs  (主+从)</li><li>重启数据库  (主+从)</li><li>为了保证数据一致性，master和slave设置为只读模式 (主+从)</li><li>&#x3D;&#x3D;从服务器上重新配置同步&#x3D;&#x3D; （从）</li></ol><h2 id="3、基于GTIDs的主从复制实践"><a href="#3、基于GTIDs的主从复制实践" class="headerlink" title="3、基于GTIDs的主从复制实践"></a>3、基于GTIDs的主从复制实践</h2><h3 id="①-修改配置文件支持GTIDs"><a href="#①-修改配置文件支持GTIDs" class="headerlink" title="① 修改配置文件支持GTIDs"></a>① 修改配置文件支持GTIDs</h3><p>MASTER &#x3D;&gt; my.cnf</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">...</span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br></pre></td></tr></table></figure><p>SLAVE &#x3D;&gt; my.cnf</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf data/binlog.*</span></span><br><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">...</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog=&gt;   必须要开启二进制</span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line"><span class="built_in">skip-slave</span><span class="literal">-start</span> =&gt;    当MASTER主服务器GTIDs没有启动时，跳过SLAVE服务器的启动</span><br></pre></td></tr></table></figure><blockquote><p>说明：<br>1）开启GITDs需要在master和slave上都配置gtid-mode，log-bin，log-slave-updates，enforce-gtid-consistency（该参数在5.6.9之前是–disable-gtid-unsafe-statement）<br>2）其次，slave还需要增加skip-slave-start参数,目的是启动的时候，先不要把slave起来，需要做一些配置<br>3）基于GTIDs复制从服务器必须开启二进制日志！</p></blockquote><h3 id="②-重新启动mysqld服务"><a href="#②-重新启动mysqld服务" class="headerlink" title="② 重新启动mysqld服务"></a>② 重新启动mysqld服务</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysqld restart</span></span><br></pre></td></tr></table></figure><h3 id="③-主从配置只读模式"><a href="#③-主从配置只读模式" class="headerlink" title="③ 主从配置只读模式"></a>③ 主从配置只读模式</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> <span class="selector-tag">@</span>@global.read_only=ON;</span><br></pre></td></tr></table></figure><h3 id="④-SLAVE重新配置change-master-to"><a href="#④-SLAVE重新配置change-master-to" class="headerlink" title="④ SLAVE重新配置change master to"></a>④ SLAVE重新配置change master to</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; reset slave;</span><br><span class="line">mysql&gt; change master to master_host=<span class="string">&#x27;10.1.1.10&#x27;</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;123&#x27;</span>,master_port=<span class="number">3306</span>,master_auto_position=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"><span class="number">1</span>.确保有复制用户</span><br><span class="line"><span class="number">2</span>.主要区别于传统复制的参数是：master_auto_position=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">mysql&gt; show slave status\G</span><br></pre></td></tr></table></figure><h3 id="⑤-关闭主从服务器的只读模式"><a href="#⑤-关闭主从服务器的只读模式" class="headerlink" title="⑤ 关闭主从服务器的只读模式"></a>⑤ 关闭主从服务器的只读模式</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> <span class="selector-tag">@</span>@global.read_only=OFF;</span><br></pre></td></tr></table></figure><p>测试验证（往主服务器中写入部分数据，验证一下）</p><h2 id="4、SLAVE从服务器不小心写入数据解决方案"><a href="#4、SLAVE从服务器不小心写入数据解决方案" class="headerlink" title="4、SLAVE从服务器不小心写入数据解决方案"></a>4、SLAVE从服务器不小心写入数据解决方案</h2><p>方法一：跳过事务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">指定需要跳过的GTIDs编号</span><br><span class="line"><span class="built_in">SET</span> GTID_NEXT=<span class="string">&#x27;aaa-bbb-ccc-ddd:N&#x27;</span>;</span><br><span class="line">开始一个空事务</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line">COMMIT;</span><br><span class="line">使用下一个自动生成的全局事务ID。</span><br><span class="line"><span class="built_in">SET</span> GTID_NEXT=<span class="string">&#x27;AUTOMATIC&#x27;</span>;</span><br><span class="line"></span><br><span class="line">举例说明：</span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; <span class="built_in">SET</span> <span class="selector-tag">@</span>@SESSION.GTID_NEXT= <span class="string">&#x27;13e36f00-eb70-11ea-91a8-000c29d1f40a:1&#x27;</span>/*!*/;</span><br><span class="line">mysql&gt; <span class="keyword">BEGIN</span>;</span><br><span class="line">mysql&gt; commit;</span><br><span class="line">mysql&gt; <span class="built_in">SET</span> <span class="selector-tag">@</span>@SESSION.GTID_NEXT= <span class="string">&#x27;AUTOMATIC&#x27;</span>;</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line"></span><br><span class="line">说明：需要跳过哪个事务，需要手动查看relaylog文件得到</span><br><span class="line">[<span class="type">root</span>@<span class="type">slave1</span> <span class="type">data</span>]<span class="comment"># ../bin/mysqlbinlog relay.000003|less</span></span><br><span class="line">。。。。</span><br><span class="line"><span class="comment"># at 756</span></span><br><span class="line"><span class="comment">#181015 12:04:45 server id 10  end_log_pos 817 CRC32 0x5374f49e         GTID [commit=yes]</span></span><br><span class="line"><span class="built_in">SET</span> <span class="selector-tag">@</span>@SESSION.GTID_NEXT= <span class="string">&#x27;044e6392-cf9b-11e8-a748-000c294ca304:3&#x27;</span>/*!*/;</span><br></pre></td></tr></table></figure><p>方法二：重新同步data目录，重新change master to…</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL备份与恢复</title>
      <link href="/posts/7105.html"/>
      <url>/posts/7105.html</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL备份与恢复"><a href="#MySQL备份与恢复" class="headerlink" title="MySQL备份与恢复"></a>MySQL备份与恢复</h1><h1 id="一、逻辑备份"><a href="#一、逻辑备份" class="headerlink" title="一、逻辑备份"></a>一、逻辑备份</h1><h2 id="1、回顾什么是逻辑备份"><a href="#1、回顾什么是逻辑备份" class="headerlink" title="1、回顾什么是逻辑备份"></a>1、回顾什么是逻辑备份</h2><p>逻辑备份就是把数据库、数据表或者数据进行导出，导出到一个文本文件中。</p><h2 id="2、逻辑备份工具"><a href="#2、逻辑备份工具" class="headerlink" title="2、逻辑备份工具"></a>2、逻辑备份工具</h2><p>mysqldump：提供全库级、数据库级别以及表级别的数据备份</p><p>mysqldump + binlog二进制日志实现增量备份</p><h2 id="3、逻辑的导出与导入"><a href="#3、逻辑的导出与导入" class="headerlink" title="3、逻辑的导出与导入"></a>3、逻辑的导出与导入</h2><h3 id="☆-导出（数据备份）"><a href="#☆-导出（数据备份）" class="headerlink" title="☆ 导出（数据备份）"></a>☆ 导出（数据备份）</h3><p>无论是什么存储引擎，以下方式本身是一种数据导出的方法，同时可以用来辅助备份，它可以对一个表的其中一列或者某几列做备份。备份的是&#x3D;&#x3D;数据记录。&#x3D;&#x3D;</p><p>案例：把tb_student数据表中的数据记录进行逻辑导出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">mysql&gt; <span class="built_in">select</span> * into outfile <span class="string">&#x27;/tmp/sqlbak/tb_student.txt&#x27;</span> from db_itheima.tb_student;</span><br><span class="line"></span><br><span class="line">ERROR <span class="number">1290</span> (HY000): The MySQL server is running with the <span class="literal">--secure-file-priv</span> option so it cannot execute this statement</span><br></pre></td></tr></table></figure><p>出现以上问题的主要原因在于我们没有指定MySQL逻辑导出时指定的路径</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">...</span><br><span class="line">secure_file_priv=/tmp/sqlbak/</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 restart</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * into outfile <span class="string">&#x27;/tmp/sqlbak/tb_student.txt&#x27;</span> from db_itheima.tb_student;</span><br><span class="line">ERROR <span class="number">1</span> (HY000): Can<span class="string">&#x27;t create/write to file &#x27;</span>/tmp/sqlbak/tb_student.txt<span class="string">&#x27; (Errcode: 13 - Permission denied)</span></span><br></pre></td></tr></table></figure><p>出现以上问题的主要原因在于mysql账号对&#x2F;tmp&#x2F;sqlbak没有写入权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -m u:mysql:rwx /tmp/sqlbak</span></span><br></pre></td></tr></table></figure><h3 id="☆-导入（数据还原）"><a href="#☆-导入（数据还原）" class="headerlink" title="☆ 导入（数据还原）"></a>☆ 导入（数据还原）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">mysql&gt; load <span class="keyword">data</span> local infile <span class="string">&#x27;/tmp/sqlbak/tb_student.txt&#x27;</span> into table tb_student;</span><br><span class="line">或</span><br><span class="line"><span class="comment"># mysqlimport dbname /path/file -p  =&gt;   要求，导出的文件必须和数据表名称完全一致</span></span><br><span class="line">例如：</span><br><span class="line"><span class="comment"># mysqlimport db_itheima /tmp/sqlbak/tb_student.txt -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><blockquote><p>典型应用场景：可以把一些规则的文本文件导入到数据表中</p></blockquote><p>案例：把&#x2F;etc&#x2F;passwd文件中的数据导入到password数据表中</p><p>第一步：创建一个password数据表，password是mysql保留关键字，建议使用&#96;&#96;两个反撇号括起来</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; CREATE TABLE `password` (</span><br><span class="line">  `uname` varchar(<span class="number">50</span>) DEFAULT NULL,</span><br><span class="line">  `pass` char(<span class="number">2</span>) DEFAULT NULL,</span><br><span class="line">  `uid` int(<span class="number">11</span>) DEFAULT NULL,</span><br><span class="line">  `gid` int(<span class="number">11</span>) DEFAULT NULL,</span><br><span class="line">  `comment` varchar(<span class="number">255</span>) DEFAULT NULL,</span><br><span class="line">  `home` varchar(<span class="number">50</span>) DEFAULT NULL,</span><br><span class="line">  `shell` varchar(<span class="number">50</span>) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br></pre></td></tr></table></figure><p>第二步：把&#x2F;etc&#x2F;passwd文件拷贝到&#x2F;tmp&#x2F;sqlbak目录下，起名叫password.txt</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp /etc/passwd /tmp/sqlbak/password.txt</span></span><br></pre></td></tr></table></figure><p>第三步：使用mysqlimport把password.txt文件中的内容写入到数据表</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqlimport db_itheima --fields-terminated-by=&#x27;:&#x27; --lines-terminated-by=&#x27;\n&#x27; /tmp/sqlbak/password.txt -p</span></span><br><span class="line"></span><br><span class="line">选项说明</span><br><span class="line"><span class="literal">--fields-terminated-by</span>=<span class="string">&#x27;:&#x27;</span>，指定导出文件的分隔符为冒号:</span><br><span class="line"><span class="literal">--lines-terminated-by</span>=<span class="string">&#x27;\n&#x27;</span>，指定每一行的结尾使用的符号,\n代表换行符</span><br></pre></td></tr></table></figure><h2 id="4、扩展：逻辑备份还原小工具（支持远程连接）"><a href="#4、扩展：逻辑备份还原小工具（支持远程连接）" class="headerlink" title="4、扩展：逻辑备份还原小工具（支持远程连接）"></a>4、扩展：逻辑备份还原小工具（支持远程连接）</h2><p>MySQL其实还支持很多管理软件（Windows版）：MySQL-Front、Navicat</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829112341086.png" alt="image-20200829112341086"></p><p>第一步：选择MySQL连接</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829112453585.png" alt="image-20200829112453585"></p><p>第二步：输入MySQL连接信息</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829112649593.png" alt="image-20200829112649593"></p><p>第三步：功能演示&#x3D;&gt;创建数据库、创建数据表、插入数据…</p><p>第四步：数据库的备份与还原</p><p>① 逻辑的导出与导入</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829113438778.png" alt="image-20200829113438778"></p><p>② 数据表的备份与还原</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829115157369.png" alt="image-20200829115157369"></p><p>③ 数据库的备份与还原</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829115303550.png" alt="image-20200829115303550"></p><h1 id="二、物理备份"><a href="#二、物理备份" class="headerlink" title="二、物理备份"></a>二、物理备份</h1><h2 id="1、xtrabackup备份介绍"><a href="#1、xtrabackup备份介绍" class="headerlink" title="1、xtrabackup备份介绍"></a>1、xtrabackup备份介绍</h2><p>####㈠ xtrabackup优缺点</p><p><strong>优点：</strong> </p><ol><li>备份过程&#x3D;&#x3D;快速、可靠(&#x3D;&#x3D;因为是物理备份)；</li><li>支持&#x3D;&#x3D;增量备份&#x3D;&#x3D;，更为灵活</li><li>备份过程<strong>不会打断正在执行的事务</strong>；</li><li>能够基于压缩等功能节约磁盘空间和流量；</li><li>自动实现备份检验；</li><li>&#x3D;&#x3D;还原速度快&#x3D;&#x3D;；</li></ol><p><strong>缺点：</strong></p><ol><li>只能对&#x3D;&#x3D;innodb表增量备份&#x3D;&#x3D;，myisam表增量备份时是全备</li><li>innobackupex备份MyISAM表之前要对全库进行加READ LOCK，阻塞写操作，若备份是在从库上进行的话会影响主从同步，造成延迟。对InnoDB表备份不会阻塞读写。</li></ol><p>####㈡ &#x3D;&#x3D;xtrabackup备份原理&#x3D;&#x3D;</p><ol><li>innobackupex首先会&#x3D;&#x3D;启动&#x3D;&#x3D;一个&#x3D;&#x3D;xtrabackup_log&#x3D;&#x3D;后台检测的进程，实时检测mysql的&#x3D;&#x3D;redo log&#x3D;&#x3D;的变化，一旦发现redo有新的日志写入，立刻将日志写入到日志文件&#x3D;&#x3D;xtrabackup_log&#x3D;&#x3D;中。</li><li>&#x3D;&#x3D;物理&#x3D;&#x3D;拷贝&#x3D;&#x3D;innodb的数据文件和系统表空间文件idbdata1&#x3D;&#x3D;到对应的以默认时间戳为备份目录的地方</li><li>复制结束后，执行&#x3D;&#x3D;flush table with read lock&#x3D;&#x3D;操作进行全库锁表准备备份非InnoDB文件</li><li>物理复制.frm .myd .myi等非InnoDB引擎文件到备份目录</li><li>查看二进制日志的位置</li><li>解锁表unlock tables</li><li>&#x3D;&#x3D;停止&#x3D;&#x3D;xtrabackup_log进程</li></ol><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829144019688.png" alt="image-20200829144019688"></p><p>扩展：redo log日志？</p><p>事务日志或称redo日志，在mysql中默认以ib_logfile0,ib_logfile1名称存在。</p><p>####㈢ &#x3D;&#x3D;xtrabackup备份恢复原理&#x3D;&#x3D;</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829145320869.png" alt="image-20200829145320869"></p><p><strong>具体文字描述如下（了解）：</strong></p><ul><li>在InnoDB内部会维护一个redo日志文件，我们也可以叫做事务日志文件。事务日志会存储每一个InnoDB表数据的记录修改。当InnoDB启动时，InnoDB会检查数据文件和事务日志，并执行两个步骤：它应用（前滚）已经提交的事务日志到数据文件，并将修改过但没有提交的数据进行回滚操作。</li><li>xtrabackup在启动时会记住log sequence number（LSN），并且复制所有的数据文件。复制过程需要一些时间，所以这期间如果数据文件有改动，那么将会使数据库处于一个不同的时间点。这时，xtrabackup会运行一个后台进程，用于监视事务日志，并从事务日志复制最新的修改。xtrabackup必须持续的做这个操作，是因为事务日志是会轮转重复的写入，并且事务日志可以被重用。所以xtrabackup自启动开始，就不停的将事务日志中每个数据文件的修改都记录下来。</li><li>上面就是xtrabackup的备份过程。接下来是准备（prepare）过程。在这个过程中，xtrabackup使用之前复制的事务日志，对各个数据文件执行灾难恢复（就像MySQL刚启动时要做的一样）。当这个过程结束后，数据库就可以做恢复还原了。</li><li>以上的过程在xtrabackup的编译二进制程序中实现。程序innobackupex可以允许我们备份MyISAM表和frm文件从而增加了便捷和功能。Innobackupex会启动xtrabackup，直到xtrabackup复制数据文件后，然后执行FLUSH TABLES WITH READ LOCK来阻止新的写入进来并把MyISAM表数据刷到硬盘上，之后复制MyISAM数据文件，最后释放锁。</li><li>备份MyISAM和InnoDB表最终会处于一致，在准备（prepare）过程结束后，InnoDB表数据已经前滚到整个备份结束的点，而不是回滚到xtrabackup刚开始时的点。这个时间点与执行FLUSH TABLES WITH READ LOCK的时间点相同，所以MyISAM表数据与InnoDB表数据是同步的。类似Oracle的recover和restore，InnoDB的prepare过程可以称为recover（恢复），MyISAM的数据复制过程可以称为restore（还原）。 </li><li>&#x3D;&#x3D;Mysql5.7.3以后开启二进制日志需要加上server-id选项，不然报错&#x3D;&#x3D;</li></ul><h2 id="2、获取xtrabackup备份工具"><a href="#2、获取xtrabackup备份工具" class="headerlink" title="2、获取xtrabackup备份工具"></a>2、获取xtrabackup备份工具</h2><p>网站域名：<a href="http://www.percona.com/">http://www.percona.com</a></p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829150625283.png" alt="image-20200829150625283"></p><h2 id="3、xtabackup软件的安装"><a href="#3、xtabackup软件的安装" class="headerlink" title="3、xtabackup软件的安装"></a>3、xtabackup软件的安装</h2><p>第一步：上传软件包及依赖库到Linux服务器端</p><p>第二步：安装依赖库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh libev-4.15-3.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p>第三步：安装xtrabackup软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install percona-xtrabackup-24-2.4.7-2.el7.x86_64.rpm -y</span></span><br><span class="line"><span class="comment"># rpm -ql percona-xtrabackup-24</span></span><br></pre></td></tr></table></figure><h2 id="4、xtrabackup全库备份与恢复"><a href="#4、xtrabackup全库备份与恢复" class="headerlink" title="4、xtrabackup全库备份与恢复"></a>4、xtrabackup全库备份与恢复</h2><p>备份核心思路：</p><p>① 使用innobackupex对数据库中的所有库进行全量备份，备份完成后，其不能立即进行数据恢复（数据不完整，缺少12:00 ~ 12:30这个过程中的数据）</p><p>② &#x3D;&#x3D;预备阶段&#x3D;&#x3D;，备份过程中产生的xtrabackup_log&#x3D;&#x3D;应用到全量备份集&#x3D;&#x3D;</p><p>③ 模拟故障（删除数据） &#x3D;&gt;   rm  -rf   data&#x2F;*</p><p>④ 动员运维工程师进行全库恢复</p><p>⑤ 测试验证</p><p>第一步：准备数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db_itheima default charset=utf8;</span><br><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table t1(id int,name varchar(<span class="number">10</span>)) engine=myisam;</span><br><span class="line">mysql&gt; insert into t1 values (<span class="number">1</span>,<span class="string">&#x27;吕布&#x27;</span>);</span><br><span class="line">mysql&gt; create table t2(id int,name varchar(<span class="number">10</span>)) engine=innodb;</span><br><span class="line">mysql&gt; insert into t2 values (<span class="number">1</span>,<span class="string">&#x27;貂蝉&#x27;</span>);</span><br></pre></td></tr></table></figure><p>第二步：专门准备一个数据库备份账号，开通相应权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建备份用户admin，并授予相应权限</span><br><span class="line">mysql&gt; grant reload,<span class="keyword">process</span>,lock tables,replication client on *.* to <span class="string">&#x27;admin&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">说明：</span></span><br><span class="line"><span class="string">在数据库中需要以下权限：</span></span><br><span class="line"><span class="string">RELOAD和LOCK TABLES权限:为了执行FLUSH TABLES WITH READ LOCK</span></span><br><span class="line"><span class="string">REPLICATION CLIENT权限：为了获取binary log位置</span></span><br><span class="line"><span class="string">PROCESS权限：显示有关在服务器中执行的线程的信息（即有关会话执行的语句的信息），允许使用SHOW ENGINE</span></span><br></pre></td></tr></table></figure><p>第三步：使用innobackupex工具进行全库备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innobackupex --user=admin --password=123 /full_xtrabackup</span></span><br><span class="line">说明：备份目录默认会自动创建，也可以手动创建</span><br><span class="line"></span><br><span class="line">IMPORTANT: Please check that the backup run completes successfully.</span><br><span class="line">           At the <span class="keyword">end</span> of a successful backup run innobackupex</span><br><span class="line">           prints <span class="string">&quot;completed OK!&quot;</span>.</span><br></pre></td></tr></table></figure><p>第一次运行报错：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">200829</span> <span class="number">15</span>:<span class="number">48</span>:<span class="number">59</span>  version_check Connecting to MySQL server with DSN <span class="string">&#x27;dbi:mysql:;mysql_read_default_group=xtrabackup&#x27;</span> as <span class="string">&#x27;admin&#x27;</span>  (<span class="keyword">using</span> password: YES).</span><br><span class="line">Failed to connect to MySQL server: DBI connect(<span class="string">&#x27;;mysql_read_default_group=xtrabackup&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>,...) failed: Can<span class="string">&#x27;t connect to local MySQL server through socket &#x27;</span>/var/lib/mysql/mysql.sock<span class="string">&#x27; (2) at - line 1314.</span></span><br><span class="line"><span class="string">200829 15:48:59 Connecting to MySQL server host: localhost, user: admin, password: set, port: not set, socket: not set</span></span><br><span class="line"><span class="string">Failed to connect to MySQL server: Can&#x27;</span>t connect to local MySQL server through socket <span class="string">&#x27;/var/lib/mysql/mysql.sock&#x27;</span> (<span class="number">2</span>).</span><br></pre></td></tr></table></figure><p>出现以上问题的主要原因在于我们的mysql.sock并不在&#x2F;var&#x2F;lib&#x2F;mysql目录下。为什么其会自动连接&#x2F;var&#x2F;lib&#x2F;mysql目录下的mysql.sock呢？</p><p>原因1：可能在&#x2F;etc目录下还有my.cnf文件，影响了innobackupex的执行。</p><p>原因2：innobackupex拥有自己的默认配置，默认读取了&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock文件</p><p>解决方案：</p><p>方案1：把你的套接字文件创建一个软链接，放置于&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/lib/mysql</span></span><br><span class="line"><span class="comment"># ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock</span></span><br></pre></td></tr></table></figure><p>方案2：在innobackupex中添加一个-S选项，执行套接字</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innobackupex -S /tmp/mysql.sock --user=admin --password=123 /full_xtrabackup</span></span><br></pre></td></tr></table></figure><p>第四步：预备阶段，把备份这段时间内产生的日志整合到全量备份中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innobackupex --user=admin --password=123 --apply-log /full_xtrabackup/2020-08-29_15-59-22</span></span><br></pre></td></tr></table></figure><p>第五步：模拟数据库故障</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /mysql_3306/data/*</span></span><br><span class="line"><span class="comment"># pkill mysqld</span></span><br></pre></td></tr></table></figure><p>第六步：快速的恢复数据库中的数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /mysql_3306/data/*</span></span><br><span class="line"><span class="comment"># innobackupex --copy-back /full_xtrabackup/2020-08-29_15-59-22</span></span><br></pre></td></tr></table></figure><p>第一次恢复报错：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">innobackupex version <span class="number">2.4</span>.<span class="number">7</span> based on MySQL server <span class="number">5.7</span>.<span class="number">13</span> Linux (x86_64) (revision id: <span class="number">05</span>f1fcf)</span><br><span class="line">Error: datadir must be specified.</span><br></pre></td></tr></table></figure><p>出现以上问题的主要原因在于，innobackupex工具无法找到MySQL中的数据目录</p><p>解决方案：把my.cnf配置文件传递给innobackupex，让其自动识别这个文件中的datadir</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innobackupex --defaults-file=/mysql_3306/my.cnf --copy-back /full_xtrabackup/2020-08-29_15-59-22</span></span><br></pre></td></tr></table></figure><p>第七步：恢复数据时，一定要记得更改&#x2F;mysql_3306&#x2F;data目录下的文件拥有者以及所属组权限，否则mysql无法启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R mysql.mysql /mysql_3306/data</span></span><br></pre></td></tr></table></figure><p>第八步：启动MySQL，测试其是否正常</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysql_3306 start</span></span><br><span class="line"><span class="comment"># mysql -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="5、xtrabackup增量备份与恢复"><a href="#5、xtrabackup增量备份与恢复" class="headerlink" title="5、xtrabackup增量备份与恢复"></a>5、xtrabackup增量备份与恢复</h2><p>什么是增量？增量一定要有一个前提，必须要先有一个全量。</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829165632567.png" alt="image-20200829165632567"></p><p>① 全量备份</p><p>② 把全量备份产生的日志整合到全量备份</p><p>③ 进行数据的增删改操作</p><p>④ 增量备份</p><p>⑤ 把增量备份及增量备份产生的日志文件全部整合到全量备份中</p><p>⑥ 模拟故障</p><p>⑦ 数据恢复</p><p>⑧ 启动数据库，测试验证数据</p><p>第一步：准备数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db_itheima default charset=utf8;</span><br><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table t1(id int,name varchar(<span class="number">10</span>)) engine=myisam;</span><br><span class="line">mysql&gt; insert into t1 values (<span class="number">1</span>,<span class="string">&#x27;吕布&#x27;</span>);</span><br><span class="line">mysql&gt; create table t2(id int,name varchar(<span class="number">10</span>)) engine=innodb;</span><br><span class="line">mysql&gt; insert into t2 values (<span class="number">1</span>,<span class="string">&#x27;貂蝉&#x27;</span>);</span><br></pre></td></tr></table></figure><p>第二步：创建一个账号，专门用于备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建备份用户admin，并授予相应权限</span><br><span class="line">mysql&gt; grant reload,<span class="keyword">process</span>,lock tables,replication client on *.* to <span class="string">&#x27;admin&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">说明：</span></span><br><span class="line"><span class="string">在数据库中需要以下权限：</span></span><br><span class="line"><span class="string">RELOAD和LOCK TABLES权限:为了执行FLUSH TABLES WITH READ LOCK</span></span><br><span class="line"><span class="string">REPLICATION CLIENT权限：为了获取binary log位置</span></span><br><span class="line"><span class="string">PROCESS权限：显示有关在服务器中执行的线程的信息（即有关会话执行的语句的信息），允许使用SHOW ENGINE</span></span><br></pre></td></tr></table></figure><p>第三步：全量备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /full_xtrabackup/*</span></span><br><span class="line"><span class="comment"># innobackupex --user=admin --password=123 /full_xtrabackup</span></span><br></pre></td></tr></table></figure><p>第四步：把全备过程中产生的日志进行整合（特别注意）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innobackupex --user=admin --password=123 --apply-log --redo-only /full_xtrabackup/2020-08-29_17-06-48/</span></span><br><span class="line"></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">--apply-log</span> 表示整合日志</span><br><span class="line"><span class="literal">--redo-only</span>表示只应用已经提交的事务，不回滚未提交的事务（<span class="number">12</span>:<span class="number">00</span> ~ <span class="number">12</span>:<span class="number">30</span>产生很多事务操作，事务处理=&gt;开启事务，成功了提交事务，写入硬盘；失败了回滚事务，不写入硬盘）</span><br><span class="line">注意：如果已经回滚了未提交事务，那么就无法再应用增量备份。</span><br></pre></td></tr></table></figure><blockquote><p>  Preparing an Incremental Backup with innobackupex Preparing incremental backups is a bit different than full ones. This is, perhaps, the stage where more attention is needed:<br>  • First, only the committed transactions must be replayed on each backup. This will merge the base full backup with the incremental ones.<br>  • Then, the uncommitted transaction must be rolled back in order to have a ready-to-use backup.<br>  对于增量备份的Prepare阶段，有2个需要注意的地方，一个是提交的事务需要replayed，一个未提交的事务需要rollback。</p><p>  If you replay the committed transactions and rollback the uncommitted ones on the base backup, you will not be able to add the incremental ones. If you do this on an incremental one, you won’t be able to add data from that moment and the remaining increments. Having this in mind, the procedure is very straight-forward using the –redo-only option, starting with the base backup:<br>  如果在Prepare阶段replay了已提交的事务以及回滚了未提交的事务，则后续的增量备份无法添加到当前全备。因此在Prepare阶段全备应使用–redo-only选项。</p><p>  –redo-only should be used when merging all incrementals except the last one. That’s why the previous line doesn’t contain the –redo-only option. Even if the –redo-only was used on the last step, backup would still be consistent but in that case server would perform the rollback phase.<br>  对于存在多次增量的情形，仅仅只有最后一个增量不需要使用–redo-only 选项。如果使用了的话，rollback将由服务器启动的时候来完成。</p></blockquote><p>第五步：修改数据（进行增删改操作，让其产生增量数据）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">mysql&gt; insert into db_itheima.t1 values (<span class="number">2</span>,<span class="string">&#x27;王朗&#x27;</span>);</span><br><span class="line">mysql&gt; insert into db_itheima.t1 values (<span class="number">3</span>,<span class="string">&#x27;袁术&#x27;</span>);</span><br></pre></td></tr></table></figure><p>第六步：做增量备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innobackupex --user=admin --password=123 --incremental /incre_backup --incremental-basedir=/full_xtrabackup/2020-08-29_17-06-48</span></span><br><span class="line"></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">--incremental</span> 增量备份目录</span><br><span class="line"><span class="literal">--incremental-basedir</span> 这个增量是相对于哪个全量的</span><br></pre></td></tr></table></figure><p>第七步：把增量备份产生的数据以及日志文件整合到全量备份中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innobackupex --user=admin --password=123 --apply-log /full_xtrabackup/2020-08-29_17-06-48 --incremental-dir=/incre_backup/2020-08-29_17-23-43</span></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>.<span class="literal">--redo-only</span>除了最后一个不用加之外，其他的增量应用都要加，最后一个应用的时候可以直接进入回滚未提交事务阶段;如果加了也没事，服务启动的时候会进入recovery过程，来回滚</span><br><span class="line"><span class="number">2</span>.应用增量备份的时候只能按照备份的顺序来应用。如果应用顺序错误，那么备份就不可用。如果无法确定顺序，可以使用xtra<span class="built_in">backup-checkpoints</span>来确定顺序。</span><br><span class="line"></span><br><span class="line">周天做了一个全量，周一、周二、周三、周四、周五、周六全部做增量</span><br></pre></td></tr></table></figure><p>到此，增量备份就全部结束了！</p><p>第八步：模拟数据库故障</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /mysql_3306/data/*</span></span><br><span class="line"><span class="comment"># pkill mysqld</span></span><br></pre></td></tr></table></figure><p>第九步：数据恢复</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innobackupex --defaults-file=/mysql_3306/my.cnf --user=admin --password=123 --copy-back /full_xtrabackup/2020-08-29_17-06-48</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chown -R mysql.mysql /mysql_3306/data</span></span><br></pre></td></tr></table></figure><p>启动数据库，测试验证是否正常</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysql_3306 start</span></span><br><span class="line"><span class="comment"># mysql -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL备份与恢复（重点）</title>
      <link href="/posts/139.html"/>
      <url>/posts/139.html</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL备份与恢复（重点）"><a href="#MySQL备份与恢复（重点）" class="headerlink" title="MySQL备份与恢复（重点）"></a>MySQL备份与恢复（重点）</h1><h1 id="一、用户管理与权限管理"><a href="#一、用户管理与权限管理" class="headerlink" title="一、用户管理与权限管理"></a>一、用户管理与权限管理</h1><h2 id="☆-用户管理"><a href="#☆-用户管理" class="headerlink" title="☆ 用户管理"></a>☆ 用户管理</h2><h3 id="1、创建MySQL用户"><a href="#1、创建MySQL用户" class="headerlink" title="1、创建MySQL用户"></a>1、创建MySQL用户</h3><blockquote><p>注意：MySQL中不能单纯通过用户名来说明用户，必须要加上主机。如**&#x3D;&#x3D;<a href="mailto:&#106;&#97;&#x63;&#x6b;&#x40;&#x31;&#x30;&#46;&#49;&#x2e;&#x31;&#46;&#x31;">&#106;&#97;&#x63;&#x6b;&#x40;&#x31;&#x30;&#46;&#49;&#x2e;&#x31;&#46;&#x31;</a>&#x3D;&#x3D;**</p></blockquote><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;用户名&#x27;</span><span class="string">@&#x27;被允许连接的主机名称或主机的IP地址&#x27; identified by &#x27;用户密码&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; select user,host from mysql.user;</span></span><br></pre></td></tr></table></figure><p>案例：创建一个MySQL账号，用户名：tom，用户密码：123</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;tom&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">或</span></span><br><span class="line"><span class="string">mysql&gt; create user &#x27;tom&#x27;@&#x27;127.0.0.1&#x27; identified by &#x27;123&#x27;;</span></span><br></pre></td></tr></table></figure><p>案例：创建一个MySQL账号（要求开通远程连接），主机IP地址：10.1.1.23，用户名：harry，用户密码：123</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;harry&#x27;</span><span class="string">@&#x27;10.1.1.23&#x27; identified by &#x27;123&#x27;;</span></span><br></pre></td></tr></table></figure><p>测试：在IP地址为10.1.1.23的主机上</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install mysql -y</span></span><br><span class="line"><span class="comment"># mysql -h 10.1.1.10 -P 3306 -uharry -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line"></span><br><span class="line">选项说明：</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.10</span> ：MySQL服务器端的IP地址</span><br></pre></td></tr></table></figure><blockquote><p>yum安装mysql：代表安装的是MySQL的客户端</p><p>yum安装mysql-server：代表安装的是MySQL的服务器端</p></blockquote><p>案例：创建一个MySQL账号（要求开通远程连接），主机IP的网段：10.1.1.0，用户名：jack，用户密码：123</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;jack&#x27;</span><span class="string">@&#x27;10.1.1.%&#x27; identified by &#x27;123&#x27;;</span></span><br></pre></td></tr></table></figure><p>案例：创建一个MySQL账号（要求开通远程连接），要求面向所有主机开放，用户名：root，用户密码：123</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;root&#x27;</span><span class="string">@&#x27;%&#x27; identified by &#x27;123&#x27;;</span></span><br></pre></td></tr></table></figure><h3 id="2、删除MySQL用户"><a href="#2、删除MySQL用户" class="headerlink" title="2、删除MySQL用户"></a>2、删除MySQL用户</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user <span class="string">&#x27;用户名&#x27;</span><span class="string">@&#x27;主机名称或主机的IP地址&#x27;;</span></span><br><span class="line"><span class="string">特别说明：</span></span><br><span class="line"><span class="string">如果在删除用户时没有指定主机的名称或主机的IP地址，则默认删除这个账号的所有信息。</span></span><br></pre></td></tr></table></figure><p>案例：删除tom这个账号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user <span class="string">&#x27;tom&#x27;</span><span class="string">@&#x27;localhost&#x27;;</span></span><br></pre></td></tr></table></figure><p>案例：删除jack这个账号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user <span class="string">&#x27;jack&#x27;</span><span class="string">@&#x27;10.1.1.%&#x27;;</span></span><br></pre></td></tr></table></figure><p>案例：创建两个harry账号（localhost&#x2F;10.1.1.23），然后删除其中的某个</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;harry&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; create user &#x27;harry&#x27;@&#x27;10.1.1.23&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; drop user &#x27;harry&#x27;@&#x27;10.1.1.23&#x27;;</span></span><br></pre></td></tr></table></figure><p>扩展：删除MySQL账号的另外一种方式</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from mysql.user <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span> and host=<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h3 id="3、修改MySQL用户"><a href="#3、修改MySQL用户" class="headerlink" title="3、修改MySQL用户"></a>3、修改MySQL用户</h3><p>特别说明：MySQL用户重命名通常可以更改两部分，一部分是用户的名称，一部分是被允许访问的主机名称或主机的IP地址。</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; rename user 旧用户信息 to 新用户信息;</span><br></pre></td></tr></table></figure><p>案例：把用户‘root‘@’%’更改为‘root‘@’10.1.1.%’</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; rename user <span class="string">&#x27;root&#x27;</span><span class="string">@&#x27;%&#x27; to &#x27;root&#x27;@&#x27;10.1.1.%&#x27;;</span></span><br></pre></td></tr></table></figure><p>案例：把‘tom‘@’localhost’更名为‘harry‘@’localhost’</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;tom&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; rename user &#x27;tom&#x27;@&#x27;localhost&#x27; to &#x27;harry&#x27;@&#x27;localhost&#x27;;</span></span><br></pre></td></tr></table></figure><blockquote><p>扩展：使用update语句更新用户信息</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update mysql.user <span class="built_in">set</span> user=<span class="string">&#x27;tom&#x27;</span>,host=<span class="string">&#x27;localhost&#x27;</span> <span class="built_in">where</span> user=<span class="string">&#x27;harry&#x27;</span> and host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h2 id="☆-权限管理"><a href="#☆-权限管理" class="headerlink" title="☆ 权限管理"></a>☆ 权限管理</h2><h3 id="1、权限说明"><a href="#1、权限说明" class="headerlink" title="1、权限说明"></a>1、权限说明</h3><p>所有权限说明<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html">https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USAGE无权限,只有登录数据库,只可以使用test或test_*数据库</span><br><span class="line">ALL所有权限</span><br><span class="line"></span><br><span class="line">以下权限为指定权限</span><br><span class="line"><span class="built_in">select</span>/update/delete/super/replication slave/reload...</span><br><span class="line"></span><br><span class="line">with grant option 选项表示允许把自己的权限授予其它用户或者从其他用户收回自己的权限</span><br></pre></td></tr></table></figure><blockquote><p>默认情况下，分配权限时如果没有指定with grant option，代表这个用户不能下发权限给其他用户，但是这个权限分配不能超过自身权限。</p></blockquote><h3 id="2、权限保存位置（了解）"><a href="#2、权限保存位置（了解）" class="headerlink" title="2、权限保存位置（了解）"></a>2、权限保存位置（了解）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql.user所有mysql用户的账号和密码，以及用户对全库全表权限（*.*）</span><br><span class="line">mysql.db非mysql库的授权都保存在此(db.*)</span><br><span class="line">mysql.table_priv某库某表的授权(db.table)</span><br><span class="line">mysql.columns_priv某库某表某列的授权(db.table.col1)</span><br><span class="line">mysql.procs_priv某库存储过程的授权</span><br></pre></td></tr></table></figure><h3 id="3、给用户授权"><a href="#3、给用户授权" class="headerlink" title="3、给用户授权"></a>3、给用户授权</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant 权限<span class="number">1</span>,权限<span class="number">2</span> on 库.表 to 用户<span class="selector-tag">@</span>主机</span><br><span class="line">mysql&gt; grant 权限(列<span class="number">1</span>,列<span class="number">2</span>,...) on 库.表 to 用户<span class="selector-tag">@</span>主机</span><br></pre></td></tr></table></figure><blockquote><p>库.表表示方法：*.*代表所有数据库的所有数据表，db_itheima.*代表db_itheima数据库中的所有数据表，db_itheima.tb_admin，代表db_itheima数据库中的tb_admin表</p></blockquote><p>案例：给tom账号分配db_itheima的查询权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant <span class="built_in">select</span> on db_itheima.* to <span class="string">&#x27;tom&#x27;</span><span class="string">@&#x27;localhost&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br></pre></td></tr></table></figure><p>案例：给tom账号分配db_itheima.tb_student数据表的权限（要求只能更改age字段）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant update(age) on db_itheima.tb_student to <span class="string">&#x27;tom&#x27;</span><span class="string">@&#x27;localhost&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br></pre></td></tr></table></figure><p>案例：添加一个root@%账号，然后分配所有权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;root&#x27;</span><span class="string">@&#x27;%&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; grant all on *.* to &#x27;root&#x27;@&#x27;%&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br></pre></td></tr></table></figure><h3 id="4、查询用户权限"><a href="#4、查询用户权限" class="headerlink" title="4、查询用户权限"></a>4、查询用户权限</h3><p>查询当前用户权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants;</span><br></pre></td></tr></table></figure><p>查询其他用户权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants <span class="keyword">for</span> <span class="string">&#x27;用户名称&#x27;</span><span class="string">@&#x27;授权的主机名称或IP地址&#x27;;</span></span><br></pre></td></tr></table></figure><h3 id="5、with-grant-option选项"><a href="#5、with-grant-option选项" class="headerlink" title="5、with grant option选项"></a>5、with grant option选项</h3><p>with grant option选项作用：代表此账号可以为其他用户下发权限，但是下发的权限不能超过自身权限。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all on *.* to <span class="string">&#x27;amy&#x27;</span><span class="string">@&#x27;10.1.1.%&#x27; identified by &#x27;123&#x27; with grant option;</span></span><br><span class="line"><span class="string">mysql&gt; grant all on *.* to &#x27;harry&#x27;@&#x27;10.1.1.%&#x27; identified by &#x27;123&#x27;; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">如以上命令所示：</span></span><br><span class="line"><span class="string">amy拥有下发权限的功能，而harry不具备下发权限的功能。</span></span><br></pre></td></tr></table></figure><blockquote><p>如果grant授权时没有with grant option选项，则其无法为其他用户授权。</p></blockquote><h3 id="6、使用grant创建用户"><a href="#6、使用grant创建用户" class="headerlink" title="6、使用grant创建用户"></a>6、使用grant创建用户</h3><blockquote><p>说明：5.7以后&#x3D;&#x3D;不推荐&#x3D;&#x3D;，未来会被弃用！</p></blockquote><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant 权限 on 数据库.数据表 to <span class="string">&#x27;新用户名称&#x27;</span><span class="string">@&#x27;授权主机名称或IP地址&#x27; identified by &#x27;用户的密码&#x27;;</span></span><br></pre></td></tr></table></figure><p>案例：创建一个root账号，主机为%，授予所有权限，密码为123</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all on *.* to <span class="string">&#x27;root&#x27;</span><span class="string">@&#x27;%&#x27; identified by &#x27;123&#x27;;</span></span><br></pre></td></tr></table></figure><h3 id="7、revoke回收权限"><a href="#7、revoke回收权限" class="headerlink" title="7、revoke回收权限"></a>7、revoke回收权限</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">revoke 权限 on 库.表 from 用户;</span><br><span class="line"></span><br><span class="line">撤消指定的权限</span><br><span class="line">mysql&gt; revoke update on db01.tt1 from <span class="string">&#x27;tom&#x27;</span><span class="string">@&#x27;10.1.1.1&#x27;;</span></span><br><span class="line"><span class="string">撤消所有的权限</span></span><br><span class="line"><span class="string">mysql&gt; revoke select on db01.* from &#x27;tom&#x27;@&#x27;10.1.1.1&#x27;;</span></span><br></pre></td></tr></table></figure><p>案例：从tom账号中回收select权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; revoke <span class="built_in">select</span> on db_itheima.* from <span class="string">&#x27;tom&#x27;</span><span class="string">@&#x27;localhost&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string">mysql&gt; show grants for &#x27;tom&#x27;@&#x27;localhost&#x27;;</span></span><br></pre></td></tr></table></figure><p>案例：从tom账号中回收update权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; revoke update(age) on db_itheima.tb_student from <span class="string">&#x27;tom&#x27;</span><span class="string">@&#x27;localhost&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string">mysql&gt; show grants for &#x27;tom&#x27;@&#x27;localhost&#x27;;</span></span><br></pre></td></tr></table></figure><h1 id="二、MySQL备份概述"><a href="#二、MySQL备份概述" class="headerlink" title="二、MySQL备份概述"></a>二、MySQL备份概述</h1><h2 id="1、关于数据保存你要知道"><a href="#1、关于数据保存你要知道" class="headerlink" title="1、关于数据保存你要知道"></a>1、关于数据保存你要知道</h2><p><strong>思考：</strong>备份和冗余有什么区别？</p><p>备份： 能够防止由于<strong>机械故障</strong>以及<strong>人为误操作</strong>带来的数据丢失，例如将数据库文件保存在了其它地方。</p><p>冗余： 数据有多份冗余，但不等备份，<strong>只能防止机械故障</strong>带来的数据丢失，例如主备模式、数据库集群。 </p><h2 id="2、到底要备份什么"><a href="#2、到底要备份什么" class="headerlink" title="2、到底要备份什么"></a>2、到底要备份什么</h2><h3 id="☆-备份什么"><a href="#☆-备份什么" class="headerlink" title="☆ 备份什么"></a>☆ 备份什么</h3><p>数据库：&#x3D;&#x3D;一堆物理文件的集合&#x3D;&#x3D;；日志文件(二进制日志)+数据文件+配置文件</p><p>① 数据文件</p><p>② 配置文件 &#x3D;&gt; my.cnf</p><p>③ 日志文件（主要是二进制日志文件）</p><h3 id="☆-MySQL体系结构"><a href="#☆-MySQL体系结构" class="headerlink" title="☆ MySQL体系结构"></a>☆ MySQL体系结构</h3><p>扩展：MySQL体系结构（MySQL &#x3D;&gt; DBMS软件到底是由哪些层构成的）</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828145811383.png" alt="image-20200828145811383"></p><h3 id="☆-存储引擎层（MyISAM与InnoDB引擎）"><a href="#☆-存储引擎层（MyISAM与InnoDB引擎）" class="headerlink" title="☆ 存储引擎层（MyISAM与InnoDB引擎）"></a>☆ 存储引擎层（MyISAM与InnoDB引擎）</h3><p>存储引擎层：简单来说，就是数据的存储方式。在MySQL中，我们可以使用<code>show engines</code>查看当前数据库版本支持哪些引擎，常见的数据存储引擎：InnoDB、MyISAM、NDB…</p><blockquote><p>常见面试题：请简述MySQL的MyISAM引擎与InnoDB引擎的区别</p></blockquote><p>① MyISAM引擎：擅长数据的查询，支持全文索引</p><p>② InnoDB引擎：Supports transactions, row-level locking, and foreign keys，支持事务处理、行级锁、支持外键。</p><h3 id="☆-存储层（数据文件是如何进行存储的）"><a href="#☆-存储层（数据文件是如何进行存储的）" class="headerlink" title="☆ 存储层（数据文件是如何进行存储的）"></a>☆ 存储层（数据文件是如何进行存储的）</h3><p>问题：存储引擎到底是如何保存数据文件的？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db_itheima default charset=utf8;</span><br></pre></td></tr></table></figure><blockquote><p>提出问题：我能不能不进入MySQL终端，然后在命令行中直接创建一个数据库呢？-e</p></blockquote><p>当数据库创建完毕后，查看&#x2F;mysql_3306&#x2F;data文件夹：</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828152248180.png" alt="image-20200828152248180"></p><p>db_itheima文件夹中还有一个文件<code>db.opt</code>，存放内容为数据库的编码格式。</p><p>MyISAM引擎</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_user(id int, name char(<span class="number">1</span>)) engine=myisam default charset=utf8;</span><br></pre></td></tr></table></figure><p>创建完成后，查看db_itheima目录信息，发现产生了3个文件</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828152624753.png" alt="image-20200828152624753"></p><blockquote><p>*.frm ：框架文件，定义数据表结构     *.MYI ：INDEX索引，主要用于存放索引文件      *.MYD：数据文件</p></blockquote><p>InnoDB引擎</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_user(id int, name char(<span class="number">1</span>)) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><p>创建完成后，查看db_itheima目录信息，发现产生了2个文件</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828153252277.png" alt="image-20200828153252277"></p><blockquote><p>*.frm ：框架文件，定义数据表结构    *.ibd：索引文件+数据文件</p></blockquote><p>其实InnoDB引擎不仅仅会产生以上两个文件，其在外部data目录中也会产生一个文件（确切来说不能叫做产生文件，而应该叫做共享文件）</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828153451881.png" alt="image-20200828153451881"></p><blockquote><p>所以由此可知，InnoDB引擎的数据备份不能简简单单的通过拷贝方式实现，必须使用专业的备份工具。</p></blockquote><h3 id="☆-日志文件（MySQL中我们需要了解哪些日志）"><a href="#☆-日志文件（MySQL中我们需要了解哪些日志）" class="headerlink" title="☆ 日志文件（MySQL中我们需要了解哪些日志）"></a>☆ 日志文件（MySQL中我们需要了解哪些日志）</h3><table><thead><tr><th>日志类型</th><th>写入日志的信息</th></tr></thead><tbody><tr><td>error错误日志</td><td>存放数据库的启动、停止或运行时的错误信息（找ERROR）</td></tr><tr><td>binlog二进制日志</td><td>&#x3D;&#x3D;数据库的所有更改&#x3D;&#x3D;操作（DDL&#x2F;DML&#x2F;DCL），不包含select或者show这类语句。</td></tr></tbody></table><blockquote><p>error错误日志的命令规则与存放的目录：&#x2F;data目录下 +  主机名称.err</p></blockquote><p>更改错误日志的存放位置：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">...</span><br><span class="line">log_error=<span class="keyword">data</span>数据目录/主机名称.err或mysql.err</span><br></pre></td></tr></table></figure><blockquote><p>binlog二进制日志应用场景：</p><p>用于&#x3D;&#x3D;主从复制&#x3D;&#x3D;中，master主服务器将二进制日志中的更改操作发送给slave从服务器，从服务器执行这些更改操作是的和主服务器的更改相同。</p><p>用于&#x3D;&#x3D;数据的恢复&#x3D;&#x3D;操作</p></blockquote><p><strong>binlog二进制日志如何开启？</strong></p><p>默认binlog日志是&#x3D;&#x3D;关闭&#x3D;&#x3D;的，可以通过修改配置文件完成开启，如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">...</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">10</span></span><br><span class="line">log<span class="literal">-bin</span>=<span class="keyword">data</span>数据目录/binlog</span><br></pre></td></tr></table></figure><blockquote><p>当我们更改了my.cnf配置文件，一定要记得重启MySQL服务器。service命令</p></blockquote><h2 id="3、备份过程须考虑的因素"><a href="#3、备份过程须考虑的因素" class="headerlink" title="3、备份过程须考虑的因素"></a>3、备份过程须考虑的因素</h2><ul><li>必须制定&#x3D;&#x3D;详细的备份计划(策略)&#x3D;&#x3D;（备份频率、时间点、周期）</li><li>备份数据应该放在&#x3D;&#x3D;非数据库本地&#x3D;&#x3D;，并建议&#x3D;&#x3D;有多份副本&#x3D;&#x3D;</li><li>必须做好&#x3D;&#x3D;<strong>数据恢复的演练</strong>&#x3D;&#x3D;（每隔一段时间，对备份的数据在测试环境中进行模拟恢复，保证当出现数据灾难的时候能够及时恢复数据。）</li><li>根据数据应用的场合、特点&#x3D;&#x3D;选择正确的备份工具&#x3D;&#x3D;。</li><li>数据的一致性</li><li>服务的可用性</li></ul><h2 id="4、备份的类型"><a href="#4、备份的类型" class="headerlink" title="4、备份的类型"></a>4、备份的类型</h2><h3 id="☆-逻辑备份"><a href="#☆-逻辑备份" class="headerlink" title="☆ 逻辑备份"></a>☆ 逻辑备份</h3><ul><li>备份的是<strong>建表、建库、插入等操作所执行SQL语句</strong>（DDL DML DCL）。</li><li>适用于&#x3D;&#x3D;中小型数据库，效率相对较低&#x3D;&#x3D;。 一般在数据库<strong>正常提供服务</strong>的前提下进行，如：<strong>mysqldump</strong>、mydumper、into outfile（表的导出导入）等。</li></ul><ul><li>备份实质：就是把要备份的数据导出成.sql或.txt文件</li></ul><h3 id="☆-物理备份"><a href="#☆-物理备份" class="headerlink" title="☆ 物理备份"></a>☆ 物理备份</h3><ul><li>直接复制&#x3D;&#x3D;数据库文件&#x3D;&#x3D;</li><li>适用于&#x3D;&#x3D;大型数据库&#x3D;&#x3D;环境，不受存储引擎的限制，但不能恢复到不同的MySQL版本。 </li><li>一般是在&#x3D;&#x3D;数据库彻底关闭或者不能完成正常提供服务&#x3D;&#x3D;的前提下进行的备份）；如：tar、cp、&#x3D;&#x3D;xtrabackup&#x3D;&#x3D;（数据库可以&#x3D;&#x3D;正常提供服务&#x3D;&#x3D;）、lvm snapshot、rsync等</li></ul><ul><li>备份的实质：对数据文件 + 配置文件 + 日志文件进行拷贝操作</li></ul><h3 id="☆-在线热备（数据冗余、AB复制、主从复制）"><a href="#☆-在线热备（数据冗余、AB复制、主从复制）" class="headerlink" title="☆ 在线热备（数据冗余、AB复制、主从复制）"></a>☆ 在线热备（数据冗余、AB复制、主从复制）</h3><ul><li>MySQL的replication架构，如M-S|M-S-S|M-M-S等</li><li>实时在线备份</li></ul><h2 id="5、备份工具"><a href="#5、备份工具" class="headerlink" title="5、备份工具"></a>5、备份工具</h2><h4 id="㈠-社区版安装包中的备份工具"><a href="#㈠-社区版安装包中的备份工具" class="headerlink" title="㈠ 社区版安装包中的备份工具"></a>㈠ 社区版安装包中的备份工具</h4><h5 id="①-mysqldump-逻辑备份，只能-全量备份-）"><a href="#①-mysqldump-逻辑备份，只能-全量备份-）" class="headerlink" title="① mysqldump(逻辑备份，只能&#x3D;&#x3D;全量备份&#x3D;&#x3D;）"></a>① mysqldump(逻辑备份，只能&#x3D;&#x3D;全量备份&#x3D;&#x3D;）</h5><p>​1）企业版和社区版都包含</p><p>​2）本质上使用&#x3D;&#x3D;SQL语句描述数据库&#x3D;&#x3D;及数据并导出</p><p>​3）在MYISAM引擎上锁表，Innodb引擎上锁行</p><p>​4）数据量很大时不推荐使用</p><h5 id="②-mysqlhotcopy-物理备份工具）"><a href="#②-mysqlhotcopy-物理备份工具）" class="headerlink" title="② mysqlhotcopy(物理备份工具）"></a>② mysqlhotcopy(物理备份工具）</h5><p>​1）企业版和社区版都包含</p><p>​2）perl写的一个脚本，本质上是使用锁表语句后再拷贝数据</p><p>​3）&#x3D;&#x3D;只&#x3D;&#x3D;支持MYISAM数据引擎</p><h4 id="㈡-企业版安装包中的备份工具"><a href="#㈡-企业版安装包中的备份工具" class="headerlink" title="㈡ 企业版安装包中的备份工具"></a>㈡ 企业版安装包中的备份工具</h4><p><strong>mysqlbackup</strong></p><p>​1）在线备份</p><p>​2）增量备份</p><p>​3）部分备份</p><p>​4）在某个特定时间的一致性状态的备份</p><h4 id="㈢-第三方备份工具"><a href="#㈢-第三方备份工具" class="headerlink" title="㈢ 第三方备份工具"></a>㈢ 第三方备份工具</h4><h5 id="①-XtraBackup和innobackupex-物理备份）"><a href="#①-XtraBackup和innobackupex-物理备份）" class="headerlink" title="① XtraBackup和innobackupex(物理备份）"></a>① XtraBackup和innobackupex(物理备份）</h5><p>​1）Xtrabackup是一个对<strong>InnoDB</strong>做数据备份的工具，支持&#x3D;&#x3D;在线热备份&#x3D;&#x3D;（备份时不影响数据读写），是商业备份工具<strong>InnoDB Hotbackup</strong>的一个很好的替代品。</p><p>​2）Xtrabackup有两个主要的工具：xtrabackup、innobackupex</p><p>​a、xtrabackup只能备份&#x3D;&#x3D;InnoDB和XtraDB&#x3D;&#x3D;两种数据表，不能备份myisam类型的表。</p><p>​b、innobackupex是将Xtrabackup进行封装的perl脚本，所以能同时备份处理innodb和myisam的存储引擎，但在处理myisam时需要加一个读锁。</p><h5 id="②-mydumper-逻辑备份，备份SQL语句）"><a href="#②-mydumper-逻辑备份，备份SQL语句）" class="headerlink" title="② mydumper(逻辑备份，备份SQL语句）"></a>② mydumper(逻辑备份，备份SQL语句）</h5><p><strong>多线程备份工具</strong></p><p> <a href="https://launchpad.net/mydumper/mydumper-0.9.1.tar.gz">https://launchpad.net/mydumper/mydumper-0.9.1.tar.gz</a>        2015-11-06（最后更新时间）</p><h2 id="6、备份方法"><a href="#6、备份方法" class="headerlink" title="6、备份方法"></a>6、备份方法</h2><ul><li>完全备份（全备）</li><li>增量备份（增量备份基于全量备份）</li></ul><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828165223180.png" alt="image-20200828165223180"></p><h1 id="三、MySQL逻辑备份"><a href="#三、MySQL逻辑备份" class="headerlink" title="三、MySQL逻辑备份"></a>三、MySQL逻辑备份</h1><p>##1、mysqldump基本备份</p><p><strong>本质</strong>：导出的是sql语句文件</p><p><strong>优点</strong>：无论是什么存储引擎，都可以用mysqldump备成sql语句</p><p><strong>缺点</strong>：速度较慢,导入时可能会出现格式不兼容的突发状况.&#x3D;&#x3D;无法直接做增量备份&#x3D;&#x3D;.</p><p><strong>提供三种级别的备份，表级，库级和全库级</strong> </p><h2 id="2、mysqldump基本语法"><a href="#2、mysqldump基本语法" class="headerlink" title="2、mysqldump基本语法"></a>2、mysqldump基本语法</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">表级别备份</span><br><span class="line">mysqldump [<span class="type">OPTIONS</span>] database [<span class="type">tables</span>]</span><br><span class="line">库级别备份</span><br><span class="line">mysqldump [<span class="type">OPTIONS</span>] <span class="literal">--databases</span> [<span class="type">OPTIONS</span>] DB1 [<span class="type">DB2</span> <span class="type">DB3...</span>]</span><br><span class="line">全库级别备份</span><br><span class="line">mysqldump [<span class="type">OPTIONS</span>] <span class="literal">--all-databases</span> [<span class="type">OPTIONS</span>]</span><br></pre></td></tr></table></figure><p>准备一些要备份的数据：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db_itheima default charset=utf8;</span><br><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_student(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">name varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned default <span class="number">0</span>,</span><br><span class="line">gender <span class="class"><span class="keyword">enum</span>(&#x27;<span class="title">male</span>&#x27;,&#x27;<span class="title">female</span>&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">subject</span> <span class="title">enum</span>(&#x27;<span class="title">ui</span>&#x27;,&#x27;<span class="title">java</span>&#x27;,&#x27;<span class="title">yunwei</span>&#x27;,&#x27;<span class="title">python</span>&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">primary</span> <span class="title">key</span>(<span class="title">id</span>)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;刘备&#x27;,33,&#x27;<span class="title">male</span>&#x27;,&#x27;<span class="title">java</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;关羽&#x27;,32,&#x27;<span class="title">male</span>&#x27;,&#x27;<span class="title">yunwei</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;张飞&#x27;,30,&#x27;<span class="title">male</span>&#x27;,&#x27;<span class="title">python</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;貂蝉&#x27;,18,&#x27;<span class="title">female</span>&#x27;,&#x27;<span class="title">ui</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;大乔&#x27;,18,&#x27;<span class="title">female</span>&#x27;,&#x27;<span class="title">ui</span>&#x27;);</span></span><br></pre></td></tr></table></figure><h2 id="3、mysqldump表级备份与还原"><a href="#3、mysqldump表级备份与还原" class="headerlink" title="3、mysqldump表级备份与还原"></a>3、mysqldump表级备份与还原</h2><h3 id="☆-备份"><a href="#☆-备份" class="headerlink" title="☆ 备份"></a>☆ 备份</h3><p>案例：把db_itheima数据库中的tb_student数据表进行备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /tmp/sqlbak</span></span><br><span class="line"><span class="comment"># mysqldump db_itheima tb_student &gt; /tmp/sqlbak/tb_student.sql -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><h3 id="☆-还原"><a href="#☆-还原" class="headerlink" title="☆ 还原"></a>☆ 还原</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql 数据库名称 &lt; .sql文件位置 -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">mysql&gt; use db_itheima</span><br><span class="line">mysql&gt; source .sql文件的位置</span><br></pre></td></tr></table></figure><h2 id="4、mysqldump库级备份与还原"><a href="#4、mysqldump库级备份与还原" class="headerlink" title="4、mysqldump库级备份与还原"></a>4、mysqldump库级备份与还原</h2><h3 id="☆-备份-1"><a href="#☆-备份-1" class="headerlink" title="☆ 备份"></a>☆ 备份</h3><p>案例：把db_itheima数据库进行备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqldump --databases db_itheima &gt; /tmp/sqlbak/db_itheima.sql -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><h3 id="☆-还原-1"><a href="#☆-还原-1" class="headerlink" title="☆ 还原"></a>☆ 还原</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql &lt; .sql文件位置 -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br><span class="line">mysql&gt; source .sql文件的位置</span><br></pre></td></tr></table></figure><h2 id="5、mysqldump全库级备份"><a href="#5、mysqldump全库级备份" class="headerlink" title="5、mysqldump全库级备份"></a>5、mysqldump全库级备份</h2><blockquote><p>在MySQL中，如果想使用mysqldump进行全库级备份，必须开启二进制日志！！！</p></blockquote><p>开启二进制日志</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">...</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">10</span></span><br><span class="line">log<span class="literal">-bin</span>=/mysql_3306/<span class="keyword">data</span>/binlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 restart</span></span><br></pre></td></tr></table></figure><p>mysqldump高级选项说明：</p><table><thead><tr><th>常用选项</th><th>描述说明</th></tr></thead><tbody><tr><td>–flush-logs, -F</td><td>开始备份前刷新日志（二进制日志）binlog.000001 &#x3D;&gt; binlog.000002</td></tr><tr><td>–flush-privileges</td><td>备份包含mysql数据库时刷新授权表 &#x3D;&gt; 刷新用户和授权信息</td></tr><tr><td>–lock-all-tables, -x</td><td>MyISAM一致性，服务可用性（针对所有库所有表）</td></tr><tr><td>–lock-tables, -l</td><td>备份前锁表（针对要备份的库）</td></tr><tr><td>–single-transaction</td><td>适用InnoDB引擎，保证一致性，服务可用性</td></tr><tr><td>–master-data&#x3D;2</td><td>表示将二进制日志位置和文件名写入到备份文件并在dump文件中注释掉这一行</td></tr><tr><td>–master-data&#x3D;1</td><td>表示将二进制日志位置和文件名写入到备份文件,在dump文件中不注释这一行</td></tr></tbody></table><p><strong>–master-data参数其他说明：</strong></p><p>1）恢复时会执行，默认是1<br>2）需要RELOAD privilege并必须打开二进制文件<br>3）这个选项会自动打开–lock-all-tables，关闭–lock-tables</p><h3 id="☆-备份-2"><a href="#☆-备份-2" class="headerlink" title="☆ 备份"></a>☆ 备份</h3><p>前提：一定要开启二进制日志</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqldump --all-databases --master-data --single-transaction &gt; /tmp/sqlbak/all.sql -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><h3 id="☆-还原-2"><a href="#☆-还原-2" class="headerlink" title="☆ 还原"></a>☆ 还原</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql &lt; all.sql -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>mysqldump工具备份的是&#x3D;&#x3D;SQL语句&#x3D;&#x3D;，故备份不需要停服务</li><li>使用备份文件&#x3D;&#x3D;恢复&#x3D;&#x3D;时，要保证&#x3D;&#x3D;数据库处于运行状态&#x3D;&#x3D;</li><li>只能实现全库，指定库，表级别的&#x3D;&#x3D;某一时刻的备份&#x3D;&#x3D;，本身&#x3D;&#x3D;不能增量备份&#x3D;&#x3D;</li><li>适用于&#x3D;&#x3D;中小型&#x3D;&#x3D;数据库</li></ol><h1 id="四、mysqldump-binlog实现增量备份"><a href="#四、mysqldump-binlog实现增量备份" class="headerlink" title="四、mysqldump + binlog实现增量备份"></a>四、mysqldump + binlog实现增量备份</h1><h2 id="1、核心思路"><a href="#1、核心思路" class="headerlink" title="1、核心思路"></a>1、核心思路</h2><p>搞明白一件事：到底什么是增量备份？</p><p>答：① 要有全量备份 ② 继续增删改数据 ③ 再次需要备份时，不需要进行全量备份，只需要备份binlog日志文件即可（因为binlog日志记录了增删改操作的所有SQL语句）</p><h2 id="2、增量备份实验步骤"><a href="#2、增量备份实验步骤" class="headerlink" title="2、增量备份实验步骤"></a>2、增量备份实验步骤</h2><p>第一步：先准备数据（前提）</p><p>第二步：开启二进制，然后做全量备份（全库备份）</p><p>第三步：继续对数据库进行增删改操作</p><p>第四步：突然发生了硬件故障，数据库丢失了</p><p>第五步：恢复全量备份导出的数据（不完整，可能只有90%）</p><p>第六步：备份二进制日志，根据其信息（导入剩余的10%的数据）</p><p>…</p><p>完成</p><h2 id="3、增量备份的具体实践"><a href="#3、增量备份的具体实践" class="headerlink" title="3、增量备份的具体实践"></a>3、增量备份的具体实践</h2><p>第一步：准备数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db_itheima default charset=utf8;</span><br><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_student(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">name varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned default <span class="number">0</span>,</span><br><span class="line">gender <span class="class"><span class="keyword">enum</span>(&#x27;<span class="title">male</span>&#x27;,&#x27;<span class="title">female</span>&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">subject</span> <span class="title">enum</span>(&#x27;<span class="title">ui</span>&#x27;,&#x27;<span class="title">java</span>&#x27;,&#x27;<span class="title">yunwei</span>&#x27;,&#x27;<span class="title">python</span>&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">primary</span> <span class="title">key</span>(<span class="title">id</span>)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;刘备&#x27;,33,&#x27;<span class="title">male</span>&#x27;,&#x27;<span class="title">java</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;关羽&#x27;,32,&#x27;<span class="title">male</span>&#x27;,&#x27;<span class="title">yunwei</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;张飞&#x27;,30,&#x27;<span class="title">male</span>&#x27;,&#x27;<span class="title">python</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;貂蝉&#x27;,18,&#x27;<span class="title">female</span>&#x27;,&#x27;<span class="title">ui</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;大乔&#x27;,18,&#x27;<span class="title">female</span>&#x27;,&#x27;<span class="title">ui</span>&#x27;);</span></span><br></pre></td></tr></table></figure><p>第二步：开启二进制日志，重启服务，然后进行全库备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">...</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">10</span></span><br><span class="line">log<span class="literal">-bin</span>=/mysql_3306/<span class="keyword">data</span>/binlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 restart</span></span><br><span class="line"><span class="comment"># rm -rf /tmp/sqlbak/*</span></span><br><span class="line"><span class="comment"># mysqldump --single-transaction --flush-logs --master-data=2 --all-databases &gt; /tmp/sqlbak/all.sql -p</span></span><br></pre></td></tr></table></figure><p>第三步：继续对数据库进行增删改操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into tb_student values (null,<span class="string">&#x27;小乔&#x27;</span>,<span class="number">16</span>,<span class="string">&#x27;female&#x27;</span>,<span class="string">&#x27;ui&#x27;</span>);</span><br><span class="line">mysql&gt; delete from tb_student <span class="built_in">where</span> id = <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>第四步：突然发生了硬件故障，数据库丢失了</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -e &quot;drop database db_itheima;&quot; -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>…故事开始了（删库）</p><p>第五步：动员运维工程师开始进行数据恢复，马上把最新的二进制文件进行备份</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp /mysql_3306/data/binlog.000003 空格 /tmp/sqlbak/</span></span><br></pre></td></tr></table></figure><p>第六步：先进行全库恢复</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql &lt; /tmp/sqlbak/all.sql -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>第七步：通过binlog增量备份还原数据到100%</p><p>学会读二进制日志文件，必须通过专业的工具</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqlbinlog /tmp/sqlbak/binlog.000003  =&gt;  重点找事故的临界点，如drop database</span></span><br><span class="line">确认at位置</span><br><span class="line"><span class="comment"># mysqlbinlog --start-position=4 --stop-position=740 /tmp/sqlbak/binlog.000003 |mysql -p</span></span><br></pre></td></tr></table></figure><p>到此恢复100%数据</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL介绍及安装</title>
      <link href="/posts/30031.html"/>
      <url>/posts/30031.html</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL介绍及安装"><a href="#MySQL介绍及安装" class="headerlink" title="MySQL介绍及安装"></a>MySQL介绍及安装</h1><h1 id="一、MySQL概述"><a href="#一、MySQL概述" class="headerlink" title="一、MySQL概述"></a>一、MySQL概述</h1><h2 id="1、关系型数据库与非关系型数据库"><a href="#1、关系型数据库与非关系型数据库" class="headerlink" title="1、关系型数据库与非关系型数据库"></a>1、关系型数据库与非关系型数据库</h2><p>RDBMS（relational database management system），既关系型数据库管理系统。</p><p>简单来说，关系型数据库，是指采用了&#x3D;&#x3D;二维表格&#x3D;&#x3D;来组织数据的数据库。</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824093353050.png" alt="image-20200824093353050"></p><blockquote><p>扩展：数据库在行业内一般会有两种情况，关系型数据库与非关系型数据库。非关系型数据库并不是通过二维表格来维护数据的，而是通过key&#x2F;value键值对来维护数据的。</p></blockquote><h2 id="2、常见的关系型数据库"><a href="#2、常见的关系型数据库" class="headerlink" title="2、常见的关系型数据库"></a>2、常见的关系型数据库</h2><p>&#x3D;&#x3D;oracle、mysql&#x3D;&#x3D;、DB2（IBM）、Sybase、&#x3D;&#x3D;SQL server&#x3D;&#x3D;（Microsoft微软）、IBM Informix</p><p>关系型数据库的**最大特点就是&#x3D;&#x3D;事务的一致性&#x3D;&#x3D;**：所以也在对事物一致性的维护中有很大的开销.</p><h2 id="3、什么是事务"><a href="#3、什么是事务" class="headerlink" title="3、什么是事务"></a>3、什么是事务</h2><p>1）事务由一条或者多条sql语句组成；</p><p>2）在事务中的操作，这些sql语句要么都成功执行，要么都不执行，这就是一个事务。 </p><p>&#x3D;&#x3D;举例说明：&#x3D;&#x3D;</p><ol><li>    登陆ATM机，输入密码； </li><li>    连接数据库，验证密码； </li><li>    验证成功，获得用户信息，比如存款余额等； </li><li>    用户输入需要转账的金额，按下确认键；</li><li>    &#x3D;&#x3D;从后台数据库中减掉用户账户上的对应金额（update语句）；&#x3D;&#x3D; </li><li>    &#x3D;&#x3D;从后台数据库中给对方账户增加相应的金额（update语句）；&#x3D;&#x3D; </li><li>    确认，退卡，走人；</li></ol><h2 id="4、事务特点-ACID）"><a href="#4、事务特点-ACID）" class="headerlink" title="4、事务特点(ACID）"></a>4、事务特点(ACID）</h2><ul><li><p>原子性(Atomicity)：</p><p>事务中的全部操作在数据库中是不可分割的，要么&#x3D;&#x3D;全部完成&#x3D;&#x3D;，要么&#x3D;&#x3D;均不执行&#x3D;&#x3D;。</p></li><li><p>一致性(Consistency)：</p><p>指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态，不能破坏关系数据的完整性以及业务逻辑上的一致性。</p></li><li><p>隔离性(Isolation)：</p><p>一个事务的执行不受其他事务的干扰，事务执行的中间结果对其他事务必须是透明的。隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。 </p></li><li><p>持久性(Durability)：</p><p>持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。</p></li></ul><blockquote><p>对数据的&#x3D;&#x3D;一致性&#x3D;&#x3D;要求较高;典型的&#x3D;&#x3D;银行及支付系统类&#x3D;&#x3D;；</p></blockquote><h2 id="5、MySQL数据库概述"><a href="#5、MySQL数据库概述" class="headerlink" title="5、MySQL数据库概述"></a>5、MySQL数据库概述</h2><ul><li>MySQL是一种关系型数据库管理系统</li><li>由瑞典MySQL AB 公司开发，目前属于Oracle旗下</li><li>MySQL是C&#x2F;S架构</li></ul><h2 id="6、MySQL数据库版本"><a href="#6、MySQL数据库版本" class="headerlink" title="6、MySQL数据库版本"></a>6、MySQL数据库版本</h2><ul><li><p>**社区版：MySQL Community Edition  (&#x3D;&#x3D;GPL&#x3D;&#x3D;) **</p><ol><li>可以看做是企业版的“广泛体验版（小白鼠版）”，未经各个专有系统平台的压力测试和性能测试</li><li>基于GPL协议发布，可以随意下载使用 </li><li>没有任何官方技术支持服务</li></ol></li><li><p>**企业版：MySQL Enterprise Edition(&#x3D;&#x3D;commercial&#x3D;&#x3D;) **</p><ol><li>提供了比较全面的高级功能、管理工具及技术支持 </li><li>安全性、稳定性、可扩展性比较好</li></ol></li><li><p><strong>集群版</strong>：MySQL Cluster CGE(&#x3D;&#x3D;commercial&#x3D;&#x3D;)</p></li></ul><p><strong>扩充：关于版本的命名方式如何定义？</strong></p><table><thead><tr><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>α（Alpha）版</td><td>内测版，内部交流或者专业测试人员测试用。Bug较多，普通用户最好不要安装。</td></tr><tr><td>β（Beta）版</td><td>公测版，专业爱好者大规模测试用，存在一些缺陷，该版本也不适合一般用户安装。</td></tr><tr><td>γ ( Gamma )版</td><td>相当成熟的测试版，与即将发行的正式版相差无几。</td></tr><tr><td>&#x3D;&#x3D;Final&#x3D;&#x3D;</td><td>正式版本</td></tr><tr><td>Free</td><td>自由版本</td></tr><tr><td>&#x3D;&#x3D;Release&#x3D;&#x3D;</td><td>发行版本</td></tr><tr><td>&#x3D;&#x3D;Standard&#x3D;&#x3D;</td><td>标准版本</td></tr><tr><td>&#x3D;&#x3D;Mini&#x3D;&#x3D;</td><td>迷你精简版本,只有最基本的功能</td></tr><tr><td>Upgrade</td><td>升级版本</td></tr><tr><td>&#x3D;&#x3D;GA(GenerallyAvailable)&#x3D;&#x3D;</td><td>开发团队认为该版本是稳定版,可以在较为关键的场合使用。</td></tr><tr><td>Retail</td><td>零售版</td></tr></tbody></table><h2 id="7、获取MySQL软件"><a href="#7、获取MySQL软件" class="headerlink" title="7、获取MySQL软件"></a>7、获取MySQL软件</h2><p>官网：<a href="http://www.mysql.com/">www.mysql.com</a></p><p>第一步：单击Downloads下载</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100029387.png" alt="image-20200824100029387"></p><p>第二步：找到社区版</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100128238.png" alt="image-20200824100128238"></p><p>第三步：单击进入MySQL社区版下载页面</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100159182.png" alt="image-20200824100159182"></p><p>第四步：选择合适的版本</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100400707.png" alt="image-20200824100400707"></p><p>① GLIBC版本（相当于Windows中的绿色版）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100615418.png" alt="image-20200824100615418"></p><p>② 源码编译版本（需要源码编译三步走 &#x3D;&gt; 配置 + 编译 + 安装）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100817171.png" alt="image-20200824100817171"></p><h1 id="二、CentOS7-6操作系统最小化安装"><a href="#二、CentOS7-6操作系统最小化安装" class="headerlink" title="二、CentOS7.6操作系统最小化安装"></a>二、CentOS7.6操作系统最小化安装</h1><h2 id="1、创建自定义虚拟机环境"><a href="#1、创建自定义虚拟机环境" class="headerlink" title="1、创建自定义虚拟机环境"></a>1、创建自定义虚拟机环境</h2><p>第一步：选择自定义（根据需求设定服务器环境）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824102824039.png" alt="image-20200824102824039"></p><p>第二步：选择稍后安装操作系统</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824102912744.png" alt="image-20200824102912744"></p><p>第三步：选择操作系统类型</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824102933763.png" alt="image-20200824102933763"></p><p>第四步：设置虚拟机名称及路径（建议剩余空间大于等于20G）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103023816.png" alt="image-20200824103023816"></p><p>第五步：设置CPU核数</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103100284.png" alt="image-20200824103100284"></p><p>第六步：设置MEM内存</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103130824.png" alt="image-20200824103130824"></p><p>第七步：设置网络连接（NAT模式）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103157354.png" alt="image-20200824103157354"></p><p>剩下的全部默认，一路下一步，直至设置完成！</p><h2 id="2、安装CentOS7-6最小化模式"><a href="#2、安装CentOS7-6最小化模式" class="headerlink" title="2、安装CentOS7.6最小化模式"></a>2、安装CentOS7.6最小化模式</h2><p>第一步：加载光盘镜像</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103435226.png" alt="image-20200824103435226"></p><p>第二步：启动虚拟机，安装CentOS7.6</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103512284.png" alt="image-20200824103512284"></p><p>第三步：设置安装语言（必须选择全英文）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103648437.png" alt="image-20200824103648437"></p><p>第四步：设置服务器时间（Asia&#x2F;Shanghai）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103734239.png" alt="image-20200824103734239"></p><p>第五步：软件选择，最小化然后必须要勾选开发工具（里面主要是GCC编译器）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103912466.png" alt="image-20200824103912466"></p><p>第六步：自动分区</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824104015944.png" alt="image-20200824104015944"></p><p>第七步：设置网络连接为自动连接（开机后，自动连接网络）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824104058317.png" alt="image-20200824104058317"></p><p>第八步：设置ROOT账号密码以及自定义用户（建议为itheima）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824104211477.png" alt="image-20200824104211477"></p><h2 id="3、CentOS7-6操作系统最小化后续配置"><a href="#3、CentOS7-6操作系统最小化后续配置" class="headerlink" title="3、CentOS7.6操作系统最小化后续配置"></a>3、CentOS7.6操作系统最小化后续配置</h2><p>① 设置主机名称</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname centos7.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br></pre></td></tr></table></figure><p>② 更改IP获取方式为静态设置以及绑定主机名+IP到&#x2F;etc&#x2F;hosts</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line"><span class="built_in">TYPE</span>=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">DNS1=<span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">DNS2=<span class="number">119.29</span>.<span class="number">29.29</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vi /etc/hosts</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.10</span> centos7.itcast.cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart network</span></span><br><span class="line">如果是多网卡形式，建议使用ifdown与ifup</span><br><span class="line"><span class="comment"># ifdown ens33</span></span><br><span class="line"><span class="comment"># ifup ens33</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ip a</span></span><br></pre></td></tr></table></figure><p>③ 关闭防火墙与SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>④ 配置公网YUM源（可以考虑腾讯）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install wget -y</span></span><br><span class="line"><span class="comment"># mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span></span><br><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos7_base.repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><p>⑤ 安装扩展软件（bash-completion自动补全、vim编辑器、net-tools网络工具包以及ntpdate时间同步工具）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install bash-completion vim net-tools ntpdate -y</span></span><br></pre></td></tr></table></figure><p>⑥ ntpdate时间同步 </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate 120.25.108.11</span></span><br></pre></td></tr></table></figure><h2 id="4、拍摄快照：把CentOS7-6最小化系统做模板机"><a href="#4、拍摄快照：把CentOS7-6最小化系统做模板机" class="headerlink" title="4、拍摄快照：把CentOS7.6最小化系统做模板机"></a>4、拍摄快照：把CentOS7.6最小化系统做模板机</h2><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824112502117.png" alt="image-20200824112502117"></p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824112539814.png" alt="image-20200824112539814"></p><blockquote><p>拍摄快照完成后，这台机器就可以关机啦，以后专门充当克隆用的母机！</p></blockquote><h1 id="三、MySQL的安装的几种方式"><a href="#三、MySQL的安装的几种方式" class="headerlink" title="三、MySQL的安装的几种方式"></a>三、MySQL的安装的几种方式</h1><h2 id="1、MySQL安装方式"><a href="#1、MySQL安装方式" class="headerlink" title="1、MySQL安装方式"></a>1、MySQL安装方式</h2><p>二进制软件包安装</p><p>① yum安装或rpm安装（略）</p><p>② glibc版本安装（相当于Windows中的绿色软件）</p><p>命名：&#x3D;&#x3D;mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz&#x3D;&#x3D; </p><p>依赖[^glibc]库，可以安装在通用的Linux系统下</p><p>源码包编译安装</p><p>命名：mysql-5.7.31.tar.gz，通用的Linux下都可以编译安装。</p><h2 id="2、三种安装方式的区别"><a href="#2、三种安装方式的区别" class="headerlink" title="2、三种安装方式的区别"></a>2、三种安装方式的区别</h2><table><thead><tr><th>安装方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>rpm</td><td>安装卸载简单</td><td>可定制性差</td></tr><tr><td>glibc</td><td>可定制性相比rpm包灵活些</td><td>安装相比rpm包复杂些，需要手动初始化数据库</td></tr><tr><td>源码安装</td><td>可定制性最强，根据需求和功能定制</td><td>安装麻烦，需要手动初始化数据库</td></tr></tbody></table><blockquote><p>在企业中，数据库的安装很少使用rpm方式，大部分都是基于源码安装以及glibc安装！</p></blockquote><h2 id="3、区分数据库与数据库实例"><a href="#3、区分数据库与数据库实例" class="headerlink" title="3、区分数据库与数据库实例"></a>3、区分数据库与数据库实例</h2><h4 id="㈠-什么是MySQL数据库？"><a href="#㈠-什么是MySQL数据库？" class="headerlink" title="㈠ 什么是MySQL数据库？"></a>㈠ 什么是MySQL数据库？</h4><p><strong>数据库（database）：</strong> 操作系统或存储上的&#x3D;&#x3D;数据文件的集合&#x3D;&#x3D;。mysql数据库中，数据库文件可以是* .frm、*.MYD、*.MYI、*.ibd等结尾的文件， 不同存储引擎文件类型不同。</p><h4 id="㈡-什么是MySQL数据库实例？"><a href="#㈡-什么是MySQL数据库实例？" class="headerlink" title="㈡ 什么是MySQL数据库实例？"></a>㈡ 什么是MySQL数据库实例？</h4><p><strong>数据库实例（instance）：</strong> 由&#x3D;&#x3D;后台进程或者线程&#x3D;&#x3D;以及一个&#x3D;&#x3D;共享内存区&#x3D;&#x3D;组成。共享内存可以被运行的后台线程所共享。 数据库实例才是真正操作数据库的。</p><p>注意：MySQL的后台守护程序&#x3D;&#x3D;mysqld&#x3D;&#x3D;是单进程多线程的工作模式。</p><h4 id="㈢-什么是MySQL数据库服务器？"><a href="#㈢-什么是MySQL数据库服务器？" class="headerlink" title="㈢ 什么是MySQL数据库服务器？"></a>㈢ 什么是MySQL数据库服务器？</h4><p><strong>数据库服务器(database server)：</strong>部署&#x3D;&#x3D;安装数据库实例&#x3D;&#x3D;的服务器。</p><h4 id="㈣-数据库和数据库实例之间的关系是什么？"><a href="#㈣-数据库和数据库实例之间的关系是什么？" class="headerlink" title="㈣ 数据库和数据库实例之间的关系是什么？"></a>㈣ 数据库和数据库实例之间的关系是什么？</h4><p>通常情况下，数据库实例和数据库是一一对应的关系，也就是&#x3D;&#x3D;一个数据库实例对应一个数据库&#x3D;&#x3D;； 但是，在集群环境中存在&#x3D;&#x3D;多个数据库实例共同使用一个数据库&#x3D;&#x3D;。oracle RAC</p><h1 id="四、MySQL的GLIBC版本安装"><a href="#四、MySQL的GLIBC版本安装" class="headerlink" title="四、MySQL的GLIBC版本安装"></a>四、MySQL的GLIBC版本安装</h1><h2 id="1、获取MySQL-GLIBC版本"><a href="#1、获取MySQL-GLIBC版本" class="headerlink" title="1、获取MySQL GLIBC版本"></a>1、获取MySQL GLIBC版本</h2><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824114350352.png" alt="image-20200824114350352"></p><h2 id="2、学会看官方文档"><a href="#2、学会看官方文档" class="headerlink" title="2、学会看官方文档"></a>2、学会看官方文档</h2><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824114911039.png" alt="image-20200824114911039"></p><h2 id="3、安装MySQL依赖库软件"><a href="#3、安装MySQL依赖库软件" class="headerlink" title="3、安装MySQL依赖库软件"></a>3、安装MySQL依赖库软件</h2><p>第一步：克隆模板机，生成MySQL服务器</p><p>第二步：启动系统</p><p>第三步：更改主机名称为mysql.itcast.cn，然后重启网络</p><p>第四步：拍摄快照</p><p>第五步：安装依赖库libaio库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install libaio -y</span></span><br></pre></td></tr></table></figure><h2 id="4、上传软件包解压，了解目录结构"><a href="#4、上传软件包解压，了解目录结构" class="headerlink" title="4、上传软件包解压，了解目录结构"></a>4、上传软件包解压，了解目录结构</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -xf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz</span></span><br><span class="line"><span class="comment"># ls mysql-5.7.31-linux-glibc2.12-x86_64</span></span><br></pre></td></tr></table></figure><p>解压完成后，目录结构如下图所示：</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824115716608.png" alt="image-20200824115716608"></p><p>安装需求：</p><table><thead><tr><th>选项</th><th>值（自定义也可以采用默认形式）</th></tr></thead><tbody><tr><td>安装路径</td><td>&#x2F;mysql_3306</td></tr><tr><td>数据路径</td><td>&#x2F;mysql_3306&#x2F;data</td></tr><tr><td>端口号</td><td>3306</td></tr></tbody></table><h2 id="5、软件的安装（查看官方说明）"><a href="#5、软件的安装（查看官方说明）" class="headerlink" title="5、软件的安装（查看官方说明）"></a>5、软件的安装（查看官方说明）</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html">https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html</a></p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824120143999.png" alt="image-20200824120143999"></p><p>第一步：创建一个数据库专用账号mysql（其所属组也为mysql）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -r -s /sbin/nologin mysql</span></span><br><span class="line"><span class="comment"># id mysql</span></span><br></pre></td></tr></table></figure><p>第二步：清空系统中的原有mariadb的配置文件(&#x2F;etc&#x2F;my.cnf)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /etc/my.cnf</span></span><br></pre></td></tr></table></figure><p>第三步：把mysql解压后的压缩包（GBLIC版本）移动到&#x2F;根目录下，然后更名为mysql_3306</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv mysql-5.7.31-linux-glibc2.12-x86_64 /mysql_3306</span></span><br></pre></td></tr></table></figure><p>第四步：切换到mysql工作目录&#x2F;mysql_3306，创建一个mysql-files</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /mysql_3306</span></span><br><span class="line"><span class="comment"># mkdir mysql-files</span></span><br></pre></td></tr></table></figure><p>第五步：更改mysql-files权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown mysql:mysql mysql-files</span></span><br><span class="line"><span class="comment"># chmod 750 mysql-files</span></span><br></pre></td></tr></table></figure><p>第六步：初始化数据库（可以实现数据库的初始化，而且会产生一个&#x3D;&#x3D;随机密码&#x3D;&#x3D;）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysqld --initialize --user=mysql --basedir=/mysql_3306</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">--initialize</span>  初始化（真正开始干活）</span><br><span class="line"><span class="literal">--user</span>=mysql  以mysql用户的身份初始化数据库，产生文件都是mysql作为拥有者</span><br><span class="line"><span class="literal">--basedir</span>=xxx    mysql其安装目录，非常重要</span><br><span class="line"></span><br><span class="line">运行完毕后，观察最后一行，保存root账号的密码，以备后期使用。</span><br><span class="line"><span class="number">2020</span><span class="literal">-08-24T06</span>:<span class="number">46</span>:<span class="number">24.889735</span>Z <span class="number">1</span> [<span class="type">Note</span>] A temporary password is generated <span class="keyword">for</span> root@localhost: (cn_jS+*n2wh</span><br></pre></td></tr></table></figure><blockquote><p>经验之谈：想查看mysql软件有没有初始化成功，主要看mysql目录下有没有产生data文件夹且文件夹中至少要有一个mysql的文件夹。</p></blockquote><p>第七步：设置安全加密连接（SSL），数据传输会采用加密形式，适合敏感数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysql_ssl_rsa_setup --datadir=/mysql_3306/data</span></span><br></pre></td></tr></table></figure><p>第八步：启动MySQL数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp support-files/mysql.server /etc/init.d/mysql_3306</span></span><br></pre></td></tr></table></figure><blockquote><p>注：默认情况下，GBLIC版本的数据库要求安装到&#x2F;usr&#x2F;local&#x2F;mysql目录，其mysql.server脚本中对应的目录也是&#x2F;usr&#x2F;local&#x2F;mysql，这会导致mysql无法启动。所以可以更改其basedir以及datadir两个变量</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/init.d/mysql_3306</span></span><br><span class="line"><span class="number">46</span>行 basedir=/mysql_3306</span><br><span class="line"><span class="number">47</span>行 datadir=/mysql_3306/<span class="keyword">data</span></span><br></pre></td></tr></table></figure><p>第九步：启动MySQL数据库（不能使用systemctl，只能使用service）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysql_3306 start</span></span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/mysql_3306/data/mysql.itcast.cn.err&#x27;</span>.</span><br></pre></td></tr></table></figure><blockquote><p>特别说明：当MySQL启动成功后，其日志会自动写入到data数据目录中的主机名称.err文件中，这个文件一定要多看，涉及MySQL无法启动、启动报错，其详细的原因99%在.err文件中可以找到问题所在！</p></blockquote><h2 id="6、软件的安装常见问题答疑"><a href="#6、软件的安装常见问题答疑" class="headerlink" title="6、软件的安装常见问题答疑"></a>6、软件的安装常见问题答疑</h2><p>问题1：为什么一定要删除&#x2F;etc&#x2F;my.cnf文件，不删除有何影响？</p><p>答：&#x2F;etc&#x2F;my.cnf文件是操作系统为mariadb软件预留的配置的文件，之所以一定要删除这个文件，主要原因在于数据库在初始化时，首先在自己的安装目录下寻找有没有my.cnf配置文件，如果有，会自动根据里面的配置信息进行初始化。如果找不到，则到&#x2F;etc目录下寻找my.cnf文件，如果有，依然会按照其内部的配置进行初始化，但是由于&#x2F;etc目录下的my.cnf文件是mariadb的，这会导致我们的初始化如果按照mariadb的配置，会导致初始化失败。</p><p>问题2：mysql-files文件夹到底干什么的？</p><p>答：目前mysql-files没有什么用，但是你必须要创建，因为GLIBC属于二进制软件包，其很多配置已经默认了，包括mysql-files文件夹，如果没有这个文件夹可能导致mysql无法启动。</p><blockquote><p>mysql-files：主要用于数据文件的导入与导出（备份与还原），MySQL的备份会产生一个文件，可以xxx.sql或xxx.txt。mysql-files就是导入与导出时，所指定的默认目录。</p></blockquote><p>问题3：到底怎么判断数据库是否初始化成功了？</p><p>答：数据库的安装容易出错的地方就是初始化，一旦初始化失败了，数据库100%启动报错。如何确认数据库是否初始化成功了呢？主要看安装目录下有没有生成一个&#x3D;&#x3D;data&#x3D;&#x3D;的文件夹。</p><blockquote><p>一定要看准一点，文件夹名称叫data（数据目录），不是date（时间）</p></blockquote><p>问题4：为什么一定要把mysql.server放在&#x2F;etc&#x2F;init.d目录下，不放行不行？</p><p>答：不放也可以，但是这个时候就不能使用service命令启动以及添加到开机启动项了。只能通过bin&#x2F;mysqld_safe脚本启动数据库。</p><blockquote><p>&#x2F;etc&#x2F;init.d是CentOS6以及早期版本中的服务脚本目录，只要把Shell启动脚本放在这个目录下，你就可以使用service进行管理。</p></blockquote><p>问题5：为什么一定要改变&#x2F;etc&#x2F;init.d&#x2F;mysql_3306中的basedir与datadir？</p><p>答：GLIBC版本属于二进制版本，默认已经配置了很多内容，包括默认的安装路径&#x2F;usr&#x2F;local&#x2F;mysql，一旦你的mysql没有安装在这个目录下，则必须手工设置basedir以及datadir其位置，否则脚本无法启动mysql程序</p><p>问题6：如何让mysql自动启动？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chkconfig --list查询系统中的所有开机启动项</span></span><br><span class="line"><span class="comment"># chkconfig --add mysql_3306    必须与/etc/init.d目录下的脚本名称一致</span></span><br><span class="line"><span class="comment"># chkconfig mysql_3306 on把2345四种模式全部开启（3字符界面，5图形界面）</span></span><br></pre></td></tr></table></figure><blockquote><p>CentOS6及以前版本中，控制服务的开机启动的</p></blockquote><h2 id="7、MySQL-GLIBC版本后续配置"><a href="#7、MySQL-GLIBC版本后续配置" class="headerlink" title="7、MySQL GLIBC版本后续配置"></a>7、MySQL GLIBC版本后续配置</h2><p>第一步：更改管理员root账号的密码</p><ul><li><strong>方法1：</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> <span class="type">mysql_3306</span>]<span class="comment"># bin/mysqladmin -uroot password &#x27;123&#x27; -p</span></span><br><span class="line">Enter password:输入刚刚初始化产生的临时密码</span><br></pre></td></tr></table></figure><ul><li><strong>方法2</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> password=password(<span class="string">&#x27;456&#x27;</span>);   //未来版本将会弃用</span><br><span class="line">或者</span><br><span class="line">mysql&gt; <span class="built_in">set</span> password=<span class="string">&#x27;123&#x27;</span>;//推荐</span><br><span class="line"></span><br><span class="line">重置完成后，建议刷新权限，让其立即生效</span><br><span class="line">mysql&gt; flush privielges;</span><br></pre></td></tr></table></figure><p>第二步：把mysql客户端命令添加到环境变量，以后随时可以访问</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &#x27;export PATH=$PATH:/mysql_3306/bin&#x27; &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"></span><br><span class="line">设置完成后，我们可以在任意位置调用mysql客户端命令</span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>第三步：手工定义MySQL的配置文件（非常重要）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /mysql_3306/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/mysql_3306</span><br><span class="line">datadir=/mysql_3306/<span class="keyword">data</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">选项说明：</span><br><span class="line">[<span class="type">mysqld</span>]代表针对服务器端进行配置</span><br><span class="line">basedir代表数据库的安装目录</span><br><span class="line">datadir代表数据目录，以后专门用于存放数据文件的（核心目录）</span><br><span class="line">socket代表套接字文件，专门为客户端与服务器端连接提供一个桥梁</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 restart</span></span><br></pre></td></tr></table></figure><blockquote><p>C(Client) &#x3D;&#x3D;&#x3D; mysql命令   连（socket套接字）接   mysqld服务器端程序</p></blockquote><p>第四步：安全配置（对于生产环境比较重要）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql_secure_installation</span></span><br></pre></td></tr></table></figure><p>一路Y，搞定！</p><blockquote><p>其主要就是是否启动密码脚尖器、是否设置root密码、是否允许root远程连接、是否移除测试数据库等等一系列功能。</p></blockquote><p>常见问题：如何关闭MySQL密码强度检测？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /mysql_3306/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">...</span><br><span class="line">validate_password=OFF</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 restart</span></span><br></pre></td></tr></table></figure><h1 id="五、MySQL的源码编译安装"><a href="#五、MySQL的源码编译安装" class="headerlink" title="五、MySQL的源码编译安装"></a>五、MySQL的源码编译安装</h1><h2 id="1、参考MySQL源码安装官方文档"><a href="#1、参考MySQL源码安装官方文档" class="headerlink" title="1、参考MySQL源码安装官方文档"></a>1、参考MySQL源码安装官方文档</h2><p>官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html">https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html</a></p><p><strong>源码安装三步曲：配置——&gt;编译——&gt;安装</strong></p><p>####㈠ 安装须知</p><ul><li>软件包介绍</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="literal">-boost-5</span>.<span class="number">7.31</span>.tar.gz可在任意发行版的Linux下安装</span><br></pre></td></tr></table></figure><h4 id="㈡-安装需求"><a href="#㈡-安装需求" class="headerlink" title="㈡  安装需求"></a>㈡  安装需求</h4><table><thead><tr><th>安装需求</th><th>具体配置</th></tr></thead><tbody><tr><td>安装目录（basedir）</td><td>&#x2F;mysql_3307</td></tr><tr><td>数据目录（datadir）</td><td>&#x2F;mysql_3307&#x2F;data</td></tr><tr><td>端口号</td><td>3307</td></tr><tr><td>socket文件位置</td><td>$basedir&#x2F;mysql.sock</td></tr><tr><td>字符集</td><td>utf8mb4</td></tr></tbody></table><p>####㈢ &#x3D;&#x3D;了解配置选项&#x3D;&#x3D;</p><ul><li>常用配置选项</li></ul><table><thead><tr><th>配置选项</th><th>描述</th><th>默认值</th><th>建议值</th></tr></thead><tbody><tr><td>CMAKE_INSTALL_PREFIX</td><td>安装基目录(basedir)</td><td>&#x2F;usr&#x2F;local&#x2F;mysql</td><td>根据需求</td></tr><tr><td>MYSQL_DATADIR</td><td>数据目录(datadir)</td><td>$basedir&#x2F;data</td><td>根据需求</td></tr><tr><td>SYSCONFDIR</td><td>默认配置文件my.cnf路径</td><td></td><td>&#x2F;etc</td></tr><tr><td>MYSQL_TCP_PORT</td><td>TCP&#x2F;IP端口</td><td>3306</td><td>非默认端口</td></tr><tr><td>MYSQL_UNIX_ADDR</td><td>套接字socket文件路径</td><td>&#x2F;tmp&#x2F;mysql.sock</td><td>$basedir&#x2F;</td></tr><tr><td>DEFAULT_CHARSET</td><td>默认字符集</td><td>latin1</td><td><strong>utf8mb4</strong></td></tr><tr><td>DEFAULT_COLLATION</td><td>默认校验规则</td><td>latin1_swedish_ci</td><td>utf8mb4_general_ci</td></tr><tr><td>WITH_EXTRA_CHARSETS</td><td>扩展字符集</td><td>all</td><td>all</td></tr><tr><td>ENABLED_LOCAL_INFILE</td><td>是否启用本地加载外部数据文件功能</td><td>OFF</td><td>建议开启</td></tr><tr><td>WITH_SSL</td><td>SSL支持类型</td><td>system</td><td>建议显式指定</td></tr><tr><td>WITH_BOOST</td><td>Boost库源代码的位置</td><td></td><td>Boost库是构建MySQL所必需的,建议事先下载</td></tr></tbody></table><ul><li>存储引擎相关配置项</li></ul><p><strong>说明：</strong></p><p>以下选项值均为布尔值，0或1；0代表不编译到服务器中，1代表编译，建议都静态编译到服务器中。</p><p>其他的存储引擎可以根据实际需求在安装时通过WITH_xxxx_STORAGE_ENGINE&#x3D;1的方式编译到服务器中。</p><table><thead><tr><th>配置选项</th><th>描述</th></tr></thead><tbody><tr><td>WITH_INNOBASE_STORAGE_ENGINE</td><td>将InnoDB存储引擎插件构建为静态模块编译到服务器中；建议编译到服务器中</td></tr><tr><td>WITH_PARTITION_STORAGE_ENGINE</td><td>是否支持分区</td></tr><tr><td>WITH_FEDERATED_STORAGE_ENGINE</td><td>本地数据库是否可以访问远程mysql数据</td></tr><tr><td>WITH_BLACKHOLE_STORAGE_ENGINE</td><td>黑洞存储引擎，接收数据，但不存储，直接丢弃</td></tr><tr><td>WITH_MYISAM_STORAGE_ENGINE</td><td>将MYISAM存储引擎静态编译到服务器中</td></tr></tbody></table><h2 id="2、MySQL的源码编译安装"><a href="#2、MySQL的源码编译安装" class="headerlink" title="2、MySQL的源码编译安装"></a>2、MySQL的源码编译安装</h2><blockquote><p>建议大家在源码编译安装之前，先拍摄一个快照</p></blockquote><p>第一步：安装MySQL编译需要用到的依赖库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install ncurses-devel cmake libaio-devel openssl-devel</span></span><br></pre></td></tr></table></figure><p>第二步：上传软件到服务器端并解压</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -xf mysql-boost-5.7.31.tar.gz</span></span><br><span class="line"><span class="comment"># cd mysql-5.7.31</span></span><br></pre></td></tr></table></figure><p>第三步：配置（基于cmake进行配置）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim myconfig.sh</span></span><br><span class="line">cmake . \</span><br><span class="line"><span class="literal">-DCMAKE_INSTALL_PREFIX</span>=/mysql_3307 \</span><br><span class="line"><span class="literal">-DMYSQL_DATADIR</span>=/mysql_3307/<span class="keyword">data</span> \</span><br><span class="line"><span class="literal">-DMYSQL_TCP_PORT</span>=<span class="number">3307</span> \</span><br><span class="line"><span class="literal">-DMYSQL_UNIX_ADDR</span>=/mysql_3307/mysql.sock \</span><br><span class="line"><span class="literal">-DWITH_INNOBASE_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_PARTITION_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_FEDERATED_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_BLACKHOLE_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_MYISAM_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DENABLED_LOCAL_INFILE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DEXTRA_CHARSETS</span>=all \</span><br><span class="line"><span class="literal">-DDEFAULT_CHARSET</span>=utf8mb4 \</span><br><span class="line"><span class="literal">-DDEFAULT_COLLATION</span>=utf8mb4_general_ci \</span><br><span class="line"><span class="literal">-DWITH_SSL</span>=system \</span><br><span class="line"><span class="literal">-DWITH_BOOST</span>=boost</span><br><span class="line"><span class="comment"># chmod +x myconfig.sh</span></span><br><span class="line"><span class="comment"># ./myconfig.sh</span></span><br><span class="line"></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-DCMAKE_INSTALL_PREFIX</span> ：安装路径</span><br><span class="line"><span class="literal">-DMYSQL_DATADIR</span> ：数据目录</span><br><span class="line"><span class="literal">-DMYSQL_TCP_PORT</span> ：端口号</span><br><span class="line"><span class="literal">-DMYSQL_UNIX_ADDR</span> ：套接字文件位置</span><br></pre></td></tr></table></figure><p>第四步：编译安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make -j2 &amp;&amp; make install</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-j2</span> ：代表同时开启多个线程共同实现编译操作</span><br></pre></td></tr></table></figure><h2 id="3、编译报错常见问题解析"><a href="#3、编译报错常见问题解析" class="headerlink" title="3、编译报错常见问题解析"></a>3、编译报错常见问题解析</h2><p>问题1：没有boost导致安装失败</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824170915430.png" alt="image-20200824170915430"></p><p>问题2：编译安装中途报错</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824170953774.png" alt="image-20200824170953774"></p><p>解决方案：只能重新编译一下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -f CMakeCache.txt</span></span><br><span class="line"><span class="comment"># make -j2 &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h2 id="4、MySQL数据库的初始化"><a href="#4、MySQL数据库的初始化" class="headerlink" title="4、MySQL数据库的初始化"></a>4、MySQL数据库的初始化</h2><p><strong>注意：</strong>进入到&#x3D;&#x3D;安装目录&#x3D;&#x3D;里&#x2F;mysql_3307</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /mysql_3307</span></span><br></pre></td></tr></table></figure><p>第一步：创建mysql-files目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建系统变量`secure_file_priv`限制导入导出目录并修改权限</span><br><span class="line"><span class="comment"># mkdir mysql-files</span></span><br><span class="line"><span class="comment"># chown -R mysql:mysql /mysql_3307</span></span><br><span class="line"><span class="comment"># chmod 750 mysql-files</span></span><br></pre></td></tr></table></figure><p>第二步：数据库初始化操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysqld --initialize --user=mysql --basedir=/mysql_3307 --datadir=/mysql_3307/data</span></span><br><span class="line">...</span><br><span class="line"><span class="number">2020</span><span class="literal">-08-24T11</span>:<span class="number">07</span>:<span class="number">37.621346</span>Z <span class="number">1</span> [<span class="type">Note</span>] A temporary password is generated <span class="keyword">for</span> root@localhost: O6.iHqrZgzz7</span><br></pre></td></tr></table></figure><p>第三步：拷贝mysql.server脚本到&#x2F;etc&#x2F;init.d目录，然后启动数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp support-files/mysql.server /etc/init.d/mysql_3307</span></span><br><span class="line"><span class="comment"># service mysql_3307 start</span></span><br></pre></td></tr></table></figure><p>启动异常的解决方案：</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824191029474.png" alt="image-20200824191029474"></p><p>查看mysql.itcast.cn.err这个错误日志</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824191502358.png" alt="image-20200824191502358"></p><p>出现以上问题的主要原因在于mysql这个用户对&#x2F;mysql_3307目录没有写入文件的权限，写入mysql_socket套接字文件。</p><p>解决方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R mysql.mysql /mysql_3307</span></span><br></pre></td></tr></table></figure><h2 id="5、MySQL源码编译安装后的后续配置"><a href="#5、MySQL源码编译安装后的后续配置" class="headerlink" title="5、MySQL源码编译安装后的后续配置"></a>5、MySQL源码编译安装后的后续配置</h2><p>第一步：编写MySQL配置文件，my.cnf</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /mysql_3307/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/mysql_3307</span><br><span class="line">datadir=/mysql_3307/<span class="keyword">data</span></span><br><span class="line">socket=/mysql_3307/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3307 restart</span></span><br></pre></td></tr></table></figure><p>第二步：设置管理员的密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysqladmin -uroot password &#x27;123&#x27; -p</span></span><br><span class="line">Enter password:O6.iHqrZgzz7</span><br></pre></td></tr></table></figure><p>第三步：安全设置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysql_secure_installation</span></span><br></pre></td></tr></table></figure><p>第四步：添加mysql_3307到开机启动项</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chkconfig --add mysql_3307</span></span><br><span class="line"><span class="comment"># chkconfig mysql_3307 on</span></span><br></pre></td></tr></table></figure><h1 id="六、MySQL常见问题解决方案"><a href="#六、MySQL常见问题解决方案" class="headerlink" title="六、MySQL常见问题解决方案"></a>六、MySQL常见问题解决方案</h1><h2 id="1、如何访问不同的数据库？"><a href="#1、如何访问不同的数据库？" class="headerlink" title="1、如何访问不同的数据库？"></a>1、如何访问不同的数据库？</h2><p><strong>方法一：</strong>直接使用&#x3D;&#x3D;<strong>对应的客户</strong>&#x3D;&#x3D;端软件访问</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">访问<span class="number">5.7</span>.<span class="number">31</span>版本数据库：</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># /mysql_3306/bin/mysql -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">3</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">31</span> MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">访问<span class="number">5.7</span>.<span class="number">31</span>版本数据库：</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># /mysql_3307/bin/mysql -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">7</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">31</span> Source distribution</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>方法二：</strong>&#x3D;&#x3D;定义别名&#x3D;&#x3D;的方式访问</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># alias mysql_3306=&quot;/mysql_3306/bin/mysql&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># alias mysql_3307=&quot;/mysql_3307/bin/mysql&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># mysql_3306 -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">4</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">31</span> MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># mysql_3307 -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">8</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">27</span> Source distribution</span><br></pre></td></tr></table></figure><p><strong>方法三：</strong>&#x3D;&#x3D;拷贝相应命令&#x3D;&#x3D;到PATH可以识别的路径下&#x3D;&#x3D;并重命名&#x3D;&#x3D;</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># unalias mysql_3306</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># unalias mysql_3307</span></span><br><span class="line">+++++++++++++++++++++我是华丽分隔符+++++++++++++++++++++++++++</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># cp /mysql_3306/bin/mysql /usr/bin/mysql_3306</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># cp /mysql_3307/bin/mysql /usr/bin/mysql_3307</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># which mysql_3306</span></span><br><span class="line">/usr/bin/mysql_3306</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># which mysql_3307</span></span><br><span class="line">/usr/bin/mysql_3307</span><br></pre></td></tr></table></figure><p><strong>深度思考：</strong>我们之所以能够连接到数据库里的**&#x3D;&#x3D;本质&#x3D;&#x3D;**是什么？答：套接字</p><h2 id="2、MySQL忘记密码的解决方案"><a href="#2、MySQL忘记密码的解决方案" class="headerlink" title="2、MySQL忘记密码的解决方案"></a>2、MySQL忘记密码的解决方案</h2><p><strong>敲黑板：</strong>找问题的解决方法很重要！</p><h3 id="1、跳过授权表（通用）"><a href="#1、跳过授权表（通用）" class="headerlink" title="1、跳过授权表（通用）"></a>1、跳过授权表（通用）</h3><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824193937756.png" alt="image-20200824193937756"></p><h4 id="㈠-跳过授权表重启数据库（以GLIBC-3306为例）"><a href="#㈠-跳过授权表重启数据库（以GLIBC-3306为例）" class="headerlink" title="㈠ 跳过授权表重启数据库（以GLIBC 3306为例）"></a>㈠ 跳过授权表重启数据库（以GLIBC 3306为例）</h4><h5 id="①-关闭数据库"><a href="#①-关闭数据库" class="headerlink" title="① 关闭数据库"></a>① 关闭数据库</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># mysqladmin shutdown -p</span></span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><h5 id="②-跳过授权表启动"><a href="#②-跳过授权表启动" class="headerlink" title="② 跳过授权表启动"></a>② 跳过授权表启动</h5><p><strong>友情提示：</strong>启动过程可能会一波三折，冷静分析看报错，必能解决！</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /mysql_3306/bin/mysqld --defaults-file=/mysql_3306/my.cnf --skip-grant-tables --skip-networking=on  --user=mysql &amp;</span></span><br></pre></td></tr></table></figure><h4 id="㈡-刷新授权表（重要）"><a href="#㈡-刷新授权表（重要）" class="headerlink" title="㈡ 刷新授权表（重要）"></a>㈡ 刷新授权表（重要）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:什么都不要输入，直接回车即可</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="㈢-修改密码"><a href="#㈢-修改密码" class="headerlink" title="㈢ 修改密码"></a>㈢ 修改密码</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user <span class="string">&#x27;root&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br></pre></td></tr></table></figure><p>**&#x3D;&#x3D;补充：&#x3D;&#x3D;**如果未能成功，则使用以下语句修改密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; UPDATE mysql.user <span class="built_in">SET</span> authentication_string = PASSWORD(<span class="string">&#x27;MyNewPass&#x27;</span>)</span><br><span class="line"><span class="built_in">WHERE</span> User = <span class="string">&#x27;root&#x27;</span> AND Host = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>修改密码后，使用jobs + kill命令，停止正在运行的mysqld进程。然后使用service启动服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jobs</span></span><br><span class="line"><span class="comment"># kill %1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 start</span></span><br></pre></td></tr></table></figure><h3 id="2、Unix和类Unix系统重置（了解）"><a href="#2、Unix和类Unix系统重置（了解）" class="headerlink" title="2、Unix和类Unix系统重置（了解）"></a>2、Unix和类Unix系统重置（了解）</h3><h4 id="㈠-停止数据库"><a href="#㈠-停止数据库" class="headerlink" title="㈠ 停止数据库"></a>㈠ 停止数据库</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># mysqladmin shutdown -p</span></span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><h4 id="㈡-编写创建密码语句到文件"><a href="#㈡-编写创建密码语句到文件" class="headerlink" title="㈡ 编写创建密码语句到文件"></a>㈡ 编写创建密码语句到文件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123&#x27;;&quot; &gt;&gt; /mysql_3306/mysql.pass</span></span><br><span class="line">注意：该文件一定要对启动用户如mysql有所有权限</span><br><span class="line"><span class="comment"># chown -R mysql. /mysql_3306</span></span><br></pre></td></tr></table></figure><h4 id="㈢-指定密码文件启动数据库"><a href="#㈢-指定密码文件启动数据库" class="headerlink" title="㈢ 指定密码文件启动数据库"></a>㈢ 指定密码文件启动数据库</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqld --defaults-file=/mysql_3306/my.cnf --init-file=/mysql_3306/mysql.pass  --user=mysql &amp;</span></span><br></pre></td></tr></table></figure><h4 id="㈣-删除密码文件，并测试"><a href="#㈣-删除密码文件，并测试" class="headerlink" title="㈣ 删除密码文件，并测试"></a>㈣ 删除密码文件，并测试</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -f /mysql_3306/mysql.pass</span></span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基本SQL语句（上）</title>
      <link href="/posts/53323.html"/>
      <url>/posts/53323.html</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL基本SQL语句（上）"><a href="#MySQL基本SQL语句（上）" class="headerlink" title="MySQL基本SQL语句（上）"></a>MySQL基本SQL语句（上）</h1><h1 id="一、客户端工具的使用"><a href="#一、客户端工具的使用" class="headerlink" title="一、客户端工具的使用"></a>一、客户端工具的使用</h1><h2 id="1、客户端工具mysql使用"><a href="#1、客户端工具mysql使用" class="headerlink" title="1、客户端工具mysql使用"></a>1、客户端工具mysql使用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql: mysql命令行工具，一般用来连接访问mysql数据库</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-u, –user&#x3D;name</td><td>指定登录用户名</td></tr><tr><td>-p, –password</td><td>指定登录密码(注意是小写p),一定要放到最后面</td></tr><tr><td>-h, –host&#x3D;name</td><td>指定数据库的主机地址</td></tr><tr><td>-P, –port&#x3D;xxx</td><td>指定数据库的端口号(大写P)</td></tr><tr><td>-S, –socket&#x3D;name</td><td>指定socket文件</td></tr><tr><td>-e, –execute&#x3D;name</td><td>使用非交互式操作(在shell终端执行sql语句)</td></tr></tbody></table><p>案例：使用mysql客户端工具连接服务器端（用户名：root、密码：123）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p123 </span></span><br></pre></td></tr></table></figure><blockquote><p>注：以上连接方式虽然可以连接进入到MySQL，但是官方不建议我们直接把密码写入在终端，建议-p然后直接回车，然后在终端中输入密码。</p></blockquote><p>案例：连接10.1.1.100服务器上的MySQL数据库（用户名：itheima，密码：123）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -h 10.1.1.100 -P 3306 -uitheima -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>案例：根据不同的套接字连接同步的数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -S /tmp/mysql.sock -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>案例：在不进入MySQL内部的情况下，执行SQL语句，获取数据信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -e &quot;show databases;&quot; -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p><strong>扩展了解：</strong></p><table><thead><tr><th>默认库</th><th>描述</th></tr></thead><tbody><tr><td>information_schema</td><td>1、&#x3D;&#x3D;对象信息数据库&#x3D;&#x3D;，提供对数据库元数据的访问 ，有关MySQL服务器的信息，例如数据库或表的名称，列的数据类型或访问权限等；<br>2、在INFORMATION_SCHEMA中，有数个只读表，它们实际上是视图，而不是基本表，因此你将无法看到与之相关的任何文件；<br>3、视图，是一个虚表，即视图所对应的数据不进行实际存储，数据库中只存储视图的定义，在对视图的数据进行操作时，系统根据视图的定义去操作与视图相关联的基本表</td></tr><tr><td>mysql</td><td>1、mysql数据库是&#x3D;&#x3D;系统数据库&#x3D;&#x3D;。它包含存储MySQL服务器运行时所需的信息的表。比如权限表、对象信息表、日志系统表、时区系统表、优化器系统表、杂项系统表等。<br>2、&#x3D;&#x3D;不可以删除&#x3D;&#x3D;,也不要轻易修改这个数据库里面的表息。</td></tr><tr><td>performance_schema</td><td>MySQL5.5开始新增一个数据库，主要用于&#x3D;&#x3D;收集数据库服务器性能&#x3D;&#x3D;；并且库里表的存储引擎均PERFORMANCE_SCHEMA，而用户是不能创建存储引擎为PERFORMANCE_SCHEMA的表</td></tr><tr><td>sys</td><td>1、mysql5.7增加了sys 系统数据库，通过这个库可以快速的了解系统的元数据信息；<br>2、sys库方便DBA发现数据库的很多信息，解决性能瓶颈；<br>3、这个库是通过视图的形式把information_schema 和performance_schema结合起来，查询出更加令人容易理解的数据</td></tr></tbody></table><h2 id="2、客户端工具mysqladmin使用"><a href="#2、客户端工具mysqladmin使用" class="headerlink" title="2、客户端工具mysqladmin使用"></a>2、客户端工具mysqladmin使用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin：客户端管理mysql数据库工具</span><br></pre></td></tr></table></figure><h4 id="㈠-常用选项"><a href="#㈠-常用选项" class="headerlink" title="㈠ 常用选项"></a>㈠ 常用选项</h4><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-h, –host&#x3D;name</td><td>指定连接数据库主机</td></tr><tr><td>-p, –password</td><td>指定数据库密码</td></tr><tr><td>-P, –port&#x3D;#</td><td>指定数据库端口</td></tr><tr><td>-S, –socket&#x3D;name</td><td>指定数据库socket文件</td></tr><tr><td>-u, –user&#x3D;name</td><td>指定连接数据库用户</td></tr></tbody></table><h4 id="㈡-常用命令"><a href="#㈡-常用命令" class="headerlink" title="㈡ 常用命令"></a>㈡ 常用命令</h4><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>password [new-password]</td><td>更改密码</td></tr><tr><td>reload</td><td>刷新授权表</td></tr><tr><td>shutdown</td><td>停止mysql服务</td></tr><tr><td>status</td><td>简短查看数据库状态信息</td></tr><tr><td>start-slave</td><td>启动slave</td></tr><tr><td>stop-slave</td><td>停止slave</td></tr><tr><td>variables</td><td>打印可用变量</td></tr><tr><td>version</td><td>查看当前mysql数据库的版本信息</td></tr></tbody></table><p>案例：更改root账号的密码为root</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqladmin password &#x27;新密码&#x27; -p</span></span><br><span class="line">Enter password:<span class="string">&#x27;旧密码&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysqladmin password &#x27;root&#x27; -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>案例：更改密码后，建议刷新授权表（mysql&gt; flush privileges;）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqladmin reload -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>案例：停止mysql</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqladmin shutdown -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><blockquote><p>service mysql_3306 stop</p></blockquote><p>案例：查看mysql状态</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqladmin status -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>案例：打印可用变量（mysql本身预置了很多变量信息）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqladmin variables -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>案例：查询mysql版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqladmin version -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><h1 id="二、MySQL中的SQL语句"><a href="#二、MySQL中的SQL语句" class="headerlink" title="二、MySQL中的SQL语句"></a>二、MySQL中的SQL语句</h1><h2 id="1、什么是SQL？"><a href="#1、什么是SQL？" class="headerlink" title="1、什么是SQL？"></a>1、什么是SQL？</h2><p>SQL 是 Structure Query Language(&#x3D;&#x3D;结构化查询语言&#x3D;&#x3D;)的缩写,它是使用&#x3D;&#x3D;关系模型的数据库应&#x3D;&#x3D;<br>&#x3D;&#x3D;用语言&#x3D;&#x3D;,由 IBM 在 20 世纪 70 年代开发出来,作为 IBM 关系数据库原型 System R 的原型关<br>系语言,实现了关系数据库中的信息检索。</p><p>20 世纪 80 年代初,美国国家标准局(ANSI)开始着手制定 SQL 标准,最早的 ANSI 标准于<br>1986 年完成,就被叫作 SQL-86。标准的出台使 SQL 作为标准关系数据库语言的地位得到了<br>加强。SQL 标准目前已几经修改更趋完善。</p><p>正是由于 SQL 语言的标准化,所以大多数关系型数据库系统都支持 SQL 语言,它已经发展<br>成为多种平台进行交互操作的底层会话语言。</p><h2 id="2、SQL语句的分类"><a href="#2、SQL语句的分类" class="headerlink" title="2、SQL语句的分类"></a>2、SQL语句的分类</h2><ul><li><p>DDL(Data Definition Languages)语句:</p><p>&#x3D;&#x3D;数据定义语言&#x3D;&#x3D;,这些语句定义了不同的数据段、数据库、表、列、索引等数据库对象的定义。常用的语句关键字主要包括 <strong>create、drop、alter、rename、truncate</strong>。</p></li><li><p>DML(Data Manipulation Language)语句:</p><p>&#x3D;&#x3D;数据操纵语句&#x3D;&#x3D;,用于添加、删除、更新和查询数据库记录,并检查数据完整性,常用的语句关键字主要包括 <strong>insert、delete、update</strong>等。</p></li><li><p>DCL(Data Control Language)语句:</p><p>&#x3D;&#x3D;数据控制语句&#x3D;&#x3D;,用于控制不同数据段直接的许可和访问级别的语句。这些语句定义了数据库、表、字段、用户的访问权限和安全级别。主要的语句关键字包括 <strong>grant、revoke</strong> 等。</p></li><li><p>DQL(Data Query Language)语句:</p><p>&#x3D;&#x3D;数据查询语句&#x3D;&#x3D;，用于从一个或多个表中检索信息。主要的语句关键字包括 <strong>select</strong></p></li></ul><h2 id="3、MySQL中如何求帮助"><a href="#3、MySQL中如何求帮助" class="headerlink" title="3、MySQL中如何求帮助"></a>3、MySQL中如何求帮助</h2><ul><li>亘古不变的官档（软件作用）</li></ul><p><a href="https://dev.mysql.com/doc/refman/5.6/en/sql-syntax.html">MySQL5.6官方文档</a></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/sql-syntax.html">MySQL5.7官方文档</a></p><ul><li>man文档（工具作用）</li></ul><p>man文档可以对mysql的一些基本工具及后台命令求帮助，比如：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># man mysql</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># man mysql_install_db</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># man mysqldump</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># man mysqld</span></span><br></pre></td></tr></table></figure><ul><li>MySQL的命令行求帮助（主要针对SQL语句求帮助）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; help;</span><br><span class="line">mysql&gt; ?</span><br><span class="line">mysql&gt; help create table;</span><br><span class="line"></span><br><span class="line">根据内容进行查找帮助</span><br><span class="line">mysql&gt; ? contents</span><br><span class="line">   Account Management</span><br><span class="line">   Administration</span><br><span class="line">   <span class="keyword">Data</span> Definition</span><br><span class="line">   <span class="keyword">Data</span> Manipulation</span><br><span class="line">   <span class="keyword">Data</span> Types</span><br><span class="line">   Functions</span><br><span class="line">   Functions and Modifiers <span class="keyword">for</span> Use with <span class="built_in">GROUP</span> BY</span><br><span class="line">   Geographic Features</span><br><span class="line">   Language Structure</span><br><span class="line">   Storage Engines</span><br><span class="line">   Stored Routines</span><br><span class="line">   Table Maintenance</span><br><span class="line">   Transactions</span><br><span class="line">   Triggers</span><br><span class="line">   </span><br><span class="line">寻求账户管理的帮助（一级一级的向内部查）</span><br><span class="line">mysql&gt; ? Account Management</span><br><span class="line">mysql&gt; ? CREATE USER</span><br></pre></td></tr></table></figure><blockquote><p>注：在mysql内部，没有clear命令，也就是无法使用clear实现清屏，如果想实现清屏操作，可以使用快捷键Ctrl + Shift + L</p></blockquote><h2 id="4、SQL语句的基本操作"><a href="#4、SQL语句的基本操作" class="headerlink" title="4、SQL语句的基本操作"></a>4、SQL语句的基本操作</h2><h3 id="☆-MySQL的内部结构"><a href="#☆-MySQL的内部结构" class="headerlink" title="☆ MySQL的内部结构"></a>☆ MySQL的内部结构</h3><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825112014915.png" alt="image-20200825112014915"></p><blockquote><p>注：我们平常说的MySQL，其实主要指的是MySQL数据库管理软件。</p></blockquote><p>一个MySQL DBMS可以同时存放多个数据库，理论上一个项目就对应一个数据库。如博客项目blog数据库、商城项目shop数据库、微信项目wechat数据库。</p><p>一个数据库中还可以同时包含多个数据表，而数据表才是真正用于存放数据的位置。（类似我们Office软件中的Excel表格），理论上一个功能就对应一个数据表。如博客系统中的用户管理功能，就需要一个user数据表、博客中的文章就需要一个article数据表、博客中的评论就需要一个message数据表。</p><p>一个数据表又可以拆分为多个字段，每个字段就是一个属性。</p><p>一个数据表除了字段以外，还有很多行，每一行都是一条完整的数据（记录）。</p><h3 id="☆-数据库的基本操作"><a href="#☆-数据库的基本操作" class="headerlink" title="☆ 数据库的基本操作"></a>☆ 数据库的基本操作</h3><h4 id="①-创建数据库"><a href="#①-创建数据库" class="headerlink" title="① 创建数据库"></a>① 创建数据库</h4><p>普及英语小课堂：</p><p>创建 &#x3D;&gt; create</p><p>数据库 &#x3D;&gt; database</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database 数据库名称;</span><br></pre></td></tr></table></figure><blockquote><p>特别注意：在MySQL中，当一条SQL语句编写完毕后，一定要使用分号;进行结尾，否则系统认为这条语句还没有结束。</p></blockquote><p>案例：创建数据库的相关案例</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建db1库</span><br><span class="line">create database db1;</span><br><span class="line"></span><br><span class="line">创建db1库并指定默认字符集</span><br><span class="line">create database db1 default charset gbk;</span><br><span class="line"></span><br><span class="line">如果存在不报错(<span class="keyword">if</span> not exists)</span><br><span class="line">create database <span class="keyword">if</span> not exists db1 default character <span class="built_in">set</span> utf8;</span><br><span class="line">说明：不能创建相同名字的数据库！</span><br></pre></td></tr></table></figure><blockquote><p>扩展：编码格式，常见的gbk（中国的编码格式）与utf8（国际通用编码格式）</p></blockquote><p>latin1    256个字符（abcd、1234、传统字符）</p><p>国内汉字无法通过256个字符进行描述，所以国内开发了自己的编码格式gb2312，升级gbk</p><p>中国台湾业开发了一套自己的编码格式big5</p><p>很多项目并不仅仅只在本地使用，也可能支持多国语言，标准化组织开发了一套通用编码utf8，后来5.6版本以后又进行了升级utf8mb4</p><blockquote><p>编写SQL语句是一个比较细致工作，不建议大家直接在终端中输入SQL语句，可以先把你要写的SQL语句写入一个记事本中，然后拷贝执行。</p></blockquote><h4 id="②-查询已创建数据库"><a href="#②-查询已创建数据库" class="headerlink" title="② 查询已创建数据库"></a>② 查询已创建数据库</h4><p>英语小课堂：</p><p>显示 &#x3D;&gt; show</p><p>数据库 &#x3D;&gt; database</p><p>基本语法：</p><p>显示所有数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br></pre></td></tr></table></figure><p>显示某个数据库的数据结构</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show create database db_itheima;</span><br></pre></td></tr></table></figure><h4 id="③-修改数据库信息"><a href="#③-修改数据库信息" class="headerlink" title="③ 修改数据库信息"></a>③ 修改数据库信息</h4><p>在MySQL5以后的版本中，MySQL不支持更改数据库的名称。我们所谓的修改数据库主要修改的是数据库的编码格式。</p><p>英语小课堂：</p><p>修改 &#x3D;&gt; alter</p><p>数据库 &#x3D;&gt; database</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter database 数据库名称 default charset=新编码格式;</span><br></pre></td></tr></table></figure><p>案例：把db_itheima数据库的编码格式更改为gbk</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter database db_itheima default charset=gbk;</span><br></pre></td></tr></table></figure><h4 id="④-删除数据库"><a href="#④-删除数据库" class="headerlink" title="④ 删除数据库"></a>④ 删除数据库</h4><p>英语小课堂：</p><p>删除 &#x3D;&gt; drop</p><p>数据库 &#x3D;&gt; database</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop database 数据库名称;</span><br></pre></td></tr></table></figure><p>案例：删除db_itheima数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop database db_itheima;</span><br></pre></td></tr></table></figure><h2 id="5、数据表的基本操作"><a href="#5、数据表的基本操作" class="headerlink" title="5、数据表的基本操作"></a>5、数据表的基本操作</h2><h3 id="☆-数据表的创建"><a href="#☆-数据表的创建" class="headerlink" title="☆ 数据表的创建"></a>☆ 数据表的创建</h3><p>英语小课堂：</p><p>创建 &#x3D;&gt; create</p><p>数据表 &#x3D;&gt; table</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table 数据表名称(</span><br><span class="line">字段<span class="number">1</span> 字段类型 [字段约束],</span><br><span class="line">字段<span class="number">2</span> 字段类型 [字段约束],</span><br><span class="line">...</span><br><span class="line">); </span><br></pre></td></tr></table></figure><p>案例：创建一个admin管理员表，拥有3个字段（编号、用户名称、用户密码）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db_itheima;</span><br><span class="line">mysql&gt; use db_itheima;</span><br></pre></td></tr></table></figure><blockquote><p>use在MySQL中的含义代表选择，use 数据库名称相当于选择指定的数据库。而且use比较特殊，其选择结束后，其尾部可以不加分号；但是强烈建议所有的SQL语句都要加分号，养成一个好习惯。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table tb_admin(</span><br><span class="line">id tinyint,</span><br><span class="line">    username varchar(<span class="number">20</span>),</span><br><span class="line">    password char(<span class="number">32</span>)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><blockquote><p>tinyint ：微整型，范围-128 ~ 127，无符号型，则表示0 ~ 255</p></blockquote><blockquote><p>表示字符串类型可以使用char与varchar，char代表固定长度的字段，varchar代表变化长度的字段。</p></blockquote><p>案例：创建一个article文章表，拥有4个字段（编号、标题、作者、内容）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_article(</span><br><span class="line">id int,</span><br><span class="line">title varchar(<span class="number">50</span>),</span><br><span class="line">author varchar(<span class="number">20</span>),</span><br><span class="line">content text</span><br><span class="line">) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><blockquote><p>text ：文本类型，一般情况下，用varchar存储不了的字符串信息，都建议使用text文本进行处理。</p></blockquote><blockquote><p>varchar存储的最大长度，理论值65535个字符。但是实际上，有几个字符是用于存放内容的长度的，所以真正可以使用的不足65535个字符，另外varchar类型存储的字符长度还和编码格式有关。1个GBK格式的占用2个字节长度，1个UTF8格式的字符占用3个字节长度。GBK &#x3D; 65532<del>65533&#x2F;2，UTF8 &#x3D; 65532</del>65533&#x2F;3</p></blockquote><h3 id="☆-查询已创建数据表"><a href="#☆-查询已创建数据表" class="headerlink" title="☆ 查询已创建数据表"></a>☆ 查询已创建数据表</h3><p>英语小课堂：</p><p>显示 &#x3D;&gt; show</p><p>数据表 &#x3D;&gt; table</p><p>显示所有数据表（当前数据库）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use 数据库名称;</span><br><span class="line">mysql&gt; show tables;</span><br></pre></td></tr></table></figure><p>显示数据表的创建过程（编码格式、字段等信息）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show create table 数据表名称;</span><br><span class="line">或</span><br><span class="line">mysql&gt; desc 数据表名称;</span><br></pre></td></tr></table></figure><h3 id="☆-修改数据表信息"><a href="#☆-修改数据表信息" class="headerlink" title="☆ 修改数据表信息"></a>☆ 修改数据表信息</h3><h4 id="①-数据表字段添加"><a href="#①-数据表字段添加" class="headerlink" title="① 数据表字段添加"></a>① 数据表字段添加</h4><p>英语小课堂：</p><p>修改 &#x3D;&gt; alter</p><p>数据表 &#x3D;&gt; table</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table 数据表名称 add 新字段名称 字段类型 first|after 其他字段名称;</span><br><span class="line">选项说明：</span><br><span class="line">first：把新添加字段放在第一位</span><br><span class="line">after 字段名称：把新添加字段放在指定字段的后面</span><br></pre></td></tr></table></figure><p>案例：在tb_article文章表中添加一个addtime字段，类型为date(年-月-日)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table tb_article add addtime date after content;</span><br><span class="line">mysql&gt; desc tb_article;</span><br></pre></td></tr></table></figure><h4 id="②-修改字段名称或字段类型"><a href="#②-修改字段名称或字段类型" class="headerlink" title="② 修改字段名称或字段类型"></a>② 修改字段名称或字段类型</h4><p>修改字段名称与字段类型（也可以只修改名称）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table tb_admin change username user varchar(<span class="number">40</span>);</span><br><span class="line">mysql&gt; desc tb_admin;</span><br></pre></td></tr></table></figure><p>仅修改字段的类型</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table tb_admin modify user varchar(<span class="number">20</span>);</span><br><span class="line">mysql&gt; desc tb_admin;</span><br></pre></td></tr></table></figure><h4 id="③-删除某个字段"><a href="#③-删除某个字段" class="headerlink" title="③ 删除某个字段"></a>③ 删除某个字段</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table tb_article drop 字段名称;</span><br><span class="line">mysql&gt; desc tb_article;</span><br></pre></td></tr></table></figure><h4 id="④-修改数据表引擎（MyISAM或InnoDB）"><a href="#④-修改数据表引擎（MyISAM或InnoDB）" class="headerlink" title="④ 修改数据表引擎（MyISAM或InnoDB）"></a>④ 修改数据表引擎（MyISAM或InnoDB）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table tb_article engine=myisam;</span><br><span class="line">mysql&gt; show create table tb_article;</span><br></pre></td></tr></table></figure><h4 id="⑤-修改数据表的编码格式"><a href="#⑤-修改数据表的编码格式" class="headerlink" title="⑤ 修改数据表的编码格式"></a>⑤ 修改数据表的编码格式</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table tb_admin default charset=gbk;</span><br><span class="line">mysql&gt; show create table tb_admin;</span><br></pre></td></tr></table></figure><h4 id="⑥-修改数据表名称"><a href="#⑥-修改数据表名称" class="headerlink" title="⑥ 修改数据表名称"></a>⑥ 修改数据表名称</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">移动表到另一个库里并重命名</span><br><span class="line">rename table db01.t1 to db02.t11;</span><br><span class="line">或者</span><br><span class="line">alter table db01.t1 rename db02.t11;</span><br><span class="line"></span><br><span class="line">只重命名表名不移动</span><br><span class="line">rename table tt1 to tt2;</span><br><span class="line">或者</span><br><span class="line">alter table tt1 rename  tt2;</span><br></pre></td></tr></table></figure><h3 id="☆-删除数据表"><a href="#☆-删除数据表" class="headerlink" title="☆ 删除数据表"></a>☆ 删除数据表</h3><p>英语小课堂：</p><p>删除 &#x3D;&gt; drop</p><p>数据表 &#x3D;&gt; table</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop table 数据表名称;</span><br></pre></td></tr></table></figure><h2 id="6、给EditPlus添加一个语法着色"><a href="#6、给EditPlus添加一个语法着色" class="headerlink" title="6、给EditPlus添加一个语法着色"></a>6、给EditPlus添加一个语法着色</h2><p>第一步：把sql.stx语法着色文件放置在某个位置</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155423958.png" alt="image-20200825155423958"></p><p>第二步：打开EditPlus配置</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155455518.png" alt="image-20200825155455518"></p><p>设置编码格式并取消备份文件</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155600949.png" alt="image-20200825155600949"></p><p>第三步：添加SQL语句的语法着色支持</p><p>添加SQL语句支持</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155723702.png" alt="image-20200825155723702"></p><p>引入.sql文件以及语法着色文件</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155921218.png" alt="image-20200825155921218"></p><h2 id="7、数据的增删改查（重点）"><a href="#7、数据的增删改查（重点）" class="headerlink" title="7、数据的增删改查（重点）"></a>7、数据的增删改查（重点）</h2><p>英语小课堂：</p><p>增加：insert</p><p>删除：delete</p><p>修改：update</p><p>查询：select</p><h3 id="☆-数据的增加操作"><a href="#☆-数据的增加操作" class="headerlink" title="☆ 数据的增加操作"></a>☆ 数据的增加操作</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into 数据表名称([字段<span class="number">1</span>,字段<span class="number">2</span>,字段<span class="number">3</span><span class="type">...</span>]) values (字段<span class="number">1</span>的值,字段<span class="number">2</span>的值,字段<span class="number">3</span>的值...);</span><br></pre></td></tr></table></figure><blockquote><p>特别注意：在SQL语句中，除了数字，其他类型的值，都需要使用引号引起来，否则插入时会报错。</p></blockquote><p>第一步：准备一个数据表</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_user(</span><br><span class="line">id int,</span><br><span class="line">username varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned,</span><br><span class="line">gender <span class="class"><span class="keyword">enum</span>(&#x27;男&#x27;,&#x27;女&#x27;,&#x27;保密&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">address</span> <span class="title">varchar</span>(255)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br></pre></td></tr></table></figure><blockquote><p>unsigned代表无符号型，只有0到正数。tinyint unsigned无符号型，范围0 ~ 255</p></blockquote><blockquote><p>enum枚举类型，多选一。只能从给定的值中选择一个</p></blockquote><p>第二步：使用insert语句插入数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into tb_user values (<span class="number">1</span>,<span class="string">&#x27;李向阳&#x27;</span>,<span class="number">24</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;广东省广州市&#x27;</span>);</span><br><span class="line">mysql&gt; insert into tb_user(id,username,age) values (<span class="number">2</span>,<span class="string">&#x27;马鹏&#x27;</span>,<span class="number">23</span>);</span><br></pre></td></tr></table></figure><h3 id="☆-数据的查询操作"><a href="#☆-数据的查询操作" class="headerlink" title="☆ 数据的查询操作"></a>☆ 数据的查询操作</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from 数据表名称 [<span class="type">where</span> 查询条件];</span><br><span class="line">mysql&gt; <span class="built_in">select</span> id,username,age from 数据表名称 [<span class="type">where</span> 查询条件];</span><br></pre></td></tr></table></figure><p>案例：查询tb_user表中的所有记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_user;</span><br></pre></td></tr></table></figure><p>案例：查询tb_user表中的id，username以及age字段中对应的数据信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> id,username,age from tb_user;</span><br></pre></td></tr></table></figure><p>案例：只查询id&#x3D;2的小伙伴信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_user <span class="built_in">where</span> id=<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>案例：查询年龄大于23岁的小伙伴信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_user <span class="built_in">where</span> age&gt;<span class="number">23</span>;</span><br></pre></td></tr></table></figure><h3 id="☆-数据的修改操作"><a href="#☆-数据的修改操作" class="headerlink" title="☆ 数据的修改操作"></a>☆ 数据的修改操作</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update 数据表名称 <span class="built_in">set</span> 字段<span class="number">1</span>=更新后的值,字段<span class="number">2</span>=更新后的值,... <span class="built_in">where</span> 更新条件;</span><br></pre></td></tr></table></figure><blockquote><p>特别说明：如果在更新数据时，不指定更新条件，则其会把这个数据表的所有记录全部更新一遍。</p></blockquote><p>案例：修改username&#x3D;’马鹏’这条记录，将其性别更新为男，家庭住址更新为广东省深圳市</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update tb_user <span class="built_in">set</span> gender=<span class="string">&#x27;男&#x27;</span>,address=<span class="string">&#x27;广东省深圳市&#x27;</span> <span class="built_in">where</span> username=<span class="string">&#x27;马鹏&#x27;</span>;</span><br></pre></td></tr></table></figure><p>案例：今年是2020年，假设到了2021年，现在存储的学员年龄都差1岁，整体进行一次更新</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update tb_user <span class="built_in">set</span> age=age+<span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="☆-数据的删除操作"><a href="#☆-数据的删除操作" class="headerlink" title="☆ 数据的删除操作"></a>☆ 数据的删除操作</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from 数据表名称 [<span class="type">where</span> 删除条件];</span><br></pre></td></tr></table></figure><p>案例：删除tb_user表中，id&#x3D;1的用户信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from tb_user <span class="built_in">where</span> id=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>delete from与truncate清空数据表操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from 数据表;</span><br><span class="line">或</span><br><span class="line">mysql&gt; truncate 数据表;</span><br></pre></td></tr></table></figure><p>delete from与truncate区别在哪里？</p><ul><li>delete：删除&#x3D;&#x3D;数据记录&#x3D;&#x3D;<ul><li>数据操作语言（DML）</li><li>在事务控制里，DML语句要么commit，要么rollback</li><li>删除&#x3D;&#x3D;大量&#x3D;&#x3D;记录速度慢，&#x3D;&#x3D;只删除数据&#x3D;&#x3D;不回收高水位线</li><li>可以&#x3D;&#x3D;带条件&#x3D;&#x3D;删除</li></ul></li><li>truncate：删除&#x3D;&#x3D;所有数据记录&#x3D;&#x3D;<ul><li>数据定义语言（DDL）</li><li>&#x3D;&#x3D;不在&#x3D;&#x3D;事务控制里，DDL语句执行前会提交前面所有未提交的事务</li><li>清里大量数据&#x3D;&#x3D;速度快&#x3D;&#x3D;，回收高水位线（high water mark）</li><li>&#x3D;&#x3D;不能带条件删除&#x3D;&#x3D;</li></ul></li></ul><h2 id="8、自动增长（水位线）与主键约束"><a href="#8、自动增长（水位线）与主键约束" class="headerlink" title="8、自动增长（水位线）与主键约束"></a>8、自动增长（水位线）与主键约束</h2><h3 id="☆-自动增长（对某个字段进行自动编号）"><a href="#☆-自动增长（对某个字段进行自动编号）" class="headerlink" title="☆ 自动增长（对某个字段进行自动编号）"></a>☆ 自动增长（对某个字段进行自动编号）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table tb_user(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">username varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned,</span><br><span class="line">gender <span class="class"><span class="keyword">enum</span>(&#x27;男&#x27;,&#x27;女&#x27;,&#x27;保密&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">address</span> <span class="title">varchar</span>(255)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br></pre></td></tr></table></figure><blockquote><p>not null代表非空约束，这个字段只要是插入数据就必须要有值。</p></blockquote><h3 id="☆-主键约束（非空、唯一）"><a href="#☆-主键约束（非空、唯一）" class="headerlink" title="☆ 主键约束（非空、唯一）"></a>☆ 主键约束（非空、唯一）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table tb_user(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">username varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned,</span><br><span class="line">gender <span class="class"><span class="keyword">enum</span>(&#x27;男&#x27;,&#x27;女&#x27;,&#x27;保密&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">address</span> <span class="title">varchar</span>(255),</span></span><br><span class="line"><span class="class"><span class="title">primary</span> <span class="title">key</span>(<span class="title">id</span>)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br></pre></td></tr></table></figure><p>插入数据库时，id位置直接写NULL即可</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into tb_user values (null,<span class="string">&#x27;李向阳&#x27;</span>,<span class="number">24</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;广东省广州市&#x27;</span>);</span><br><span class="line">mysql&gt; insert into tb_user values (null,<span class="string">&#x27;马鹏&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;广东省深圳市&#x27;</span>);</span><br><span class="line">mysql&gt; insert into tb_user values (null,<span class="string">&#x27;上官婉儿&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;湖南省长沙市&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基本SQL语句（下）</title>
      <link href="/posts/11338.html"/>
      <url>/posts/11338.html</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL基本SQL语句（下）"><a href="#MySQL基本SQL语句（下）" class="headerlink" title="MySQL基本SQL语句（下）"></a>MySQL基本SQL语句（下）</h1><h1 id="一、扩展常见的数据类型"><a href="#一、扩展常见的数据类型" class="headerlink" title="一、扩展常见的数据类型"></a>一、扩展常见的数据类型</h1><h2 id="1、回顾数据表的创建语法"><a href="#1、回顾数据表的创建语法" class="headerlink" title="1、回顾数据表的创建语法"></a>1、回顾数据表的创建语法</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table 数据表名称(</span><br><span class="line">字段名称<span class="number">1</span> 字段类型 字段约束,</span><br><span class="line">字段名称<span class="number">2</span> 字段类型 字段约束,</span><br><span class="line">...</span><br><span class="line">primary key(主键字段 =&gt; 不能为空、必须唯一)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><blockquote><p>经验之谈：一般情况下，我们在设计数据表时，必须拥有一个id主键字段，非空、自动编号、主键约束。</p></blockquote><p>在创建数据表时，必须明确指定字段的名称以及字段的类型，那到底MySQL中的SQL语句支持哪些字段类型呢？</p><p>答：参考下图</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826094830721.png" alt="image-20200826094830721"></p><h2 id="2、数值类型"><a href="#2、数值类型" class="headerlink" title="2、数值类型"></a>2、数值类型</h2><h3 id="☆-整数类型（整数、精准）"><a href="#☆-整数类型（整数、精准）" class="headerlink" title="☆ 整数类型（整数、精准）"></a>☆ 整数类型（整数、精准）</h3><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826095603519.png" alt="image-20200826095603519"></p><p>应用场景：人的年龄、考试成绩等等相关的信息都可以使用整数类型进行存储，那整数类型有这么多形式，我应该选择哪一个呢？</p><p>答：整数类型的选择主要取决于数值的范围。</p><blockquote><p>比如存储中国人的人口信息，可以用INT类型也可以用BIGINT类型，但是在数据库设计原则中，不是越大越好，而是正好满足条件即可。</p></blockquote><p>案例：设计一个数据表如tb_student学生表（id、username、age、mobile）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use 数据库名称;</span><br><span class="line">mysql&gt; create table tb_student(</span><br><span class="line">id mediumint unsigned not null auto_increment,</span><br><span class="line">username varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned,</span><br><span class="line">mobile char(<span class="number">11</span>),</span><br><span class="line">primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><h3 id="☆-小数类型（浮点类型、定点类型）"><a href="#☆-小数类型（浮点类型、定点类型）" class="headerlink" title="☆ 小数类型（浮点类型、定点类型）"></a>☆ 小数类型（浮点类型、定点类型）</h3><h4 id="①-浮点类型（近似值）"><a href="#①-浮点类型（近似值）" class="headerlink" title="① 浮点类型（近似值）"></a>① 浮点类型（近似值）</h4><ul><li>FLOAT和DOUBLE</li></ul><p><code>FLOAT</code>和<code>DOUBLE</code>类型代表近似数字数据值。MySQL对于单精度值使用四个字节，对于双精度值使用八个字节。 <code>FLOAT</code>单精度浮点数精确到约7位小数，<code>DOUBLE</code>双精度浮点数精确到大约15位小数 。<code>FLOAT</code><strong>类型会随着数值的增大精度会减小。</strong></p><p>举例说明</p><p>FLOAT(M,D)，其中，M表示存储的有效位数，D代表小数点后面的位数；即整数位数+小数部分不能超过M值。<br>colum1 FLOAT(7,4)<br>上面例子中，如果你插入为999.00009到cloum1列，那么mysql在存储时会四舍五入变为999.0001插入。</p><blockquote><p>DOUBLE(7,4) ：DOUBLE类型的使用与FLOAT类型完全一致，唯一的区别就是占用字节不同且浮点数的精度有所不同。</p></blockquote><h4 id="②-定点类型（精确值）"><a href="#②-定点类型（精确值）" class="headerlink" title="② 定点类型（精确值）"></a>② 定点类型（精确值）</h4><ul><li>DECIMAL和NUMERIC</li></ul><p><code>DECIMAL</code>和<code>NUMERIC</code> 类型的存储&#x3D;&#x3D;精确的数值数据&#x3D;&#x3D;。使用这些类型时，重要的是要保留&#x3D;&#x3D;精确的精度&#x3D;&#x3D;，例如使用<strong>货币数据</strong>。在MySQL中, <code>NUMERIC</code>被作为<code>DECIMAL</code>来应用，所以下面的举例<code>DECIMAL</code>同样适用于 <code>NUMERIC</code> 。</p><ul><li>举例说明</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">salary DECIMAL(<span class="number">5</span>,<span class="number">2</span>)</span><br><span class="line">在上面的例子中，薪水字段的类型为decimal，表示精确的数字。其中，<span class="number">5</span>代表精度，<span class="number">2</span>代表刻度。</span><br><span class="line">精度表示数值存储的有效位数，刻度表示小数点后面可存储的位数。</span><br><span class="line">DECIMAL(<span class="number">5</span>,<span class="number">2</span>)能够存储五位数和两位小数的任何值，因此可以存储在salary 列中的值的范围<span class="literal">-999</span>.<span class="number">99</span>是 <span class="number">999.99</span></span><br><span class="line"></span><br><span class="line">特殊注意：</span><br><span class="line">DECIMAL(M)和DECIMAL(M,<span class="number">0</span>)是相等的，存储长度取决于M的值，默认情况下M值为<span class="number">10</span>.刻度为<span class="number">0</span>表示没有小数。</span><br></pre></td></tr></table></figure><p>案例：定义一个职员表tb_staff，定义字段（id、username、salary、addtime）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_staff(</span><br><span class="line">id smallint unsigned not null auto_increment,</span><br><span class="line">username varchar(<span class="number">20</span>),</span><br><span class="line">salary decimal(<span class="number">11</span>,<span class="number">2</span>),</span><br><span class="line">addtime date,</span><br><span class="line">primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><h2 id="3、字符串类型"><a href="#3、字符串类型" class="headerlink" title="3、字符串类型"></a>3、字符串类型</h2><h3 id="☆-CHAR类型"><a href="#☆-CHAR类型" class="headerlink" title="☆ CHAR类型"></a>☆ CHAR类型</h3><p>CHAR类型的字符串为<strong>定长</strong>.长度范围是0到255之间的任何值.占用定长的存储空间,不足的部分用&#x3D;&#x3D;空格&#x3D;&#x3D;填充；读取时删掉后面的空格。</p><p>password char(32)</p><p>mobile char(11)</p><ul><li><strong>存储空间</strong></li></ul><p>CHAR(&#x3D;&#x3D;M&#x3D;&#x3D;)<strong>类型的存储空间和字符集有关系</strong>，一个中文在utf8字符集中占用3个bytes、gbk占用2个bytes、数字和字符统一用一个字符表示。</p><ul><li><strong>存储机制</strong></li></ul><p>在不够M长度时，MySQL在存储数据时，需要填充特殊的空格.</p><ul><li><strong>举例说明</strong></li></ul><p><code>字段名称 CHAR(M),M表示字符数</code></p><p>应用场景：加密后的密码 &#x3D;&gt; char(32)，手机号码mobile(11)，身份证号码等等</p><p>案例：创建一个tb_admin数据表，定义字段（id、username、password）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_admin(</span><br><span class="line">id tinyint unsigned not null auto_increment,</span><br><span class="line">username varchar(<span class="number">10</span>),</span><br><span class="line">password char(<span class="number">32</span>),</span><br><span class="line">primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><h3 id="☆-VARCHAR类型"><a href="#☆-VARCHAR类型" class="headerlink" title="☆ VARCHAR类型"></a>☆ VARCHAR类型</h3><p>VARCHAR是&#x3D;&#x3D;变长存储&#x3D;&#x3D;,仅使用必要的存储空间.</p><p>name varchar(10)</p><ul><li><strong>存储空间</strong></li></ul><p>VARCHAR(M)类型的存储空间和字符集有关系，一个中文在utf8字符集中占用3个bytes、gbk统一占用2个bytes、数字和字符一个字符表示。</p><ul><li><strong>存储机制</strong></li></ul><p>VARCHAR(M)字段存储实际是从<strong>第二个字节开始存储</strong>,然后用1到2个字节表示实际长度,剩下的才是可以存储数据的范围,因此最大可用存储范围是65535-3&#x3D;65532字节;</p><p>第一个字节标识是否为空.（长度小于255字节,使用一个字节来表示长度;大于255字节使用两个字节来表示长度)。</p><p>应用场景：主要适合存储长度不固定的字符串信息，如用户名称、产品标题、新闻标题、新闻描述（不超过255个字符）</p><p>案例：创建一个tb_news数据表，定义字段（id、title、description、addtime）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_news(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">title varchar(<span class="number">80</span>),</span><br><span class="line">description varchar(<span class="number">255</span>),</span><br><span class="line">addtime date,</span><br><span class="line">primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><h3 id="☆-TEXT类型"><a href="#☆-TEXT类型" class="headerlink" title="☆ TEXT类型"></a>☆ TEXT类型</h3><p>TEXT代表文本类型的数据，当我们使用VARCHAR类型存储数据时（早期最大只能存储255个字符，MySQL5版本中，其gbk可以存储3万多个字符，utf8格式可以存储2万多个字符），如超过了VARCHAR的最大存储范围，则可以考虑使用TEXT文本类型。</p><blockquote><p>经验之谈：255个字符以内（包括），定长就使用CHAR类型，变长就使用VARCHAR类型，如果超过255个字符，则使用TEXT文本类型。</p></blockquote><p>应用场景：文本内容、产品的详细介绍等等</p><p>案例：创建一个tb_goods产品表，定义字段（id、name、price、content）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_goods(</span><br><span class="line">  id int not null auto_increment,</span><br><span class="line">  name varchar(<span class="number">80</span>),</span><br><span class="line">  price decimal(<span class="number">11</span>,<span class="number">2</span>),</span><br><span class="line">  content text,</span><br><span class="line">  primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure><h3 id="☆-其他类型"><a href="#☆-其他类型" class="headerlink" title="☆ 其他类型"></a>☆ 其他类型</h3><p>BLOB：保存二进制的大型数据（字节串），没有字符集，eg：图片、音频视频等。</p><blockquote><p>实际运维工作中，很少将文件直接保存在数据库端，一般文件的存储都是基于路径进行操作的。</p></blockquote><p>ENUM枚举类型：多选一，从给定的多个选项中选择一个，如gender  enum(‘男’,’女’,’保密’)</p><p>SET集合类型：多选多，从给定的多个选项中选个多个，如hobby set(‘吃饭’,’睡觉’,’打豆豆’)</p><h2 id="4、日期时间类型"><a href="#4、日期时间类型" class="headerlink" title="4、日期时间类型"></a>4、日期时间类型</h2><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826114942732.png" alt="image-20200826114942732"></p><blockquote><p>经验之谈：时间类型的选择比较简单，主要看你需要的时间格式，是年月日、小时分钟秒等等。</p></blockquote><p>###㈠ DATE类型（年-月-日）</p><p>The <code>DATE</code> type is used for values with a date part but no time part. MySQL retrieves and displays <code>DATE</code> values in<code>&#39;YYYY-MM-DD&#39;</code> format. The supported range is <code>&#39;1000-01-01&#39;</code> to <code>&#39;9999-12-31&#39;</code>. </p><p>###㈡ DATETIME(年月日小时分钟秒)</p><p>The <code>DATETIME</code> type is used for values that contain both date and time parts. MySQL retrieves and displays<code>DATETIME</code> values in <code>&#39;YYYY-MM-DD HH:MM:SS&#39;</code> format. The supported range is <code>&#39;1000-01-01 00:00:00&#39;</code> to <code>&#39;9999-12-31 23:59:59&#39;</code>. </p><blockquote><p>DATETIME范围相对于TIMESTAMP范围更广，<code>&#39;1000-01-01 00:00:00&#39;</code> to <code>&#39;9999-12-31 23:59:59&#39;</code></p></blockquote><p>###㈢ TIMESTAMP(年月日小时分钟秒)</p><p>The <code>TIMESTAMP</code> data type is used for values that contain both date and time parts. <code>TIMESTAMP</code> has a range of <code>&#39;1970-01-01 00:00:01&#39;</code> UTC to <code>&#39;2038-01-19 03:14:07&#39;</code> UTC. </p><blockquote><p>TIMESTAMP选项如果不插入时间，则MySQL会自动调用系统时间写入数据</p></blockquote><p><strong>注意：</strong></p><p>Invalid <code>DATE</code>, <code>DATETIME</code>, or <code>TIMESTAMP</code> values are converted to the “zero” value of the appropriate type (<code>&#39;0000-00-00&#39;</code> or <code>&#39;0000-00-00 00:00:00&#39;</code>). </p><p>无效的日期，日期时间等会被替换成‘0000-00-00’或‘0000-00-00 00:00:00’</p><p>###㈣ TIME（小时:分钟:秒）</p><p>MySQL retrieves and displays <code>TIME</code> values in <code>&#39;HH:MM:SS&#39;</code> format (or <code>&#39;HHH:MM:SS&#39;</code> format for large hours values).<code>TIME</code> values may range from <code>&#39;-838:59:59&#39;</code> to <code>&#39;838:59:59&#39;</code>. </p><p><strong>说明：</strong>小时部分可以是这么大，因为可以使用TIME类型不仅代表一个时间(必须小于24小时),而且可以表示运行时间或两个事件之间的时间间隔(可能大于24小时,甚至负数)。 </p><p><strong>&#x3D;&#x3D;注意：&#x3D;&#x3D;</strong></p><p>TIME这一列如果存储缩写，需要注意mysql的解释方式。<strong>无效的时间值会被转换成’00:00:00’</strong> 。</p><p><code>&#39;11:12&#39;</code> means <code>&#39;11:12:00&#39;</code>, not <code>&#39;00:11:12&#39;</code>. </p><p><code>&#39;12&#39;</code> and <code>12</code> are interpreted as <code>&#39;00:00:12&#39;</code>. </p><p>###㈤ YEAR</p><p><code>YEAR(4)</code> and <code>YEAR(2)</code> differ in display format, but have the same range of values. </p><p>For 4-digit format, MySQL displays <code>YEAR</code> values in <code>YYYY</code> format, with a range of <code>1901</code> to <code>2155</code>, or <code>0000</code>. </p><p>For 2-digit format, MySQL displays only the last two (least significant) digits; for example, <code>70</code> (1970 or 2070) or <code>69</code> (2069). </p><p><strong>无效的值将会被转换成’0000’.</strong></p><p>案例：编写tb_article文章表，定义字段（id、title、description、addtime）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_article1(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">title varchar(<span class="number">80</span>),</span><br><span class="line">description varchar(<span class="number">255</span>),</span><br><span class="line">addtime datetime,</span><br><span class="line">primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line">mysql&gt; create table tb_article2(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">title varchar(<span class="number">80</span>),</span><br><span class="line">description varchar(<span class="number">255</span>),</span><br><span class="line">addtime timestamp,</span><br><span class="line">primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into tb_article1 values (null,<span class="string">&#x27;mysql从入门到放弃&#x27;</span>,<span class="string">&#x27;mysql很好很强大...&#x27;</span>,null);</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into tb_article1 values (null,<span class="string">&#x27;mysql从入门到放弃&#x27;</span>,<span class="string">&#x27;mysql很好很强大...&#x27;</span>,null);</span><br></pre></td></tr></table></figure><h1 id="二、SQL查询语句（重点）"><a href="#二、SQL查询语句（重点）" class="headerlink" title="二、SQL查询语句（重点）"></a>二、SQL查询语句（重点）</h1><h2 id="1、回顾SQL查询语句"><a href="#1、回顾SQL查询语句" class="headerlink" title="1、回顾SQL查询语句"></a>1、回顾SQL查询语句</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> */字段列表 from 数据表名称 <span class="built_in">where</span> 查询条件;</span><br></pre></td></tr></table></figure><h2 id="2、SQL查询五子句"><a href="#2、SQL查询五子句" class="headerlink" title="2、SQL查询五子句"></a>2、SQL查询五子句</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> */字段列表 from 数据表名称 <span class="built_in">where</span> 子句 <span class="built_in">group</span> by 子句 having 子句 order by 子句 limit 子句;</span><br></pre></td></tr></table></figure><p>① where子句</p><p>② group by子句</p><p>③ having子句</p><p>④ order by子句</p><p>⑤ limit子句</p><blockquote><p>特别注意：五子句的顺序是固定的，不能颠倒。</p></blockquote><h2 id="3、WHERE子句"><a href="#3、WHERE子句" class="headerlink" title="3、WHERE子句"></a>3、WHERE子句</h2><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>%</td><td>匹配0个或任意多个字符</td></tr><tr><td>_(下划线)</td><td>匹配单个字符</td></tr><tr><td>like</td><td>模糊匹配</td></tr><tr><td>&#x3D;</td><td>等于,精确匹配</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td></tr><tr><td>!&#x3D;和&lt;&gt;</td><td>不等于</td></tr><tr><td>! 和 not</td><td>逻辑非</td></tr><tr><td>|| 和 or</td><td>逻辑或</td></tr><tr><td>&amp;&amp; 和 and</td><td>逻辑与</td></tr><tr><td>between…and….</td><td>两者之间</td></tr><tr><td>in (….)</td><td>在…</td></tr><tr><td>not in (….)</td><td>不在</td></tr></tbody></table><p>案例：like模糊查询语句，查询姓”关”的同学信息（name字段对应值应该以”关”开头）</p><p>准备测试数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use db_itheima;</span><br><span class="line">mysql&gt; create table tb_student(</span><br><span class="line">id mediumint not null auto_increment,</span><br><span class="line">name varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned default <span class="number">0</span>,</span><br><span class="line">gender <span class="class"><span class="keyword">enum</span>(&#x27;男&#x27;,&#x27;女&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">address</span> <span class="title">varchar</span>(255),</span></span><br><span class="line"><span class="class"><span class="title">primary</span> <span class="title">key</span>(<span class="title">id</span>)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br><span class="line"><span class="class">插入测试数据</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;刘备&#x27;,33,&#x27;男&#x27;,&#x27;湖北省武汉市&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;貂蝉&#x27;,18,&#x27;女&#x27;,&#x27;湖南省长沙市&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;关羽&#x27;,32,&#x27;男&#x27;,&#x27;湖北省荆州市&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;大乔&#x27;,20,&#x27;女&#x27;,&#x27;河南省漯河市&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;赵云&#x27;,25,&#x27;男&#x27;,&#x27;河北省石家庄市&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;小乔&#x27;,18,&#x27;女&#x27;,&#x27;湖北省荆州市&#x27;);</span></span><br></pre></td></tr></table></figure><p>使用like模糊查询，获取姓”关”的同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> name like <span class="string">&#x27;关%&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>like模糊查询，有点类似于管道命令的中的数据检索。有两个关键字：%百分号与_下划线，%百分号代表任意个任意字符，_下划线代表任意的某个字符（只能匹配1个）</p></blockquote><p>案例：like模糊查询语句，查询名字中带”蝉”字的同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> name like <span class="string">&#x27;%蝉%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>案例：like模糊查询语句，查询云字结尾且名字为两个字的同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> name like <span class="string">&#x27;_云&#x27;</span>;</span><br></pre></td></tr></table></figure><p>案例：获取学生表中，id编号为3的同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> id=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>案例：获取年龄大于25周岁的同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> age&gt;<span class="number">25</span>;</span><br></pre></td></tr></table></figure><p>案例：获取学生表中，性别不为男的同学信息（获取女同学的信息）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> gender&lt;&gt;<span class="string">&#x27;男&#x27;</span>;</span><br></pre></td></tr></table></figure><p>案例：获取班级中年龄大于30岁的男同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> age&gt;<span class="number">30</span> &amp;&amp; gender=<span class="string">&#x27;男&#x27;</span>;</span><br></pre></td></tr></table></figure><p>案例：获取id值为1、3、5的同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> id=<span class="number">1</span> or id=<span class="number">3</span> or id=<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>案例：获取年龄在18周岁~25周岁之间的同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> age&gt;=<span class="number">18</span> and age&lt;=<span class="number">25</span>;</span><br><span class="line">或</span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> age between <span class="number">18</span> and <span class="number">25</span>;</span><br></pre></td></tr></table></figure><p>案例：获取id值为2、4、6的同学信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student <span class="built_in">where</span> id <span class="keyword">in</span> (<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>);</span><br></pre></td></tr></table></figure><h2 id="4、DISTINCT数据去重"><a href="#4、DISTINCT数据去重" class="headerlink" title="4、DISTINCT数据去重"></a>4、DISTINCT数据去重</h2><p>案例：获取tb_student学生表学员年龄的分布情况。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> distinct age from tb_student;</span><br></pre></td></tr></table></figure><h2 id="5、GROUP-BY子句-重点和难点"><a href="#5、GROUP-BY子句-重点和难点" class="headerlink" title="5、GROUP BY子句(重点和难点)"></a>5、GROUP BY子句(重点和难点)</h2><p>group by子句的作用：对数据进行分组操作，为什么要进行分组呢？分组的目标就是进行分组统计。</p><blockquote><p>日常生活中的分组太多了，如按男女进行分组，按成绩进行分组，按院校、系部分组，按部门进行分组。</p></blockquote><p>根据给定&#x3D;&#x3D;数据列&#x3D;&#x3D;的查询结果进行分组统计，最终得到一个&#x3D;&#x3D;分组汇总表&#x3D;&#x3D;</p><p>注：一般情况下group by需与&#x3D;&#x3D;统计函数&#x3D;&#x3D;一起使用才有意义</p><h3 id="☆-统计函数"><a href="#☆-统计函数" class="headerlink" title="☆ 统计函数"></a>☆ 统计函数</h3><table><thead><tr><th>常见统计函数</th><th>说明</th></tr></thead><tbody><tr><td>max</td><td>求最大值</td></tr><tr><td>min</td><td>求最小值</td></tr><tr><td>sum</td><td>求和</td></tr><tr><td>avg</td><td>求平均值</td></tr><tr><td>count</td><td>求总行数</td></tr></tbody></table><p>案例：求tb_student表中一共有多少个记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> count(*) from tb_student;</span><br></pre></td></tr></table></figure><p>案例：求年龄的最大值与最小值</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> max(age) from tb_student;</span><br><span class="line">与</span><br><span class="line">mysql&gt; <span class="built_in">select</span> min(age) from tb_student;</span><br></pre></td></tr></table></figure><p>案例：针对id字段求和</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> sum(id) from tb_student;</span><br></pre></td></tr></table></figure><p>案例：求学员表中年龄的平均值</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> avg(age) from tb_student;</span><br></pre></td></tr></table></figure><h3 id="☆-GROUP-BY分组"><a href="#☆-GROUP-BY分组" class="headerlink" title="☆ GROUP BY分组"></a>☆ GROUP BY分组</h3><p>案例：求tb_student表中，男同学的总数量与女同学的总数量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> gender,count(*) from tb_student <span class="built_in">group</span> by gender;</span><br></pre></td></tr></table></figure><blockquote><p>在MySQL5.7以后版本中，分组字段必须出现在select后面的查询字段中</p></blockquote><p>案例：求tb_student表中，男同学年龄的最大值与女同学年龄的最大值</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> gender,max(age) from tb_student <span class="built_in">group</span> by gender;</span><br></pre></td></tr></table></figure><h3 id="☆-GROUP-BY分组原理"><a href="#☆-GROUP-BY分组原理" class="headerlink" title="☆ GROUP BY分组原理"></a>☆ GROUP BY分组原理</h3><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826161519999.png" alt="image-20200826161519999"></p><blockquote><p>记住：以后只要涉及到求每个学科、每个部分、每个年级、每个系部薪资最高、成绩最好、薪资的平均值等等，就是基于GROUP BY + 统计函数。</p></blockquote><h2 id="6、HAVING子句"><a href="#6、HAVING子句" class="headerlink" title="6、HAVING子句"></a>6、HAVING子句</h2><ul><li><p>having与where类似，根据条件对&#x3D;&#x3D;数据&#x3D;&#x3D;进行过滤筛选</p></li><li><p>where&#x3D;&#x3D;针对表中的列&#x3D;&#x3D;发挥作用，查询数据</p></li><li><p>having&#x3D;&#x3D;针对查询结果集&#x3D;&#x3D;发挥作用，筛选数据</p></li></ul><p>案例：having在做简单查询时可以替代where子句</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student having age&gt;<span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>案例：按学科进行分组，求每个学科拥有多少人</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table tb_student(</span><br><span class="line">id mediumint not null auto_increment,</span><br><span class="line">name varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned default <span class="number">0</span>,</span><br><span class="line">gender <span class="class"><span class="keyword">enum</span>(&#x27;男&#x27;,&#x27;女&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">subject</span> <span class="title">enum</span>(&#x27;<span class="title">ui</span>&#x27;,&#x27;<span class="title">java</span>&#x27;,&#x27;<span class="title">yunwei</span>&#x27;,&#x27;<span class="title">python</span>&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">primary</span> <span class="title">key</span>(<span class="title">id</span>)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;悟空&#x27;,255,&#x27;男&#x27;,&#x27;<span class="title">ui</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;八戒&#x27;,250,&#x27;男&#x27;,&#x27;<span class="title">python</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;唐僧&#x27;,30,&#x27;男&#x27;,&#x27;<span class="title">yunwei</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;沙僧&#x27;,150,&#x27;男&#x27;,&#x27;<span class="title">java</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;小白龙&#x27;,100,&#x27;男&#x27;,&#x27;<span class="title">yunwei</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;白骨精&#x27;,28,&#x27;女&#x27;,&#x27;<span class="title">ui</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;兔子精&#x27;,22,&#x27;女&#x27;,&#x27;<span class="title">yunwei</span>&#x27;);</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;狮子精&#x27;,33,&#x27;男&#x27;,&#x27;<span class="title">yunwei</span>&#x27;);</span></span><br><span class="line"><span class="class">或</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student</span> <span class="title">values</span> (<span class="title">null</span>,&#x27;悟空&#x27;,255,&#x27;男&#x27;,&#x27;<span class="title">ui</span>&#x27;),(<span class="title">null</span>,&#x27;八戒&#x27;,250,&#x27;男&#x27;,&#x27;<span class="title">python</span>&#x27;),(<span class="title">null</span>,&#x27;唐僧&#x27;,30,&#x27;男&#x27;,&#x27;<span class="title">yunwei</span>&#x27;),(<span class="title">null</span>,&#x27;沙僧&#x27;,150,&#x27;男&#x27;,&#x27;<span class="title">java</span>&#x27;),(<span class="title">null</span>,&#x27;小白龙&#x27;,100,&#x27;男&#x27;,&#x27;<span class="title">yunwei</span>&#x27;),(<span class="title">null</span>,&#x27;白骨精&#x27;,28,&#x27;女&#x27;,&#x27;<span class="title">ui</span>&#x27;),(<span class="title">null</span>,&#x27;兔子精&#x27;,22,&#x27;女&#x27;,&#x27;<span class="title">yunwei</span>&#x27;),(<span class="title">null</span>,&#x27;狮子精&#x27;,33,&#x27;男&#x27;,&#x27;<span class="title">yunwei</span>&#x27;);</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> subject,count(*) from tb_student <span class="built_in">group</span> by subject;</span><br></pre></td></tr></table></figure><p>案例：求每个学科中，学科人数大于3人的学科信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> subject,count(*) from tb_student <span class="built_in">group</span> by subject having count(*)&gt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><h2 id="7、ORDER-BY子句"><a href="#7、ORDER-BY子句" class="headerlink" title="7、ORDER BY子句"></a>7、ORDER BY子句</h2><p>主要作用的就是对数据进行排序（升序、降序）</p><p>升序：从小到大，1,2,3,4,5</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from 数据表名称 ... order by 字段名称 asc;</span><br></pre></td></tr></table></figure><p>降序：从大到小，5,4,3,2,1</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from 数据表名称 ... order by 字段名称 desc;</span><br></pre></td></tr></table></figure><p>案例：按年龄进行排序（由大到小）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student order by age desc;</span><br></pre></td></tr></table></figure><h2 id="8、LIMIT子句"><a href="#8、LIMIT子句" class="headerlink" title="8、LIMIT子句"></a>8、LIMIT子句</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from 数据表名称 ... limit number; 查询满足条件的number条数据</span><br><span class="line">或</span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from 数据表名称 ... limit offset,number; 从偏移量为offset开始查询，查询number条记录</span><br><span class="line">offset的值从<span class="number">0</span>开始</span><br></pre></td></tr></table></figure><p>offset偏移量：</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826170515365.png" alt="image-20200826170515365"></p><p>案例：获取学生表中，年龄最大的学员信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student order by age desc limit <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>案例：从偏移量为1的元素开始查询，查询2条记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student limit <span class="number">1</span>,<span class="number">2</span>;</span><br></pre></td></tr></table></figure><blockquote><p>LIMIT子句在开发项目中，主要应用于数据分页。</p></blockquote><p>案例：实现数据分页（参考上图）</p><p>第一页：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student limit <span class="number">0</span>,<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>第二页：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student limit <span class="number">2</span>,<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h1 id="三、SQL多表查询（了解）"><a href="#三、SQL多表查询（了解）" class="headerlink" title="三、SQL多表查询（了解）"></a>三、SQL多表查询（了解）</h1><h2 id="1、什么是多表查询"><a href="#1、什么是多表查询" class="headerlink" title="1、什么是多表查询"></a>1、什么是多表查询</h2><p>我们刚才学习的SQL五子句都主要是针对单表情况，我们在实际工作中，也可能会接触到一些复杂的多表查询。</p><h2 id="2、UNION联合查询"><a href="#2、UNION联合查询" class="headerlink" title="2、UNION联合查询"></a>2、UNION联合查询</h2><p>UNION联合查询的作用：把多个表中的数据联合在一起进行显示。应用场景：分库分表</p><p>第一步：创建两个结构相同的学生表tb_student1与tb_student2</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table tb_student1(</span><br><span class="line">id mediumint not null auto_increment,</span><br><span class="line">name varchar(<span class="number">20</span>),</span><br><span class="line">age tinyint unsigned default <span class="number">0</span>,</span><br><span class="line">gender <span class="class"><span class="keyword">enum</span>(&#x27;男&#x27;,&#x27;女&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">subject</span> <span class="title">enum</span>(&#x27;<span class="title">ui</span>&#x27;,&#x27;<span class="title">java</span>&#x27;,&#x27;<span class="title">yunwei</span>&#x27;,&#x27;<span class="title">python</span>&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">primary</span> <span class="title">key</span>(<span class="title">id</span>)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student1</span> <span class="title">values</span> (1,&#x27;悟空&#x27;,255,&#x27;男&#x27;,&#x27;<span class="title">ui</span>&#x27;);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">create</span> <span class="title">table</span> <span class="title">tb_student2</span>(</span></span><br><span class="line"><span class="class"><span class="title">id</span> <span class="title">mediumint</span> <span class="title">not</span> <span class="title">null</span> <span class="title">auto_increment</span>,</span></span><br><span class="line"><span class="class"><span class="title">name</span> <span class="title">varchar</span>(20),</span></span><br><span class="line"><span class="class"><span class="title">age</span> <span class="title">tinyint</span> <span class="title">unsigned</span> <span class="title">default</span> 0,</span></span><br><span class="line"><span class="class"><span class="title">gender</span> <span class="title">enum</span>(&#x27;男&#x27;,&#x27;女&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">subject</span> <span class="title">enum</span>(&#x27;<span class="title">ui</span>&#x27;,&#x27;<span class="title">java</span>&#x27;,&#x27;<span class="title">yunwei</span>&#x27;,&#x27;<span class="title">python</span>&#x27;),</span></span><br><span class="line"><span class="class"><span class="title">primary</span> <span class="title">key</span>(<span class="title">id</span>)</span></span><br><span class="line"><span class="class">) <span class="title">engine</span>=<span class="title">innodb</span> <span class="title">default</span> <span class="title">charset</span>=<span class="title">utf8</span>;</span></span><br><span class="line"><span class="class"><span class="title">mysql</span>&gt; <span class="title">insert</span> <span class="title">into</span> <span class="title">tb_student2</span> <span class="title">values</span> (2,&#x27;唐僧&#x27;,30,&#x27;男&#x27;,&#x27;<span class="title">yunwei</span>&#x27;);</span></span><br></pre></td></tr></table></figure><p>第二步：使用UNION进行联合查询</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_student1 union <span class="built_in">select</span> * from tb_student2;</span><br></pre></td></tr></table></figure><h2 id="3、交叉查询（了解）"><a href="#3、交叉查询（了解）" class="headerlink" title="3、交叉查询（了解）"></a>3、交叉查询（了解）</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> */字段列表 from 数据表<span class="number">1</span>,数据表<span class="number">2</span>;</span><br><span class="line">或</span><br><span class="line">mysql&gt; <span class="built_in">select</span> */字段列表 from 数据表<span class="number">1</span> cross join 数据表<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>字段总数 &#x3D; 数据表1的字段 + 数据表2的字段</p><p>总记录数 &#x3D; 数据表1的记录数 * 数据表2的记录数 &#x3D;&gt; (笛卡尔积)</p><p>准备两张数据表：产品分类表 与 产品的信息表</p><p>tb_category</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table tb_category(</span><br><span class="line">id smallint not null auto_increment,</span><br><span class="line">name varchar(<span class="number">20</span>),</span><br><span class="line">pid smallint default <span class="number">0</span>,</span><br><span class="line">primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line">insert into tb_category values (null,<span class="string">&#x27;手机&#x27;</span>,<span class="number">0</span>);=&gt;  id=<span class="number">1</span></span><br><span class="line">insert into tb_cateogry values (null,<span class="string">&#x27;电脑&#x27;</span>,<span class="number">0</span>);=&gt;  id=<span class="number">2</span></span><br><span class="line">insert into tb_category values (null,<span class="string">&#x27;游戏手机&#x27;</span>,<span class="number">1</span>);   =&gt;  游戏手机属于手机分类</span><br></pre></td></tr></table></figure><blockquote><p>pid代表所属的父级类别，如果自己就是顶级分类，则为0</p></blockquote><p>tb_goods</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table tb_goods(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">title varchar(<span class="number">80</span>),</span><br><span class="line">price decimal(<span class="number">11</span>,<span class="number">2</span>),</span><br><span class="line">cid smallint default <span class="number">0</span>,</span><br><span class="line">primary key(id)</span><br><span class="line">) engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line">insert into tb_goods values (null,<span class="string">&#x27;IPhone 11&#x27;</span>,<span class="number">5699.00</span>,<span class="number">1</span>);</span><br><span class="line">insert into tb_goods values (null,<span class="string">&#x27;MI 10&#x27;</span>,<span class="number">4699.00</span>,<span class="number">1</span>);</span><br><span class="line">insert into tb_goods values (null,<span class="string">&#x27;ThinkPad X1&#x27;</span>,<span class="number">9999.00</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">insert into tb_goods values (null,<span class="string">&#x27;Nike air&#x27;</span>,<span class="number">999.00</span>,<span class="number">10</span>);</span><br></pre></td></tr></table></figure><blockquote><p>cid代表产品的所属分类编号，与tb_category表要一一对应</p></blockquote><p>案例：把分类表与产品表进行交叉，求结果</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from tb_category cross join tb_goods;</span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826174322790.png" alt="image-20200826174322790"></p><blockquote><p>交叉连接本身是没有意义的，其只是强制把两个表甚至多个表进行连接在一起。但是交叉查询中也有正确的结果，所以我们所谓的多表连接只需要在交叉连接的基础上增加一个连接条件，则就是我们想要的结果了。所以交叉查询是多表查询的基础。</p></blockquote><h2 id="4、内连接查询（重点）"><a href="#4、内连接查询（重点）" class="headerlink" title="4、内连接查询（重点）"></a>4、内连接查询（重点）</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> 数据表<span class="number">1</span>.字段列表,数据表<span class="number">2</span>.字段列表 from 数据表<span class="number">1</span> inner join 数据表<span class="number">2</span> on 连接条件;</span><br></pre></td></tr></table></figure><p>案例：获取产品表中每个产品的分类信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> tb_goods.*,tb_category.name from tb_goods inner join tb_category on tb_goods.cid=tb_category.id;</span><br></pre></td></tr></table></figure><blockquote><p>内连接查询：把两个表甚至多个表进行连接，然后拿表1中的每一条记录与表2中的每一条记录进行匹配，如果有与之对应的结果，则显示。反之，则忽略这条记录。</p></blockquote><h2 id="5、外连接查询（重点）"><a href="#5、外连接查询（重点）" class="headerlink" title="5、外连接查询（重点）"></a>5、外连接查询（重点）</h2><p>内连接查询要求：表1和表2中的每一条记录必须要一一对应，如果无法匹配，则这条记录会被自动被忽略掉，那如果我需要保留表1中的所有记录或表2中的所有记录怎么办呢？</p><p>答：使用外连接查询</p><p>基本语法：</p><p>左外连接查询：把左表中的每一条数据都保留，右表匹配到结果就显示，匹配不到就NULL</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">select</span> 数据表<span class="number">1</span>.字段列表,数据表<span class="number">2</span>.字段列表 from 数据表<span class="number">1</span> left join 数据表<span class="number">2</span> on 连接条件;</span><br></pre></td></tr></table></figure><p>右外连接查询：把右表中的每一条数据都保留，左表匹配到结果就显示，匹配不到就NULL</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">select</span> 数据表<span class="number">1</span>.字段列表,数据表<span class="number">2</span>.字段列表 from 数据表<span class="number">1</span> right join 数据表<span class="number">2</span> on 连接条件;</span><br></pre></td></tr></table></figure><p>案例：获取产品表中每个产品的分类信息（无论匹配到与否）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> tb_goods.*,tb_category.name from tb_goods left join tb_category on tb_goods.cid=tb_category.id;</span><br></pre></td></tr></table></figure><h2 id="6、别名机制：简化内外连接"><a href="#6、别名机制：简化内外连接" class="headerlink" title="6、别名机制：简化内外连接"></a>6、别名机制：简化内外连接</h2><p>案例：获取产品表中每个产品的分类信息（无论匹配到与否）</p><p>原始语句：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> tb_goods.*,tb_category.name from tb_goods left join tb_category on tb_goods.cid=tb_category.id;</span><br></pre></td></tr></table></figure><p>给数据表起个简单的名字，如tb_category叫c，tb_goods叫g</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">① mysql&gt; <span class="built_in">select</span> * from tb_goods left join tb_category;</span><br><span class="line">起别名</span><br><span class="line">② mysql&gt; <span class="built_in">select</span> * from tb_goods g left join tb_category c;</span><br><span class="line">写on条件</span><br><span class="line">③ mysql&gt; <span class="built_in">select</span> * from tb_goods g left join tb_category c on g.cid=c.id;</span><br><span class="line">筛选字段</span><br><span class="line">④ mysql&gt; <span class="built_in">select</span> g.*,c.name from tb_goods g left join tb_category c on g.cid=c.id;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAMP项目部署实战</title>
      <link href="/posts/60335.html"/>
      <url>/posts/60335.html</url>
      
        <content type="html"><![CDATA[<h1 id="LAMP项目部署实战"><a href="#LAMP项目部署实战" class="headerlink" title="LAMP项目部署实战"></a>LAMP项目部署实战</h1><h1 id="一、LAMP环境部署"><a href="#一、LAMP环境部署" class="headerlink" title="一、LAMP环境部署"></a>一、LAMP环境部署</h1><h2 id="1、回顾LAMP"><a href="#1、回顾LAMP" class="headerlink" title="1、回顾LAMP"></a>1、回顾LAMP</h2><p>LAMP &#x3D; Linux + Apache + MySQL + PHP</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327093726255.png" alt="image-20200327093726255"></p><p>Apache：主要用于接收用户的请求，处理业务逻辑，返回结果给客户端（浏览器）</p><p>PHP：编程语言的一种，主要应用于Web开发。主要实现注册、登录、加入购物车、下单、支付等功能</p><p>MySQL：数据库，删库到跑路，这里的”库”就是指数据库。永久保存数据</p><h2 id="2、LAMP部署前期准备"><a href="#2、LAMP部署前期准备" class="headerlink" title="2、LAMP部署前期准备"></a>2、LAMP部署前期准备</h2><h3 id="☆-关闭防火墙"><a href="#☆-关闭防火墙" class="headerlink" title="☆ 关闭防火墙"></a>☆ 关闭防火墙</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br></pre></td></tr></table></figure><h3 id="☆-关闭SELinux"><a href="#☆-关闭SELinux" class="headerlink" title="☆ 关闭SELinux"></a>☆ 关闭SELinux</h3><p><em>SELinux</em>(Security-Enhanced Linux) 是美国国家安全局（NSA）对于强制访问控制的实现，是 Linux历史上最杰出的新安全子系统。</p><p>获取SELinux的状态：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># getenforce</span></span><br></pre></td></tr></table></figure><p>临时关闭SElinux：重启后SELinux还会自动启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setenforce 0</span></span><br></pre></td></tr></table></figure><p>永久关闭SELinux：编辑SELinux的配置文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h3 id="☆-检查系统中是否已安装Apache"><a href="#☆-检查系统中是否已安装Apache" class="headerlink" title="☆ 检查系统中是否已安装Apache"></a>☆ 检查系统中是否已安装Apache</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa |grep httpd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -e httpd-2.4.6-90.el7.centos.x86_64</span></span><br><span class="line"><span class="comment"># rpm -e httpd-tools-2.4.6-90.el7.centos.x86_64</span></span><br></pre></td></tr></table></figure><h3 id="☆-检查系统中是否已安装MySQL"><a href="#☆-检查系统中是否已安装MySQL" class="headerlink" title="☆ 检查系统中是否已安装MySQL"></a>☆ 检查系统中是否已安装MySQL</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa |grep mysql</span></span><br></pre></td></tr></table></figure><h3 id="☆-检查系统中是否已安装PHP"><a href="#☆-检查系统中是否已安装PHP" class="headerlink" title="☆ 检查系统中是否已安装PHP"></a>☆ 检查系统中是否已安装PHP</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa |grep php</span></span><br></pre></td></tr></table></figure><blockquote><p>AMP安装指南：在Linux中安装AMP必须先安装Apache，在安装MySQL，最后安装PHP</p></blockquote><h2 id="3、LAMP环境之Apache安装"><a href="#3、LAMP环境之Apache安装" class="headerlink" title="3、LAMP环境之Apache安装"></a>3、LAMP环境之Apache安装</h2><p>Apache：阿帕奇，Apache基金会</p><p>httpd软件 &#x3D;&gt; 前身apache，随着时间的推移以及互联网行业的发展，越来越多的软件加入到了Apache的基金会。</p><p>第一步：安装httpd软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install httpd -y</span></span><br></pre></td></tr></table></figure><p>第二步：配置&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line">/ServerName =&gt; 搜索</span><br><span class="line"><span class="number">96</span> ServerName localhost:<span class="number">80</span></span><br></pre></td></tr></table></figure><blockquote><p>localhost ： 代表本机，对应的IP地址可以使127.0.0.1或本机的公网IP</p></blockquote><p>第三步：启动httpd服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start httpd</span></span><br></pre></td></tr></table></figure><p>第四步：把httpd服务添加到开机启动项中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable httpd</span></span><br></pre></td></tr></table></figure><p>第五步：使用ss或netstat命令查询httpd占用的端口</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat -tnlp |grep httpd</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># ss -naltp |grep httpd</span></span><br></pre></td></tr></table></figure><p>第六步：在浏览器中，使用公网IP访问阿里云服务器</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327104156113.png" alt="image-20200327104156113"></p><h2 id="4、LAMP环境之MySQL安装"><a href="#4、LAMP环境之MySQL安装" class="headerlink" title="4、LAMP环境之MySQL安装"></a>4、LAMP环境之MySQL安装</h2><h3 id="☆-下载MySQL的官网yum源"><a href="#☆-下载MySQL的官网yum源" class="headerlink" title="☆ 下载MySQL的官网yum源"></a>☆ 下载MySQL的官网yum源</h3><p>由于yum源上默认没有mysql-server。所以必须去官网下载后在安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span></span><br></pre></td></tr></table></figure><h3 id="☆-安装MySQL的官网镜像源"><a href="#☆-安装MySQL的官网镜像源" class="headerlink" title="☆ 安装MySQL的官网镜像源"></a>☆ 安装MySQL的官网镜像源</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh mysql-community-release-el7-5.noarch.rpm</span></span><br></pre></td></tr></table></figure><h3 id="☆-使用yum安装mysql最新版软件"><a href="#☆-使用yum安装mysql最新版软件" class="headerlink" title="☆ 使用yum安装mysql最新版软件"></a>☆ 使用yum安装mysql最新版软件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install mysql-community-server -y</span></span><br></pre></td></tr></table></figure><blockquote><p>MySQL软件是一个C&#x2F;S架构的软件，拥有客户端与服务器端。mysql-server服务器端（内部也包含了客户端），community代表社区版（免费开源）</p></blockquote><h3 id="☆-启动mysql，查看端口占用情况"><a href="#☆-启动mysql，查看端口占用情况" class="headerlink" title="☆ 启动mysql，查看端口占用情况"></a>☆ 启动mysql，查看端口占用情况</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysqld</span></span><br><span class="line"><span class="comment"># netstat -tnlp |grep mysqld</span></span><br></pre></td></tr></table></figure><h3 id="☆-MySQL数据库初始化（重要）"><a href="#☆-MySQL数据库初始化（重要）" class="headerlink" title="☆ MySQL数据库初始化（重要）"></a>☆ MySQL数据库初始化（重要）</h3><p>默认情况下，数据库没有密码，也没有任何数据，必须要初始化</p><h4 id="①-初始化数据，设置root密码（MySQL管理员）"><a href="#①-初始化数据，设置root密码（MySQL管理员）" class="headerlink" title="① 初始化数据，设置root密码（MySQL管理员）"></a>① 初始化数据，设置root密码（MySQL管理员）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql_secure_installation</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114309107.png" alt="image-20200327114309107"></p><blockquote><p>扩展：以上说的root和Linux中的root不是同一个用户，这个root代表MySQL数据库的管理员，只不过这个管理员也叫root。</p></blockquote><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114444955.png" alt="image-20200327114444955"></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114530976.png" alt="image-20200327114530976"></p><blockquote><p>学习环境下，密码越简单越好。生产环境下越复杂越好。</p></blockquote><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114717525.png" alt="image-20200327114717525"></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114820459.png" alt="image-20200327114820459"></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114907975.png" alt="image-20200327114907975"></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114951007.png" alt="image-20200327114951007"></p><h4 id="②-把mysqld服务添加到开机启动项"><a href="#②-把mysqld服务添加到开机启动项" class="headerlink" title="② 把mysqld服务添加到开机启动项"></a>② 把mysqld服务添加到开机启动项</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable mysqld</span></span><br></pre></td></tr></table></figure><p>默认已经开机启动，这里可以跳过</p><h4 id="③-连接MySQL数据库，测试"><a href="#③-连接MySQL数据库，测试" class="headerlink" title="③ 连接MySQL数据库，测试"></a>③ 连接MySQL数据库，测试</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -u root -p 回车</span></span><br><span class="line">Enter password:输入刚才设置的密码，如<span class="number">123</span>，回车</span><br><span class="line">mysql&gt; show databases;    =&gt;   代表显示所有数据库</span><br><span class="line">mysql&gt; <span class="keyword">exit</span></span><br></pre></td></tr></table></figure><h2 id="5、LAMP环境之PHP安装"><a href="#5、LAMP环境之PHP安装" class="headerlink" title="5、LAMP环境之PHP安装"></a>5、LAMP环境之PHP安装</h2><h3 id="☆-使用yum命令安装php软件"><a href="#☆-使用yum命令安装php软件" class="headerlink" title="☆ 使用yum命令安装php软件"></a>☆ 使用yum命令安装php软件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install php -y</span></span><br></pre></td></tr></table></figure><h3 id="☆-使用systemctl启动php软件（重启Apache）"><a href="#☆-使用systemctl启动php软件（重启Apache）" class="headerlink" title="☆ 使用systemctl启动php软件（重启Apache）"></a>☆ 使用systemctl启动php软件（重启Apache）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><blockquote><p>为什么启动php就是重启Apache呢？答：因为LAMP架构中，PHP是以模块的形式追加到Apache的内核中，所以启动php就相当于重置Apache软件</p></blockquote><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327142246747.png" alt="image-20200327142246747"></p><h3 id="☆-测试LAMP环境是否可以使用"><a href="#☆-测试LAMP环境是否可以使用" class="headerlink" title="☆ 测试LAMP环境是否可以使用"></a>☆ 测试LAMP环境是否可以使用</h3><p>第一步：使用cd命令进入&#x2F;var&#x2F;www&#x2F;html目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /var/www/html</span></span><br><span class="line">Apache的项目目录 =&gt; /var/www/html，以后程序员开发的代码都是放置于此目录</span><br></pre></td></tr></table></figure><p>第二步：使用vim命令创建demo.php文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim demo.php</span></span><br></pre></td></tr></table></figure><p>第三步：编写php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>编写完成后，保存退出，然后在浏览器中使用http:&#x2F;&#x2F;公网IP&#x2F;demo.php</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327142839268.png" alt="image-20200327142839268"></p><h1 id="二、部署Discuz-论坛"><a href="#二、部署Discuz-论坛" class="headerlink" title="二、部署Discuz!论坛"></a>二、部署Discuz!论坛</h1><h2 id="1、Discuz-论坛概述"><a href="#1、Discuz-论坛概述" class="headerlink" title="1、Discuz!论坛概述"></a>1、Discuz!论坛概述</h2><p>Discuz！论坛是基于PHP + MySQL进行开发的一套开源的论坛系统。</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327151556113.png" alt="image-20200327151556113"></p><h2 id="2、下载源代码"><a href="#2、下载源代码" class="headerlink" title="2、下载源代码"></a>2、下载源代码</h2><p>下载地址：<a href="https://gitee.com/ComsenzDiscuz/DiscuzX">https://gitee.com/ComsenzDiscuz/DiscuzX</a>  （码云）</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327151754516.png" alt="image-20200327151754516"></p><h2 id="3、使用MX软件把Discuz源代码上传"><a href="#3、使用MX软件把Discuz源代码上传" class="headerlink" title="3、使用MX软件把Discuz源代码上传"></a>3、使用MX软件把Discuz源代码上传</h2><p>阿里云：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327152029513.png" alt="image-20200327152029513"></p><p>本地Linux类似</p><h2 id="4、安装unzip解压缩软件"><a href="#4、安装unzip解压缩软件" class="headerlink" title="4、安装unzip解压缩软件"></a>4、安装unzip解压缩软件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install unzip -y</span></span><br></pre></td></tr></table></figure><h2 id="5、使用unzip对discuz-zip压缩包进行解压"><a href="#5、使用unzip对discuz-zip压缩包进行解压" class="headerlink" title="5、使用unzip对discuz.zip压缩包进行解压"></a>5、使用unzip对discuz.zip压缩包进行解压</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unzip discuz.zip</span></span><br></pre></td></tr></table></figure><h2 id="6、复制discuz中的文件到-var-www-html目录"><a href="#6、复制discuz中的文件到-var-www-html目录" class="headerlink" title="6、复制discuz中的文件到&#x2F;var&#x2F;www&#x2F;html目录"></a>6、复制discuz中的文件到&#x2F;var&#x2F;www&#x2F;html目录</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv discuz/* /var/www/html/</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># cp -vRp disczu/* /var/www/html/</span></span><br></pre></td></tr></table></figure><h2 id="7、打开浏览器，输入公网IP地址"><a href="#7、打开浏览器，输入公网IP地址" class="headerlink" title="7、打开浏览器，输入公网IP地址"></a>7、打开浏览器，输入公网IP地址</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327153135696.png" alt="image-20200327153135696"></p><h2 id="8、单击同意许可，继续安装"><a href="#8、单击同意许可，继续安装" class="headerlink" title="8、单击同意许可，继续安装"></a>8、单击同意许可，继续安装</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327154443886.png" alt="image-20200327154443886"></p><h2 id="9、给-var-www-html目录设置可写权限"><a href="#9、给-var-www-html目录设置可写权限" class="headerlink" title="9、给&#x2F;var&#x2F;www&#x2F;html目录设置可写权限"></a>9、给&#x2F;var&#x2F;www&#x2F;html目录设置可写权限</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod -R a+w /var/www/html</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：以上操作是给所有文件添加一个w权限，但是生产环境尽量针对指定文件添加权限。</p></blockquote><h2 id="10、解决PHP扩展问题"><a href="#10、解决PHP扩展问题" class="headerlink" title="10、解决PHP扩展问题"></a>10、解决PHP扩展问题</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327154906078.png" alt="image-20200327154906078"></p><p>以上提示代表，安装PHP时没有按照php-mysqli扩展，所以会出现以上问题。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install php-mysqli -y</span></span><br><span class="line"><span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h2 id="11、设置运行环境"><a href="#11、设置运行环境" class="headerlink" title="11、设置运行环境"></a>11、设置运行环境</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155142197.png" alt="image-20200327155142197"></p><h2 id="12、设置MySQL数据库的相关信息"><a href="#12、设置MySQL数据库的相关信息" class="headerlink" title="12、设置MySQL数据库的相关信息"></a>12、设置MySQL数据库的相关信息</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155441330.png" alt="image-20200327155441330"></p><h2 id="13、设置管理员账号和密码"><a href="#13、设置管理员账号和密码" class="headerlink" title="13、设置管理员账号和密码"></a>13、设置管理员账号和密码</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155536618.png" alt="image-20200327155536618"></p><h2 id="14、安装完成后，访问论坛首页"><a href="#14、安装完成后，访问论坛首页" class="headerlink" title="14、安装完成后，访问论坛首页"></a>14、安装完成后，访问论坛首页</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155648008.png" alt="image-20200327155648008"></p><p>部署后，访问论坛首页，如下图所示：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155712092.png" alt="image-20200327155712092"></p><h1 id="三、域名与解析"><a href="#三、域名与解析" class="headerlink" title="三、域名与解析"></a>三、域名与解析</h1><h2 id="1、为什么需要域名"><a href="#1、为什么需要域名" class="headerlink" title="1、为什么需要域名"></a>1、为什么需要域名</h2><p>我们现在访问论坛是通过IP地址实现的，但是IP地址比较复杂，更重要的是不方便用户记忆。</p><p>域名 &#x3D;&gt; 代替公网IP地址</p><h2 id="2、购买域名"><a href="#2、购买域名" class="headerlink" title="2、购买域名"></a>2、购买域名</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327162641419.png" alt="image-20200327162641419"></p><p>登录控制台，然后选择域名菜单：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327162742162.png" alt="image-20200327162742162"></p><p>找到域名注册菜单：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327162831242.png" alt="image-20200327162831242"></p><p>找到想要注册的域名，然后加入清单，然后进行立即结算：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327163458795.png" alt="image-20200327163458795"></p><p>购买完成后，进入域名控制台：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327163713347.png" alt="image-20200327163713347"></p><h2 id="3、把域名解析到公网IP"><a href="#3、把域名解析到公网IP" class="headerlink" title="3、把域名解析到公网IP"></a>3、把域名解析到公网IP</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327163913091.png" alt="image-20200327163913091"></p><p>进入解析菜单，然后添加记录：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327164010354.png" alt="image-20200327164010354"></p><p>① 把<a href="http://www.itcast.top解析到公网ip/">www.itcast.top解析到公网IP</a></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327164144887.png" alt="image-20200327164144887"></p><p>② 把itcast.top解析到公网IP</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327164318781.png" alt="image-20200327164318781"></p><p>以上记录添加完成后，等待10分钟左右，即可使用域名访问论坛项目了！</p><h2 id="4、域名备案"><a href="#4、域名备案" class="headerlink" title="4、域名备案"></a>4、域名备案</h2><p>如果在国内运行项目，我们使用的域名必须要进行备案操作。</p><p>备案就是向工信部提交网站运行的相关资料，比如域名的证书、持有者的身份证号码，以及真人手持身份证照片（背景图）</p><p>由于现在监管比较严格，提交资料后，大概5-7个工作日进行审核，完全备案完成大概2周左右。</p><blockquote><p><a href="https://beian.aliyun.com/">https://beian.aliyun.com/</a></p></blockquote><p>如果不想进行域名备案，可以购买中国香港、中国台湾以及国外的服务器，可以免备案。但是其运行速度略慢一些。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程的优先级与LAMP项目部署实战</title>
      <link href="/posts/52203.html"/>
      <url>/posts/52203.html</url>
      
        <content type="html"><![CDATA[<h1 id="进程的优先级与LAMP项目部署实战"><a href="#进程的优先级与LAMP项目部署实战" class="headerlink" title="进程的优先级与LAMP项目部署实战"></a>进程的优先级与LAMP项目部署实战</h1><h1 id="一、进程的优先级（扩展）"><a href="#一、进程的优先级（扩展）" class="headerlink" title="一、进程的优先级（扩展）"></a>一、进程的优先级（扩展）</h1><h2 id="1、什么是进程的优先级"><a href="#1、什么是进程的优先级" class="headerlink" title="1、什么是进程的优先级"></a>1、什么是进程的优先级</h2><p>Linux是一个多用户、多任务的操作系统，系统中通常运行着非常多的进程。哪些进程先运行，哪些进程后运行，就由进程优先级来控制</p><p>思考：什么时候需要用到进程的优先级呢？</p><p>答：当CPU负载过高时，如CPU的使用率&gt;&#x3D;90%以上。这个时候进程的优先级就会起作用。</p><h2 id="2、查看进程的优先级"><a href="#2、查看进程的优先级" class="headerlink" title="2、查看进程的优先级"></a>2、查看进程的优先级</h2><p>PR  优先级，数值越小优先级越高。<br>NI  优先级，数值越小优先级越高，可以人为更改。（NI &#x3D; NICE &#x3D; Nice）</p><p>讲个小故事：Nice值 &#x3D; 0，Nice值越高，代表这个人越绅士（Nice值越高，优先级越低）</p><blockquote><p>NI值有一个范围 -20 ~ 19</p></blockquote><p>问题：这两个数值是在哪里看到的？</p><p>答：top命令</p><h2 id="3、调整进程的优先级"><a href="#3、调整进程的优先级" class="headerlink" title="3、调整进程的优先级"></a>3、调整进程的优先级</h2><h3 id="☆-使用top调整进程的优先级"><a href="#☆-使用top调整进程的优先级" class="headerlink" title="☆ 使用top调整进程的优先级"></a>☆ 使用top调整进程的优先级</h3><p>第一步：使用top命令获取你要调整的进程信息（PID编号）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># top -bn 1</span></span><br><span class="line">PID   COMMAND</span><br><span class="line"><span class="number">7107</span>atd（at命令的底层服务）</span><br></pre></td></tr></table></figure><p>第二步：运行top命令，然后按&#x3D;&#x3D;”r”&#x3D;&#x3D;，输入要调整进程的PID编号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># top</span></span><br><span class="line">按<span class="built_in">r</span>，输入要调整进程的PID编号,按回车</span><br></pre></td></tr></table></figure><p>第三步：根据提示，重置NICE值</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Renice PID <span class="number">7107</span> to value : <span class="literal">-5</span></span><br></pre></td></tr></table></figure><p>第四步：按q退出top模式，然后使用top -p PID编号，只查询某个进程的信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># top -p 7107</span></span><br></pre></td></tr></table></figure><h3 id="☆-使用renice命令调整进程的优先级"><a href="#☆-使用renice命令调整进程的优先级" class="headerlink" title="☆ 使用renice命令调整进程的优先级"></a>☆ 使用renice命令调整进程的优先级</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># renice [NI优先级设置的数字] 想调整的进程ID</span></span><br></pre></td></tr></table></figure><p>案例：使用renice调整atd的优先级</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一步：通过<span class="built_in">ps</span>或top命令获取atd的PID编号</span><br><span class="line"><span class="comment"># ps -ef |grep atd</span></span><br><span class="line"><span class="number">7107</span></span><br><span class="line">第二步：使用renice命令调整<span class="number">7107</span>的NICE值</span><br><span class="line"><span class="comment"># renice -10 7107</span></span><br><span class="line"><span class="number">7107</span> (<span class="keyword">process</span> ID) old priority <span class="number">0</span>, new priority <span class="literal">-10</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：NICE值取值范围-20 ~ 19，不能使用小数</p></blockquote><h3 id="☆-使用nice命令调整进程的优先级"><a href="#☆-使用nice命令调整进程的优先级" class="headerlink" title="☆ 使用nice命令调整进程的优先级"></a>☆ 使用nice命令调整进程的优先级</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nice [NI优先级设置的数字] 想调整的进程名称</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：nice命令只能调整没有运行的程序</p></blockquote><p>nice实际操作三步走：</p><p>第一步：将程序停止</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef |grep crond</span></span><br><span class="line"><span class="comment"># kill PID</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># systemctl stop crond</span></span><br></pre></td></tr></table></figure><p>第二步：启动并制定优先级（使用nice）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nice -n -10 crond</span></span><br></pre></td></tr></table></figure><blockquote><p>nice命令包含两个功能：① 启动进程 ② 调整进程的优先级</p></blockquote><p>第三步：确认优先级（查看优先级）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef |grep crond</span></span><br><span class="line">PID</span><br><span class="line"><span class="comment"># top -p PID</span></span><br></pre></td></tr></table></figure><h1 id="二、YUM"><a href="#二、YUM" class="headerlink" title="二、YUM"></a>二、YUM</h1><h2 id="1、什么是YUM"><a href="#1、什么是YUM" class="headerlink" title="1、什么是YUM"></a>1、什么是YUM</h2><p>在CentOS系统中，软件管理方式通常有三种方式：<code>rpm安装</code>、<code>yum安装</code>以及<code>编译安装</code>。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">编译安装，从过程上来讲比较麻烦，包需要用户自行下载，下载的是源码包，需要进行编译操作，编译好了才能进行安装，这个过程对于刚接触Linux的人来说比较麻烦，而且还容易出错。好处在于是源码包，对于有需要自定义模块的用户来说非常方便。(就业班会着重讲解)</span><br></pre></td></tr></table></figure><p>难度：编译安装 &gt; rpm安装 &gt; yum安装（有网络 + yum源支持）</p><p>Yum（全称为 <code>Yellow dog Updater, Modified</code>）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。</p><p>基于rpm包管理，能够从<strong>指定的服务器</strong>(yum源）自动下载RPM包并且安装，可以&#x3D;&#x3D;自动处理依赖性关系&#x3D;&#x3D;，并且&#x3D;&#x3D;一次安装所有依赖的软件包&#x3D;&#x3D;，无须繁琐地一次次下载、安装。</p><blockquote><p>rpm和yum区别？答：① yum底层也是基于rpm进行安装的（yum安装的软件，可以通过rpm -qa进行查询） ② yum相对于rpm最大的优势，可以解决依赖关系。</p><p>A &#x3D;&gt; B &#x3D;&gt; C</p></blockquote><h2 id="2、YUM源配置"><a href="#2、YUM源配置" class="headerlink" title="2、YUM源配置"></a>2、YUM源配置</h2><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326115612781.png" alt="image-20200326115612781"></p><p>YUM源配置文件所在路径 &#x3D;&gt; &#x2F;etc&#x2F;yum.repos.d文件夹</p><p>-rw-r–r–. 1 root root 1991 Mar 28  2017 CentOS-Base.repo            网络yum源配置文件<br>-rw-r–r–. 1 root root  647 Mar 28  2017 CentOS-Debuginfo.repo    内核相关的更新包<br>-rw-r–r–. 1 root root  289 Mar 28  2017 CentOS-fasttrack.repo       快速通道<br>-rw-r–r–. 1 root root  630 Mar 28  2017 CentOS-Media.repo           本地yum源配置文件<br>-rw-r–r–. 1 root root 7989 Mar 28  2017 CentOS-Vault.repo          最近版本加入老本的YUM配置   </p><p>扩展：在YUM镜像源中添加阿里云镜像源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">第一步：备份CentOS<span class="literal">-Base</span>.repo这个源（更改后缀名.repo =&gt; .repo.bak）</span><br><span class="line"><span class="comment"># mv CentOS-Base.repo CentOS-Base.repo.bak</span></span><br><span class="line"></span><br><span class="line">第二步：使用<span class="built_in">wget</span>命令下载阿里云的镜像文件</span><br><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line"></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-O</span> ：指定文件下载的位置以及名称</span><br><span class="line">第三步：清理YUM缓存</span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"></span><br><span class="line">第四步：重新建立缓存（让新YUM源生效）</span><br><span class="line"><span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><h2 id="3、yum命令详解"><a href="#3、yum命令详解" class="headerlink" title="3、yum命令详解"></a>3、yum命令详解</h2><h3 id="☆-搜索要安装的软件"><a href="#☆-搜索要安装的软件" class="headerlink" title="☆ 搜索要安装的软件"></a>☆ 搜索要安装的软件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum search 软件名称的关键词</span></span><br></pre></td></tr></table></figure><p>案例：搜索阿里云仓库中的vim软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum search vim</span></span><br></pre></td></tr></table></figure><p>案例：搜索firefox火狐浏览器</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum search firefox</span></span><br></pre></td></tr></table></figure><h3 id="☆-使用yum安装软件"><a href="#☆-使用yum安装软件" class="headerlink" title="☆ 使用yum安装软件"></a>☆ 使用yum安装软件</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install 软件名称关键词 [选项]</span></span><br><span class="line">选项：</span><br><span class="line"><span class="literal">-y</span> ：yes缩写，确认安装，不提示。</span><br></pre></td></tr></table></figure><p>案例：使用yum命令安装vim编辑器</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install vim -y</span></span><br></pre></td></tr></table></figure><p>案例：使用yum命令安装firefox浏览器</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install firefox -y</span></span><br></pre></td></tr></table></figure><h3 id="☆-使用yum卸载软件"><a href="#☆-使用yum卸载软件" class="headerlink" title="☆ 使用yum卸载软件"></a>☆ 使用yum卸载软件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove 软件名称关键词 [选项]</span></span><br><span class="line">选项：</span><br><span class="line"><span class="literal">-y</span> ：yes缩写，确认卸载，不提示。</span><br></pre></td></tr></table></figure><p>案例：把firefox火狐浏览器进行卸载操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove firefox -y</span></span><br></pre></td></tr></table></figure><p>案例：把httpd软件进行强制卸载</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove httpd -y</span></span><br></pre></td></tr></table></figure><h3 id="☆-使用yum更新软件"><a href="#☆-使用yum更新软件" class="headerlink" title="☆ 使用yum更新软件"></a>☆ 使用yum更新软件</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum update 软件名称关键词 [选项]</span></span><br><span class="line">选项：</span><br><span class="line"><span class="literal">-y</span> ：yes缩写，确认更新，不提示</span><br></pre></td></tr></table></figure><p>案例：把vim编辑器进行更新操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum update vim -y</span></span><br></pre></td></tr></table></figure><p>案例：把firefox火狐浏览器进行更新操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum update firefox -y</span></span><br></pre></td></tr></table></figure><h1 id="三、LAMP概述"><a href="#三、LAMP概述" class="headerlink" title="三、LAMP概述"></a>三、LAMP概述</h1><h2 id="1、什么是LAMP"><a href="#1、什么是LAMP" class="headerlink" title="1、什么是LAMP"></a>1、什么是LAMP</h2><p>LAMP：&#x3D;&#x3D;L&#x3D;&#x3D;inux + &#x3D;&#x3D;A&#x3D;&#x3D;pache + &#x3D;&#x3D;M&#x3D;&#x3D;ySQL + &#x3D;&#x3D;P&#x3D;&#x3D;HP                        LAMP 架构（组合）</p><p>LNMP：Linux + Nginx + MySQL + php-fpm                             LNMP 架构（组合）</p><p>LNMPA：Linux + Nginx(80) + MySQL + PHP + Apache           Nginx 代理方式</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326152052773.png" alt="image-20200326152052773"></p><p>Apache：Apache是世界使用排名第一的Web服务器软件。</p><p>PHP：一种专门用于Web开发的编程语言。</p><p>MySQL：MySQL是一个关系型数据库管理系统，主要用于永久存储项目数据。</p><h2 id="2、AMP三者之间的关系"><a href="#2、AMP三者之间的关系" class="headerlink" title="2、AMP三者之间的关系"></a>2、AMP三者之间的关系</h2><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326152231295.png" alt="image-20200326152231295"></p><p>Apache：用于接收用户的请求（输入网址，返回网页&#x3D;&gt;结果）</p><p>PHP：注册、登录、加入购物车、下单、支付等动态功能（有编程语言的支持）</p><p>MySQL：永久保存数据，比如你在网站上注册的用户和密码、你加入购物车的产品、你的产品订单</p><p>LAMP &#x3D; Linux + APache + PHP + MySQL</p><h1 id="四、阿里云详解"><a href="#四、阿里云详解" class="headerlink" title="四、阿里云详解"></a>四、阿里云详解</h1><p>要想部署一个互联网上可以访问到的环境，必须先具备以下内容 ：</p><p>服务器（IP、帐号密码、终端）、相应的软件、域名（备案、解析）、代码等。</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326154214921.png" alt="image-20200326154214921"></p><p>代码：前端工程师 + 后端工程师进行开发提供的！</p><h2 id="1、注册阿里云账号"><a href="#1、注册阿里云账号" class="headerlink" title="1、注册阿里云账号"></a>1、注册阿里云账号</h2><p>阿里云官网：<a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326154527903.png" alt="image-20200326154527903"></p><blockquote><p>特别说明：云服务器的厂商特别多，你可以进行任意选择 &#x3D;&gt; 阿里云、百度云、腾讯云、华为云…</p></blockquote><p>注册时建议使用支付宝，方便快捷。最重要：付款方便</p><h2 id="2、实名认证（上传身份证照片）"><a href="#2、实名认证（上传身份证照片）" class="headerlink" title="2、实名认证（上传身份证照片）"></a>2、实名认证（上传身份证照片）</h2><p>第一步：单击账号下方的实名认证（选择个人认证）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155133047.png" alt="image-20200326155133047"></p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155146301.png" alt="image-20200326155146301"></p><p>第二步：选择支付宝授权认证（及时开通，无需等待）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155223066.png" alt="image-20200326155223066"></p><p>第三步：勾选同意，点击提交</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155308208.png" alt="image-20200326155308208"></p><p>第四步：使用手机支付宝扫描二维码，进行授权</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155339781.png" alt="image-20200326155339781"></p><p>第五步：填写相关信息（住址）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155358292.png" alt="image-20200326155358292"></p><p>填写完毕，即可完成认证。</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155428202.png" alt="image-20200326155428202"></p><h2 id="3、购买阿里云的ECS云服务器"><a href="#3、购买阿里云的ECS云服务器" class="headerlink" title="3、购买阿里云的ECS云服务器"></a>3、购买阿里云的ECS云服务器</h2><p>第一步：回到阿里云首页，找到弹性计算 &#x3D;&gt; ECS云服务器</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326161759062.png" alt="image-20200326161759062"></p><p>第二步：单击立即购买，购买ECS服务器（选区域、选配置）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326161916781.png" alt="image-20200326161916781"></p><p>第三步：选择付费模式、选择CPU与内存的配置</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326162659403.png" alt="image-20200326162659403"></p><p>第四步：选择镜像（CentOS7.6）与云盘（硬盘）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326162845467.png" alt="image-20200326162845467"></p><p>第四步：设置网络、公网IP以及安全组（重要）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326163143681.png" alt="image-20200326163143681"></p><blockquote><p>用户 &#x3D;&gt;  阿里云安全组  &#x3D;&gt;  firewalld防火墙  &#x3D;&gt; Linux服务器</p></blockquote><p>第五步：设置root账号密码（一定要选择自定义密码）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326163533492.png" alt="image-20200326163533492"></p><blockquote><p>8 - 30 个字符，必须同时包含三项（大写字母、小写字母、数字、 ()&#96;~!@#$%^&amp;*_-+&#x3D;|{}[]:;’&lt;&gt;,.?&#x2F; 中的特殊符号），其中 Windows 实例不能以斜线号（&#x2F;）为首字符</p></blockquote><p>第六步：设置释放时间 &#x3D;&gt; 什么时候删除这台服务器（不收钱）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326163830484.png" alt="image-20200326163830484"></p><blockquote><p>特别说明：只有个人购买的ECS服务器可以设置释放时间，生产环境一定不要设置释放时间，否则后果自负！！！</p></blockquote><p>第七步：进入管理控制台，找到我们刚才购买的ECS服务器，如下图所示：</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326164148544.png" alt="image-20200326164148544"></p><blockquote><p>使用MX软件，直接连接公网IP + root账号 + 自定义的密码即可连接</p></blockquote><h2 id="4、使用MX连接ECS服务器"><a href="#4、使用MX连接ECS服务器" class="headerlink" title="4、使用MX连接ECS服务器"></a>4、使用MX连接ECS服务器</h2><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326164519379.png" alt="image-20200326164519379"></p><h2 id="5、使用yum安装sl小工具"><a href="#5、使用yum安装sl小工具" class="headerlink" title="5、使用yum安装sl小工具"></a>5、使用yum安装sl小工具</h2><p>安装过程：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install sl -y</span></span><br></pre></td></tr></table></figure><p>使用sl命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sl</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统自有服务</title>
      <link href="/posts/12096.html"/>
      <url>/posts/12096.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统自有服务"><a href="#Linux系统自有服务" class="headerlink" title="Linux系统自有服务"></a>Linux系统自有服务</h1><h1 id="一、Linux中防火墙firewalld"><a href="#一、Linux中防火墙firewalld" class="headerlink" title="一、Linux中防火墙firewalld"></a>一、Linux中防火墙firewalld</h1><h2 id="1、什么是防火墙"><a href="#1、什么是防火墙" class="headerlink" title="1、什么是防火墙"></a>1、什么是防火墙</h2><p>防火墙：防范一些网络攻击。有软件防火墙、硬件防火墙之分。</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323103515971.png" alt="image-20200323103515971"></p><p>防火墙选择让正常请求通过，从而保证网络安全性。</p><p>Windows防火墙：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323103649880.png" alt="image-20200323103649880"></p><p>Windows防火墙的划分与开启、关闭操作：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323103742027.png" alt="image-20200323103742027"></p><h2 id="2、防火墙的作用"><a href="#2、防火墙的作用" class="headerlink" title="2、防火墙的作用"></a>2、防火墙的作用</h2><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323104432522.png" alt="image-20200323104432522"></p><h2 id="3、Linux中的防火墙分类"><a href="#3、Linux中的防火墙分类" class="headerlink" title="3、Linux中的防火墙分类"></a>3、Linux中的防火墙分类</h2><p>CentOS5、CentOS6 &#x3D;&gt; 防火墙 &#x3D;&gt; iptables防火墙</p><p>CentOS7 &#x3D;&gt; 防火墙 &#x3D;&gt; firewalld防火墙</p><blockquote><p>firewalld &#x3D; fire火  wall墙  daemon守护进程</p></blockquote><h2 id="4、firewalld防火墙"><a href="#4、firewalld防火墙" class="headerlink" title="4、firewalld防火墙"></a>4、firewalld防火墙</h2><h3 id="☆-区域"><a href="#☆-区域" class="headerlink" title="☆ 区域"></a>☆ 区域</h3><p>firewalld增加了区域(zone)的概念，所谓区域是指，firewalld<strong>预先准备了几套防火墙策略的集合</strong>，类似于<strong>策略的模板</strong>，用户可以根据需求选择区域。</p><p>常见区域及相应策略规则(规则：哪些端口或服务可以通过防火墙，哪些不能通过)</p><table><thead><tr><th>区域</th><th>默认策略</th></tr></thead><tbody><tr><td>trusted</td><td>允许所有数据包</td></tr><tr><td>home</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,mdns,ippclient,amba-client,dhcpv6-client服务通过</td></tr><tr><td>internal</td><td>等同于home</td></tr><tr><td>work</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,ipp-client,dhcpv6-client服务通过</td></tr><tr><td>&#x3D;&#x3D;public&#x3D;&#x3D;</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,dhcpv6-client服务通过</td></tr><tr><td>external</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh服务通过</td></tr><tr><td>dmz</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh服务通过</td></tr><tr><td>block</td><td>拒绝流入的流量，除非与流出的流量相关，非法流量采取拒绝操作</td></tr><tr><td>drop</td><td>拒绝流入的流量，除非与流出的流量相关，非法流量采取丢弃操作</td></tr></tbody></table><p>案例：在Linux系统中安装httpd服务（Web服务），占用计算机的80端口</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install httpd -y</span></span><br><span class="line"><span class="comment"># systemctl start httpd</span></span><br></pre></td></tr></table></figure><p>安装启动完成后，在浏览器中，输入http:&#x2F;&#x2F;服务器的IP地址&#x2F;即可访问httpd服务页面</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323110040266.png" alt="image-20200323110040266"></p><blockquote><p>以上操作只能使用Google浏览器、360浏览器或者Firefox火狐浏览器，一定不要使用IE</p></blockquote><p>以上问题的原因在于：firewalld防火墙已经把httpd（80端口）屏蔽了，所以没有办法访问这台服务器的80端口（httpd服务）</p><p>临时解决办法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323110420640.png" alt="image-20200323110420640"></p><h3 id="☆-运行模式和永久模式"><a href="#☆-运行模式和永久模式" class="headerlink" title="☆ 运行模式和永久模式"></a>☆ 运行模式和永久模式</h3><p>运行模式：此模式下，配置的防火墙策略立即生效，但是不写入配置文件</p><p>永久模式：此模式下，配置的防火墙策略写入配置文件，但是需要reload重新加载才能生效。</p><p>&#x3D;&#x3D;firewalld默认采用运行模式&#x3D;&#x3D;</p><h2 id="5、防火墙设置"><a href="#5、防火墙设置" class="headerlink" title="5、防火墙设置"></a>5、防火墙设置</h2><h3 id="☆-防火墙的启动、停止以及查看运行状态"><a href="#☆-防火墙的启动、停止以及查看运行状态" class="headerlink" title="☆ 防火墙的启动、停止以及查看运行状态"></a>☆ 防火墙的启动、停止以及查看运行状态</h3><p>查看运行状态</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status firewalld</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323113130407.png" alt="image-20200323113130407"></p><p>停止防火墙（学习环境任意操作，生产环境一定不要停止防火墙）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br></pre></td></tr></table></figure><blockquote><p>记住：防火墙一旦停止，其设置的所有规则会全部失效！</p></blockquote><p>启动防火墙</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start firewalld</span></span><br></pre></td></tr></table></figure><h3 id="☆-防火墙重启与重载操作"><a href="#☆-防火墙重启与重载操作" class="headerlink" title="☆ 防火墙重启与重载操作"></a>☆ 防火墙重启与重载操作</h3><p>重启操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart firewalld</span></span><br></pre></td></tr></table></figure><blockquote><p>restart &#x3D; stop + start，重启首先停止服务，然后在重新启动服务</p></blockquote><p>重载操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl reload firewalld</span></span><br></pre></td></tr></table></figure><p>我们对防火墙的配置文件做了更改（永久模式），需要使用reload进行重载让其立即生效</p><blockquote><p>reload并没有停止正在运行的防火墙服务，只是在服务的基础上变换了防火墙规则</p></blockquote><h3 id="☆-把防火墙设置为开机启动与开机不启动"><a href="#☆-把防火墙设置为开机启动与开机不启动" class="headerlink" title="☆ 把防火墙设置为开机启动与开机不启动"></a>☆ 把防火墙设置为开机启动与开机不启动</h3><p>开机启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable firewalld</span></span><br></pre></td></tr></table></figure><p>开机不启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br></pre></td></tr></table></figure><h2 id="6、firewalld防火墙规则"><a href="#6、firewalld防火墙规则" class="headerlink" title="6、firewalld防火墙规则"></a>6、firewalld防火墙规则</h2><h3 id="☆-firewalld管理工具"><a href="#☆-firewalld管理工具" class="headerlink" title="☆ firewalld管理工具"></a>☆ firewalld管理工具</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd [选项1] [选项2] [...N]</span></span><br></pre></td></tr></table></figure><h3 id="☆-查看防火墙默认的区域（zone）"><a href="#☆-查看防火墙默认的区域（zone）" class="headerlink" title="☆ 查看防火墙默认的区域（zone）"></a>☆ 查看防火墙默认的区域（zone）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --get-default-zone</span></span><br></pre></td></tr></table></figure><p>运行效果：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323115400536.png" alt="image-20200323115400536"></p><h3 id="☆-查看所有支持的区域（zones）"><a href="#☆-查看所有支持的区域（zones）" class="headerlink" title="☆ 查看所有支持的区域（zones）"></a>☆ 查看所有支持的区域（zones）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --get-zones</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323115553881.png" alt="image-20200323115553881"></p><blockquote><p>为什么要有区域的概念：其实不同的区域就是不同的规则</p></blockquote><h3 id="☆-查看当前区域的规则设置"><a href="#☆-查看当前区域的规则设置" class="headerlink" title="☆ 查看当前区域的规则设置"></a>☆ 查看当前区域的规则设置</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --list-all</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323120055400.png" alt="image-20200323120055400"></p><h3 id="☆-查看所有区域的规则设置"><a href="#☆-查看所有区域的规则设置" class="headerlink" title="☆ 查看所有区域的规则设置"></a>☆ 查看所有区域的规则设置</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --list-all-zones</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323140809857.png" alt="image-20200323140809857"></p><h3 id="☆-添加允许通过的服务或端口（重点）"><a href="#☆-添加允许通过的服务或端口（重点）" class="headerlink" title="☆ 添加允许通过的服务或端口（重点）"></a>☆ 添加允许通过的服务或端口（重点）</h3><h4 id="①-通过服务的名称添加规则"><a href="#①-通过服务的名称添加规则" class="headerlink" title="① 通过服务的名称添加规则"></a>① 通过服务的名称添加规则</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --zone=public --add-service=服务的名称</span></span><br><span class="line">备注：服务必须存储在/usr/lib/firewalld/services目录中</span><br></pre></td></tr></table></figure><p>案例：把http服务添加到防火墙的规则中，允许通过防火墙</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --zone=public --add-service=http</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323142852553.png" alt="image-20200323142852553"></p><p>扩展：把http服务从防火墙规则中移除，不允许其通过防火墙</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --zone=public --remove-service=http</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-all</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323143838389.png" alt="image-20200323143838389"></p><h4 id="②-通过服务的端口号添加规则"><a href="#②-通过服务的端口号添加规则" class="headerlink" title="② 通过服务的端口号添加规则"></a>② 通过服务的端口号添加规则</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --zone=public --add-port=端口号/tcp</span></span><br></pre></td></tr></table></figure><p>案例：把80&#x2F;tcp添加到防火墙规则中，允许通过防火墙</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ss -naltp |grep httpd</span></span><br><span class="line">httpd :::<span class="number">80</span></span><br><span class="line"><span class="comment"># 允许80端口通过firewalld防火墙</span></span><br><span class="line"><span class="comment"># firewall-cmd --zone=public --add-port=80/tcp</span></span><br></pre></td></tr></table></figure><p>运行效果：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323145118290.png" alt="image-20200323145118290"></p><p>案例：从firewalld防火墙中把80端口的规则移除掉</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --zone=public --remove-port=80/tcp</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323152402733.png" alt="image-20200323152402733"></p><h3 id="☆-永久模式permanent"><a href="#☆-永久模式permanent" class="headerlink" title="☆ 永久模式permanent"></a>☆ 永久模式permanent</h3><p>在Linux的新版防火墙firewalld中，其模式一共分为两大类：运行模式（临时模式）+ 永久模式。</p><p>运行模式：不会把规则保存到防火墙的配置文件中，设置完成后立即生效</p><p>永久模式：会把规则写入到防火墙的配置文件中，但是其需要reload重载后才会立即生效</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据服务名称添加规则（永久）</span></span><br><span class="line"><span class="comment"># firewall-cmd --zone=public --add-service=服务名称 --permanent</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据端口号添加规则（永久）</span></span><br><span class="line"><span class="comment"># firewall-cmd --zone=public --add-port=服务占用的端口号 --permanent</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br></pre></td></tr></table></figure><p>案例：把80端口添加到firewalld防火墙规则中，要求永久生效</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --zone=public --add-port=80/tcp --permanent</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># firewall-cmd --list-all</span></span><br></pre></td></tr></table></figure><h1 id="二、Linux中的计划任务"><a href="#二、Linux中的计划任务" class="headerlink" title="二、Linux中的计划任务"></a>二、Linux中的计划任务</h1><h2 id="1、什么是计划任务"><a href="#1、什么是计划任务" class="headerlink" title="1、什么是计划任务"></a>1、什么是计划任务</h2><p>作用：操作系统不可能24 小时都有人在操作，有些时候想在指定的时间点去执行任务（例如：每天凌晨 2 点去重新启动httpd&#x3D;&gt;阿帕奇），此时不可能真有人每天夜里 2 点去执行命令，这就可以交给计划任务程序去执行操作了。</p><blockquote><p>在指定的时间执行指定的操作！</p></blockquote><h2 id="2、Windows中计划任务"><a href="#2、Windows中计划任务" class="headerlink" title="2、Windows中计划任务"></a>2、Windows中计划任务</h2><p>开始 &#x3D;&gt; 控制面板&#x3D;&gt; 管理工具</p><blockquote><p>Windows10 &#x3D;&gt; Windows键  +  X</p></blockquote><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323155756266.png" alt="image-20200323155756266"></p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323155841596.png" alt="image-20200323155841596"></p><p>案例：在Windows中创建一个计划任务</p><p>第一步：创建基本任务</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323155948453.png" alt="image-20200323155948453"></p><p>第二步：设置计划任务名称</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160038098.png" alt="image-20200323160038098"></p><p>第三步：创建任务触发器（什么时间触发这个任务）</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160124406.png" alt="image-20200323160124406"></p><p>第四步：设置具体的时间</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160210033.png" alt="image-20200323160210033"></p><p>第五步：可以做的工作</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160240174.png" alt="image-20200323160240174"></p><p>第六步：设置要启动的程序</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160326102.png" alt="image-20200323160326102"></p><h2 id="3、Linux中的计划任务"><a href="#3、Linux中的计划任务" class="headerlink" title="3、Linux中的计划任务"></a>3、Linux中的计划任务</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab [选项]</span></span><br><span class="line"><span class="literal">-l</span> ：list，显示目前已经设置的计划任务</span><br><span class="line"><span class="literal">-e</span> ：使用vim编辑器编辑计划任务的文件</span><br></pre></td></tr></table></figure><p>案例：显示当前账号下的计划任务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -l</span></span><br><span class="line">no crontab <span class="keyword">for</span> root =&gt; root账号下没有创建计划任务</span><br></pre></td></tr></table></figure><p>案例：编写计划任务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br></pre></td></tr></table></figure><h2 id="4、计划任务的编辑"><a href="#4、计划任务的编辑" class="headerlink" title="4、计划任务的编辑"></a>4、计划任务的编辑</h2><p>crontab -e进入计划任务编辑文件</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323162534378.png" alt="image-20200323162534378"></p><p>打开计划任务编辑文件后，可以在此文件中编写我们自定义的计划任务：</p><p>&#x3D;&#x3D;计划任务的规则语法格式，以行为单位，一行则为一个计划&#x3D;&#x3D;</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">分  时  日  月  周  要执行的命令（要求必须使用命令的完整路径，可以使用which查看）</span><br><span class="line"></span><br><span class="line">取值范围（常识）：</span><br><span class="line">分：<span class="number">0</span>~<span class="number">59</span></span><br><span class="line">时：<span class="number">0</span>~<span class="number">23</span></span><br><span class="line">日：<span class="number">1</span>~<span class="number">31</span></span><br><span class="line">月：<span class="number">1</span>~<span class="number">12</span></span><br><span class="line">周：<span class="number">0</span>~<span class="number">7</span>，<span class="number">0</span> 和 <span class="number">7</span> 表示星期天</span><br><span class="line"></span><br><span class="line">四个符号：</span><br><span class="line">*：表示取值范围中的每一个数字</span><br><span class="line">-：做连续区间表达式的，要想表示<span class="number">1</span>~<span class="number">7</span>，则可以写成：<span class="number">1</span><span class="literal">-7</span></span><br><span class="line">/：表示每多少个，例如：想每 <span class="number">10</span> 分钟一次，则可以在分的位置写：*/<span class="number">10</span></span><br><span class="line">,：表示多个取值，比如想在 <span class="number">1</span> 点，<span class="number">2</span> 点 <span class="number">6</span> 点执行，则可以在时的位置写：<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323163957324.png" alt="image-20200323163957324"></p><h2 id="5、几个小案例"><a href="#5、几个小案例" class="headerlink" title="5、几个小案例"></a>5、几个小案例</h2><p>问题1：每月1、10、22 日的4:45 重启network 服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一步：定制格式</span><br><span class="line">分  时  日      月   周 /usr/bin/systemctl restart network</span><br><span class="line">第二步：定制时间</span><br><span class="line"><span class="number">45</span>  <span class="number">4</span>  <span class="number">1</span>,<span class="number">10</span>,<span class="number">22</span>  *   *  /usr/bin/systemctl restart network</span><br></pre></td></tr></table></figure><p>问题2：每周六、周日的1:10 重启network 服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一步：定制格式</span><br><span class="line">分 时 日 月 周 /usr/bin/systemctl restart network</span><br><span class="line">第二步：定制时间</span><br><span class="line"><span class="number">10</span> <span class="number">1</span>  * *  <span class="number">6</span>,<span class="number">7</span> /usr/bin/systemctl restart network</span><br></pre></td></tr></table></figure><p>问题3：每天18:00 至23:00 之间每隔30 分钟重启network 服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一步：定制格式</span><br><span class="line">分 时 日 月 周 /usr/bin/systemctl restart network</span><br><span class="line">第二步：定制时间</span><br><span class="line">*/<span class="number">30</span> <span class="number">18</span><span class="literal">-23</span> * * * /usr/bin/systemctl restart network</span><br></pre></td></tr></table></figure><p>问题4：每隔两天的上午8 点到11 点的第3 和第15 分钟执行一次重启</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一步：定制格式</span><br><span class="line">分 时 日 月 周 /usr/sbin/reboot</span><br><span class="line">第二步：定制时间</span><br><span class="line"><span class="number">3</span>,<span class="number">15</span>  <span class="number">8</span><span class="literal">-11</span> */<span class="number">2</span> * * /usr/sbin/reboot</span><br></pre></td></tr></table></figure><p>案例：每1 分钟往 root 家目录中的 readme.txt 中输一个1，为了看到效果使用追加输出【输出使用echo 命令，语法：# echo 输出的内容】</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br><span class="line">* * * * * /usr/bin/<span class="built_in">echo</span> <span class="number">1</span> &gt;&gt; /root/readme.txt</span><br></pre></td></tr></table></figure><p>提示：为了看到计划任务的效果，你可以单独开一个选项卡，使用tail  -f  &#x2F;root&#x2F;readme.txt</p><h2 id="6、计划任务"><a href="#6、计划任务" class="headerlink" title="6、计划任务"></a>6、计划任务</h2><p>常见的一个操作：定时备份（定时把数据库中的数据导出到某个文件中）</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux自有服务与软件包管理</title>
      <link href="/posts/4320.html"/>
      <url>/posts/4320.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux自有服务与软件包管理"><a href="#Linux自有服务与软件包管理" class="headerlink" title="Linux自有服务与软件包管理"></a>Linux自有服务与软件包管理</h1><p>服务是一些特定的进程，自有服务就是系统开机后就自动运行的一些进程，一旦客户发出请求，这些进程就自动为他们提供服务，windows系统中，把这些自动运行的进程，称为”服务”</p><p>举例：当我们使用SSH客户端软件连接linux的时候，我们的服务器为什么会对连接做出响应？是因为SSH服务开机就自动运行了。</p><p>所谓自有服务，简单来说，可以理解为Linux系统开机自动运行的服务（程序）。</p><h1 id="一、systemctl管理系统服务"><a href="#一、systemctl管理系统服务" class="headerlink" title="一、systemctl管理系统服务"></a>一、systemctl管理系统服务</h1><h2 id="1、systemctl概述"><a href="#1、systemctl概述" class="headerlink" title="1、systemctl概述"></a>1、systemctl概述</h2><p>CentOS6版本：</p><p>service命令（管理服务开启、停止以及重启）+ chkconfig（定义开机启动项）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service network start|stop|restart</span></span><br></pre></td></tr></table></figure><p>CentOS7版本：</p><p>systemctl命令 &#x3D; system系统 + control控制（服务管理+开启启动项管理）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start|stop|restart network</span></span><br></pre></td></tr></table></figure><h2 id="2、显示系统服务"><a href="#2、显示系统服务" class="headerlink" title="2、显示系统服务"></a>2、显示系统服务</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl [选项]</span></span><br><span class="line">选项说明：</span><br><span class="line">list<span class="literal">-units</span> <span class="literal">--type</span> service <span class="literal">--all</span>：列出所有服务（包含启动的和没启动的）</span><br><span class="line">list<span class="literal">-units</span> <span class="literal">--type</span> service：列出所有启动的服务</span><br></pre></td></tr></table></figure><p>案例：列出Linux系统中所有的服务（包含启动的和没启动的）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl list-units --type service --all</span></span><br></pre></td></tr></table></figure><p>案例：只列出已经启动的Linux系统服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl list-units --type service</span></span><br></pre></td></tr></table></figure><p>案例：把systemctl显示系统服务与管道命令相结合，筛选我们想要的服务信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl list-units --type service | grep sshd</span></span><br></pre></td></tr></table></figure><h2 id="3、Linux系统服务管理"><a href="#3、Linux系统服务管理" class="headerlink" title="3、Linux系统服务管理"></a>3、Linux系统服务管理</h2><h3 id="☆-status查看状态"><a href="#☆-status查看状态" class="headerlink" title="☆ status查看状态"></a>☆ status查看状态</h3><p>查看系统服务的状态</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status 系统服务的名称</span></span><br></pre></td></tr></table></figure><p>案例：查询系统中网络服务的状态信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status network</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321101758022.png" alt="image-20200321101758022"></p><p>案例：查询系统中sshd服务的状态信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status sshd</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321102106850.png" alt="image-20200321102106850"></p><h3 id="☆-stop停止服务"><a href="#☆-stop停止服务" class="headerlink" title="☆ stop停止服务"></a>☆ stop停止服务</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop 系统服务的名称</span></span><br></pre></td></tr></table></figure><p>案例：使用systemctl命令停止network网络服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop network</span></span><br></pre></td></tr></table></figure><h3 id="☆-start启动服务"><a href="#☆-start启动服务" class="headerlink" title="☆ start启动服务"></a>☆ start启动服务</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start 系统服务的名称</span></span><br></pre></td></tr></table></figure><p>案例：使用systemctl命令启动network网络服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start network</span></span><br></pre></td></tr></table></figure><h3 id="☆-restart重启服务"><a href="#☆-restart重启服务" class="headerlink" title="☆ restart重启服务"></a>☆ restart重启服务</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart 系统服务的名称</span></span><br><span class="line">等价于</span><br><span class="line"><span class="comment"># systemctl stop 系统服务的名称</span></span><br><span class="line"><span class="comment"># systemctl start 系统服务的名称</span></span><br></pre></td></tr></table></figure><p>案例：使用systemctl命令重启crond计划任务的服务信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart crond</span></span><br></pre></td></tr></table></figure><h3 id="☆-reload热重载技术"><a href="#☆-reload热重载技术" class="headerlink" title="☆ reload热重载技术"></a>☆ reload热重载技术</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl reload 系统服务名称</span></span><br></pre></td></tr></table></figure><p>reload：重新加载指定服务的配置文件（并非所有服务都支持reload，通常使用restart)</p><blockquote><p>有些服务，如Nginx，更改了配置文件，但是不能重启Nginx服务，只是想立即让我们配置文件的更改生效，则就可以使用热重载技术了。</p></blockquote><p>案例：使用热重载技术重新加载crond服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl reload crond</span></span><br></pre></td></tr></table></figure><h2 id="4、服务持久化（开机自启与开机不自启）"><a href="#4、服务持久化（开机自启与开机不自启）" class="headerlink" title="4、服务持久化（开机自启与开机不自启）"></a>4、服务持久化（开机自启与开机不自启）</h2><p> 所谓服务持久化，就是服务在开机的时候，是否自动启动。</p><h3 id="☆-开机自启"><a href="#☆-开机自启" class="headerlink" title="☆ 开机自启"></a>☆ 开机自启</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable 系统服务的名称</span></span><br></pre></td></tr></table></figure><p>案例：把network网络服务设置为开机自启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable network</span></span><br><span class="line">network.service is not a native service, redirecting to /sbin/chkconfig.</span><br><span class="line">Executing /sbin/chkconfig network on</span><br><span class="line"></span><br><span class="line">以上提示代表network.service不是一个本地的系统服务，所以想设置开机自启需要使用/sbin/chkconfig进行操作</span><br><span class="line"><span class="comment"># /sbin/chkconfig network on</span></span><br></pre></td></tr></table></figure><p>案例：把crond计划任务的服务信息添加到开机自启动中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable crond</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321105158884.png" alt="image-20200321105158884"></p><h3 id="☆-开机不自启"><a href="#☆-开机不自启" class="headerlink" title="☆ 开机不自启"></a>☆ 开机不自启</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl disable 系统服务的名称</span></span><br></pre></td></tr></table></figure><p>案例：把crond计划任务的服务信息从开机自启动中移除</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl disable crond</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321105106368.png" alt="image-20200321105106368"></p><h1 id="二、扩展：系统运行级别"><a href="#二、扩展：系统运行级别" class="headerlink" title="二、扩展：系统运行级别"></a>二、扩展：系统运行级别</h1><h2 id="1、什么是运行级别"><a href="#1、什么是运行级别" class="headerlink" title="1、什么是运行级别"></a>1、什么是运行级别</h2><p>运行级别全称（Running Level），代表Linux系统的不同运行模式</p><h2 id="2、CentOS6的运行级别"><a href="#2、CentOS6的运行级别" class="headerlink" title="2、CentOS6的运行级别"></a>2、CentOS6的运行级别</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/inittab</span></span><br><span class="line"><span class="number">0</span>   系统关机状态   halt (<span class="keyword">Do</span> NOT <span class="built_in">set</span> initdefault to this)</span><br><span class="line"><span class="number">1</span>   单用户工作状态   Single user mode (类似Windows的安全模式，Linux忘记密码)</span><br><span class="line"><span class="number">2</span>   多用户状态（没有NFS） Multiuser, without NFS (The same as <span class="number">3</span>, <span class="keyword">if</span> you <span class="keyword">do</span> not have networking)</span><br><span class="line"><span class="number">3</span>   多用户状态（有NFS）   Full multiuser mode (字符模式,服务基本都是此模式)</span><br><span class="line"><span class="number">4</span>   系统未使用，留给用户   unused</span><br><span class="line"><span class="number">5</span>   图形界面    X11 (图形模式，个人计算机都是此模式)</span><br><span class="line"><span class="number">6</span>   系统正常关闭并重新启动   reboot (<span class="keyword">Do</span> NOT <span class="built_in">set</span> initdefault to this)</span><br></pre></td></tr></table></figure><h2 id="3、CentOS7的运行级别"><a href="#3、CentOS7的运行级别" class="headerlink" title="3、CentOS7的运行级别"></a>3、CentOS7的运行级别</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0   shutdown.target</span><br><span class="line">1   emergency.target</span><br><span class="line">2   rescure.target</span><br><span class="line">3   multi-user.target   字符模式</span><br><span class="line">4   无</span><br><span class="line">5   graphical.target    图形模式</span><br><span class="line">6   无</span><br></pre></td></tr></table></figure><h2 id="4、init命令（临时更改运行模式）"><a href="#4、init命令（临时更改运行模式）" class="headerlink" title="4、init命令（临时更改运行模式）"></a>4、init命令（临时更改运行模式）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># init 模式编号</span></span><br></pre></td></tr></table></figure><p>案例：立即关机</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shutdown -h 0或now</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># halt -p</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># init 0</span></span><br></pre></td></tr></table></figure><p>案例：立即重启</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># reboot</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># init 6</span></span><br></pre></td></tr></table></figure><p>案例：把计算机切换到字符模式（黑窗口）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># init 3</span></span><br></pre></td></tr></table></figure><p>案例：把计算机切换到图形模式（图形界面）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># init 5</span></span><br></pre></td></tr></table></figure><h2 id="5、CentOS6中的chkconfig"><a href="#5、CentOS6中的chkconfig" class="headerlink" title="5、CentOS6中的chkconfig"></a>5、CentOS6中的chkconfig</h2><p>问题：在CentOS7中，设置network开机启动时，系统要求使用chkconfig命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chkconfig network on</span></span><br></pre></td></tr></table></figure><p>设置完成后，怎么查看network有没有随开机自动启动呢？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chkconfig --list |grep network </span></span><br><span class="line">network        <span class="number">0</span>:off<span class="number">1</span>:off<span class="number">2</span>:on<span class="number">3</span>:on<span class="number">4</span>:on<span class="number">5</span>:on<span class="number">6</span>:off</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> 关机模式</span><br><span class="line"><span class="number">1</span> 单用户模式</span><br><span class="line"><span class="number">2</span> 多用户模式（无NFS）</span><br><span class="line"><span class="number">3</span> 字符模式</span><br><span class="line"><span class="number">4</span> 自定义模式</span><br><span class="line"><span class="number">5</span> 图形模式</span><br><span class="line"><span class="number">6</span> 重启模式</span><br></pre></td></tr></table></figure><h1 id="三、NTP时间同步服务"><a href="#三、NTP时间同步服务" class="headerlink" title="三、NTP时间同步服务"></a>三、NTP时间同步服务</h1><h2 id="1、什么是NTP服务"><a href="#1、什么是NTP服务" class="headerlink" title="1、什么是NTP服务"></a>1、什么是NTP服务</h2><p> NTP是网络时间协议(Network Time Protocol)，它是用来同步网络中各个计算机的时间的协议。</p><p> 工作场景：</p><p>​        公司开发了一个电商网站，由于访问量很大，网站后端由100台服务器组成集群。50台负责接收订单，50台负责安排发货，接收订单的服务器需要记录用户下订单的具体时间，把数据传给负责发货的服务器，由于100台服务器时间各不相同，记录的时间经常不一致，甚至会出现下单时间是明天，发货时间是昨天的情况。</p><h2 id="2、NTP时间同步的原理"><a href="#2、NTP时间同步的原理" class="headerlink" title="2、NTP时间同步的原理"></a>2、NTP时间同步的原理</h2><p>问题：标准时间是哪里来的？</p><p>​        现在的标准时间是由原子钟报时的国际标准时间UTC（Universal Time Coordinated，世界协调时)，所以NTP获得UTC的时间来源可以是原子钟、天文台、卫星，也可以从Internet上获取。</p><p>在NTP中，定义了时间按照服务器的等级传播，<strong>Stratum层的总数限制在15以内</strong></p><p>工作中，&#x3D;&#x3D;通常我们会直接使用各个组织提供的，现成的NTP服务器&#x3D;&#x3D;</p><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321114613074.png" alt="image-20200321114613074"></p><blockquote><p>备注：千万不要改Windows系统时间！</p></blockquote><h2 id="3、从哪里找合适的NTP服务器呢？"><a href="#3、从哪里找合适的NTP服务器呢？" class="headerlink" title="3、从哪里找合适的NTP服务器呢？"></a>3、从哪里找合适的NTP服务器呢？</h2><p>NTP授时网站：<a href="http://www.ntp.org.cn/pool.php">http://www.ntp.org.cn/pool.php</a></p><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321115655939.png" alt="image-20200321115655939"></p><h2 id="4、NTP时间同步操作"><a href="#4、NTP时间同步操作" class="headerlink" title="4、NTP时间同步操作"></a>4、NTP时间同步操作</h2><h3 id="☆-手工同步"><a href="#☆-手工同步" class="headerlink" title="☆ 手工同步"></a>☆ 手工同步</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate NTP服务器的IP地址或域名</span></span><br></pre></td></tr></table></figure><p>案例：查看Linux系统时间</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date</span></span><br></pre></td></tr></table></figure><p>案例：从NTP服务器中同步系统时间</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate cn.ntp.org.cn</span></span><br></pre></td></tr></table></figure><h3 id="☆-自动同步"><a href="#☆-自动同步" class="headerlink" title="☆ 自动同步"></a>☆ 自动同步</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">① 启动ntpd服务</span><br><span class="line"><span class="comment"># systemctl start ntpd</span></span><br><span class="line">② 把ntpd服务追加到系统开机启动项中</span><br><span class="line"><span class="comment"># systemctl enable ntpd</span></span><br></pre></td></tr></table></figure><p>问题1：启动ntpd服务后，是不是时间就自动同步了？</p><p>启动后就自动同步了</p><p>问题2：需不需要让ntpd服务，开机自动运行？</p><p>需要</p><p>ntpd服务配置文件位置  &#x2F;etc&#x2F;ntp.conf</p><h1 id="四、Linux下的软件包管理"><a href="#四、Linux下的软件包管理" class="headerlink" title="四、Linux下的软件包管理"></a>四、Linux下的软件包管理</h1><h2 id="1、什么是软件包"><a href="#1、什么是软件包" class="headerlink" title="1、什么是软件包"></a>1、什么是软件包</h2><p>这是什么？</p><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321143411461.png" alt="image-20200321143411461"></p><p>由以上图解可知，这个PCQQ2019.exe是Windows中的软件安装包。</p><blockquote><p>所谓的Linux软件包就是Linux下软件的安装程序</p></blockquote><h2 id="2、Linux下软件的安装方式"><a href="#2、Linux下软件的安装方式" class="headerlink" title="2、Linux下软件的安装方式"></a>2、Linux下软件的安装方式</h2><p>① RPM软件包安装   &#x3D;&gt;   软件名称.rpm</p><p>② YUM包管理工具   &#x3D;&gt;   yum  install  软件名称  -y</p><p>③ 源码安装 &#x3D;&gt; 下载软件的源代码 &#x3D;&gt; 编译 &#x3D;&gt; 安装（最麻烦的，但是也最稳定）</p><h2 id="3、二进制软件包"><a href="#3、二进制软件包" class="headerlink" title="3、二进制软件包"></a>3、二进制软件包</h2><p>​        二进制包，也就是源码包经过成功编译之后产生的包。</p><p>​        二进制包是 Linux 下默认的软件安装包，目前主要有以下 2 大主流的二进制包管理系统：</p><ul><li>&#x3D;&#x3D;RPM 包&#x3D;&#x3D;管理系统：功能强大，安装、升级、査询和卸载非常简单方便，因此很多 Linux 发行版都默认使用此机制作为软件安装的管理方式，例如 Fedora、&#x3D;&#x3D;CentOS&#x3D;&#x3D;、SuSE 等。</li><li>DPKG 包管理系统：由 Debian Linux 所开发的包管理机制，通过 DPKG 包，Debian Linux 就可以进行软件包管理，主要应用在 Debian 和 Ubuntu 中。</li></ul><p>​        <strong>RPM</strong>是RedHat Package Manager（RedHat软件包管理工具）的缩写</p><p>​        作用：rpm 的作用类似于豌豆荚，华为应用市场，App Store，主要作用是对linux 服务器上的软件包进行对应管理操作，管理分为：查询、卸载、安装&#x2F;更新。</p><h2 id="4、获取-rpm软件包"><a href="#4、获取-rpm软件包" class="headerlink" title="4、获取*.rpm软件包"></a>4、获取*.rpm软件包</h2><p>a. 去官网去下载（<a href="http://rpm.pbone.net);/">http://rpm.pbone.net）；</a></p><p>b. 不介意老版本的话，可以从光盘（或者镜像文件）中读取；CentOS7.6*.iso</p><h2 id="5、查询系统中已安装的rpm软件"><a href="#5、查询系统中已安装的rpm软件" class="headerlink" title="5、查询系统中已安装的rpm软件"></a>5、查询系统中已安装的rpm软件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa |grep 要搜索的软件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-q</span> ：query，查询操作</span><br><span class="line"><span class="literal">-a</span> ：all，代表所有</span><br></pre></td></tr></table></figure><p>案例1：查询计算机中已安装的rpm软件包</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa</span></span><br></pre></td></tr></table></figure><p>案例2：搜索计算机中已安装的firefox软件包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa |grep firefox</span></span><br></pre></td></tr></table></figure><h2 id="6、卸载CentOS系统中的rpm软件包"><a href="#6、卸载CentOS系统中的rpm软件包" class="headerlink" title="6、卸载CentOS系统中的rpm软件包"></a>6、卸载CentOS系统中的rpm软件包</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -e 软件名称 [选项]</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">--nodeps</span> ：强制卸载</span><br></pre></td></tr></table></figure><p>案例：把系统中的firefox浏览器进行卸载操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa |grep firefox</span></span><br><span class="line">firefox<span class="literal">-60</span>.<span class="number">2.2</span><span class="literal">-1</span>.el7.centos.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -e firefox-60.2.2-1.el7.centos.x86_64</span></span><br></pre></td></tr></table></figure><h2 id="7、rpm软件包的安装"><a href="#7、rpm软件包的安装" class="headerlink" title="7、rpm软件包的安装"></a>7、rpm软件包的安装</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh 软件包的名称.rpm</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-i</span>：install，安装</span><br><span class="line"><span class="literal">-v</span>：显示进度条</span><br><span class="line"><span class="literal">-h</span>：表示以<span class="string">&quot;#&quot;</span>形式显示进度条</span><br></pre></td></tr></table></figure><h2 id="8、rpm软件包的获取（光盘）"><a href="#8、rpm软件包的获取（光盘）" class="headerlink" title="8、rpm软件包的获取（光盘）"></a>8、rpm软件包的获取（光盘）</h2><p>第一步：在VMware虚拟机中加载CentOS7.6的安装光盘</p><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321152142795.png" alt="image-20200321152142795"></p><p>第二步：使用 # lsblk（list block devices）或者df -T 查看块状设备的信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lsblk</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">yunwei</span> ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN <span class="built_in">RM</span>  SIZE RO <span class="built_in">TYPE</span> MOUNTPOINT</span><br><span class="line">sda               <span class="number">8</span>:<span class="number">0</span>    <span class="number">0</span>   <span class="number">20</span>G  <span class="number">0</span> disk</span><br><span class="line">├─sda1            <span class="number">8</span>:<span class="number">1</span>    <span class="number">0</span>    <span class="number">1</span>G  <span class="number">0</span> part /boot</span><br><span class="line">└─sda2            <span class="number">8</span>:<span class="number">2</span>    <span class="number">0</span>   <span class="number">19</span>G  <span class="number">0</span> part</span><br><span class="line">  ├─centos<span class="literal">-root</span> <span class="number">253</span>:<span class="number">0</span>    <span class="number">0</span>   <span class="number">17</span>G  <span class="number">0</span> lvm  /</span><br><span class="line">  └─centos<span class="literal">-swap</span> <span class="number">253</span>:<span class="number">1</span>    <span class="number">0</span>    <span class="number">2</span>G  <span class="number">0</span> lvm  [<span class="type">SWAP</span>]</span><br><span class="line">sr0              <span class="number">11</span>:<span class="number">0</span>    <span class="number">1</span>  <span class="number">4.3</span>G  <span class="number">0</span> rom  /run/media/itheima/CentOS <span class="number">7</span> x86_64</span><br><span class="line">由以上图解可知，/dev/sr0代表光驱设备 =&gt; 挂载点 =&gt; /run/media/itheima/CentOS <span class="number">7</span> x86_64文件夹</span><br><span class="line">或</span><br><span class="line"><span class="comment"># df -T</span></span><br></pre></td></tr></table></figure><blockquote><p>Linux操作系统的中所有存储设备必须先挂载后使用</p></blockquote><p>第三步：使用cd命令，切换到挂载目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /run/media/itheima/CentOS\ 7\ x86_64</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321152744329.png" alt="image-20200321152744329"></p><p>第四步：使用cd命令，切换到Packages软件包中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd Packages</span></span><br></pre></td></tr></table></figure><p>第五步：查询我们要安装的软件包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls |grep firefox</span></span><br><span class="line">firefox<span class="literal">-60</span>.<span class="number">2.2</span><span class="literal">-1</span>.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><p>第六步：使用rpm -ivh命令安装软件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh firefox-60.2.2-1.el7.centos.x86_64.rpm</span></span><br></pre></td></tr></table></figure><blockquote><p>输入firefox + Tab，让其自动补全</p></blockquote><h2 id="9、rpm软件包的升级"><a href="#9、rpm软件包的升级" class="headerlink" title="9、rpm软件包的升级"></a>9、rpm软件包的升级</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh 升级后的软件包名称.rpm</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-U</span> ：Update，更新操作</span><br></pre></td></tr></table></figure><p>案例：使用rpm -Uvh对firefox-60.2.2版本进行升级</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh firefox-68.4.1-1.el7.centos.x86_64.rpm</span></span><br></pre></td></tr></table></figure><h2 id="10、rpm扩展"><a href="#10、rpm扩展" class="headerlink" title="10、rpm扩展"></a>10、rpm扩展</h2><h3 id="☆-依赖关系"><a href="#☆-依赖关系" class="headerlink" title="☆ 依赖关系"></a>☆ 依赖关系</h3><p>一个软件必须先有其他软件才能运行，例如之前xmind启动过程中提示的缺少DLL，称之为依赖</p><p>WAMP（Windows + Apache + MySQL + PHP）安装前必须先安装VC++ 2014 x86_64，这种情况就称之为有依赖关系。</p><p>60.8.0的firefox可以更新成功</p><p>下面我们尝试更新到68.4.1的版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法：rpm <span class="literal">-Uvh</span> 软件包名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -Uvh firefox-68.4.1-1.el7.centos.x86_64.rpm</span></span><br><span class="line">使用rpm命令，安装<span class="number">68.4</span>.<span class="number">1</span>版本的软件包</span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321155724824.png" alt="image-20200321155724824"></p><p>错误提示：</p><p>error：Failed dependencies:</p><p>提示安装68版本的firefox需要依赖nspr4.21的版本，nss的3.44的版本，这就是我们说的&#x3D;&#x3D;依赖关系&#x3D;&#x3D;。</p><p>为了解决依赖关系的问题，有另外一个管理工具叫做&#x3D;&#x3D;yum&#x3D;&#x3D;，后面我们会讲到。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A软件</span><br><span class="line">A软件 =&gt; 需要依赖B软件</span><br><span class="line">B软件 =&gt; 需要依赖C软件</span><br><span class="line">C软件</span><br></pre></td></tr></table></figure><p>依赖关系的解决：使用YUM软件包管理工具对其进行安装（自动解决依赖关系）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install firefox -y</span></span><br></pre></td></tr></table></figure><h3 id="☆-查看文件所属的包名"><a href="#☆-查看文件所属的包名" class="headerlink" title="☆ 查看文件所属的包名"></a>☆ 查看文件所属的包名</h3><p>基本语法：f &#x3D; file</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qf 文件名称</span></span><br></pre></td></tr></table></figure><p>主要功能：判断某个文件所属的包名称</p><p>案例：查询&#x2F;etc&#x2F;ntp.conf 属于哪个软件包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qf /etc/ntp.conf</span></span><br><span class="line">ntp<span class="literal">-4</span>.<span class="number">2.6</span>p5<span class="literal">-28</span>.el7.centos.x86_64</span><br></pre></td></tr></table></figure><h3 id="☆-查询软件安装完成后，生成了哪些文件"><a href="#☆-查询软件安装完成后，生成了哪些文件" class="headerlink" title="☆ 查询软件安装完成后，生成了哪些文件"></a>☆ 查询软件安装完成后，生成了哪些文件</h3><p>基本语法：l &#x3D; list，显示这个软件安装后生成了哪些文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ql 软件名称</span></span><br></pre></td></tr></table></figure><p>案例1：查询firefox软件生成了哪些文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ql firefox</span></span><br><span class="line"></span><br><span class="line">特别说明：软件安装完成后，一共生成了以下几类文件</span><br><span class="line">配置文件类：/etc目录</span><br><span class="line">程序文件本身，二进制文件命令：/usr/bin或/usr/sbin目录</span><br><span class="line">文档手册：/usr/share/doc或<span class="built_in">man</span>目录</span><br></pre></td></tr></table></figure><p>案例2：查询openssh软件生成了哪些文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ql openssh</span></span><br></pre></td></tr></table></figure><h2 id="11、光盘的挂载与解挂"><a href="#11、光盘的挂载与解挂" class="headerlink" title="11、光盘的挂载与解挂"></a>11、光盘的挂载与解挂</h2><p>在Linux操作系统中，所有的存储设备都必须先挂载然后才能使用。</p><p>问题：为什么当我们直接访问&#x2F;run&#x2F;media&#x2F;itheima&#x2F;CentOS 7 x86_64就相当于访问光盘</p><p>答：主要原因就是因为CentOS7的操作系统自动把光驱设备挂载到此目录了，访问这个目录就相当于访问光盘。</p><h3 id="☆-解挂"><a href="#☆-解挂" class="headerlink" title="☆ 解挂"></a>☆ 解挂</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"><span class="comment"># umount /run/media/itheima/CentOS\ 7\ x86_64</span></span><br></pre></td></tr></table></figure><p>常见问题：当我们执行以上命令时，系统提示target  is busy！</p><p>出现以上问题的主要原因在于我们当前所在的目录为挂载目录。</p><h3 id="☆-挂载"><a href="#☆-挂载" class="headerlink" title="☆ 挂载"></a>☆ 挂载</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount 设备文件 挂载目录</span></span><br></pre></td></tr></table></figure><blockquote><p>提示：光驱的设备文件为&#x2F;dev&#x2F;sr0</p></blockquote><p>案例：把光驱挂载到&#x2F;mnt&#x2F;cdrom目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /mnt/cdrom</span></span><br><span class="line"><span class="comment"># mount /dev/sr0 /mnt/cdrom</span></span><br><span class="line"><span class="built_in">mount</span>: /dev/sr0 is <span class="built_in">write-protected</span>, mounting <span class="built_in">read-only</span></span><br></pre></td></tr></table></figure><p>案例：把&#x2F;mnt&#x2F;cdrom进行解挂操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"><span class="comment"># umount /mnt/cdrom</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux计划任务以及进程检测与控制</title>
      <link href="/posts/28267.html"/>
      <url>/posts/28267.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux计划任务以及进程检测与控制"><a href="#Linux计划任务以及进程检测与控制" class="headerlink" title="Linux计划任务以及进程检测与控制"></a>Linux计划任务以及进程检测与控制</h1><h1 id="一、Linux计划任务"><a href="#一、Linux计划任务" class="headerlink" title="一、Linux计划任务"></a>一、Linux计划任务</h1><h2 id="1、计划任务权限"><a href="#1、计划任务权限" class="headerlink" title="1、计划任务权限"></a>1、计划任务权限</h2><h3 id="☆-黑名单"><a href="#☆-黑名单" class="headerlink" title="☆ 黑名单"></a>☆ 黑名单</h3><p>crontab是任何用户都可以创建的计划任务，但是超级管理员可以通过配置来设置某些用户不允许设置计划任务 。</p><p>提出问题：如果我们想限定某个用户（如itheima）使用计划任务，如何处理呢？</p><p>答：可以使用计划任务的黑名单，黑名单文件路径 &#x3D;&gt; &#x3D;&#x3D;&#x2F;etc&#x2F;cron.deny&#x3D;&#x3D;文件</p><p>案例：把普通账号itheima加入到cron.deny黑名单中，禁止其创建计划任务</p><p>第一步：切换到超级管理员root</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - root</span></span><br></pre></td></tr></table></figure><p>第二步：使用vim打开&#x2F;etc&#x2F;cron.deny文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/cron.deny</span></span><br></pre></td></tr></table></figure><p>第三步：把你需要禁止的用户名单，加入此文件（如itheima）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itheima</span><br></pre></td></tr></table></figure><p>切换到itheima账号，测试是否可以使用crontab命令</p><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324095412933.png" alt="image-20200324095412933"></p><h3 id="☆-白名单"><a href="#☆-白名单" class="headerlink" title="☆ 白名单"></a>☆ 白名单</h3><p>在Linux的计划任务中，除了拥有黑名单以外，还有白名单。作用：允许哪些用户使用计划任务。</p><p>白名单文件的路径 &#x3D;&gt; &#x3D;&#x3D;&#x2F;etc&#x2F;cron.allow&#x3D;&#x3D;，但是要特别注意，此文件需要手工创建。</p><blockquote><p>注意：白名单优先级高于黑名单，如果一个用户同时存在两个名单文件中，则会被默认允许创建计划任务。</p></blockquote><h2 id="2、查看计划任务的保存文件"><a href="#2、查看计划任务的保存文件" class="headerlink" title="2、查看计划任务的保存文件"></a>2、查看计划任务的保存文件</h2><p>问题：计划任务文件具体保存在哪里呢？</p><p>答：<code>/var/spool/cron/用户名称</code>，如果使用root用户编辑计划任务，则用户文件名为root</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ll /var/spool/cron</span></span><br><span class="line">total <span class="number">4</span></span><br><span class="line"><span class="literal">-rw-------</span>. <span class="number">1</span> itheima itheima  <span class="number">0</span> Mar <span class="number">24</span> <span class="number">09</span>:<span class="number">50</span> itheima</span><br><span class="line"><span class="literal">-rw-------</span>. <span class="number">1</span> root    root    <span class="number">40</span> Mar <span class="number">24</span> <span class="number">10</span>:<span class="number">21</span> root</span><br></pre></td></tr></table></figure><h2 id="3、计划任务的日志程序"><a href="#3、计划任务的日志程序" class="headerlink" title="3、计划任务的日志程序"></a>3、计划任务的日志程序</h2><p>问题：在实际应用中，我们如何查看定时任务运行情况？</p><p>答：通过计划任务日志，日志文件位于<code>/var/log/cron</code></p><p>案例：演示计划任务的日志程序</p><p>第一步：使用root账号创建一个计划任务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - root</span></span><br><span class="line"><span class="comment"># crontab -e</span></span><br><span class="line">* * * * * <span class="built_in">echo</span> <span class="number">1</span> &gt;&gt; ~/readme.txt</span><br></pre></td></tr></table></figure><p>第二步：使用tail -f命令监控&#x2F;var&#x2F;log&#x2F;cron日志程序</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -f /var/log/cron</span></span><br></pre></td></tr></table></figure><h2 id="4、扩展内容：at命令"><a href="#4、扩展内容：at命令" class="headerlink" title="4、扩展内容：at命令"></a>4、扩展内容：at命令</h2><p>在Linux系统下，有两个命令可以实现计划任务：crontab与at（第三方需要额外安装）</p><p>crontab ：每天定时执行计划任务（最小单元分钟）</p><p>at ：一次性定时执行任务</p><h3 id="☆-安装at命令"><a href="#☆-安装at命令" class="headerlink" title="☆ 安装at命令"></a>☆ 安装at命令</h3><p>CentOS7自带，其他版本可能需要手工安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install at -y</span></span><br></pre></td></tr></table></figure><h3 id="☆-启动底层服务"><a href="#☆-启动底层服务" class="headerlink" title="☆ 启动底层服务"></a>☆ 启动底层服务</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start atd</span></span><br><span class="line"><span class="comment"># systemctl enable atd</span></span><br></pre></td></tr></table></figure><blockquote><p>atd &#x3D; at + d &#x3D; at命令 + daemon缩写</p></blockquote><h3 id="☆-案例演示"><a href="#☆-案例演示" class="headerlink" title="☆ 案例演示"></a>☆ 案例演示</h3><p>案例1：三天后下午5点执行&#x2F;bin&#x2F;ls</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># at 5pm+3 days</span></span><br><span class="line">at&gt;/bin/<span class="built_in">ls</span> &gt;/root/readme.txt</span><br><span class="line">at&gt;按Ctrl+D</span><br></pre></td></tr></table></figure><blockquote><p>am &#x3D; 上午、pm &#x3D; 下午、3 days &#x3D; 3天</p></blockquote><p>案例2：明天17点，输出时间到指定的文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># at 17:00 tomorrow</span></span><br><span class="line">at&gt;date&gt;/root/readme.txt</span><br><span class="line">at&gt;按Ctrl+D</span><br></pre></td></tr></table></figure><blockquote><p>tomorrow &#x3D; 明天</p></blockquote><p>案例3：使用atq查看没有执行的计划任务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># atq</span></span><br></pre></td></tr></table></figure><blockquote><p>atq &#x3D; at + q &#x3D; at命令 + query查询</p></blockquote><p>案例4：删除指定的计划任务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># atq</span></span><br><span class="line"><span class="comment"># atrm 任务号</span></span><br></pre></td></tr></table></figure><blockquote><p>atrm &#x3D; at + rm &#x3D; at命令 + remove移除</p></blockquote><h1 id="二、Linux进程与程序"><a href="#二、Linux进程与程序" class="headerlink" title="二、Linux进程与程序"></a>二、Linux进程与程序</h1><h2 id="1、了解一下进程与程序的关系"><a href="#1、了解一下进程与程序的关系" class="headerlink" title="1、了解一下进程与程序的关系"></a>1、了解一下进程与程序的关系</h2><p>​        <strong>进程</strong>是正在执行的一个程序或命令，每个进程都是一个运行的实体，并占用一定的系统资源。<strong>程序</strong>是人使用计算机语言编写的可以实现特定目标或解决特定问题的代码集合。</p><p>​        简单来说，程序是人使用计算机语言编写的，可以实现一定功能，并且可以执行的代码集合。进程是正在执行中的程序。</p><p><strong>举例</strong>：谷歌浏览器是一个程序，当我们打开谷歌浏览器，就会在系统中看到一个浏览器的进程，当程序被执行时，程序的代码都会被加载入内存，操作系统给这个进程分配一个 ID，称为 <strong>PID</strong>（进程 ID）。我们打开多个谷歌浏览器，就有多个浏览器子进程，但是这些进程使用的程序，都是chrome</p><blockquote><p>PID &#x3D; Process ID &#x3D; 进程编号</p></blockquote><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324113209223.png" alt="image-20200324113209223"></p><h2 id="2、Linux下的进程管理工作"><a href="#2、Linux下的进程管理工作" class="headerlink" title="2、Linux下的进程管理工作"></a>2、Linux下的进程管理工作</h2><p>进程查看，通过查看，判断健康状态</p><p>进程终止</p><p>进程优先级控制</p><h1 id="三、Linux下进程管理命令"><a href="#三、Linux下进程管理命令" class="headerlink" title="三、Linux下进程管理命令"></a>三、Linux下进程管理命令</h1><h2 id="1、任务背景"><a href="#1、任务背景" class="headerlink" title="1、任务背景"></a>1、任务背景</h2><p>工作场景：</p><p>​        小黑入职到一家公司，接到的第一项任务，就是监控生产服务器的性能，提到服务器性能，我们首先想到的就是CPU，内存和磁盘。</p><h2 id="2、使用top命令动态监测CPU信息"><a href="#2、使用top命令动态监测CPU信息" class="headerlink" title="2、使用top命令动态监测CPU信息"></a>2、使用top命令动态监测CPU信息</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># top</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324114201114.png" alt="image-20200324114201114"></p><h2 id="3、系统的整体情况"><a href="#3、系统的整体情况" class="headerlink" title="3、系统的整体情况"></a>3、系统的整体情况</h2><h3 id="☆-第一行"><a href="#☆-第一行" class="headerlink" title="☆ 第一行"></a>☆ 第一行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324114427942.png" alt="image-20200324114427942"></p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>10:12:28</td><td>系统当前时间</td></tr><tr><td>up 13:05</td><td>系统的运行时间.本机己经运行 13 小时 05 分钟</td></tr><tr><td>3 users</td><td>当前登录了三个用户</td></tr><tr><td>load average: 0.00,0.01，0.05</td><td>系统在之前 1 分钟、5 分钟、15 分钟的平均负载。如果 CPU 是单核的，则这个数值超过 1 就是高负载：如果 CPU 是四核的，则这个数值超过 4 就是高负载</td></tr></tbody></table><h3 id="☆-第二行"><a href="#☆-第二行" class="headerlink" title="☆ 第二行"></a>☆ 第二行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324115718442.png" alt="image-20200324115718442"></p><table><thead><tr><th>Tasks:   230 total</th><th>系统中的进程总数</th></tr></thead><tbody><tr><td>1 running</td><td>正在运行的进程数</td></tr><tr><td>229 sleeping</td><td>睡眠的进程数</td></tr><tr><td>0 stopped</td><td>正在停止的进程数</td></tr><tr><td>0 zombie</td><td>僵尸进程数。如果不是   0，则需要手工检查僵尸进程</td></tr></tbody></table><h3 id="☆-第三行"><a href="#☆-第三行" class="headerlink" title="☆ 第三行"></a>☆ 第三行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324142002240.png" alt="image-20200324142002240"></p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Cpu(s): 0.1 %us</td><td>用户模式占用的   CPU 百分比</td></tr><tr><td>0.1%sy</td><td>系统模式占用的   CPU 百分比</td></tr><tr><td>0.0%ni</td><td>改变过优先级的用户进程占用的   CPU 百分比</td></tr><tr><td>99.7%id</td><td>idle缩写，空闲   CPU 占用的 CPU 百分比</td></tr><tr><td>0.1%wa</td><td>等待输入&#x2F;输出的进程占用的   CPU 百分比</td></tr><tr><td>0.0%hi</td><td>硬中断请求服务占用的   CPU 百分比</td></tr><tr><td>0.1%si</td><td>软中断请求服务占用的   CPU 百分比</td></tr><tr><td>0.0%st</td><td>st（steal   time）意为虚拟时间百分比，就是当有虚拟机时，虚拟 CPU 等待实际 CPU 的时间百分比</td></tr></tbody></table><h4 id="问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？"><a href="#问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？" class="headerlink" title="问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？"></a>问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？</h4><p>答：交换快捷键 “1”</p><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324142144911.png" alt="image-20200324142144911"></p><blockquote><p>CPU负载测试 &#x3D;&gt;  cat  &#x2F;dev&#x2F;urandom |md5sum</p></blockquote><h3 id="☆-第四行"><a href="#☆-第四行" class="headerlink" title="☆ 第四行"></a>☆ 第四行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324143340302.png" alt="image-20200324143340302"></p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Mem: 1863252 total</td><td>物理内存的总量，单位为KB</td></tr><tr><td>829960 used</td><td>己经使用的物理内存数量</td></tr><tr><td>68352 free</td><td>空闲的物理内存数量。我们使用的是虚拟机，共分配了 628MB内存，所以只有53MB的空闲内存</td></tr><tr><td>96490 buff&#x2F;cache</td><td>作为缓冲的内存数量</td></tr></tbody></table><blockquote><p>扩展：真正剩余内存 &#x3D; free + buff&#x2F;cache，真正使用内存 &#x3D; used - buff&#x2F;cache</p></blockquote><h3 id="☆-第五行"><a href="#☆-第五行" class="headerlink" title="☆ 第五行"></a>☆ 第五行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324144347040.png" alt="image-20200324144347040"></p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Swap: 2097148 total</td><td>交换分区（虚拟内存）的总大小</td></tr><tr><td>3336 used</td><td>已经使用的交换分区的大小</td></tr><tr><td>2093812 free</td><td>空闲交换分区的大小</td></tr><tr><td>622420 avail Mem</td><td>可用内存</td></tr></tbody></table><p> 在Linux操作系统分区时，最少需要3个分区：</p><p>① &#x2F;boot分区 ： 系统分区</p><p>② swap交换分区 ：一般情况下为内存的1~2倍，但是尽量不要超过2G</p><p>③ &#x2F;分区 ：根分区，所有文件都存放于此</p><blockquote><p>swap分区：就是当计算机的内存不足时，系统会自动从硬盘中划出一块区域充当内存使用。</p></blockquote><p>​       我们通过 top 命令的整体信息部分，就可以判断服务器的健康状态。如果 1 分钟、5 分钟、15 分钟的平均负载高于CPU核数，说明系统压力较大。如果物理内存的空闲内存过小，则也证明系统压力较大。</p><p>问题：根据以上信息，目前我们的系统压力如何？</p><p>答：看CPU负载及内存的使用情况</p><p>问题：如果我们发现CPU负载过大，接下来怎么办？</p><p>答：如果1分钟、5分钟以及15分钟全部超过CPU的总核心数（必须引起警觉），这个时候就要查看底部的进程信息了。</p><blockquote><p>经验之谈：如果一个总核数&#x3D;8核心的CPU，理论上平均负载达到16，也还可以坚持很长一段时间。</p></blockquote><h2 id="4、系统的进程信息"><a href="#4、系统的进程信息" class="headerlink" title="4、系统的进程信息"></a>4、系统的进程信息</h2><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324151820219.png" alt="image-20200324151820219"></p><table><thead><tr><th>PID</th><th>进程的 ID。</th></tr></thead><tbody><tr><td>USER</td><td>该进程所属的用户。</td></tr><tr><td>PR</td><td>优先级，数值越小优先级越高。</td></tr><tr><td>NI</td><td>NICE优先级，数值越小优先级越高，取值范围-20到19，默认都是0</td></tr><tr><td>VIRT</td><td>该进程使用的虚拟内存的大小，单位为 KB。</td></tr><tr><td>RES</td><td>该进程使用的物理内存的大小，单位为 KB。</td></tr><tr><td>SHR</td><td>共享内存大小，单位为 KB。计算一个进程实际使用的内存 &#x3D; 常驻内存（RES）- 共享内存（SHR）</td></tr><tr><td>S</td><td>进程状态。其中S 表示睡眠，R 表示运行</td></tr><tr><td>%CPU</td><td>该进程占用 CPU 的百分比。</td></tr><tr><td>%MEM</td><td>该进程占用内存的百分比。</td></tr><tr><td>TIME+</td><td>该进程共占用的 CPU 时间。</td></tr><tr><td>COMMAND</td><td>进程名</td></tr></tbody></table><h4 id="问题：如果我们发现CPU负载过大，接下来怎么办？"><a href="#问题：如果我们发现CPU负载过大，接下来怎么办？" class="headerlink" title="问题：如果我们发现CPU负载过大，接下来怎么办？"></a>问题：如果我们发现CPU负载过大，接下来怎么办？</h4><p>答：查看占用CPU最多的进程</p><h4 id="问题：如何查看占用CPU最多的进程？"><a href="#问题：如何查看占用CPU最多的进程？" class="headerlink" title="问题：如何查看占用CPU最多的进程？"></a>问题：如何查看占用CPU最多的进程？</h4><p>答：交互操作快捷键P，P（大写）：，表示将结果按照CPU 使用率从高到低进行降序排列</p><h4 id="问题：如果我们发现内存可用量很小，接下来怎么办？"><a href="#问题：如果我们发现内存可用量很小，接下来怎么办？" class="headerlink" title="问题：如果我们发现内存可用量很小，接下来怎么办？"></a>问题：如果我们发现内存可用量很小，接下来怎么办？</h4><p>答：查看占用内存最多的进程，使用交互快捷键M（大写）：表示将结果按照内存（MEM）从高到低进行降序排列</p><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324154216736.png" alt="image-20200324154216736"></p><h4 id="问题：当我们查看完系统状态，需要做什么？"><a href="#问题：当我们查看完系统状态，需要做什么？" class="headerlink" title="问题：当我们查看完系统状态，需要做什么？"></a>问题：当我们查看完系统状态，需要做什么？</h4><p>答：退出，使用q，按键盘上的q，就会回到#提示符的状态。</p><h2 id="5、free查看内存使用情况"><a href="#5、free查看内存使用情况" class="headerlink" title="5、free查看内存使用情况"></a>5、free查看内存使用情况</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># free [选项]  1GB = 1024MB  1MB = 1024KB</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-m</span> : 以MB的形式显示内存大小</span><br></pre></td></tr></table></figure><p>案例：显示计算机的内存使用情况</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># free -m</span></span><br></pre></td></tr></table></figure><p>​    和Centos6相比，buffer和cached被合成一组，加入了一个available。</p><p>​    关于此available，即系统可用内存，用户不需要去计算buffer&#x2F;cache，即可以看到还有多少内存可用，更加简单直观</p><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324155922424.png" alt="image-20200324155922424"></p><h2 id="6、df查看磁盘剩余空间"><a href="#6、df查看磁盘剩余空间" class="headerlink" title="6、df查看磁盘剩余空间"></a>6、df查看磁盘剩余空间</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># df [选项]</span></span><br><span class="line"><span class="literal">-h</span> ：以较高的可读性显示磁盘剩余空间大小</span><br></pre></td></tr></table></figure><blockquote><p>df &#x3D; disk free &#x3D; 磁盘 剩余</p></blockquote><p>这几列依次是：</p><table><thead><tr><th>Filesystem</th><th>磁盘名称</th></tr></thead><tbody><tr><td>Size</td><td>总大小</td></tr><tr><td>Used</td><td>被使用的大小</td></tr><tr><td>Avail</td><td>剩余大小</td></tr><tr><td>Use%</td><td>使用百分比</td></tr><tr><td>Mounted on</td><td>挂载路径（相当于Windows 的磁盘符）</td></tr></tbody></table><h2 id="7、ps查看系统进程信息"><a href="#7、ps查看系统进程信息" class="headerlink" title="7、ps查看系统进程信息"></a>7、ps查看系统进程信息</h2><p>top ： 动态查看系统进程的信息（每隔3s切换一次）</p><p>ps  ： 静态查看系统进程的信息（只能查询运行ps命令瞬间，系统的进程信息）</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps [选项]</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-e</span> : 等价于“<span class="literal">-A</span>”，表示列出全部（all）的进程</span><br><span class="line"><span class="operator">-f</span> : 表示full，显示全部的列（显示全字段）</span><br></pre></td></tr></table></figure><p>案例：显示当前系统中所有进程的信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324162137670.png" alt="image-20200324162137670"></p><table><thead><tr><th>UID</th><th>该进程执行的用户ID</th></tr></thead><tbody><tr><td>PID</td><td>进程ID</td></tr><tr><td>PPID</td><td>该进程的父级进程ID，如果找不到，则该进程就被称之为僵尸进程（Parent Process ID）</td></tr><tr><td>C</td><td>Cpu的占用率，其形式是百分数</td></tr><tr><td>STIME</td><td>进程的启动时间</td></tr><tr><td>TTY</td><td>终端设备，发起该进程的设备识别符号，如果显示“?”则表示该进程并不是由终端设备发起</td></tr><tr><td>TIME</td><td>进程实际使用CPU的时间</td></tr><tr><td>CMD</td><td>该进程的名称或者对应的路径</td></tr></tbody></table><blockquote><p>经验之谈：我们在实际工作中使用ps命令其实主要用于查询某个进程的PID或PPID</p></blockquote><p>工作场景</p><p>​        小黑用学到的命令，发现某个进程占用CPU很高，希望进一步查看这个简称的信息。</p><p>​        ps -ef 会列出全部进程，但是我们发现进程非常多，我们很难找到自己想要看的进程。这里需要使用过滤命令grep，来过滤掉我们不需要的信息。</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用法：<span class="built_in">ps</span> <span class="literal">-ef</span> |grep 想要看到的进程名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment"># ps -ef |grep crond</span></span><br><span class="line">含义：查看crond进程的详细情况</span><br><span class="line">注意：查询结果中，如果只有一条则表示没查到对应的进程（这<span class="number">1</span> 条表示刚才<span class="built_in">ps</span> 指令的自身）。只有查到的结果多余<span class="number">1</span> 条，才表示有对应的进程。</span><br></pre></td></tr></table></figure><p>案例：查询crond的进程信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef |grep crond</span></span><br><span class="line">root       <span class="number">7102</span>      <span class="number">1</span>  <span class="number">0</span> Mar23 ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">04</span> /usr/sbin/crond <span class="literal">-n</span></span><br><span class="line">root      <span class="number">24752</span>  <span class="number">12881</span>  <span class="number">0</span> <span class="number">16</span>:<span class="number">34</span> pts/<span class="number">2</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep <span class="literal">--color</span>=auto crond</span><br></pre></td></tr></table></figure><p>问题：以上信息只有第一行是crond的进程，第二行，实际是管道命令发起时，grep所启动的进程，如何去掉？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef |grep crond |grep -v &quot;grep&quot;</span></span><br><span class="line">root       <span class="number">7102</span>      <span class="number">1</span>  <span class="number">0</span> Mar23 ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">04</span> /usr/sbin/crond <span class="literal">-n</span></span><br></pre></td></tr></table></figure><blockquote><p>grep  -v  需要去除的相关信息 ： 去除包含指定关键词的那一行</p></blockquote><p>扩展：ps  aux命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps aux</span></span><br></pre></td></tr></table></figure><blockquote><p># man ps</p><p>1   UNIX options, which may be grouped and must be preceded by a dash.     ps  -ef<br>2   BSD options, which may be grouped and must not be used with a dash. ps  aux</p></blockquote><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324165018806.png" alt="image-20200324165018806"></p><p>USER：该 process 属于哪个使用者账号<br>&#x3D;&#x3D;PID ：该 process 的ID&#x3D;&#x3D;<br>&#x3D;&#x3D;%CPU：该 process 使用掉的 CPU 资源百分比&#x3D;&#x3D;<br>&#x3D;&#x3D;%MEM：该 process 所占用的物理内存百分比&#x3D;&#x3D;<br>VSZ ：该 process 使用掉的虚拟内存量 (Kbytes)<br>RSS ：该 process 占用的固定的内存量 (Kbytes)<br>TTY ：该 process 是在那个终端机上面运作，若与终端机无关，则显示 ?，另外， tty1-tty6 是本机上面的登入者程序，若为 pts&#x2F;0 等等的，则表示为由网络连接进主机的程序。<br>&#x3D;&#x3D;STAT：该程序目前的状态，主要的状态有&#x3D;&#x3D;<br>    R ：该程序目前正在运作，或者是可被运作<br>    S ：该程序目前正在睡眠当中 (可说是 idle 状态)，但可被某些讯号 (signal) 唤醒。<br>    T ：该程序目前正在侦测或者是停止了<br>   &#x3D;&#x3D;Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态&#x3D;&#x3D;<br>START：该 process 被触发启动的时间<br>TIME ：该 process 实际使用 CPU 运作的时间<br>COMMAND：该程序的实际指令</p><h2 id="8、netstat-ss查询网络访问信息"><a href="#8、netstat-ss查询网络访问信息" class="headerlink" title="8、netstat&#x2F;ss查询网络访问信息"></a>8、netstat&#x2F;ss查询网络访问信息</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat [选项] |grep 进程名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-t</span>：表示只列出tcp 协议的连接（tcp协议与udp协议）</span><br><span class="line"><span class="literal">-n</span>：表示将地址从字母组合转化成ip 地址，将协议转化成端口号来显示  <span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">80</span></span><br><span class="line"><span class="literal">-l</span>：表示过滤出<span class="string">&quot;state（状态）&quot;</span>列中其值为LISTEN（监听）的连接</span><br><span class="line"><span class="literal">-p</span>：表示显示发起连接的进程pid 和进程名称</span><br></pre></td></tr></table></figure><p>案例：查询Web Server（httpd）服务的端口信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat -tnlp |grep httpd</span></span><br></pre></td></tr></table></figure><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ss -naltp |grep 进程名称</span></span><br></pre></td></tr></table></figure><p>案例：查询sshd服务的端口信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ss -naltp |grep sshd</span></span><br></pre></td></tr></table></figure><blockquote><p>netstat与ss区别？① netstat信息比较简洁，ss更加丰富 ② ss执行效率比netstat略高一些</p></blockquote><h2 id="9、kill-killall杀死进程"><a href="#9、kill-killall杀死进程" class="headerlink" title="9、kill&#x2F;killall杀死进程"></a>9、kill&#x2F;killall杀死进程</h2><h3 id="☆-根据pid杀掉进程"><a href="#☆-根据pid杀掉进程" class="headerlink" title="☆ 根据pid杀掉进程"></a>☆ 根据pid杀掉进程</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">命令：<span class="built_in">kill</span></span><br><span class="line">语法：<span class="built_in">kill</span> [信号] PID</span><br><span class="line">作用：<span class="built_in">kill</span> 命令会向操作系统内核发送一个信号（多是终止信号）和目标进程的 PID，然后系统内核根据收到的信号类型，对指定进程进行相应的操作</span><br><span class="line"></span><br><span class="line">经验：<span class="built_in">kill</span>经常结合<span class="built_in">ps</span>命令一起使用</span><br></pre></td></tr></table></figure><blockquote><p>kill命令用于杀死某个进程，这其实只是其一个功能。kill命令的实质是向进程发送信号</p></blockquote><p>信号种类：</p><table><thead><tr><th>信号编号</th><th>含义</th></tr></thead><tbody><tr><td>9</td><td>杀死进程，即强制结束进程。</td></tr><tr><td>15</td><td>正常结束进程，是 kill   命令的默认信号。</td></tr></tbody></table><p>案例：使用kill命令杀死crond进程</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef |grep crond</span></span><br><span class="line"><span class="number">7102</span></span><br><span class="line"><span class="comment"># kill 7102</span></span><br></pre></td></tr></table></figure><blockquote><p>备注：在互联网中，经常看到kill  -9  进程PID，强制杀死某个进程，kill -9 pid</p></blockquote><h3 id="☆-根据进程名称杀掉进程"><a href="#☆-根据进程名称杀掉进程" class="headerlink" title="☆ 根据进程名称杀掉进程"></a>☆ 根据进程名称杀掉进程</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># killall [信号编号] 进程名称</span></span><br></pre></td></tr></table></figure><p>案例：使用killall命令杀死crond进程</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># killall crond</span></span><br></pre></td></tr></table></figure><p>案例：使用killall命令杀死httpd进程</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># killall httpd</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux的权限管理操作</title>
      <link href="/posts/8545.html"/>
      <url>/posts/8545.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux的权限管理操作"><a href="#Linux的权限管理操作" class="headerlink" title="Linux的权限管理操作"></a>Linux的权限管理操作</h1><h1 id="一、权限概述"><a href="#一、权限概述" class="headerlink" title="一、权限概述"></a>一、权限概述</h1><h2 id="1、权限的基本概念"><a href="#1、权限的基本概念" class="headerlink" title="1、权限的基本概念"></a>1、权限的基本概念</h2><p>在多用户计算机系统的管理中，权限是指某个特定的用户具有特定的系统资源使用权利。</p><p>在Linux 中分别有读、写、执行权限：</p><table><thead><tr><th></th><th>权限针对文件</th><th>权限针对目录</th></tr></thead><tbody><tr><td>读r</td><td>表示可以查看文件内容；cat</td><td>表示可以(ls)查看目录中存在的文件名称</td></tr><tr><td>写w</td><td>表示可以更改文件的内容；vim 修改，保存退出</td><td>表示是否可以删除目录中的子文件或者新建子目录(rm&#x2F;touch&#x2F;mkdir)</td></tr><tr><td>执行x</td><td>表示是否可以开启文件当中记录的程序,一般指二进制文件(.sh) &#x3D;&gt; 绿色</td><td>表示是否可以进入目录中(cd)</td></tr></tbody></table><blockquote><p>注：一般给予目录读权限时，也将会给其执行权限，属于“套餐”组合</p><p>可读权限 read &#x3D;&gt; r（简写），可写权限 write &#x3D;&gt; w（简写），可执行权限 excute &#x3D;&gt; x（简写）</p></blockquote><h2 id="2、为什么要设置权限"><a href="#2、为什么要设置权限" class="headerlink" title="2、为什么要设置权限"></a>2、为什么要设置权限</h2><p>1）服务器中的数据价值</p><p>2）员工的工作职责和分工不同</p><p>3）应对自外部的攻击(挂马)</p><p>4）内部管理的需要</p><h2 id="3、Linux用户身份类别"><a href="#3、Linux用户身份类别" class="headerlink" title="3、Linux用户身份类别"></a>3、Linux用户身份类别</h2><p>Linux 系统一般将文件权限分为3 类：</p><p>read（读）</p><p>write（写）</p><p>execute（执行）</p><p>**&#x3D;&#x3D;谁&#x3D;&#x3D;**对文件有读，写，执行的权限呢？ 答：针对三大类用户</p><h2 id="4、user文件拥有者"><a href="#4、user文件拥有者" class="headerlink" title="4、user文件拥有者"></a>4、user文件拥有者</h2><p>文件的拥有者：默认情况下，谁创建了这个文件谁就是文件的拥有者。文件的拥有者可以进行更改并不是一成不变的。</p><p>裴凯 &#x3D;&gt; linux.txt，默认情况下，裴凯就是linux.txt文件的拥有者</p><h2 id="5、group文件所属组内用户"><a href="#5、group文件所属组内用户" class="headerlink" title="5、group文件所属组内用户"></a>5、group文件所属组内用户</h2><p>group所属组内用户代表与文件的所属组相同的组内用户。</p><p>比如，裴凯与罗新兴、周卓都同属于一个itheima的用户组，罗新兴和周卓就是这个文件的组内用户。</p><h2 id="6、other其他用户"><a href="#6、other其他用户" class="headerlink" title="6、other其他用户"></a>6、other其他用户</h2><p>other其他用户代表这些人既不是文件的拥有者，也不是文件所属组内的用户，我们把这些人就称之为other其他用户。</p><h2 id="7、特殊用户root"><a href="#7、特殊用户root" class="headerlink" title="7、特殊用户root"></a>7、特殊用户root</h2><p>在Linux操作系统中，root拥有最高权限（针对所有文件），所以权限设置对root账号没有效果。</p><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320110034242.png" alt="image-20200320110034242"></p><blockquote><p>在Linux系统中，三大类用户也可以拥有简写形式user(u)、group(g)、other(o)</p></blockquote><h1 id="二、普通权限管理"><a href="#二、普通权限管理" class="headerlink" title="二、普通权限管理"></a>二、普通权限管理</h1><h2 id="1、ls-l命令查看文件权限"><a href="#1、ls-l命令查看文件权限" class="headerlink" title="1、ls -l命令查看文件权限"></a>1、ls -l命令查看文件权限</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -l</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># ll</span></span><br></pre></td></tr></table></figure><blockquote><p>备注：ll命令是红帽以及CentOS系统特有的一个命令，在其他操作系统中可能并不支持</p></blockquote><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320113017121.png" alt="image-20200320113017121"></p><h2 id="2、文件类型-权限解析"><a href="#2、文件类型-权限解析" class="headerlink" title="2、文件类型+权限解析"></a>2、文件类型+权限解析</h2><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320114528433.png" alt="image-20200320114528433"></p><p>Linux一共有7种文件类型,分别如下:<br>-：普通文件<br>d：目录文件<br>l： 软链接（类似Windows的快捷方式）</p><p>(下面四种是特殊文件)<br>b：block，块设备文件（例如硬盘、光驱等）<br>p：管道文件<br>c：字符设备文件（例如猫(上网猫)等串口设备）<br>s：套接口文件&#x2F;数据接口文件（例如启动一个MySql服务器时会产生一个mysql.sock文件）</p><h2 id="3、文件或文件夹权限设置（字母）"><a href="#3、文件或文件夹权限设置（字母）" class="headerlink" title="3、文件或文件夹权限设置（字母）"></a>3、文件或文件夹权限设置（字母）</h2><p>基本语法：ch &#x3D; change mod简单理解权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod [选项] 权限设置 文件或目录的名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-R</span> ：递归设置，针对文件夹（目录）</span><br></pre></td></tr></table></figure><blockquote><p>重点：字母设置并不难，重点看三方面</p><p>第一个：确认要给哪个身份设置权限，u、g、o、ugo(a)</p><p>第二个：确认是添加权限(+)、删除权限(-)还是赋予权限(&#x3D;) </p><p>第三个：确认给这个用户针对这个文件或文件夹设置什么样的权限，r、w、x</p></blockquote><p>案例：给readme.txt文件的拥有者，增加一个可执行权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod u+x readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：把readme.txt文件的拥有者的可执行权限去除</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod u-x readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：为readme.txt中的所属组内用户赋予rw权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod g=rw readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：给shop目录及其内部的文件统一添加w可写权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod -R ugo+w shop</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># chomd -R a+w shop</span></span><br></pre></td></tr></table></figure><p>案例：给shop目录设置权限，要求拥有者rwx，组内用户r-x，其他用户r-x</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod -R u=rwx,g=r-x,o=r-x shop</span></span><br></pre></td></tr></table></figure><h2 id="4、文件或文件夹权限设置（数字）"><a href="#4、文件或文件夹权限设置（数字）" class="headerlink" title="4、文件或文件夹权限设置（数字）"></a>4、文件或文件夹权限设置（数字）</h2><p> 经常会在技术网站上看到类似于# chmod 777 a.txt 这样的命令，这种形式称之为&#x3D;&#x3D;数字形式权限&#x3D;&#x3D;。</p><p>文件<strong>权限与数字</strong>的对应关系，我们会发现<strong>没有7</strong>这个数字</p><table><thead><tr><th>权限</th><th>对应数字</th><th align="left">意义</th></tr></thead><tbody><tr><td>r</td><td>4</td><td align="left">可读</td></tr><tr><td>w</td><td>2</td><td align="left">可写</td></tr><tr><td>x</td><td>1</td><td align="left">可执行</td></tr><tr><td>-</td><td>0</td><td align="left">没有权限</td></tr></tbody></table><p>777 ：</p><p>第一个数字7，代表文件拥有者权限</p><p>第二个数字7，代表文件所属组内用户权限</p><p>第三个数字7，代表其他用户权限</p><p>rwx &#x3D; 4 + 2 + 1 &#x3D; 7</p><p>rw &#x3D; 4 + 2 &#x3D; 6</p><p>rx &#x3D; 4 + 1 &#x3D; 5</p><p>案例：给readme.txt设置权限，文件的拥有者rwx，组内用户rw，其他用户r</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rwx = <span class="number">7</span></span><br><span class="line">rw = <span class="number">6</span></span><br><span class="line"><span class="built_in">r</span> = <span class="number">4</span></span><br><span class="line"><span class="comment"># chmod 764 readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：给shop文件夹设置777权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod -R 777 shop</span></span><br></pre></td></tr></table></figure><h2 id="5、奇葩权限"><a href="#5、奇葩权限" class="headerlink" title="5、奇葩权限"></a>5、奇葩权限</h2><p>问题：用超级管理员设置文档的权限命令是# chmod  -R  731 shop，请问这个命令有没有什么不合理的地方？</p><p>答：731权限进行拆解</p><p>7 &#x3D; 4 + 2 + 1 &#x3D; rwx</p><p>3 &#x3D; 2 + 1 &#x3D; wx</p><p>1 &#x3D; x</p><p>问题在权限731中的3权限，3表示写+执行权限，但是写又必须需要能打开之后才可以写，因此必须需要具备可读权限，因此此权限设置不合理。</p><p>注：实际工作中，各位小伙伴在设置权限时一定不要设置这种”奇葩权限”，一般情况下，单独出现2、3的权限数字一般都是有问题的权限。</p><h2 id="6、练习题"><a href="#6、练习题" class="headerlink" title="6、练习题"></a>6、练习题</h2><p>1）使用root 用户设置文件夹&#x2F;root&#x2F;shop 的权限为：属主全部权限，属组拥有读和执行权限，其他用户没有权限，请使用数字权限的形式设置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rwx=<span class="number">7</span>,rx=<span class="number">4</span>+<span class="number">1</span>=<span class="number">5</span>,<span class="number">0</span></span><br><span class="line"><span class="comment"># chmod -R 750 /root/shop</span></span><br></pre></td></tr></table></figure><p>2）请置文件&#x2F;root&#x2F;readme.txt 的权限，权限要求为：</p><p>​        属主拥有<strong>全部</strong>权限，属组要求可以<strong>读写</strong>，其他用户<strong>只读</strong>，要求使用数字形式；</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rwx=<span class="number">7</span>,rw=<span class="number">4</span>+<span class="number">2</span>=<span class="number">6</span>,<span class="built_in">r</span>=<span class="number">4</span></span><br><span class="line"><span class="comment"># chmod 764 /root/readme.txt</span></span><br></pre></td></tr></table></figure><p>3）请设置&#x2F;root&#x2F;email.doc权限，权限要求只有属主可以读写，除此之外任何人没有权限；</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rw=<span class="number">6</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="comment"># chmod 600 /root/email.doc</span></span><br></pre></td></tr></table></figure><h2 id="7、特殊权限说明"><a href="#7、特殊权限说明" class="headerlink" title="7、特殊权限说明"></a>7、特殊权限说明</h2><p>在Linux 中，如果要删除一个文件，不是看文件有没有对应的权限，而是看文件所在的&#x3D;&#x3D;目录是否有写权限&#x3D;&#x3D;，如果有才可以删除（同时必须具备执行权限）。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/shell/readme.txt</span><br><span class="line">我们想删除readme.txt文件，必须要对shell目录具有可写权限，否则文件无法删除</span><br></pre></td></tr></table></figure><h1 id="三、文件拥有者以及文件所属组设置"><a href="#三、文件拥有者以及文件所属组设置" class="headerlink" title="三、文件拥有者以及文件所属组设置"></a>三、文件拥有者以及文件所属组设置</h1><p>文件拥有者：属主</p><p>文件所属组：属组</p><h2 id="1、什么是属主与属组"><a href="#1、什么是属主与属组" class="headerlink" title="1、什么是属主与属组"></a>1、什么是属主与属组</h2><p>属主：所属的用户，文档所有者，这是一个账户，这是一个人</p><p>属组：所属的用户组，这是一个组</p><h2 id="2、文件拥有者与所属组的查看"><a href="#2、文件拥有者与所属组的查看" class="headerlink" title="2、文件拥有者与所属组的查看"></a>2、文件拥有者与所属组的查看</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -l</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># ll</span></span><br></pre></td></tr></table></figure><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320150210026.png" alt="image-20200320150210026"></p><h2 id="3、了解文件的拥有者与文件所属组来源"><a href="#3、了解文件的拥有者与文件所属组来源" class="headerlink" title="3、了解文件的拥有者与文件所属组来源"></a>3、了解文件的拥有者与文件所属组来源</h2><p>在Linux操作系统中，每个文件都是由Linux系统用户创建的。</p><p>在Linux操作系统中，每个用户都具有一个用户名称以及一个主组的概念</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - itheima</span></span><br><span class="line"><span class="comment"># touch readme.txt</span></span><br><span class="line"><span class="comment"># ll readme.txt</span></span><br><span class="line"><span class="literal">-rw-rw-r--</span>. <span class="number">1</span> itheima itheima <span class="number">0</span> Mar <span class="number">20</span> <span class="number">15</span>:<span class="number">17</span> readme.txt</span><br></pre></td></tr></table></figure><h2 id="4、为什么需要更改文件拥有者与所属组"><a href="#4、为什么需要更改文件拥有者与所属组" class="headerlink" title="4、为什么需要更改文件拥有者与所属组"></a>4、为什么需要更改文件拥有者与所属组</h2><p>一个财务表格，以前由胡一菲进行更新，她有读写权限，现在胡一菲去阿拉善沙漠找曾老师了，改权限没用，需要把属主改成诸葛大力，由诸葛大力更新。</p><h2 id="5、文件拥有者设置"><a href="#5、文件拥有者设置" class="headerlink" title="5、文件拥有者设置"></a>5、文件拥有者设置</h2><p>基本语法：ch &#x3D; change ，own &#x3D; owner</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown [选项] 新文件拥有者名称 文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-R</span> ：代表递归修改，主要针对文件夹</span><br></pre></td></tr></table></figure><p>案例：把&#x2F;root&#x2F;readme.txt文件的拥有者更改为itheima</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown itheima /root/readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：把&#x2F;root&#x2F;shop文件夹的拥有者更改为linuxuser</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R linuxuser /root/shop</span></span><br></pre></td></tr></table></figure><h2 id="6、文件所属组的设置"><a href="#6、文件所属组的设置" class="headerlink" title="6、文件所属组的设置"></a>6、文件所属组的设置</h2><p>基本语法： ch &#x3D; change , group，chgrp</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chgrp [选项] 新文件所属组名称 文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-R</span> : 代表递归修改，主要针对文件夹</span><br></pre></td></tr></table></figure><p>案例：把&#x2F;root&#x2F;readme.txt文件的所属组名称更改为itheima</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chgrp itheima /root/readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：把&#x2F;root&#x2F;shop文件夹的所属组名称也更改为itheima</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chgrp -R itheima /root/shop</span></span><br></pre></td></tr></table></figure><h2 id="7、chown同时修改属主与属组"><a href="#7、chown同时修改属主与属组" class="headerlink" title="7、chown同时修改属主与属组"></a>7、chown同时修改属主与属组</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown [选项] 文件拥有者名称:文件所属组名称 文件名称</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># chown [选项] 文件拥有者名称.文件所属组名称 文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-R</span> : 代表递归修改，主要针对文件夹</span><br></pre></td></tr></table></figure><p>案例：readme.txt文件的拥有者与所属组同时更改为root</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown root:root readme.txt</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># chown root.root readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：更改shop目录的拥有者以及所属组为root</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R root:root shop</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># chown -R root.root shop</span></span><br></pre></td></tr></table></figure><h1 id="四、特殊权限（扩展）"><a href="#四、特殊权限（扩展）" class="headerlink" title="四、特殊权限（扩展）"></a>四、特殊权限（扩展）</h1><h2 id="1、设置位S（针对二进制文件）"><a href="#1、设置位S（针对二进制文件）" class="headerlink" title="1、设置位S（针对二进制文件）"></a>1、设置位S（针对二进制文件）</h2><h3 id="☆-设置位S的作用"><a href="#☆-设置位S的作用" class="headerlink" title="☆ 设置位S的作用"></a>☆ 设置位S的作用</h3><p>作用：为了让一般使用者临时具有该文件所属主&#x2F;组的执行权限。</p><p>主要针对二进制文件（命令）</p><p>例如：&#x2F;usr&#x2F;bin&#x2F;passwd在执行它的时候需要去修改&#x2F;etc&#x2F;passwd和&#x2F;etc&#x2F;shadow等文件，这些文件除了root外，其他用户都没有写权限，但是又为了能让普通用户修改自己的密码，该怎么办呢？</p><blockquote><p>whereis命令，主要功能就是查询某个命令所在的路径，基本语法 &#x3D;&gt; whereis  passwd</p></blockquote><p>itheima普通账号 &#x3D;&gt; 执行&#x2F;usr&#x2F;bin&#x2F;passwd &#x3D;&gt; 修改&#x2F;etc&#x2F;shadow文件（存放用户的密码）</p><blockquote><p>&#x2F;etc&#x2F;shadow文件比较特殊，其权限为— — —（000），除root外，其他人都没有权限</p></blockquote><h3 id="☆-去除S位权限"><a href="#☆-去除S位权限" class="headerlink" title="☆ 去除S位权限"></a>☆ 去除S位权限</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod u-s /usr/bin/passwd </span></span><br><span class="line">或者</span><br><span class="line"><span class="comment"># chmod 0755 /usr/bin/passwd</span></span><br></pre></td></tr></table></figure><h3 id="☆-添加S位权限"><a href="#☆-添加S位权限" class="headerlink" title="☆ 添加S位权限"></a>☆ 添加S位权限</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod u+s /usr/bin/passwd</span></span><br><span class="line">或者</span><br><span class="line"><span class="comment"># chmod 4755 /usr/bin/passwd</span></span><br></pre></td></tr></table></figure><h2 id="2、沾滞位T（针对文件夹）"><a href="#2、沾滞位T（针对文件夹）" class="headerlink" title="2、沾滞位T（针对文件夹）"></a>2、沾滞位T（针对文件夹）</h2><h3 id="☆-粘滞位作用"><a href="#☆-粘滞位作用" class="headerlink" title="☆ 粘滞位作用"></a>☆ 粘滞位作用</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod -R o+t 文件夹的名称</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># chmod -R 1777 文件夹的名称</span></span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;主要功能：只允许文件的创建者和root用户删除文件（防止误删除权限位）&#x3D;&#x3D;</p><p>案例：&#x2F;tmp文件夹，拥有最高权限777，比如itheima创建了一个文件在此目录，linuxuser用户可以对其进行删除操作，这种显然不太合适。</p><p>7 &#x3D; r + w + x &#x3D; 可读、可写、可执行</p><p>案例：使用ls -l命令查看&#x2F;tmp目录权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -ld /tmp</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># ll -d /tmp</span></span><br></pre></td></tr></table></figure><h3 id="☆-移除粘滞位"><a href="#☆-移除粘滞位" class="headerlink" title="☆ 移除粘滞位"></a>☆ 移除粘滞位</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod -R o-t /tmp</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># chmod -R 0777 /tmp</span></span><br></pre></td></tr></table></figure><h3 id="☆-添加粘滞位"><a href="#☆-添加粘滞位" class="headerlink" title="☆ 添加粘滞位"></a>☆ 添加粘滞位</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod -R o+t /tmp</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># chmod -R 1777 /tmp</span></span><br></pre></td></tr></table></figure><h1 id="五、ACL访问控制"><a href="#五、ACL访问控制" class="headerlink" title="五、ACL访问控制"></a>五、ACL访问控制</h1><h2 id="1、为什么需要ACL"><a href="#1、为什么需要ACL" class="headerlink" title="1、为什么需要ACL"></a>1、为什么需要ACL</h2><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320164900337.png" alt="image-20200320164900337"></p><p>ACL，是 Access Control List（访问控制列表）的缩写，在 Linux 系统中， ACL 可实现对单一用户设定访问文件的权限。</p><blockquote><p>扩展：ACL权限可以针对某个用户，也可以针对某个组。ACL优势就是让权限控制更加的精准。</p></blockquote><h2 id="2、获取某个文件的ACL权限"><a href="#2、获取某个文件的ACL权限" class="headerlink" title="2、获取某个文件的ACL权限"></a>2、获取某个文件的ACL权限</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># getfacl 文件或目录名称</span></span><br></pre></td></tr></table></figure><h2 id="3、给某个文件设置ACL权限"><a href="#3、给某个文件设置ACL权限" class="headerlink" title="3、给某个文件设置ACL权限"></a>3、给某个文件设置ACL权限</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl [选项] 文件或目录名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-m</span> ： 修改acl策略</span><br><span class="line"><span class="literal">-x</span> ： 去掉某个用户或者某个组的权限</span><br><span class="line"><span class="literal">-b</span> ： 删除所有的acl策略</span><br><span class="line"></span><br><span class="line"><span class="literal">-R</span>  ：递归,通常用在文件夹</span><br></pre></td></tr></table></figure><p>案例：针对readme.txt文件给linuxuser设置一个权限&#x3D;&gt;可读</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -m u:linuxuser:r readme.txt=&gt;  针对某个用户开通ACL权限</span></span><br></pre></td></tr></table></figure><p>案例：针对shop文件夹给itheima组设置一个权限&#x3D;&gt;可读可写权限rw</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -R -m g:itheima:rw shop=&gt; 针对某个用户组开通ACL权限</span></span><br></pre></td></tr></table></figure><p>案例：把linuxuser用户权限从readme.txt中移除掉</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -x u:linuxuser readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：把itheima用户组权限从shop中移除掉</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -x -R g:itheima shop</span></span><br></pre></td></tr></table></figure><p>案例：把readme.txt文件中的所有ACL权限全部移除</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setfacl -b readme.txt</span></span><br></pre></td></tr></table></figure><h1 id="六、umask（了解，不要更改！！！）"><a href="#六、umask（了解，不要更改！！！）" class="headerlink" title="六、umask（了解，不要更改！！！）"></a>六、umask（了解，不要更改！！！）</h1><h2 id="1、什么是umask"><a href="#1、什么是umask" class="headerlink" title="1、什么是umask"></a>1、什么是umask</h2><p>umask表示创建文件时的默认权限（即创建文件时不需要设置而天生的权限）</p><p> root用户下，touch a ，文件a的默认权限是644</p><p> 普通用户下，touch b ，文件b的默认权限是664 </p><p>644和664我们并没有设置，其中的关键因素就是<strong>umask</strong></p><blockquote><p>扩展：实际上我们创建一个普通文件最高权限666。而创建一个文件夹其最高权限777</p><p>实际文件权限 &#x3D; 最高权限 - umask的值</p></blockquote><h2 id="2、获取用户的umask值"><a href="#2、获取用户的umask值" class="headerlink" title="2、获取用户的umask值"></a>2、获取用户的umask值</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umask</span></span><br><span class="line"><span class="number">0022</span></span><br><span class="line">注：<span class="number">0022</span>中第一位<span class="number">0</span>代表特殊权限位，可以不设置。</span><br><span class="line">umask的默认值，在root和普通用户下是不一样的，分别是<span class="number">022</span>和<span class="number">002</span></span><br></pre></td></tr></table></figure><p>为什么文件在root下创建就是644，在itheima下就是664</p><p>root : 666 - 022 &#x3D; 644</p><p>itheima：666 - 002 &#x3D; 664</p><h2 id="3、修改umask值（一定不要改）"><a href="#3、修改umask值（一定不要改）" class="headerlink" title="3、修改umask值（一定不要改）"></a>3、修改umask值（一定不要改）</h2><h3 id="☆-临时修改（重启后失效）"><a href="#☆-临时修改（重启后失效）" class="headerlink" title="☆ 临时修改（重启后失效）"></a>☆ 临时修改（重启后失效）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umask 002</span></span><br><span class="line"><span class="number">777</span> - <span class="number">002</span> = <span class="number">775</span></span><br></pre></td></tr></table></figure><h3 id="☆-永久修改"><a href="#☆-永久修改" class="headerlink" title="☆ 永久修改"></a>☆ 永久修改</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ~/.bashrc </span></span><br><span class="line">① 在文件末尾添加umask <span class="number">002</span></span><br><span class="line">② 保存退出 </span><br><span class="line">③ su切换用户则立即生效</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件管理与用户管理</title>
      <link href="/posts/48817.html"/>
      <url>/posts/48817.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件管理与用户管理"><a href="#Linux文件管理与用户管理" class="headerlink" title="Linux文件管理与用户管理"></a>Linux文件管理与用户管理</h1><h1 id="一、查看文件内容"><a href="#一、查看文件内容" class="headerlink" title="一、查看文件内容"></a>一、查看文件内容</h1><h2 id="1、回顾之前的命令"><a href="#1、回顾之前的命令" class="headerlink" title="1、回顾之前的命令"></a>1、回顾之前的命令</h2><p>cat命令、tac命令、head命令、tail命令、扩展：tail  -f动态查看一个文件的内容</p><h2 id="2、more分屏显示文件内容（了解）"><a href="#2、more分屏显示文件内容（了解）" class="headerlink" title="2、more分屏显示文件内容（了解）"></a>2、more分屏显示文件内容（了解）</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># more 文件名称</span></span><br></pre></td></tr></table></figure><blockquote><p>特别注意：more命令在加载文件时并不是一点一点进行加载，而是打开文件时就已经把文件的全部内容加载到内存中了。如果打开文件较大，则可能会出现卡顿情况。</p></blockquote><p>more命令拥有一些交互功能，可以通过快捷键进行操作这个more的阅读器。</p><table><thead><tr><th>回车键</th><th>向下移动一行。</th></tr></thead><tbody><tr><td>d</td><td>向下移动半页。</td></tr><tr><td>空格键</td><td>向下移动一页。</td></tr><tr><td>b</td><td>向上移动一页，后期引入功能，早期more只能前进不能后退</td></tr><tr><td>q</td><td>退出   more。</td></tr></tbody></table><blockquote><p>早期more命令没有现在这么强大，其只能前进不能后退</p></blockquote><h2 id="3、less分屏显示文件内容（重点）"><a href="#3、less分屏显示文件内容（重点）" class="headerlink" title="3、less分屏显示文件内容（重点）"></a>3、less分屏显示文件内容（重点）</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># less 文件名称</span></span><br></pre></td></tr></table></figure><blockquote><p>特别注意：less命令不是加载整个文件到内存，而是一点一点进行加载，相对而言，读取大文件时，效率比较高。</p></blockquote><p>另外：less可以通过上下方向键显示上下内容，退出时不会在Shell中留下刚显示的内容</p><p>less 命令的执行也会打开一个交互界面，下面是一些常用交互命令（和more类似）：</p><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>回车键</td><td>向下移动一行。</td></tr><tr><td>d</td><td>向下移动半页。</td></tr><tr><td>空格键</td><td>向下移动一页。</td></tr><tr><td>b</td><td>向上移动一页。</td></tr><tr><td>上下方向键</td><td>向上与向下移动，less命令特有功能键</td></tr><tr><td>less -N 文件名称</td><td>显示行号</td></tr><tr><td>&#x2F; 字符串</td><td>搜索指定的字符串。</td></tr><tr><td>q</td><td>退出less</td></tr></tbody></table><p>cat,more,less三者的对比：</p><table><thead><tr><th></th><th>cat</th><th>more</th><th>less</th></tr></thead><tbody><tr><td>作用</td><td>显示小文件(一屏以内)</td><td>显示大文件（超过一屏）</td><td>显示大文件（超过一屏）</td></tr><tr><td>交互命令</td><td>无</td><td>有</td><td>有</td></tr><tr><td>上下键翻行</td><td>无</td><td>无</td><td>有</td></tr></tbody></table><h1 id="二、文件统计命令"><a href="#二、文件统计命令" class="headerlink" title="二、文件统计命令"></a>二、文件统计命令</h1><h2 id="1、wc命令"><a href="#1、wc命令" class="headerlink" title="1、wc命令"></a>1、wc命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wc [选项] 文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-l</span>：表示lines，行数（以回车/换行符为标准）</span><br><span class="line"><span class="literal">-w</span>：表示words，单词数 依照空格来判断单词数量</span><br><span class="line"><span class="literal">-c</span>：表示bytes，字节数（空格，回车，换行）</span><br></pre></td></tr></table></figure><p>案例：统计linux.txt文件的总行数</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wc -l linux.txt</span></span><br></pre></td></tr></table></figure><p>案例：统计linux.txt文件中的单词数</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wc -w linux.txt</span></span><br></pre></td></tr></table></figure><p>案例：统计文件的字节数（数字、字母一般1个字符&#x3D;1个字节，中文和编码格式有关，如utf-8编码格式，1个汉字占用3个字节）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wc -c linux.txt</span></span><br></pre></td></tr></table></figure><blockquote><p>扩展：wc  [选项]  文件的名称可以统计一个文件的信息，实际情况下，我们选项还可以一起使用</p></blockquote><p>案例：统计一个文件的总行数、总单词数以及总字节数</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wc -wlc linux.txt</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># wc -lwc linux.txt</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># wc -clw linux.txt</span></span><br></pre></td></tr></table></figure><h2 id="2、du命令"><a href="#2、du命令" class="headerlink" title="2、du命令"></a>2、du命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># du [选项] 统计的文件或文件夹</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-s</span> ：summaries，只显示汇总的大小，统计文件夹的大小</span><br><span class="line"><span class="literal">-h</span> ：以较高的可读性显示文件或文件夹的大小，（KB/MB/GB/TB)</span><br></pre></td></tr></table></figure><p>主要功能：查看文件或目录(会递归显示子目录)占用磁盘空间大小</p><p>案例：显示readme.txt文件的大小（占用磁盘空间，不显示文件大小的单位）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># du readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：显示readme.txt文件的大小（占用磁盘空间，显示文件大小的单位）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># du -h readme.txt</span></span><br></pre></td></tr></table></figure><p>案例：统计wechat文件夹的大小</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># du -sh wechat</span></span><br></pre></td></tr></table></figure><p>案例：统计&#x2F;etc目录的大小</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># du -sh /etc</span></span><br></pre></td></tr></table></figure><h1 id="三、文件处理命令"><a href="#三、文件处理命令" class="headerlink" title="三、文件处理命令"></a>三、文件处理命令</h1><h2 id="1、find命令"><a href="#1、find命令" class="headerlink" title="1、find命令"></a>1、find命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find 搜索路径 [选项]</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-name</span>：指定要搜索文件的名称，支持*星号通配符（Shift + <span class="number">8</span>）</span><br><span class="line"><span class="literal">-type</span>：代表搜索的文件类型，f代表普通文件，d代表文件夹=&gt;加快检索速度</span><br></pre></td></tr></table></figure><p>主要功能：当我们查找一个文件时，必须使用的一个命令。</p><p>案例：搜索&#x2F;var目录中boot.log文件（普通文件）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /var -name &quot;boot.log&quot; -type f</span></span><br></pre></td></tr></table></figure><p>案例：全盘搜索ssh目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find / -name &quot;ssh&quot; -type d </span></span><br></pre></td></tr></table></figure><blockquote><p>特别注意：实际工作时，尽量减少全盘检索，比较消耗资源</p></blockquote><p>扩展功能：find实现模糊查询（必须结合通配符）</p><p>案例：搜索&#x2F;var&#x2F;log目录下的所有的以”.log”结尾的文件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /var/log -name &quot;*.log&quot; -type f</span></span><br></pre></td></tr></table></figure><blockquote><p>* ：通配符，代表任意个任意字符。如*.log代表以.log结尾的文件，apache*代表搜索以apache开头的文件信息</p></blockquote><h2 id="2、grep命令"><a href="#2、grep命令" class="headerlink" title="2、grep命令"></a>2、grep命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep [选项] 要搜索的关键词 搜索的文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-n</span> ：代表显示包含关键词的行号信息</span><br></pre></td></tr></table></figure><p>单位：行，一行一行向下搜索</p><p>主要功能：在文件中直接找到包含指定关键词的那些行，并把这些信息高亮显示出来</p><p>案例：在initial-setup-ks.cfg文件中搜索包含关键词”network”的行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep network initial-setup-ks.cfg</span></span><br></pre></td></tr></table></figure><p>案例：在initial-setup-ks.cfg文件中搜索包含关键词”network”的行，然后显示行号信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep -n network initial-setup-ks.cfg</span></span><br></pre></td></tr></table></figure><p>扩展语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep 要搜索的关键词 多个文件的名称</span></span><br></pre></td></tr></table></figure><p>主要功能：在多个文件中查找包含指定关键词的那些行，并高亮显示出来</p><p>案例：搜索&#x2F;var&#x2F;log目录下所有文件，找到包含关键词”network”的所有行信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep network /var/log/*</span></span><br></pre></td></tr></table></figure><h2 id="3、echo命令"><a href="#3、echo命令" class="headerlink" title="3、echo命令"></a>3、echo命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;文本内容&quot;</span></span><br></pre></td></tr></table></figure><p>主要功能：在终端中输入指定的文本内容</p><p>案例：在终端中，输出hello world字符串</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;hello world&quot;</span></span><br></pre></td></tr></table></figure><h2 id="4、输出重定向"><a href="#4、输出重定向" class="headerlink" title="4、输出重定向"></a>4、输出重定向</h2><p>场景：一般命令的输出都会显示在终端中，有些时候需要将一些命令的执行结果想要保存到文件中进行后续的分析&#x2F;统计，则这时候需要使用到的输出重定向技术。</p><p>&gt;  ：标准输出重定向 : 覆盖输出，会覆盖掉原先的文件内容</p><p>&gt;&gt;：追加重定向 : 追加输出，不会覆盖原始文件内容，会在原始内容末尾继续添加</p><p>案例：把echo输出的”hello world”写入到readme.txt文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;hello world&quot; &gt; readme.txt</span></span><br></pre></td></tr></table></figure><p>以上程序的主要功能代表把echo命令的执行结果，输出写入到readme.txt文件中，如果readme.txt文件中存在内容，则首先清空，然后在写入hello world</p><p>案例：把echo输出的”hello linux”写入到readme.txt，要求不能覆盖原来的内容</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;hello linux&quot; &gt;&gt; readme.txt</span></span><br></pre></td></tr></table></figure><h1 id="四、Linux操作系统用户和组的概念"><a href="#四、Linux操作系统用户和组的概念" class="headerlink" title="四、Linux操作系统用户和组的概念"></a>四、Linux操作系统用户和组的概念</h1><h2 id="1、为什么需要了解用户和组"><a href="#1、为什么需要了解用户和组" class="headerlink" title="1、为什么需要了解用户和组"></a>1、为什么需要了解用户和组</h2><p>服务器要添加多账户的作用</p><p>​        针对不同用户分配&#x3D;&#x3D;不同的权限&#x3D;&#x3D;，不同权限可以限制用户&#x3D;&#x3D;可以访问到的系统资源&#x3D;&#x3D;<br>​        提高系统的安全性<br>​        帮助系统管理员对使用系统的用户进行跟踪</p><h2 id="2、用户和组的关系"><a href="#2、用户和组的关系" class="headerlink" title="2、用户和组的关系"></a>2、用户和组的关系</h2><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E4%B8%8E%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86.assets/image-20200317145905871.png" alt="image-20200317145905871"></p><p>理论上Linux系统中的每个用户在创建时都应该有一个对应的用户组，这个组就称之为用户的主组。同时，有些情况下，某个用户需要临时使用某个组的权限，那这个组就称之为这个用户的附属组或附加组。</p><blockquote><p>主组只能拥有一个，但是附属组或附加组可以同时拥有多个 &#x3D;&gt;  亲爹，干爹（多个）</p></blockquote><h2 id="3、用户组操作"><a href="#3、用户组操作" class="headerlink" title="3、用户组操作"></a>3、用户组操作</h2><p>用户组的操作无疑三件事：用户组的添加、用户组的修改以及用户组的删除操作</p><p>组：group</p><p>添加：add</p><p>修改：mod</p><p>删除：del</p><h3 id="☆-用户组的添加"><a href="#☆-用户组的添加" class="headerlink" title="☆ 用户组的添加"></a>☆ 用户组的添加</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd [选项]  用户组的组名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-g</span> ：代表用户组的组ID编号，自定义组必须从<span class="number">1000</span>开始，不能重复</span><br></pre></td></tr></table></figure><p>案例：在系统中添加一个hr的用户组</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd hr</span></span><br></pre></td></tr></table></figure><p>案例：在系统中添加一个test的用户组并指定定编号1100</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 1100 test</span></span><br></pre></td></tr></table></figure><p>问题：我们刚才创建的hr以及test用户组到底添加到哪里了？</p><p>答：默认情况下，我们添加的用户组都会放在一个系统文件中，文件位置&#x3D;&gt;&#x2F;etc&#x2F;group</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -3 /etc/group</span></span><br><span class="line">root:x:<span class="number">0</span>:</span><br><span class="line">itheima:x:<span class="number">1000</span>:</span><br></pre></td></tr></table></figure><h3 id="☆-etc-group文件解析"><a href="#☆-etc-group文件解析" class="headerlink" title="☆ &#x2F;etc&#x2F;group文件解析"></a>☆ &#x2F;etc&#x2F;group文件解析</h3><p>由以上命令的执行结果可知，在&#x2F;etc&#x2F;group文件中，其一共拥有三个冒号，共四列。每列含义：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一列：用户组的组名称</span><br><span class="line">第二列：用户组的组密码，使用一个x占位符</span><br><span class="line">第三列：用户组的组ID编号，<span class="number">1</span><span class="literal">-999</span>代表系统用户组的组编号，<span class="number">1000</span>以后的代表自定义组的组编号</span><br><span class="line">CentOS6 =&gt; <span class="number">1</span><span class="literal">-499</span>,<span class="number">500</span>...</span><br><span class="line">CentOS7 =&gt; <span class="number">1</span><span class="literal">-999</span>,<span class="number">1000</span>...</span><br><span class="line">第四列：用户组内的用户信息（如果一个用户的附属组或附加组为这个组名，则显示在此位置）</span><br></pre></td></tr></table></figure><h3 id="☆-用户组的修改"><a href="#☆-用户组的修改" class="headerlink" title="☆ 用户组的修改"></a>☆ 用户组的修改</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupmod [选项 选项的值] 原来组的组名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-g</span> ：gid缩写，设置一个自定义的用户组ID数字，<span class="number">1000</span>以后</span><br><span class="line"><span class="literal">-n</span> ：name缩写，设置新的用户组的名称</span><br></pre></td></tr></table></figure><p>案例：把hr用户组更名为szhr</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupmod -n szhr hr</span></span><br></pre></td></tr></table></figure><p>案例：把test用户组的组编号由1100更改为1003</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupmod -g 1003 test</span></span><br></pre></td></tr></table></figure><p>案例：把itcast组的组名称更改为admin且用户组的组编号更改为1004</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupmod -g 1004 -n admin itcast</span></span><br></pre></td></tr></table></figure><h3 id="☆-用户组的删除"><a href="#☆-用户组的删除" class="headerlink" title="☆ 用户组的删除"></a>☆ 用户组的删除</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupdel 用户组名称</span></span><br></pre></td></tr></table></figure><p>案例：使用groupdel删除test用户组</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupdel test</span></span><br></pre></td></tr></table></figure><h2 id="4、用户操作"><a href="#4、用户操作" class="headerlink" title="4、用户操作"></a>4、用户操作</h2><p>用户：user</p><p>添加：add</p><p>修改：mod</p><p>删除：del</p><h3 id="☆-用户的添加"><a href="#☆-用户的添加" class="headerlink" title="☆ 用户的添加"></a>☆ 用户的添加</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd [选项 选项的值] 用户名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-g</span> ：代表添加用户时指定用户所属组的主组，唯一的组信息（重要）</span><br><span class="line"><span class="literal">-s</span> ：代表指定用户可以使用的Shell类型，默认为/bin/bash（拥有大部分权限）还可以是/sbin/nologin，代表账号创建成功，但是不能用于登录操作系统。</span><br><span class="line">/bin/bash =&gt; 给人使用的（运维工程师）</span><br><span class="line">/sbin/nologin =&gt; 给软件使用的</span><br><span class="line"></span><br><span class="line"><span class="literal">-G</span> ：代表添加用户时指定用户所属组的附属组或附加组，可以指定多个，用逗号隔开即可(了解)</span><br><span class="line"><span class="literal">-u</span> ：代表添加用户时指定的用户ID编号，CentOS6从<span class="number">500</span>开始，CentOS7中从<span class="number">1000</span>开始(了解)</span><br><span class="line"><span class="literal">-c</span> ：代表用户的备注信息，cqw:<span class="number">123456</span>:(陈权伟的账号)</span><br><span class="line"><span class="literal">-d</span> ：代表用户的家目录，默认为/home/用户名称。可以使用<span class="literal">-d</span>进行更改</span><br><span class="line"><span class="literal">-n</span> ：取消建立以用户名称为名的群组（了解）</span><br></pre></td></tr></table></figure><p>案例：在系统中创建一个linuxuser账号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd linuxuser</span></span><br></pre></td></tr></table></figure><p>问题：我们并没有为linuxuser账号指定所属的主组，可以成功创建账号么？</p><p>答：可以，因为在创建账号时，如果没有明确指定用户所属的主组，默认情况下，系统会自动在用户组中创建一个与用户linuxuser同名的用户组，这个组就是这个用户的主组。</p><p>问题：刚才创建的linuxuser账号能不能用于登录操作系统</p><p>答：不行，因为Linux的登录账号&#x3D;&#x3D;必须要求有密码&#x3D;&#x3D;，如果一个账号没有密码是无法登录操作系统的。</p><p>案例：在系统中创建一个账号zhangsan，指定用户所属的主组为itheima</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一步：查询一下itheima的组ID编号</span><br><span class="line"><span class="comment"># tail -5 /etc/group</span></span><br><span class="line">itheima:x:<span class="number">1000</span>:</span><br><span class="line">第二步：根据组的编号添加用户</span><br><span class="line"><span class="comment"># useradd -g 1000 zhangsan</span></span><br></pre></td></tr></table></figure><p>案例：在系统中创建一个账号lisi，指定主组为itheima，此用户只能被软件所使用，不能用于登录操作系统</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -g 1000 -s /sbin/nologin lisi</span></span><br></pre></td></tr></table></figure><p>案例：在系统中创建一个wangwu，指定主组为wangwu，附属组为itheima</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -G 1000 wangwu</span></span><br></pre></td></tr></table></figure><h3 id="☆-用户信息查询"><a href="#☆-用户信息查询" class="headerlink" title="☆ 用户信息查询"></a>☆ 用户信息查询</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># id 用户名称</span></span><br></pre></td></tr></table></figure><p>主要功能：查询某个指定的用户信息</p><p>案例：查询linuxuser用户的信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># id linuxuser</span></span><br><span class="line">uid=<span class="number">1002</span>(linuxuser) gid=<span class="number">1005</span>(linuxuser) groups=<span class="number">1005</span>(linuxuser)</span><br><span class="line">uid：用户编号</span><br><span class="line">gid：用户所属的主组的编号</span><br><span class="line">groups：用户的主组以及附属组信息，第一个是主组，后面的都是附属组或附加组信息</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件管理（上）-2</title>
      <link href="/posts/971.html"/>
      <url>/posts/971.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件管理（上）"><a href="#Linux文件管理（上）" class="headerlink" title="Linux文件管理（上）"></a>Linux文件管理（上）</h1><h1 id="一、VIM编辑器"><a href="#一、VIM编辑器" class="headerlink" title="一、VIM编辑器"></a>一、VIM编辑器</h1><h2 id="1、vi概述"><a href="#1、vi概述" class="headerlink" title="1、vi概述"></a>1、vi概述</h2><p> vi（visual editor）编辑器通常被简称为vi，它是Linux和Unix系统上最基本的文本编辑器，类似于Windows 系统下的notepad（记事本）编辑器。</p><h2 id="2、vim编辑器"><a href="#2、vim编辑器" class="headerlink" title="2、vim编辑器"></a>2、vim编辑器</h2><p>Vim(Vi improved)是vi编辑器的加强版，比vi更容易使用。vi的命令几乎全部都可以在vim上使用。</p><h2 id="3、vim编辑器的安装"><a href="#3、vim编辑器的安装" class="headerlink" title="3、vim编辑器的安装"></a>3、vim编辑器的安装</h2><h3 id="☆-已安装"><a href="#☆-已安装" class="headerlink" title="☆ 已安装"></a>☆ 已安装</h3><p>Centos通常都已经默认安装好了 vi 或 Vim 文本编辑器，我们只需要通过vim命令就可以直接打开vim编辑器了，如下图所示：</p><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315093026701.png" alt="image-20200315093026701"></p><h3 id="☆-未安装"><a href="#☆-未安装" class="headerlink" title="☆ 未安装"></a>☆ 未安装</h3><p>有些精简版的Linux操作系统，默认并没有安装vim编辑器（可能自带的是vi编辑器）。当我们在终端中输入vim命令时，系统会提示”command  not  found”。</p><p>解决办法：有网的前提下，可以使用yum工具对vim编辑器进行安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install vim -y</span></span><br></pre></td></tr></table></figure><h2 id="4、vim编辑器的四种模式（重点）"><a href="#4、vim编辑器的四种模式（重点）" class="headerlink" title="4、vim编辑器的四种模式（重点）"></a>4、vim编辑器的四种模式（重点）</h2><h3 id="☆-命令模式"><a href="#☆-命令模式" class="headerlink" title="☆ 命令模式"></a>☆ 命令模式</h3><p>使用VIM编辑器时，&#x3D;&#x3D;默认处于命令模式。&#x3D;&#x3D;在该模式下可以移动光标位置，可以通过&#x3D;&#x3D;快捷键&#x3D;&#x3D;对文件&#x3D;&#x3D;内容&#x3D;&#x3D;进行复制、粘贴、删除等操作。</p><h3 id="☆-编辑模式或输入模式"><a href="#☆-编辑模式或输入模式" class="headerlink" title="☆ 编辑模式或输入模式"></a>☆ 编辑模式或输入模式</h3><p>在命令模式下输入小写字母a或小写字母i即可进入编辑模式，在该模式下可以对文件的内容进行编辑</p><h3 id="☆-末行模式"><a href="#☆-末行模式" class="headerlink" title="☆ 末行模式"></a>☆ 末行模式</h3><p>在命令模式下输入冒号:即可进入末行模式，可以在&#x3D;&#x3D;末行输入命令&#x3D;&#x3D;来对文件进行查找、替换、保存、退出等操作</p><h3 id="☆-可视化模式（了解）"><a href="#☆-可视化模式（了解）" class="headerlink" title="☆ 可视化模式（了解）"></a>☆ 可视化模式（了解）</h3><p>可以做一些列选操作（通过方向键选择某些列的内容）</p><h1 id="二、VIM四种模式的关系"><a href="#二、VIM四种模式的关系" class="headerlink" title="二、VIM四种模式的关系"></a>二、VIM四种模式的关系</h1><h2 id="1、VIM四种模式"><a href="#1、VIM四种模式" class="headerlink" title="1、VIM四种模式"></a>1、VIM四种模式</h2><p>命令模式&#x2F;编辑模式&#x2F;末行模式&#x2F;可视化模式</p><h2 id="2、VIM四种模式的关系"><a href="#2、VIM四种模式的关系" class="headerlink" title="2、VIM四种模式的关系"></a>2、VIM四种模式的关系</h2><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315094423790.png" alt="image-20200315094423790"></p><h1 id="三、VIM编辑器的使用"><a href="#三、VIM编辑器的使用" class="headerlink" title="三、VIM编辑器的使用"></a>三、VIM编辑器的使用</h1><h2 id="1、使用vim打开文件"><a href="#1、使用vim打开文件" class="headerlink" title="1、使用vim打开文件"></a>1、使用vim打开文件</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim  文件名称</span></span><br></pre></td></tr></table></figure><p>① 如果文件已存在，则直接打开</p><p>② 如果文件不存在，则vim编辑器会自动在内存中创建一个新文件</p><p>案例：使用vim命令打开readme.txt文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim readme.txt</span></span><br></pre></td></tr></table></figure><h2 id="2、vim编辑器保存文件"><a href="#2、vim编辑器保存文件" class="headerlink" title="2、vim编辑器保存文件"></a>2、vim编辑器保存文件</h2><p>在任何模式下，连续按两次Esc键，即可返回到命令模式。然后按冒号：，进入到末行模式，输入wq，代表保存并退出。</p><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315102210869.png" alt="image-20200315102210869"></p><h2 id="3、vim编辑器强制退出（不保存）"><a href="#3、vim编辑器强制退出（不保存）" class="headerlink" title="3、vim编辑器强制退出（不保存）"></a>3、vim编辑器强制退出（不保存）</h2><p>在任何模式下，连续按两次Esc键，即可返回到命令模式。然后按冒号：，进入到末行模式，输入q!，代表强制退出但是不保存文件。</p><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315102248865.png" alt="image-20200315102248865"></p><h2 id="4、命令模式下的相关操作（重点）"><a href="#4、命令模式下的相关操作（重点）" class="headerlink" title="4、命令模式下的相关操作（重点）"></a>4、命令模式下的相关操作（重点）</h2><h3 id="☆-如何进入命令模式"><a href="#☆-如何进入命令模式" class="headerlink" title="☆ 如何进入命令模式"></a>☆ 如何进入命令模式</h3><p>答：在Linux操作系统中，当我们使用vim命令直接打开某个文件时，默认进入的就是命令模式。如果我们处于其他模式（编辑模式、可视化模式以及末行模式）可以连续按两次Esc键也可以返回命令模式</p><h3 id="☆-命令模式下我们能做什么"><a href="#☆-命令模式下我们能做什么" class="headerlink" title="☆ 命令模式下我们能做什么"></a>☆ 命令模式下我们能做什么</h3><p>① 移动光标 ② 复制 粘贴 ③ 剪切 粘贴 删除 ④ 撤销与恢复</p><h3 id="☆-移动光标到首行或末行（重点）"><a href="#☆-移动光标到首行或末行（重点）" class="headerlink" title="☆ 移动光标到首行或末行（重点）"></a>☆ 移动光标到首行或末行（重点）</h3><p>移动光标到首行 &#x3D;&gt; gg</p><p>移动光标到末行 &#x3D;&gt; G</p><h3 id="☆-翻屏"><a href="#☆-翻屏" class="headerlink" title="☆ 翻屏"></a>☆ 翻屏</h3><p>向上    翻屏，按键：<code>ctrl + b （before） 或 PgUp</code></p><p>向下    翻屏，按键：<code>ctrl + f （after）  或 PgDn</code></p><p>向上翻半屏，按键：<code>ctrl + u （up）</code></p><p>向下翻半屏，按键：<code>ctrl + d （down）</code></p><h3 id="☆-快速定位光标到指定行（重点）"><a href="#☆-快速定位光标到指定行（重点）" class="headerlink" title="☆ 快速定位光标到指定行（重点）"></a>☆ 快速定位光标到指定行（重点）</h3><p>行号 + G，如150G代表快速移动光标到第150行。</p><h3 id="☆-复制-粘贴（重点）"><a href="#☆-复制-粘贴（重点）" class="headerlink" title="☆ 复制&#x2F;粘贴（重点）"></a>☆ 复制&#x2F;粘贴（重点）</h3><p>① 复制当前行（光标所在那一行）</p><p>按键：yy</p><p>粘贴：在想要粘贴的地方按下p 键【将粘贴在光标所在行的下一行】,如果想粘贴在光标所在行之前，则使用P键</p><p>② 从当前行开始复制指定的行数，如复制5行，5yy</p><p>粘贴：在想要粘贴的地方按下p 键【将粘贴在光标所在行的下一行】,如果想粘贴在光标所在行之前，则使用P键</p><h3 id="☆-剪切-删除（重点）"><a href="#☆-剪切-删除（重点）" class="headerlink" title="☆ 剪切&#x2F;删除（重点）"></a>☆ 剪切&#x2F;删除（重点）</h3><p>在VIM编辑器中，剪切与删除都是dd</p><p>如果剪切了文件，但是没有使用p进行粘贴，就是删除操作</p><p>如果剪切了文件，然后使用p进行粘贴，这就是剪切操作</p><p>① 剪切&#x2F;删除当前光标所在行</p><p>按键：dd （删除之后下一行上移）</p><p>粘贴：p</p><p>注意：dd 严格意义上说是剪切命令，但是如果剪切了不粘贴就是删除的效果。</p><p>② 剪切&#x2F;删除多行（从当前光标所在行开始计算）</p><p>按键：数字dd</p><p>粘贴：p</p><p>特殊用法：</p><p>③ 剪切&#x2F;删除光标所在的当前行（光标所在位置）之后的内容，但是删除之后下一行不上移</p><p>按键：D （删除之后当前行会变成空白行）</p><h3 id="☆-撤销-恢复（重点）"><a href="#☆-撤销-恢复（重点）" class="headerlink" title="☆ 撤销&#x2F;恢复（重点）"></a>☆ 撤销&#x2F;恢复（重点）</h3><p>撤销：u（undo）</p><p>恢复：ctrl + r 恢复（取消）之前的撤销操作【重做，redo】</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>① 怎么进入命令模式（vim 文件名称，在任意模式下，可以连续按两次Esc键即可返回命令模式）</p><p>② 命令模式能做什么？移动光标、复制&#x2F;粘贴、剪切&#x2F;删除、撤销与恢复</p><p>首行 &#x3D;&gt; gg，末行 &#x3D;&gt; G  翻屏（了解） 快速定位 行号G，如150G</p><p>yy  p   5yy  p</p><p>dd p   5dd p</p><p>u</p><p>ctrl + r</p><h2 id="5、末行模式下的相关操作（重点）"><a href="#5、末行模式下的相关操作（重点）" class="headerlink" title="5、末行模式下的相关操作（重点）"></a>5、末行模式下的相关操作（重点）</h2><h3 id="☆-如何进入末行模式"><a href="#☆-如何进入末行模式" class="headerlink" title="☆ 如何进入末行模式"></a>☆ 如何进入末行模式</h3><p>进入末行模式的方法只有一个，在命令模式下使用冒号：的方式进入。</p><h3 id="☆-末行模式下我们能做什么"><a href="#☆-末行模式下我们能做什么" class="headerlink" title="☆ 末行模式下我们能做什么"></a>☆ 末行模式下我们能做什么</h3><p>文件保存、退出、查找与替换、显示行号、paste模式等等</p><h3 id="☆-保存-退出（重点）"><a href="#☆-保存-退出（重点）" class="headerlink" title="☆ 保存&#x2F;退出（重点）"></a>☆ 保存&#x2F;退出（重点）</h3><p>:w &#x3D;&gt; 代表对当前文件进行保存操作，但是其保存完成后，并没有退出这个文件</p><p>:q &#x3D;&gt; 代表退出当前正在编辑的文件，但是一定要注意，文件必须先保存，然后才能退出</p><p>:wq &#x3D;&gt; 代表文件先保存后退出（保存并退出）</p><p>如果一个文件在编辑时没有名字，则可以使用:wq  文件名称，代表把当前正在编辑的文件保存到指定的名称中，然后退出</p><p>:q! &#x3D;&gt; 代表强制退出但是文件未保存（不建议使用）</p><h3 id="☆-查找-搜索（重点）"><a href="#☆-查找-搜索（重点）" class="headerlink" title="☆ 查找&#x2F;搜索（重点）"></a>☆ 查找&#x2F;搜索（重点）</h3><p>切换到命令模式，然后输入斜杠&#x2F;（也是进入末行模式的方式之一）</p><p>进入到末行模式后，输入要查找或搜索的关键词，然后回车</p><p>如果在一个文件中，存在多个满足条件的结果。在搜索结果中切换上&#x2F;下一个结果：N&#x2F;n （大写N代表上一个结果，小写n代表next）</p><p>如果需要取消高亮，则需要在末行模式中输入<code>:noh</code>【no highlight】</p><h3 id="☆-文件内容的替换（重点）"><a href="#☆-文件内容的替换（重点）" class="headerlink" title="☆ 文件内容的替换（重点）"></a>☆ 文件内容的替换（重点）</h3><p>第一步：首先要进入末行模式（在命令模式下输入冒号:）</p><p>第二步：根据需求替换内容</p><p>① 只替换光标所在这一行的第一个满足条件的结果（只能替换1次）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:s/要替换的关键词/替换后的关键词   +  回车</span><br></pre></td></tr></table></figure><p>案例：把hello centos中的centos替换为centos7.6</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">切换光标到hello centos这一行</span><br><span class="line">:s/centos/centos7.<span class="number">6</span></span><br></pre></td></tr></table></figure><p>② 替换光标所在这一行中的所有满足条件的结果（替换多次，只能替换一行）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:s/要替换的关键词/替换后的关键词/gg=global全局替换</span><br></pre></td></tr></table></figure><p>案例：把hello centos中的所有centos都替换为centos7.6</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">切换光标到hello centos这一行</span><br><span class="line">:s/centos/centos7.<span class="number">6</span>/g</span><br></pre></td></tr></table></figure><p>③ 针对整个文档中的所有行进行替换，只替换每一行中满足条件的第一个结果</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/要替换的关键词/替换后的关键词</span><br></pre></td></tr></table></figure><p>案例：把每一行中的第一个hello关键词都替换为hi</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/hello/hi</span><br></pre></td></tr></table></figure><p>④ 针对整个文档中的所有关键词进行替换（只要满足条件就进行替换操作）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/要替换的关键词/替换后的关键词/g</span><br></pre></td></tr></table></figure><p>案例：替换整个文档中的hello关键词为hi</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/hello/hi/g</span><br></pre></td></tr></table></figure><h3 id="☆-显示行号"><a href="#☆-显示行号" class="headerlink" title="☆ 显示行号"></a>☆ 显示行号</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">set</span> nu</span><br><span class="line">nu = number，行号</span><br></pre></td></tr></table></figure><blockquote><p>取消行号 &#x3D;&gt; :set  nonu</p></blockquote><h3 id="☆-set-paste模式-了解"><a href="#☆-set-paste模式-了解" class="headerlink" title="☆ set paste模式(了解)"></a>☆ set paste模式(了解)</h3><p>为什么要使用paste模式？</p><p>问题：在终端Vim中粘贴代码时，发现插入的代码会有多余的缩进，而且会逐行累加。原因是终端把粘贴的文本存入键盘缓存（Keyboard Buffer）中，Vim则把这些内容作为用户的键盘输入来处理。导致在遇到换行符的时候，如果Vim开启了自动缩进，就会默认的把上一行缩进插入到下一行的开头，最终使代码变乱。</p><p>在粘贴数据之前，输入下面命令开启paste模式<br>:set paste</p><p>粘贴完毕后，输入下面命令关闭paste模式<br>:set nopaste</p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>① 如何进入末行模式，必须从命令模式中使用冒号进行切换</p><p>② 末行模式下能做什么？保存、退出、查找、替换、显示行号以及paste模式</p><p>③ 保存 &#x3D;&gt; :w</p><p>④ 退出 &#x3D;&gt; :q，先保存后退出。:wq     :wq  文件名称    :q!</p><p>⑤ 查找功能 &#x3D;&gt; 命令模式输入&#x2F;斜杠  +  关键词（高亮显示）&#x3D;&gt; :noh</p><p>⑥ 替换功能</p><p>:s&#x2F;要替换的关键词&#x2F;替换后的关键词</p><p>:s&#x2F;要替换的关键词&#x2F;替换后的关键词&#x2F;g</p><p>:%s&#x2F;要替换的关键词&#x2F;替换后的关键词</p><p>:%s&#x2F;要替换的关键词&#x2F;替换后的关键词&#x2F;g</p><p>⑦ 显示行号 &#x3D;&gt; :set nu 取消行号 &#x3D;&gt; :set nonu</p><p>⑧ paste模式 &#x3D;&gt; 将来在粘贴代码的时候为了保存原格式 &#x3D;&gt; 粘贴之前 &#x3D;&gt; :set paste</p><h1 id="四、编辑模式"><a href="#四、编辑模式" class="headerlink" title="四、编辑模式"></a>四、编辑模式</h1><h2 id="1、编辑模式的作用"><a href="#1、编辑模式的作用" class="headerlink" title="1、编辑模式的作用"></a>1、编辑模式的作用</h2><p>编辑模式的作用比较简单，主要是实现对文件的内容进行编辑模式。</p><h2 id="2、如何进入编辑模式"><a href="#2、如何进入编辑模式" class="headerlink" title="2、如何进入编辑模式"></a>2、如何进入编辑模式</h2><p>首先你需要进入到命令模式，然后使用小写字母a或小写字母i，进入编辑模式。</p><p>命令模式 + i  ： insert缩写，代表在光标之前插入内容</p><p>命令模式 + a ： append缩写，代表在光标之后插入内容</p><h2 id="3、退出编辑模式"><a href="#3、退出编辑模式" class="headerlink" title="3、退出编辑模式"></a>3、退出编辑模式</h2><p>在编辑模式中，直接按Esc，即可从编辑模式退出到命令模式。</p><h1 id="五、可视化模式"><a href="#五、可视化模式" class="headerlink" title="五、可视化模式"></a>五、可视化模式</h1><h2 id="1、如何进入到可视化模式"><a href="#1、如何进入到可视化模式" class="headerlink" title="1、如何进入到可视化模式"></a>1、如何进入到可视化模式</h2><p>在命令模式中，直接按ctrl + v（可视块）或V（可视行）或v（可视），然后按下↑  ↓  ←  →方向键来选中需要复制的区块，按下y 键进行复制（不要按下yy），最后按下p 键粘贴</p><p>退出可视模式按下Esc</p><h2 id="2、可视化模式复制操作"><a href="#2、可视化模式复制操作" class="headerlink" title="2、可视化模式复制操作"></a>2、可视化模式复制操作</h2><p>第一步：在命令模式下，直接按小v，进入可视化模式</p><p>第二步：使用方向键↑  ↓  ←  →选择要复制的内容，然后按y键</p><p>第三步：移动光标，停在需要粘贴的位置，按p键进行粘贴操作</p><h2 id="3、为配置文件添加-多行注释（重点）"><a href="#3、为配置文件添加-多行注释（重点）" class="headerlink" title="3、为配置文件添加#多行注释（重点）"></a>3、为配置文件添加#多行注释（重点）</h2><p>第一步：按Esc退出到命令模式，按gg切换到第1行</p><p>第二步：然后按Ctrl+v进入到可视化区块模式（列模式）</p><p>第三步：在行首使用上下键选择需要注释的多行</p><p>第四步：按下键盘（大写）“I”键，进入插入模式（Shift + i）</p><p>第五步：输入#号注释符</p><p>第六步：输入完成后，连续按两次Esc即可完成添加多行注释的过程</p><h2 id="4、为配置文件去除-多行注释（重点）"><a href="#4、为配置文件去除-多行注释（重点）" class="headerlink" title="4、为配置文件去除#多行注释（重点）"></a>4、为配置文件去除#多行注释（重点）</h2><p>第一步：按Esc退出到命令模式，按gg切换到第1行</p><p>第二步：然后按Ctrl+v进入可视化区块模式（列模式）</p><p>第三步：使用键盘上的方向键的上下选中需要移除的#号注释</p><p>第四步：直接按Delete键即可完成删除注释的操作</p><h1 id="六、VIM编辑器实用功能"><a href="#六、VIM编辑器实用功能" class="headerlink" title="六、VIM编辑器实用功能"></a>六、VIM编辑器实用功能</h1><h2 id="1、代码着色"><a href="#1、代码着色" class="headerlink" title="1、代码着色"></a>1、代码着色</h2><p>之前说过vim 是vi 的升级版本，其中比较典型的区别就是vim 更加适合coding，因为vim比vi 多一个代码着色的功能，这个功能主要是为程序员提供编程语言升的语法显示效果，如下：</p><p>第一步：定义后缀名为网页文件的代码文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim index.php</span></span><br></pre></td></tr></table></figure><p>第二步：编写对应的PHP代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在VIM编辑器中，我们可以通过<code>:syntax on</code>或<code>:syntax off</code>开启或关闭代码着色功能。</p><h2 id="2、异常退出解决方案"><a href="#2、异常退出解决方案" class="headerlink" title="2、异常退出解决方案"></a>2、异常退出解决方案</h2><p>什么是异常退出：在编辑文件之后并没有正常的去wq（保存退出），而是遇到突然关闭终端或者断电的情况，则会显示下面的效果，这个情况称之为异常退出：</p><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315155600276.png" alt="image-20200315155600276"></p><blockquote><p>温馨提示：每个文件的异常文件都会有所不同，其命名规则一般为<code>.文件名称.swp</code></p></blockquote><p>解决办法：将交换文件（在编程过程中产生的临时文件）删除掉即可【在上述提示界面按下D 键或者使用rm 指令删除交换文件】</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm .1.php.swp</span></span><br></pre></td></tr></table></figure><h2 id="3、退出vim编辑器"><a href="#3、退出vim编辑器" class="headerlink" title="3、退出vim编辑器"></a>3、退出vim编辑器</h2><p>回顾：在vim中，退出正在编辑的文件可以使用<code>:q</code>或者<code>:wq</code></p><p>除了上面的这个语法之外，vim 还支持另外一个保存退出(针对内容)方法<code>:x</code></p><p>① <code>:x</code>在文件没有修改的情况下，表示直接退出（等价于:q），在文件修改的情况下表</p><p>示保存并退出（:wq）</p><p>② 如果文件没有被修改，但是使用wq 进行退出的话，则文件的修改时间会被更新；但是如果文件没有被修改，使用x 进行退出的话，则文件修改时间不会被更新的；主要是会混淆用户对文件的修改时间的认定。</p><h1 id="七、查看文件的内容"><a href="#七、查看文件的内容" class="headerlink" title="七、查看文件的内容"></a>七、查看文件的内容</h1><h2 id="1、cat命令"><a href="#1、cat命令" class="headerlink" title="1、cat命令"></a>1、cat命令</h2><h3 id="☆-输出文件内容"><a href="#☆-输出文件内容" class="headerlink" title="☆ 输出文件内容"></a>☆ 输出文件内容</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat 文件名称</span></span><br><span class="line"><span class="number">111</span></span><br><span class="line"><span class="number">222</span></span><br><span class="line"><span class="number">333</span></span><br><span class="line"><span class="number">444</span></span><br></pre></td></tr></table></figure><p>主要功能：正序输出文件的内容</p><h3 id="☆-合并多个文件内容"><a href="#☆-合并多个文件内容" class="headerlink" title="☆ 合并多个文件内容"></a>☆ 合并多个文件内容</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat 文件名称1  文件名称2  ... &gt; 合并后的文件名称</span></span><br></pre></td></tr></table></figure><p>主要功能：把文件名称1、文件名称2、…中的内容的合并到一个文件中</p><h2 id="2、tac命令"><a href="#2、tac命令" class="headerlink" title="2、tac命令"></a>2、tac命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tac 文件名称</span></span><br><span class="line"><span class="number">444</span></span><br><span class="line"><span class="number">333</span></span><br><span class="line"><span class="number">222</span></span><br><span class="line"><span class="number">111</span></span><br></pre></td></tr></table></figure><p>主要功能：倒序输出文件的内容</p><h2 id="3、head命令"><a href="#3、head命令" class="headerlink" title="3、head命令"></a>3、head命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># head -n 文件名称</span></span><br></pre></td></tr></table></figure><p>主要功能：查看一个文件的前n 行，如果不指定n，则默认显示前10 行</p><p>案例：查询linux.txt文件中的前10行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># head linux.txt</span></span><br></pre></td></tr></table></figure><p>案例：查询linux.txt文件中的前3行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># head -3 linux.txt</span></span><br></pre></td></tr></table></figure><h2 id="4、tail命令"><a href="#4、tail命令" class="headerlink" title="4、tail命令"></a>4、tail命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -n 文件名称</span></span><br></pre></td></tr></table></figure><p>主要功能：查看一个文件的最后n 行，如果不指定n，则默认显示最后10 行</p><p>案例：查询linux.txt文件的最后10行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail linux.txt</span></span><br></pre></td></tr></table></figure><p>案例：查询linux.txt文件的最后3行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -3 linux.txt</span></span><br></pre></td></tr></table></figure><h2 id="5、tail-f命令"><a href="#5、tail-f命令" class="headerlink" title="5、tail -f命令"></a>5、tail -f命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail  -f  文件名称</span></span><br></pre></td></tr></table></figure><p>主要功能：动态查看一个文件内容的输出信息（主要用于将来查询日志文件的变化）</p><p>案例：查询系统的&#x2F;var&#x2F;log&#x2F;messages文件的日志信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -f /var/log/messages</span></span><br></pre></td></tr></table></figure><p>退出方式可以直接按快捷键：Ctrl + C，中断操作</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux用户管理与远程管理</title>
      <link href="/posts/51797.html"/>
      <url>/posts/51797.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux用户管理与远程管理"><a href="#Linux用户管理与远程管理" class="headerlink" title="Linux用户管理与远程管理"></a>Linux用户管理与远程管理</h1><h1 id="一、用户管理"><a href="#一、用户管理" class="headerlink" title="一、用户管理"></a>一、用户管理</h1><h2 id="1、回顾用户组管理"><a href="#1、回顾用户组管理" class="headerlink" title="1、回顾用户组管理"></a>1、回顾用户组管理</h2><p>groupadd ：组添加</p><p>groupmod：组修改</p><p>groupdel：组删除</p><p>与用户组相关的文件&#x2F;etc&#x2F;group，一共拥有4列</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">itheima:x:<span class="number">1000</span>:</span><br><span class="line"><span class="number">1</span>-组名称</span><br><span class="line"><span class="number">2</span>-组密码</span><br><span class="line"><span class="number">3</span>-组编号</span><br><span class="line"><span class="number">4</span>-组内用户信息（这个组必须是这个用户的附属组或附加组）</span><br></pre></td></tr></table></figure><h2 id="2、回顾用户管理"><a href="#2、回顾用户管理" class="headerlink" title="2、回顾用户管理"></a>2、回顾用户管理</h2><p>useradd用户的添加</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd [选项 选项的值]  用户名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-g</span> ：指定用户的主组的编号信息</span><br><span class="line"><span class="literal">-s</span> ：指定用户可以使用的Shell类型</span><br><span class="line">/bin/bash ：给人用的，给运维工程师</span><br><span class="line">/sbin/nologin ：给软件用的，比如mysql</span><br><span class="line"></span><br><span class="line"><span class="literal">-G</span> ：指定附属组的ID编号，如果有多个附属组，可以使用逗号隔开 useradd <span class="literal">-G</span> <span class="number">1000</span>,<span class="number">1001</span> ..</span><br><span class="line"><span class="literal">-d</span> ：指定用户的家，/home/itheima，useradd <span class="literal">-d</span> /itheima itheima</span><br><span class="line"><span class="literal">-u</span> ：指定用户的ID编号，默认是自动生成的</span><br><span class="line"><span class="literal">-c</span> ：comment，注释信息，scj:x:uid:gid:宋楚杰的账号</span><br><span class="line"><span class="literal">-n</span> ：取消以用户名称命名的组信息</span><br></pre></td></tr></table></figure><p>id命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># id itheima</span></span><br></pre></td></tr></table></figure><h2 id="3、与用户相关的用户文件"><a href="#3、与用户相关的用户文件" class="headerlink" title="3、与用户相关的用户文件"></a>3、与用户相关的用户文件</h2><p>组：&#x2F;etc&#x2F;group文件</p><p>用户：&#x2F;etc&#x2F;passwd文件，每创建一个用户，其就会在此文件中追加一行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/passwd</span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">由上图可知，一共拥有<span class="number">7</span>列</span><br><span class="line">第<span class="number">1</span>列：用户名称</span><br><span class="line">第<span class="number">2</span>列：用户的密码，使用一个x占位符，真实密码存储在/etc/shadow(<span class="number">1</span>-用户名，<span class="number">2</span>-加密密码)</span><br><span class="line">第<span class="number">3</span>列：数字，用户的ID编号</span><br><span class="line">第<span class="number">4</span>列：数字，用户的主组ID编号</span><br><span class="line">第<span class="number">5</span>列：代表注释信息，useradd <span class="literal">-c</span> <span class="string">&quot;备注信息&quot;</span> 用户名称</span><br><span class="line">第<span class="number">6</span>列：用户的家目录，默认在/home/用户名称</span><br><span class="line">第<span class="number">7</span>列：用户可以使用的Shell类型，useradd <span class="literal">-s</span> /bin/bash或/sbin/nologin 用户名称</span><br></pre></td></tr></table></figure><h2 id="4、用户修改操作"><a href="#4、用户修改操作" class="headerlink" title="4、用户修改操作"></a>4、用户修改操作</h2><p>用户：user，添加：add，修改：mod，删除：del</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod [选项 选项的值] 用户名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-g</span> ：修改用户所属的主组的编号</span><br><span class="line"><span class="literal">-l</span> ：login name修改用户的名称</span><br><span class="line"><span class="literal">-s</span> ：修改用户可以使用的Shell类型，如/bin/bash =&gt; /sbin/nologin</span><br><span class="line"></span><br><span class="line">扩展：</span><br><span class="line"><span class="literal">-L</span>：锁定用户，锁定后用户无法登陆系统lock</span><br><span class="line"><span class="literal">-U</span>：解锁用户unlock</span><br><span class="line"></span><br><span class="line">了解：</span><br><span class="line"><span class="literal">-G</span> ：修改用户附属组的编号信息</span><br><span class="line"><span class="literal">-d</span> ：修改用户的家目录</span><br><span class="line"><span class="literal">-c</span> ：修改用户的备注信息</span><br></pre></td></tr></table></figure><p>案例：修改zhangsan账号信息，更名为zs</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -l zs zhangsan</span></span><br></pre></td></tr></table></figure><p>案例：修改wangwu账号信息，把用户的主组的编号更新为1000（itheima）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -g 1000 wangwu</span></span><br></pre></td></tr></table></figure><p>案例：禁止linuxuser账号登录Linux操作系统</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -s /sbin/nologin linuxuser</span></span><br></pre></td></tr></table></figure><p>案例：禁止linux用户登录操作（Ctrl + Alt + F2 ~ F6）</p><blockquote><p>Linux系统除了默认的图形化界面，其实还有5个隐藏的字符界面，按Ctrl + Alt + F1~F6</p><p>有些电脑开启Fn功能键，所以如果Ctrl + Alt + F1<del>F6不生效，则可以按Ctrl + Alt + Fn + F1</del>F6</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -L linux</span></span><br></pre></td></tr></table></figure><p>案例：解锁linux用户</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usermod -U linux</span></span><br></pre></td></tr></table></figure><blockquote><p>问题：账号已经解锁，但是无法登录</p><p>① 当前账号没有设置密码，因为Linux操作系统不允许没有密码的操作进行登录</p><p>② 当前用户的Shell类型为&#x2F;sbin&#x2F;nologin，所以其无法登录</p></blockquote><h2 id="5、passwd命令"><a href="#5、passwd命令" class="headerlink" title="5、passwd命令"></a>5、passwd命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># passwd 用户名称</span></span><br></pre></td></tr></table></figure><p>主要功能：为某个用户设置密码（添加或修改），可以给自己也可以给别人设置</p><p>案例：修改自己的密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">yunwei</span> ~]<span class="comment"># passwd</span></span><br></pre></td></tr></table></figure><p>案例：为linux账号添加一个密码，密码：123456</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">yunwei</span> ~]<span class="comment"># passwd linux</span></span><br></pre></td></tr></table></figure><blockquote><p>特别注意：在Linux操作系统中，如果一个账号没有密码，则无法登录操作系统。</p></blockquote><h2 id="6、su命令"><a href="#6、su命令" class="headerlink" title="6、su命令"></a>6、su命令</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su [-] root</span></span><br><span class="line">选项：</span><br><span class="line">- ：横杠（减号），代表切换用户的同时，切换目录到用户的家</span><br></pre></td></tr></table></figure><p>主要功能：切换用户的账号</p><blockquote><p>从超级管理员切换到普通用户，root &#x3D;&gt; itheima，不需要输入itheima的密码</p><p>从普通账号切换到超级管理员，itheima &#x3D;&gt; root，需要输入root的密码</p><p>从普通账号切换到普通账号，itheima &#x3D;&gt; linuxuser，也需要输入linuxuser密码</p></blockquote><h2 id="7、wheel组（了解）"><a href="#7、wheel组（了解）" class="headerlink" title="7、wheel组（了解）"></a>7、wheel组（了解）</h2><p>Linux系统中，理论上只有在wheel组中的普通用户，才可以通过su命令切换到root账户，默认所有普通用户都能切换到root，只要知道root密码，换句话说，默认此配置不生效</p><h2 id="8、用户删除操作"><a href="#8、用户删除操作" class="headerlink" title="8、用户删除操作"></a>8、用户删除操作</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># userdel [选项] 用户名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-r</span> ：删除用户的同时，删除用户的家（默认不删除）</span><br></pre></td></tr></table></figure><p>案例：删除用户但是不删除用户的家目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># userdel zs</span></span><br></pre></td></tr></table></figure><p>案例：删除用户的同时删除用户的家目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># userdel -r lisi</span></span><br></pre></td></tr></table></figure><blockquote><p>删除账号流程：① 删除账号 ② 确认是否删除用户家 ③ 删除用户主组（没有其他用户）</p></blockquote><p>扩展：当我们想要删除某个账号时，系统提示当前账号正在被某个进程所使用</p><p>![image-20200318114052650](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318114052650.png)</p><p>解决方案：</p><p>第一种方案：找到登录的这个用户，然后将其直接注销</p><p>第二种方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kill [-9] 进程的ID编号</span></span><br><span class="line">选项说明：<span class="literal">-9</span>代表强制结束某个进程</span><br><span class="line">主要功能：用于结束某个进程的继续运行</span><br></pre></td></tr></table></figure><p>案例：结束11565进程</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kill 11565</span></span><br></pre></td></tr></table></figure><p>简单粗暴，kill 对应用户的全部进程（尽量斩草除根，结束父进程）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef |grep linux</span></span><br><span class="line"><span class="built_in">ps</span>命令：查看进程</span><br><span class="line"><span class="literal">-ef</span> ：查看系统的所有进程</span><br><span class="line">|：管道命令</span><br><span class="line">grep linux：搜索包含了linux关键词的所有进程</span><br></pre></td></tr></table></figure><p>结束完成后，再次使用userdel删除即可</p><h1 id="二、管道（重点）"><a href="#二、管道（重点）" class="headerlink" title="二、管道（重点）"></a>二、管道（重点）</h1><h2 id="1、管道符"><a href="#1、管道符" class="headerlink" title="1、管道符"></a>1、管道符</h2><p>&#x3D;&#x3D;”|”&#x3D;&#x3D;，竖线</p><p>作用：管道是一种通信机制，通常用于进程间的通信。它表现出来的形式将&#x3D;&#x3D;前面每一个进程的输出（stdout）直接作为下一个进程的输入（stdin）&#x3D;&#x3D;。</p><p>![image-20200318140553750](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318140553750.png)</p><p>0 ： 标准输入，程序或命令需要外部的某些程序传递相应的参数，才能正常运行</p><p>1 ：标准输出，程序或命令正确的执行结果，我们就称之为标准输出</p><p>2 ：标准错误，程序或命令错误的执行结果，我们就称之为标准错误</p><h2 id="2、过滤（筛选）功能"><a href="#2、过滤（筛选）功能" class="headerlink" title="2、过滤（筛选）功能"></a>2、过滤（筛选）功能</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前一个命令 | 后一个命令</span></span><br></pre></td></tr></table></figure><p>案例：获取&#x2F;根目录下包含关键字”y”的文件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls / | grep y</span></span><br><span class="line">解析：</span><br><span class="line">| ：管道符号，作用=&gt;把<span class="built_in">ls</span> /的正确的执行结果作为参数传递给grep命令</span><br><span class="line"><span class="built_in">ls</span> / ：管道左边的命令</span><br><span class="line">grep y ：管道右边的命令</span><br></pre></td></tr></table></figure><blockquote><p>grep命令的基本语法 &#x3D;&gt; grep  关键字  文件名称</p></blockquote><p>案例：检索系统中的已安装文件，只筛选mariadb软件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa | grep mariadb</span></span><br><span class="line"><span class="literal">-q</span> ：query，查询</span><br><span class="line"><span class="literal">-a</span> ：all，所有</span><br></pre></td></tr></table></figure><p>案例：在系统的进程中进行查找，查找与itheima相关的进程信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef | grep itheima</span></span><br><span class="line"><span class="built_in">ps</span> <span class="literal">-ef</span> ：查询系统中所有正在运行的进程</span><br></pre></td></tr></table></figure><h2 id="3、特殊功能"><a href="#3、特殊功能" class="headerlink" title="3、特殊功能"></a>3、特殊功能</h2><p>通过管道的操作方法来实现less 的等价效果（了解）</p><p>例如：源指令是”less xxx.txt”，使用管道的话则可以写成：cat xxx.txt | less</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># less initial-setup-ks.cfg</span></span><br><span class="line">更改为管道命令</span><br><span class="line"><span class="comment"># cat initial-setup-ks.cfg | less</span></span><br></pre></td></tr></table></figure><h2 id="4、统计功能（重点）"><a href="#4、统计功能（重点）" class="headerlink" title="4、统计功能（重点）"></a>4、统计功能（重点）</h2><p>回顾：wc命令，word count，文件统计功能</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wc [选项] 文件名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-l</span> : 统计总行数</span><br><span class="line"><span class="literal">-w</span> : word，总单词数</span><br><span class="line"><span class="literal">-c</span> : 统计总字节数</span><br></pre></td></tr></table></figure><p>案例：统计&#x2F;根目录下一共有多少个文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls / | wc -l</span></span><br></pre></td></tr></table></figure><p>案例：用户在计算机中有一个配置文件（&#x2F;etc&#x2F;passwd），一般情况下，一个用户会占用一行配置，请你使用现学的管道统计当前计算机中一共有多少个用户个信息（一个用户一行）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/passwd | wc -l</span></span><br></pre></td></tr></table></figure><h2 id="5、xargs命令扩展"><a href="#5、xargs命令扩展" class="headerlink" title="5、xargs命令扩展"></a>5、xargs命令扩展</h2><p>问题：为什么需要xargs命令？</p><p>答：之所以能用到这个命令，关键是由于很多命令不支持 | 管道来传递参数，而日常工作中又有这个必要，所以就有了 xargs 命令。</p><blockquote><p>简单来说，xargs命令就相当于对管道命令进行了一个扩展，让所有命令都支持管道</p></blockquote><p>案例：搜索&#x2F;etc目录下的所有”.conf”结尾的文件信息，然后以详细列表形式显示</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /etc -name &quot;*.conf&quot; | ls -l</span></span><br></pre></td></tr></table></figure><p>解决方案，在ls命令之前添加一个xargs命令，这样ls命令就支持管道了，可以用于接收前一个命令的执行结果</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find /etc -name &quot;*.conf&quot; | xargs ls -l</span></span><br></pre></td></tr></table></figure><h1 id="三、Linux网络管理"><a href="#三、Linux网络管理" class="headerlink" title="三、Linux网络管理"></a>三、Linux网络管理</h1><h2 id="1、获取计算机的网络信息"><a href="#1、获取计算机的网络信息" class="headerlink" title="1、获取计算机的网络信息"></a>1、获取计算机的网络信息</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br></pre></td></tr></table></figure><blockquote><p>Windows &#x3D;&gt; ipconfig    Linux &#x3D;&gt; ifconfig</p></blockquote><p>第一步：连接网络</p><p>![image-20200318153054968](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318153054968.png)</p><p>第二步：使用ifconfig命令，获取计算机的网络信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">ens33: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        inet <span class="number">10.1</span>.<span class="number">1.16</span>  netmask <span class="number">255.255</span>.<span class="number">255.0</span>  broadcast <span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line">        inet6 fe80::e472:<span class="number">7</span>b78:c871:<span class="number">8</span>e12  prefixlen <span class="number">64</span>  scopeid <span class="number">0</span>x20&lt;link&gt;</span><br><span class="line">        ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">48</span>:bf:f9  txqueuelen <span class="number">1000</span>  (Ethernet)</span><br><span class="line">        RX packets <span class="number">254</span>  bytes <span class="number">54837</span> (<span class="number">53.5</span> KiB)</span><br><span class="line">        RX errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        TX packets <span class="number">287</span>  bytes <span class="number">42006</span> (<span class="number">41.0</span> KiB)</span><br><span class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">解析：inet <span class="number">10.1</span>.<span class="number">1.16</span>  netmask <span class="number">255.255</span>.<span class="number">255.0</span>  broadcast <span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line">inet <span class="number">10.1</span>.<span class="number">1.16</span> ：代表ens33网卡的IP地址，将来远程连接就是用这个IP</span><br><span class="line">netmask ：子网掩码，一般为<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">broadcast ：广播地址，<span class="number">10.1</span>.<span class="number">1.255</span></span><br></pre></td></tr></table></figure><blockquote><p>CentOS6 &#x3D;&gt; eth0 ， CentOS7 &#x3D;&gt; ens33</p></blockquote><p>ens33 ：是默认的网卡，我们获取的IP也要从这个网卡中获取</p><p>lo（loop，循环）：表示回环网卡，只有一个固定的IP地址，127.0.0.1代表本机</p><p>virbr0：虚拟网络接口，因为咱们使用vmware虚拟机安装Centos，所以其会产生virbr0虚拟网络接口</p><h2 id="2、与网卡相关的配置文件"><a href="#2、与网卡相关的配置文件" class="headerlink" title="2、与网卡相关的配置文件"></a>2、与网卡相关的配置文件</h2><p>Linux系统中，一切皆文件。所以保存网络信息的也是通过一个文件来完成的。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line"><span class="built_in">TYPE</span>=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;dhcp&quot;</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">UUID=<span class="string">&quot;6c809893-d12c-46af-9987-4c05b2773c91&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line"></span><br><span class="line">参数解析：</span><br><span class="line"><span class="built_in">TYPE</span> ：网络类型，Ethernet以太网</span><br><span class="line">BOOTPROTO：IP的获取方式，dhcp代表自动获取，<span class="keyword">static</span>/none代表手工设置</span><br><span class="line">NAME ：网卡的名称（名字），ens33</span><br><span class="line">UUID ：代表网卡的UUID编号（必须是唯一的）</span><br><span class="line">DEVICE ：设备名称</span><br><span class="line">ONBOOT ：代表网卡是否随计算机开启启动，yes随计算机开机启动，no代表不启动</span><br></pre></td></tr></table></figure><h2 id="3、查询计算机的网络状态"><a href="#3、查询计算机的网络状态" class="headerlink" title="3、查询计算机的网络状态"></a>3、查询计算机的网络状态</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl  status  network</span></span><br><span class="line"></span><br><span class="line">systemctl = system + control = 系统控制</span><br></pre></td></tr></table></figure><p>主要功能：查询计算机网络的状态，网络是否正常连接。</p><p>![image-20200318160415929](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318160415929.png)</p><p>Active ： active（正常）或  inactive（dead，网络状态不正常没有连接）</p><h2 id="4、systemctl启动-重启-停止网络"><a href="#4、systemctl启动-重启-停止网络" class="headerlink" title="4、systemctl启动&#x2F;重启&#x2F;停止网络"></a>4、systemctl启动&#x2F;重启&#x2F;停止网络</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start network</span></span><br><span class="line"><span class="comment"># systemctl stop network</span></span><br><span class="line"><span class="comment"># systemctl restart network</span></span><br><span class="line"></span><br><span class="line">选项解析：</span><br><span class="line"><span class="built_in">start</span> ：启动</span><br><span class="line">stop ：停止</span><br><span class="line">restart ：重启</span><br></pre></td></tr></table></figure><h1 id="四、Linux远程连接与文件传输"><a href="#四、Linux远程连接与文件传输" class="headerlink" title="四、Linux远程连接与文件传输"></a>四、Linux远程连接与文件传输</h1><h2 id="1、为什么需要远程连接"><a href="#1、为什么需要远程连接" class="headerlink" title="1、为什么需要远程连接"></a>1、为什么需要远程连接</h2><p>![image-20200318163657190](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318163657190.png)</p><h2 id="2、SSH协议"><a href="#2、SSH协议" class="headerlink" title="2、SSH协议"></a>2、SSH协议</h2><p>  简单说，SSH是一种网络协议，用于计算机之间的加密登录。</p><h2 id="3、sshd服务"><a href="#3、sshd服务" class="headerlink" title="3、sshd服务"></a>3、sshd服务</h2><p>当我们在计算机中安装了sshd软件，启动后，就会在进程中产生一个sshd进程，其遵循计算机的SSH协议。默认情况下，sshd服务随系统自动安装的。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl  status  sshd</span></span><br></pre></td></tr></table></figure><h2 id="4、sshd服务的端口号"><a href="#4、sshd服务的端口号" class="headerlink" title="4、sshd服务的端口号"></a>4、sshd服务的端口号</h2><p>SSH协议，其规则了远程连接与传输的端口号，所以sshd服务启动后，就会占用计算机的22号端口。</p><blockquote><p>端口号能解决什么问题？答：能让我们的计算机区分出不同的服务</p></blockquote><p>![image-20200318164340849](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318164340849.png)</p><h2 id="5、使用MX软件连接Linux服务器"><a href="#5、使用MX软件连接Linux服务器" class="headerlink" title="5、使用MX软件连接Linux服务器"></a>5、使用MX软件连接Linux服务器</h2><h3 id="Putty"><a href="#Putty" class="headerlink" title="Putty"></a>Putty</h3><p>官网：<a href="https://links.jianshu.com/go?to=http://www.putty.org">www.putty.org</a></p><p>PuTTY为一开放源代码软件，主要由Simon Tatham维护，使用MIT licence授权。</p><h3 id="SecureCRT"><a href="#SecureCRT" class="headerlink" title="SecureCRT"></a>SecureCRT</h3><p>官网：<a href="https://links.jianshu.com/go?to=http://www.vandyke.com">www.vandyke.com</a><br> SecureCRT是一款支持SSH(SSH1和SSH2)的终端仿真程序，简单地说是Windows下登录UNIX或Linux服务器主机的软件。（颜色方案不是特别好看）</p><h3 id="XShell"><a href="#XShell" class="headerlink" title="XShell"></a>XShell</h3><p>官网：<a href="https://links.jianshu.com/go?to=http://www.netsarang.com">www.netsarang.com</a></p><p>Xshell是一个强大的安全终端模拟软件，它支持SSH1, SSH2, 以及Microsoft Windows 平台的TELNET 协议。Xshell 通过互联网到远程主机的安全连接以及它创新性的设计和特色帮助用户在复杂的网络环境中享受他们的工作。</p><p>缺点：收费</p><h3 id="MobaXterm"><a href="#MobaXterm" class="headerlink" title="MobaXterm"></a>MobaXterm</h3><p>官网：<a href="https://mobaxterm.mobatek.net/">https://mobaxterm.mobatek.net/</a></p><p>① 获取Linux的的IP地址</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.16</span></span><br></pre></td></tr></table></figure><p>② 打开MX软件，单击Session，创建一个SSH远程连接</p><p>![image-20200318170051275](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318170051275.png)</p><p>③ 设置书签（给这台服务器起个名字）</p><p>![image-20200318170217196](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318170217196.png)</p><p> ④ 输入CentOS7.6的root管理员密码</p><p>管理员：root</p><p>密    码：123456</p><p>![image-20200318170322945](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318170322945.png)</p><h2 id="6、使用MX实现文件传输"><a href="#6、使用MX实现文件传输" class="headerlink" title="6、使用MX实现文件传输"></a>6、使用MX实现文件传输</h2><p>![image-20200318170715403](..&#x2F;assets&#x2F;blog_res&#x2F;Linux文件管理与用户管理 (copy).assets&#x2F;image-20200318170715403.png)</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo报错：ERROR Deployer not found-git</title>
      <link href="/posts/57116.html"/>
      <url>/posts/57116.html</url>
      
        <content type="html"><![CDATA[<h1 id="部署hexo遇到报错ERROR-Deployer-not-found-git的解决办法"><a href="#部署hexo遇到报错ERROR-Deployer-not-found-git的解决办法" class="headerlink" title="部署hexo遇到报错ERROR Deployer not found: git的解决办法"></a>部署hexo遇到报错ERROR Deployer not found: git的解决办法</h1><p>今天部署hexo的时候遇到一个报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p><img src="/./../assets/blog_res/md.assets/5a891e24b1d8d4a60f7e9c1a7763a2d6.png" alt="image-20220716230708555"></p><p>解决办法：</p><p>这是因为没有安装hexo-deployer-git插件,在站点目录下输入下面的命令安装插件就好了。执行下面这行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>如下图所示：</p><p><img src="/./../assets/blog_res/md.assets/c8757a2e312c3e821048900d33e03624.png" alt="image-20220716230943240"></p><p>然后重新执行</p><p>hexo c &amp;&amp; hexo g &amp;&amp; hexo d</p><p>可以看到部署成功</p><p><img src="/./../assets/blog_res/md.assets/8dee4a5433af747843a917f78ea5db99.png" alt="image-20220716231125642"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相册页的创建故障</title>
      <link href="/posts/22034.html"/>
      <url>/posts/22034.html</url>
      
        <content type="html"><![CDATA[<p>相册页创建参考资料：</p><p><a href="https://cloud.tencent.com/developer/article/2076603">hexo-theme-matery_文字博客wordpress主题-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>期间故障：</p><p>gallery.ejs文件已经提前存在，其内部也书写了相当多的代码，在浏览的过程之中忽略了作者的‘新建’二字，产生冲突无法成功执行命令。</p><p>后删除原gallery.ejs文件，重新建立空白文档并添加参考资料内部代码，重新运行后成功。</p><p>以下是参考资料的gallery.ejs代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">    <span class="comment">/* don&#x27;t remove. */</span></span><br><span class="line">    .<span class="property">about</span>-cover &#123;</span><br><span class="line">        <span class="attr">height</span>: 75vh;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;%- <span class="title function_">partial</span>(<span class="string">&#x27;_partial/bg-cover&#x27;</span>) %&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">main</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">&lt;% if (theme.myGallery &amp;&amp; theme.myGallery.enable) &#123; %&gt;</span></span><br><span class="line"><span class="language-xml">&lt;%- partial(&#x27;_widget/my-gallery&#x27;) %&gt;</span></span><br><span class="line"><span class="language-xml">&lt;% &#125; %&gt;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;% <span class="keyword">if</span> (page.<span class="property">total</span> &gt; <span class="number">1</span>) &#123; %&gt;</span><br><span class="line">&lt;%- <span class="title function_">partial</span>(<span class="string">&#x27;_partial/paging&#x27;</span>) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>然后是原gallery.ejs代码，已做保存；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.css.gallery) %&gt;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;link type=&quot;text/css&quot; href=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.css.fancybox) %&gt;&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;link type=&quot;text/css&quot; href=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.css.justifiedGallery) %&gt;&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;%- partial(&#x27;_partial/post-cover&#x27;) %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">let galleries = [];</span><br><span class="line">if (site.data &amp;&amp; site.data.galleries) &#123;</span><br><span class="line">    galleries = site.data.galleries;</span><br><span class="line">&#125;</span><br><span class="line">var pageTitle = page.title;</span><br><span class="line">function getCurrentGallery(galleries, pageTitle) &#123;</span><br><span class="line">    for (let i = 0; i &lt; galleries.length; i++) &#123;</span><br><span class="line">        if (galleries[i][&#x27;name&#x27;] == pageTitle) &#123;</span><br><span class="line">            return galleries[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var currentGallery = getCurrentGallery(galleries, pageTitle)</span><br><span class="line"></span><br><span class="line">var photos = currentGallery.photos;</span><br><span class="line">var galleryImageStr = theme.jsDelivr.url ? theme.jsDelivr.url : &#x27;&#x27;;</span><br><span class="line"></span><br><span class="line">let imageStr = &#x27;&#x27;</span><br><span class="line"></span><br><span class="line">for (var i = 0, len = photos.length; i &lt; len; i++) &#123;</span><br><span class="line">    var photo = photos[i];</span><br><span class="line"></span><br><span class="line">    imageStr += &quot;&lt;a href=\&quot;&quot; + galleryImageStr + photo + &quot;\&quot;&quot; +</span><br><span class="line">            &quot;     class=\&quot;photo-item\&quot; rel=\&quot;example_group\&quot;&quot; +</span><br><span class="line">            &quot;     data-fancybox=\&quot;images\&quot;&gt;&quot; +</span><br><span class="line">            &quot;      &lt;img src=\&quot;&quot; + galleryImageStr + photo + &quot;\&quot;&quot; +</span><br><span class="line">            &quot;       alt=&quot; + photo + &quot;&gt;\n&quot; +</span><br><span class="line">            &quot;    &lt;/a&gt;&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">%&gt;  </span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;photo-wrapper&quot;&gt;</span><br><span class="line">        &lt;% if (page.password ) &#123; %&gt;</span><br><span class="line"></span><br><span class="line">            &lt;script src=&quot;/js/crypto-js.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">            &lt;script src=&quot;/js/gallery-encrypt.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">            &lt;div id=&quot;hbe-security&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;hbe-input-container&quot;&gt;</span><br><span class="line">                    &lt;input type=&quot;password&quot; class=&quot;hbe-form-control&quot; id=&quot;pass&quot;  placeholder=&quot;请输入密码查看内容&quot;/&gt;</span><br><span class="line">                    &lt;a href=&quot;javascript:;&quot; class=&quot;btn-decrypt&quot; id=&quot;btn_decrypt&quot;&gt;解密&lt;/a&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div  id=&quot;mygallery&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;waterfall&quot; id=&quot;encrypt-blog&quot; style=&quot;display:none&quot;&gt;</span><br><span class="line">                    &lt;%- aes(imageStr, page.password) %&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;% &#125; else &#123; %&gt;</span><br><span class="line">            &lt;div class=&quot;waterfall&quot; id=&quot;encrypt-blog&quot;&gt;</span><br><span class="line">                &lt;%- imageStr %&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.fancybox) %&gt;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.justifiedGallery) %&gt;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    $(&quot;a[rel=example_group]&quot;).fancybox();</span><br><span class="line">    $(&quot;#encrypt-blog&quot;).justifiedGallery(&#123;margins: 5, rowHeight: 150&#125;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>成功后的相册页面：</p><p><img src="/../assets/blog_res/%E5%AF%BC%E8%88%AA%E9%A1%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E6%95%85%E9%9A%9C.assets/image-20231222193734284.png" alt="image-20231222193734284"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件管理（上）-1</title>
      <link href="/posts/651.html"/>
      <url>/posts/651.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件管理（上）"><a href="#Linux文件管理（上）" class="headerlink" title="Linux文件管理（上）"></a>Linux文件管理（上）</h1><h1 id="一、Linux下文件命名规则"><a href="#一、Linux下文件命名规则" class="headerlink" title="一、Linux下文件命名规则"></a>一、Linux下文件命名规则</h1><h2 id="1、可以使用哪些字符？"><a href="#1、可以使用哪些字符？" class="headerlink" title="1、可以使用哪些字符？"></a>1、可以使用哪些字符？</h2><p>理论上&#x3D;&#x3D;除了字符“&#x2F;”之外，所有的字符都可以使用&#x3D;&#x3D;，但是要注意，在目录名或文件名中，不建议使用某些特殊字符，例如， &lt;、&gt;、？、* 等，尽量避免使用。</p><p>工作时文件的命名规则：</p><p>① 由于linux严格区分大小写，所以&#x3D;&#x3D;尽量都用小写字母&#x3D;&#x3D;</p><p>② 如果必须&#x3D;&#x3D;对文件名进行分割，建议使用”_”&#x3D;&#x3D;，例如：itheima_bj_2020.log</p><blockquote><p>_ 下划线，在Linux操作系统中，可以使用Shift键 + 减号</p></blockquote><h2 id="2、文件名的长度"><a href="#2、文件名的长度" class="headerlink" title="2、文件名的长度"></a>2、文件名的长度</h2><p>目录名或文件名的长度不能超过 255 个字符</p><blockquote><p>尽量不要太长，另外文件名称一定要见名知意，可以使用英文单词</p></blockquote><h2 id="3、文件名的大小写"><a href="#3、文件名的大小写" class="headerlink" title="3、文件名的大小写"></a>3、文件名的大小写</h2><p> Linux目录名或文件名是区分大小写的。如 itheima、ITheima、yunwei 和 Yunwei ，是互不相同的目录名或文件名。</p><p>个人建议：</p><p>不要使用字符大小写来区分不同的文件或目录。<br>建议文件名&#x3D;&#x3D;一律使用小写字母&#x3D;&#x3D;</p><h2 id="4、Linux文件扩展名"><a href="#4、Linux文件扩展名" class="headerlink" title="4、Linux文件扩展名"></a>4、Linux文件扩展名</h2><p>Linux文件的扩展名对 Linux 操作系统没有特殊的含义，Linux 系统并不以文件的扩展名开分区文件类型。例如，itheima.exe 只是一个文件，其扩展名 .exe 并不代表此文件就一定是可执行的。</p><p>在Linux系统中，文件扩展名的用途为了&#x3D;&#x3D;使运维人员更好的区分不同的文件类型&#x3D;&#x3D;。</p><blockquote><p>在Linux操作系统中，文件的类型是依靠权限位的标识符来进行区分的。当然也可以通过颜色，如黑色普通文件，天蓝色文件夹</p></blockquote><h1 id="二、Linux下的文件管理"><a href="#二、Linux下的文件管理" class="headerlink" title="二、Linux下的文件管理"></a>二、Linux下的文件管理</h1><h2 id="1、目录创建"><a href="#1、目录创建" class="headerlink" title="1、目录创建"></a>1、目录创建</h2><p>在实际应用中，与目录相关的操作主要有两个：创建目录与删除目录</p><h3 id="①-mkdir创建目录"><a href="#①-mkdir创建目录" class="headerlink" title="① mkdir创建目录"></a>① mkdir创建目录</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir 目录名称</span></span><br></pre></td></tr></table></figure><p>主要功能：就是根据目录的名称创建一个目录</p><blockquote><p>mkdir &#x3D; make directory</p></blockquote><p>案例：在家目录下创建一个itheima的文件夹</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir itheima</span></span><br></pre></td></tr></table></figure><h3 id="②-mkdir-p递归创建目录"><a href="#②-mkdir-p递归创建目录" class="headerlink" title="② mkdir -p递归创建目录"></a>② mkdir -p递归创建目录</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /usr/local/nginx/conf</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-p</span>：递归创建，从左边的路径开始一级一级创建目录，直到路径结束</span><br></pre></td></tr></table></figure><p>案例：在已知目录（&#x2F;usr&#x2F;local）下创建多级目录（nginx&#x2F;conf）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /usr/local/nginx/conf</span></span><br><span class="line">mkdir: cannot create directory ‘/usr/local/nginx/conf’: No such file or directory</span><br><span class="line">mkdir：不能创建目录conf，为什么呢？因为/usr/local目录下并没有nginx</span><br></pre></td></tr></table></figure><p>解决方案：如果我们想同时创建多级目录，必须使用-p选项，其会从左向右一级一级创建目录。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /usr/local/nginx/conf</span></span><br></pre></td></tr></table></figure><h3 id="③-使用mkdir同时创建多个目录"><a href="#③-使用mkdir同时创建多个目录" class="headerlink" title="③ 使用mkdir同时创建多个目录"></a>③ 使用mkdir同时创建多个目录</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir 目录名称1 目录名称2 目录名称3 ...</span></span><br></pre></td></tr></table></figure><p>案例：在当前目录下创建a、b、c三个目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir a</span></span><br><span class="line"><span class="comment"># mkdir b</span></span><br><span class="line"><span class="comment"># mkdir c</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># mkdir a b c</span></span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>一个目录一个目录创建# mkdir 目录名称</p><p>多级目录一起创建# mkdir   -p   目录名称1&#x2F;目录名称2&#x2F;…</p><p>同时创建多个目录# mkdir  目录名称1  目录名称2  目录名称3</p><h2 id="扩展：Linux快捷键（方向键上下）"><a href="#扩展：Linux快捷键（方向键上下）" class="headerlink" title="扩展：Linux快捷键（方向键上下）"></a>扩展：Linux快捷键（方向键上下）</h2><p>在终端中：</p><p>​按方向键&#x3D;&gt;向上，其会返回上一次输入的命令</p><p>​按方向键&#x3D;&gt;向下，其会返回下一次输入的命令</p><h2 id="2、目录删除（必须是空目录）"><a href="#2、目录删除（必须是空目录）" class="headerlink" title="2、目录删除（必须是空目录）"></a>2、目录删除（必须是空目录）</h2><h3 id="①-rmdir移除空目录"><a href="#①-rmdir移除空目录" class="headerlink" title="① rmdir移除空目录"></a>① rmdir移除空目录</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rmdir 目录名称</span></span><br></pre></td></tr></table></figure><blockquote><p>rmdir &#x3D; remove  directory，移除目录</p></blockquote><p>案例：把家目录下的itheima删除（空目录）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rmdir itheima</span></span><br></pre></td></tr></table></figure><h3 id="②-rmdir-p递归删除空目录"><a href="#②-rmdir-p递归删除空目录" class="headerlink" title="② rmdir -p递归删除空目录"></a>② rmdir -p递归删除空目录</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rmdir -p 目录名称1/目录名称2/目录名称3/...</span></span><br></pre></td></tr></table></figure><p>主要功能：从右向左一级一级删除空目录</p><p>案例：递归删除itheima文件夹中的yunwei文件夹中的shenzhen3</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rmdir -p itheima/yunwei/shenzhen3</span></span><br></pre></td></tr></table></figure><h3 id="③-使用rmdir同时删除多个空目录"><a href="#③-使用rmdir同时删除多个空目录" class="headerlink" title="③ 使用rmdir同时删除多个空目录"></a>③ 使用rmdir同时删除多个空目录</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rmdir 目录名称1 目录名称2 目录名称3 ...</span></span><br></pre></td></tr></table></figure><p>案例：删除家目录中的a、b、c三个空目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rmdir a b c</span></span><br></pre></td></tr></table></figure><h2 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h2><p># rmdir 目录名称，删除某个空目录</p><p># rmdir -p 目录名称1&#x2F;目录名称2&#x2F;目录名称3&#x2F;…，同时删除多级目录（从右向左一级一级删除）</p><p># rmdir  目录名称1 目录名称2 目录名称3，同时删除多个空目录</p><h2 id="3、文件创建"><a href="#3、文件创建" class="headerlink" title="3、文件创建"></a>3、文件创建</h2><h3 id="①-touch创建文件"><a href="#①-touch创建文件" class="headerlink" title="① touch创建文件"></a>① touch创建文件</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch 文件名称</span></span><br></pre></td></tr></table></figure><p>主要功能：在Linux系统中的当前目录下创建一个文件</p><p>案例：在当前目录下创建一个readme.txt文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch readme.txt</span></span><br></pre></td></tr></table></figure><h3 id="②-使用touch命令同时创建多个文件"><a href="#②-使用touch命令同时创建多个文件" class="headerlink" title="② 使用touch命令同时创建多个文件"></a>② 使用touch命令同时创建多个文件</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch 文件名称1 文件名称2 文件名称3 ...</span></span><br></pre></td></tr></table></figure><p>案例：创建一个shop商城文件夹，然后在内部创建index.php&#x2F;admin.php&#x2F;config.php三个文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir shop</span></span><br><span class="line"><span class="comment"># touch shop/index.php</span></span><br><span class="line"><span class="comment"># touch shop/admin.php</span></span><br><span class="line"><span class="comment"># touch shop/config.php</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># touch shop/index.php shop/admin.php shop/config.php</span></span><br></pre></td></tr></table></figure><blockquote><p>提出问题：观察以下命令，看看有何区别？</p><p>第一种写法：touch  shop&#x2F;index.php    shop&#x2F;admin.php    shop&#x2F;config.php</p><p>代表在shop目录下首先创建一个index.php，在创建一个admin.php，最后config.php</p><p>第二种写法：touch   shop&#x2F;index.php    admin.php   config.php</p><p>代表在shop目录下首先创建index.php，然后在当前目录下创建admin.php，最后在当前目录下创建config.php</p></blockquote><h3 id="③-1-5-根据序号同时创建多个文件"><a href="#③-1-5-根据序号同时创建多个文件" class="headerlink" title="③ {1..5}根据序号同时创建多个文件"></a>③ {1..5}根据序号同时创建多个文件</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch 文件名称&#123;开始序号..结束序号&#125;</span></span><br><span class="line">含义：</span><br><span class="line">根据提供的开始序号~结束序号，一个一个创建文件</span><br></pre></td></tr></table></figure><p>案例：创建file1、file2、file3、file4、file5共5个文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch file1</span></span><br><span class="line"><span class="comment"># touch file2</span></span><br><span class="line"><span class="comment"># touch file3</span></span><br><span class="line"><span class="comment"># touch file4</span></span><br><span class="line"><span class="comment"># touch file5</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch file&#123;1..5&#125;</span></span><br></pre></td></tr></table></figure><h2 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h2><p># touch 文件名称</p><p># touch 文件名称1  文件名称2  文件名称3 …</p><p># touch 文件名称{开始序号..结束序号}</p><h2 id="4、文件删除"><a href="#4、文件删除" class="headerlink" title="4、文件删除"></a>4、文件删除</h2><h3 id="①-普通删除"><a href="#①-普通删除" class="headerlink" title="① 普通删除"></a>① 普通删除</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm  [选项]  文件或文件夹的名称</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-r</span> ：针对文件夹，代表递归删除，先把目录下的所有文件删除，然后在删除文件夹</span><br><span class="line"><span class="operator">-f</span> ：强制删除，不提示，初学者一定要慎重！！！</span><br></pre></td></tr></table></figure><p>案例：删除readme.txt文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm readme.txt</span></span><br><span class="line"><span class="built_in">rm</span>: remove regular empty file ‘readme.txt’?这里可以回复y or n</span><br><span class="line">y代表确认删除</span><br><span class="line">n代表取消删除</span><br></pre></td></tr></table></figure><p>案例：强制删除admin.php，不提示（慎重）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -f admin.php</span></span><br></pre></td></tr></table></figure><p>案例：删除非空的文件夹（-rf强制递归删除，不提示）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf shop</span></span><br></pre></td></tr></table></figure><p>提示信息：descend into directory ‘itheima&#x2F;‘?<br>含义：是否进入itheima目录？</p><p>提示信息：remvoe directory ‘itheima&#x2F;‘?<br>含义：是否删除itheima文件夹？</p><p>扩展：Ctrl + C在Linux下的使用方式</p><blockquote><p>在Linux操作系统中，Ctrl + C不是复制，而是中断某个操作</p></blockquote><p>总结：</p><p># rm  文件名称</p><p># rm  文件名称1  文件名称2  文件名称3 … </p><p># rm  -f   文件名称     &#x3D;&gt;    强制删除，不提示</p><p># rm  -rf   文件夹名称 &#x3D;&gt;    递归删除文件夹</p><h3 id="②-扩展：rm-rf-，一定要慎重"><a href="#②-扩展：rm-rf-，一定要慎重" class="headerlink" title="② 扩展：rm  -rf   &#x2F;*，一定要慎重"></a>② 扩展：rm  -rf   &#x2F;*，一定要慎重</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /*    =&gt;   代表删除根目录下的所有文件（如果没有备份，恢复的几率不高）</span></span><br><span class="line"><span class="built_in">rm</span> ：删除</span><br><span class="line"><span class="literal">-r</span> ：递归删除（无论文件夹是否为空）</span><br><span class="line"><span class="operator">-f</span> ：强制删除不提示</span><br><span class="line">/  ：代表根分区</span><br><span class="line">*  ：所有</span><br></pre></td></tr></table></figure><h2 id="5、复制操作"><a href="#5、复制操作" class="headerlink" title="5、复制操作"></a>5、复制操作</h2><p>① cp复制操作</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp [选项] 源文件或文件夹 目标路径</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-r</span> ：递归复制，主要针对文件夹</span><br></pre></td></tr></table></figure><blockquote><p>cp &#x3D; copy复制</p></blockquote><p>案例：把readme.txt文件从当前目录复制一份放到&#x2F;tmp文件夹中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp readme.txt /tmp/</span></span><br></pre></td></tr></table></figure><p>② cp复制并重命名文件</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp [选项] 源文件或文件夹 目标路径/新文件或文件夹的名称</span></span><br></pre></td></tr></table></figure><p>案例：把readme.txt文件从当前目录复制一份放到&#x2F;tmp文件夹中并重命名为readme.txt.bak</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp readme.txt /tmp/readme.txt.bak</span></span><br></pre></td></tr></table></figure><p>③ cp复制文件夹到指定路径</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp -r 源文件夹名称 目标路径/</span></span><br></pre></td></tr></table></figure><p>案例：把shop目录连通其内部的文件统一复制到&#x2F;tmp目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir shop</span></span><br><span class="line"><span class="comment"># touch shop/index.php shop/admin.php shop/config.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cp -r shop /tmp/</span></span><br></pre></td></tr></table></figure><h2 id="总结：-3"><a href="#总结：-3" class="headerlink" title="总结："></a>总结：</h2><p>复制文件# cp  源文件名称  指定路径</p><p>复制文件并重命名# cp  源文件名称 指定路径&#x2F;新文件名称</p><p>复制文件夹# cp -r  源文件夹  指定路径</p><h2 id="6、剪切操作"><a href="#6、剪切操作" class="headerlink" title="6、剪切操作"></a>6、剪切操作</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv 源文件或文件夹 目标路径/</span></span><br></pre></td></tr></table></figure><blockquote><p>mv &#x3D; move，剪切、移动的含义</p></blockquote><p>案例：把readme.txt文件剪切到&#x2F;tmp目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /tmp/readme.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mv readme.txt /tmp/</span></span><br></pre></td></tr></table></figure><p>案例：把shop文件夹移动到&#x2F;usr&#x2F;local&#x2F;nginx目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /usr/local/nginx</span></span><br><span class="line"><span class="comment"># mv shop /usr/local/nginx/</span></span><br></pre></td></tr></table></figure><h2 id="7、重命名操作"><a href="#7、重命名操作" class="headerlink" title="7、重命名操作"></a>7、重命名操作</h2><p>什么是重命名？简单来说，就是给一个文件或文件夹更改名称</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv  源文件或文件夹名称  新文件或文件夹的名称</span></span><br></pre></td></tr></table></figure><p>案例：把readme.txt文件更名为README.md文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv readme.txt README.md</span></span><br></pre></td></tr></table></figure><p>案例：把shop文件目录更名为wechat目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir shop</span></span><br><span class="line"><span class="comment"># mv shop wechat</span></span><br></pre></td></tr></table></figure><p>总结：</p><p>剪切文件# mv  源文件名称  目标路径&#x2F;</p><p>剪切文件夹# mv 源文件夹名称 目标路径&#x2F;</p><p>重命名# mv  源文件或文件夹名称  新文件或文件夹名称</p><h2 id="8、打包压缩与解压缩"><a href="#8、打包压缩与解压缩" class="headerlink" title="8、打包压缩与解压缩"></a>8、打包压缩与解压缩</h2><h3 id="①-几个概念"><a href="#①-几个概念" class="headerlink" title="① 几个概念"></a>① 几个概念</h3><p><strong>打包</strong>：默认情况下，Linux的压缩概念一次只能压缩一个文件。针对多文件或文件夹无法进行直接压缩。所以需要提前对多个文件或文件夹进行打包，这样才可以进行压缩操作。</p><p>1.txt  5MB</p><p>2.txt  10MB</p><p>3.txt  15MB</p><p>1.txt + 2.txt + 3.txt  &#x3D;  打包  &#x3D;  123.tar &#x3D; 30MB</p><blockquote><p>打包只是把多个文件或文件夹打包放在一个文件中，但是并没有进行压缩，所以其大小还是原来所有文件的总和。</p></blockquote><p><strong>压缩</strong>：也是一个文件和目录的集合，且这个集合也被存储在一个文件中，但它们的不同之处在于，压缩文件所占用的磁盘空间<strong>比集合中所有文件大小的总和要小。</strong></p><p>1.txt  5MB</p><p>2.txt  10MB</p><p>3.txt  15MB</p><p>1.txt + 2.txt + 3.txt &#x3D; 压缩 &#x3D; 123.tar.gz &#x3D; 20MB（体积变小了）</p><h3 id="②-Linux打包操作"><a href="#②-Linux打包操作" class="headerlink" title="② Linux打包操作"></a>② Linux打包操作</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar [选项]  打包后的名称.tar  多个文件或文件夹</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-c</span> ：打包</span><br><span class="line"><span class="operator">-f</span> ：filename，打包后的文件名称</span><br><span class="line"><span class="literal">-v</span> ：显示打包的进度</span><br><span class="line"><span class="literal">-u</span> ：update缩写，更新原打包文件中的文件（了解）</span><br><span class="line"><span class="literal">-t</span> ：查看打包的文件内容（了解）</span><br></pre></td></tr></table></figure><p>案例：把a.txt、b.txt、c.txt文件打包到abc.tar文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -cvf abc.tar a.txt b.txt c.txt</span></span><br></pre></td></tr></table></figure><p>案例：把wechat文件夹进行打包wechat.tar</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -cvf wechat.tar wechat</span></span><br></pre></td></tr></table></figure><h3 id="③-tar-tf以及tar-uf"><a href="#③-tar-tf以及tar-uf" class="headerlink" title="③ tar -tf以及tar -uf"></a>③ tar -tf以及tar -uf</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -tf 打包后的文件名称</span></span><br></pre></td></tr></table></figure><p>主要功能：查看tar包中的文件信息</p><p>案例：查看abc.tar包中的文件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -tf abc.tar</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -uf 打包后的文件名称</span></span><br></pre></td></tr></table></figure><blockquote><p>u &#x3D; update，更新，如果还想往tar包中更新或追加内容都可以通过-u选项</p></blockquote><p>案例：向abc.tar包中添加一个d.txt文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch d.txt</span></span><br><span class="line"><span class="comment"># tar -uf abc.tar d.txt</span></span><br><span class="line">查看是否添加成功</span><br><span class="line"><span class="comment"># tar -tf abc.tar</span></span><br></pre></td></tr></table></figure><p>扩展：如何把tar包中的文件释放出来</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">打包</span><br><span class="line"><span class="comment"># tar -cf  abc.tar  a.txt  b.txt  c.txt</span></span><br><span class="line"></span><br><span class="line">打包 =&gt; 释放（<span class="literal">-c</span> 变成 <span class="literal">-x</span>）</span><br><span class="line"></span><br><span class="line">释放</span><br><span class="line"><span class="comment"># tar -xf  abc.tar</span></span><br></pre></td></tr></table></figure><h3 id="④-打包并压缩（学习的重点）"><a href="#④-打包并压缩（学习的重点）" class="headerlink" title="④ 打包并压缩（学习的重点）"></a>④ 打包并压缩（学习的重点）</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar [选项]  压缩后的压缩包名称  要压缩的文件或文件夹</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-cf</span> ：对文件或文件夹进行打包</span><br><span class="line"></span><br><span class="line"><span class="literal">-v</span>  ：显示压缩进度</span><br><span class="line"></span><br><span class="line"><span class="literal">-z</span>：使用gzip压缩工具把打包后的文件压缩为.gz</span><br><span class="line"><span class="literal">-j</span>  ：使用bzip2压缩工具把打包后的文件压缩为.bz2</span><br><span class="line"><span class="literal">-J</span>：使用xz压缩工具把打包后的文件压缩为.xz</span><br><span class="line"></span><br><span class="line">压缩速度：gzip &gt; bzip2 &gt; xz</span><br><span class="line">压缩率：gzip &lt; bzip2 &lt; xz</span><br><span class="line"><span class="number">100</span>M   <span class="number">90</span>M     <span class="number">80</span>M  <span class="number">70</span>M</span><br></pre></td></tr></table></figure><p>案例：把a.txt、b.txt、c.txt文件打包并压缩为abc.tar.gz</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zcf abc.tar.gz a.txt b.txt c.txt</span></span><br></pre></td></tr></table></figure><p>案例：把wechat文件夹压缩为wechat.tar.gz格式的压缩包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zcf wechat.tar.gz wechat</span></span><br></pre></td></tr></table></figure><h3 id="⑤-对压缩包进行解压"><a href="#⑤-对压缩包进行解压" class="headerlink" title="⑤ 对压缩包进行解压"></a>⑤ 对压缩包进行解压</h3><p>解压过程非常简单，就是把压缩的参数中的c换成x就可以实现解压缩了</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*.tar.gz格式的压缩包</span><br><span class="line"><span class="comment"># tar -zxf 名称.tar.gz</span></span><br><span class="line"></span><br><span class="line">*.tar.bz2格式的压缩包</span><br><span class="line"><span class="comment"># tar -jxf 名称.tar.bz2</span></span><br><span class="line"></span><br><span class="line">*.tar.xz格式的压缩包</span><br><span class="line"><span class="comment"># tar -Jxf 名称.tar.xz</span></span><br></pre></td></tr></table></figure><p>案例：把abc.tar.gz格式的压缩包进行解压缩操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zxf abc.tar.gz</span></span><br></pre></td></tr></table></figure><p>案例：把wechat.tar.gz格式的压缩包进行解压缩操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zxf wechat.tar.gz</span></span><br></pre></td></tr></table></figure><h2 id="9、zip压缩与解压缩"><a href="#9、zip压缩与解压缩" class="headerlink" title="9、zip压缩与解压缩"></a>9、zip压缩与解压缩</h2><h3 id="①-zip压缩"><a href="#①-zip压缩" class="headerlink" title="① zip压缩"></a>① zip压缩</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zip [选项] 压缩后的文件名称.zip  文件或文件夹</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-r</span> ：递归压缩，主要针对的是文件夹</span><br></pre></td></tr></table></figure><blockquote><p>Linux下已经有gzip、bzip2以及xz压缩命令了，为什么还需要使用zip压缩呢？</p><p>答：zip格式在Windows以及Linux中都是可以正常使用的。</p></blockquote><p>案例：把a.txt、b.txt、c.txt进行压缩为abc.zip</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zip abc.zip a.txt b.txt c.txt</span></span><br></pre></td></tr></table></figure><p>案例：把wechat文件夹压缩为wechat.zip</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zip -r wechat.zip wechat</span></span><br></pre></td></tr></table></figure><h3 id="②-unzip解压缩"><a href="#②-unzip解压缩" class="headerlink" title="② unzip解压缩"></a>② unzip解压缩</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unzip 压缩包名称=&gt;     解压到当前目录</span></span><br><span class="line"><span class="comment"># unzip 压缩包名称 -d 指定路径=&gt;   解压到指定路径下</span></span><br></pre></td></tr></table></figure><p>案例：对abc.zip文件进行解压缩</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unzip abc.zip</span></span><br></pre></td></tr></table></figure><p>案例：把wechat.zip解压到&#x2F;usr&#x2F;local&#x2F;nginx目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unzip wechat.zip -d /usr/local/nginx/</span></span><br></pre></td></tr></table></figure><h2 id="总结：-4"><a href="#总结：-4" class="headerlink" title="总结："></a>总结：</h2><p>在Linux操作系统中，其拥有很多压缩工具，如gzip、bzip2、xz等等，但是其有一个缺点：</p><p>一次只能压缩一个文件（而且无法压缩文件夹）</p><p>① 打包，把一个或多个文件打成tar包，并不是压缩，只是把文件合并在一个tar文件中</p><p>1.txt  5MB</p><p>2.txt  10MB</p><p>3.txt  15MB</p><p>打包123.tar &#x3D; 5MB + 10MB + 15MB &#x3D; 30MB</p><p>为什么要打包，就是为了后期的压缩操作。</p><p>② 打包并压缩</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zcf 压缩包名称.tar.gz 文件或文件夹名称</span></span><br><span class="line"><span class="comment"># tar -jcf 压缩包名称.tar.bz2 文件或文件夹名称</span></span><br><span class="line"><span class="comment"># tar -Jcf 压缩包名称.tar.xz 文件或文件夹名称</span></span><br></pre></td></tr></table></figure><p>③ 解压缩</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar 把c参数更换为x，就可以实现解压缩  压缩包名称.tar.gz</span></span><br></pre></td></tr></table></figure><p>扩展：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zxf 压缩包名称.tar.gz [参数] 指定路径</span></span><br></pre></td></tr></table></figure><p>第一种解决思路：随用随查，百度、Google</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zxf 压缩包名称.tar.gz -C 指定路径</span></span><br></pre></td></tr></table></figure><p>第二种解决思路：可以使用man命令（manual缩写，手册）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man tar命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar -zxf 压缩包名称.tar.gz -C 指定路径</span></span><br></pre></td></tr></table></figure><p>④ zip压缩与解压缩</p><p>给我们提供一种既可以在Windows中使用的，也可以提供一种在Linux中使用的通用的压缩格式。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zip [-r]  压缩包名称.zip  要压缩的文件或文件夹</span></span><br></pre></td></tr></table></figure><p>解压缩：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unzip 压缩包名称.zip  -d 指定路径</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux的基本操作</title>
      <link href="/posts/50455.html"/>
      <url>/posts/50455.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统使用注意"><a href="#Linux系统使用注意" class="headerlink" title="Linux系统使用注意"></a>Linux系统使用注意</h1><h2 id="1、Linux严格区分大小写"><a href="#1、Linux严格区分大小写" class="headerlink" title="1、Linux严格区分大小写"></a>1、Linux严格区分大小写</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Linux 和Windows不同，Linux严格区分大小写的，包括文件名和目录名、命令、命令选项、配置文件设置选项等。</span><br><span class="line"></span><br><span class="line">例如，Win7 系统桌面上有文件夹叫做Test，当我们在桌面上再新建一个名为 test 的文件夹时，系统会提示文件夹命名冲突；</span><br></pre></td></tr></table></figure><p>Windows演示：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312104935449.png" alt="image-20200312104935449"></p><p>Linux演示：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312105002814.png" alt="image-20200312105002814"></p><p>由以上图解可知：Linux是一个非常严谨的操作系统，严格区分大小写。</p><h2 id="2、Linux文件”扩展名”"><a href="#2、Linux文件”扩展名”" class="headerlink" title="2、Linux文件”扩展名”"></a>2、Linux文件”扩展名”</h2><blockquote><p>在Linux操作系统中，与Windows不同，其文件的类型不是通过扩展名来进行区分的！</p></blockquote><p>我们都知道，Windows 是依赖扩展名区分文件类型的，比如，”.txt” 是文本文件、”.exe” 是执行文件，但 Linux 不是。</p><p> Linux 系统通过&#x3D;&#x3D;权限位标识&#x3D;&#x3D;来确定文件类型，常见的文件类型有普通文件、目录、链接文件、块设备文件、字符设备文件等几种。Linux 的可执行文件就是普通文件被赋予了可执行权限。</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312105800243.png" alt="image-20200312105800243"></p><p>Linux系统中常见的后缀名称：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Linux 中的一些特殊文件还是要求写 <span class="string">&quot;扩展名&quot;</span> 的，但 Linux 不依赖扩展名来识别文件类型，写这些扩展名是为了帮助运维人员来区分不同的文件类型。</span><br><span class="line"></span><br><span class="line">这样的文件扩展名主要有以下几种：</span><br><span class="line">压缩包：Linux 下常见的压缩文件名有 *.gz、*.bz2、*.zip、*.tar.gz、*.tar.bz2、*.tgz 等。</span><br><span class="line"></span><br><span class="line">为什么压缩包一定要写扩展名呢？很简单，如果不写清楚扩展名，那么管理员不容易判断压缩包的格式，虽然有命令可以帮助判断，但是直观一点更加方便。就算没写扩展名，在 Linux 中一样可以解压缩，不影响使用。</span><br><span class="line"></span><br><span class="line">二进制软件包：CentOS 中所使用的二进制安装包是 RPM 包，所有的 RPM 包都用<span class="string">&quot;.rpm&quot;</span>扩展名结尾，目的同样是让管理员一目了然。=&gt; 类似Windows中的exe文件</span><br><span class="line"></span><br><span class="line">程序文件：Shell 脚本一般用 <span class="string">&quot;.sh&quot;</span> 扩展名结尾。=&gt; check_network.sh</span><br><span class="line"></span><br><span class="line">网页文件：网页文件一般使用 <span class="string">&quot;.php&quot;</span> 等结尾，不过这是网页服务器的要求，而不是 Linux 的要求。</span><br><span class="line">.html/.css/.js/.jsp/.php/.py =&gt; 网页文件</span><br></pre></td></tr></table></figure><blockquote><p>① Linux操作系统不以“扩展名”来判断文件的类型，而是通过权限位标识符来进行判断</p></blockquote><blockquote><p>② 有一些特殊的文件，有扩展名称&#x3D;&gt;压缩包、二进制软件包、程序文件、网页文件</p></blockquote><h2 id="3、Linux中所有内容以文件形式保存"><a href="#3、Linux中所有内容以文件形式保存" class="headerlink" title="3、Linux中所有内容以文件形式保存"></a>3、Linux中所有内容以文件形式保存</h2><p>在Linux系统中，一切皆文件！</p><blockquote><p>在Windows是文件的，在Linux下也是文件。在Windows中不是文件的，在Linux系统中也是文件。</p></blockquote><p>问题：我们目前还没有学习权限标识符，怎么判断文件的类型呢？</p><p>答：可以通过文件的颜色</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312113307247.png" alt="image-20200312113307247"></p><p>然后使用ls命令，查看文件的颜色</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls</span></span><br><span class="line">l : L的小写形式</span><br></pre></td></tr></table></figure><p>普通文件：通过ls命令查看时，如果显示<font color="red">黑色</font>，代表其是一个普通的文件</p><p>文件夹：通过ls命令查看时，如果显示<font color="red">天蓝色</font>，代表是一个文件夹</p><h2 id="4、Linux中存储设备都必须在挂载之后才能使用"><a href="#4、Linux中存储设备都必须在挂载之后才能使用" class="headerlink" title="4、Linux中存储设备都必须在挂载之后才能使用"></a>4、Linux中存储设备都必须在挂载之后才能使用</h2><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312114423821.png" alt="image-20200312114423821"></p><p>Windows：分区+格式化</p><p>Linux操作系统：分区+格式化+挂载，存储设备必须挂载后才能使用（硬盘、光盘、U盘）</p><blockquote><p>mount命令： mount   空格   &#x2F;dev&#x2F;sda1  空格  &#x2F;mnt&#x2F;file</p></blockquote><h1 id="Linux系统的目录结构（重要）"><a href="#Linux系统的目录结构（重要）" class="headerlink" title="Linux系统的目录结构（重要）"></a>Linux系统的目录结构（重要）</h1><h2 id="1、Linux分区与Windows分区"><a href="#1、Linux分区与Windows分区" class="headerlink" title="1、Linux分区与Windows分区"></a>1、Linux分区与Windows分区</h2><p>Linux 系统不同于 Windows，没有 C 盘、D 盘、E 盘那么多的盘符，只有一个&#x3D;&#x3D;根目录（&#x2F;）&#x3D;&#x3D;，所有的文件（资源）都存储在以&#x3D;&#x3D;根目录（&#x2F;）&#x3D;&#x3D;为树根的&#x3D;&#x3D;树形&#x3D;&#x3D;目录结构中。</p><p>Windows：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312115814989.png" alt="image-20200312115814989"></p><p>Linux：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312115750006.png" alt="image-20200312115750006"></p><h2 id="2、Linux系统文件架构"><a href="#2、Linux系统文件架构" class="headerlink" title="2、Linux系统文件架构"></a>2、Linux系统文件架构</h2><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312115851811.png" alt="image-20200312115851811"></p><p> 在 Linux 根目录（&#x2F;）下包含很多的子目录，称为一级目录。<br>例如 bin、boot、dev 等。</p><p>同时，各一级目录下还含有很多子目录，称为二级目录。<br>例如 &#x2F;bin&#x2F;bash、&#x2F;bin&#x2F;ed 等。</p><h2 id="3、Linux系统的文件目录用途"><a href="#3、Linux系统的文件目录用途" class="headerlink" title="3、Linux系统的文件目录用途"></a>3、Linux系统的文件目录用途</h2><p>&#x2F;bin：系统命令目录</p><p>&#x2F;sbin：超级命令目录，只能超级管理员可以执行的命令</p><p>&#x2F;boot：系统目录，类似于Windows中的C盘</p><p>&#x2F;dev ：设备文件目录，硬盘、光驱、U盘都属于设备文件，&#x2F;dev&#x2F;sr0代表光驱设备。注意，次目录下的文件没有办法直接使用，必须先挂载</p><p>&#x2F;etc ：非常重要，代表系统的配置文件目录。大部分软件安装完成后，其配置文件都存放在此目录</p><p>&#x2F;home：普通用户的家目录，用户登录后会自动切换到此目录</p><p>&#x2F;root：超级管理员的家目录，超级管理员登录后会自动切换到此目录</p><p>&#x2F;media：挂载目录，早期Linux挂载目录，用于挂载光盘以及软盘</p><p>&#x2F;mnt：挂载目录，用来挂载额外的设备，如 U 盘、移动硬盘和其他操作系统的分区</p><p>&#x2F;opt ：第三方软件目录，这个目录是放置和安装其他软件的位置，手工安装的源码包软件都可以安装到这个目录中。不过笔者还是习惯把软件放到 &#x2F;usr&#x2F;local&#x2F; 目录中，也就是说，&#x2F;usr&#x2F;local&#x2F; 目录也可以用来安装软件</p><p>&#x2F;usr ：系统程序目录，类似Windows中的Program Files</p><p>&#x2F;proc：虚拟文件系统。该目录中的数据并不保存在硬盘上，而是保存到内存中。主要保存系统的内核、进程、外部设备状态和网络状态等。</p><p>&#x2F;tmp ：临时文件目录，在该目录下，所有用户都可以访问和写入。建议此目录中不能保存重要数据，最好每次开机都把该目录清理</p><p>&#x2F;var ：经常变化的文件目录，网页文件、数据文件、日志文件</p><h1 id="Linux入门级命令"><a href="#Linux入门级命令" class="headerlink" title="Linux入门级命令"></a>Linux入门级命令</h1><h2 id="1、开启终端"><a href="#1、开启终端" class="headerlink" title="1、开启终端"></a>1、开启终端</h2><p>问题：什么是终端（Terminal）</p><p>答：Linux操作系统中用于输入命令的地方</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312145513405.png" alt="image-20200312145513405"></p><p>打开后，效果如下图所示：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312145943049.png" alt="image-20200312145943049"></p><h2 id="2、Linux命令格式"><a href="#2、Linux命令格式" class="headerlink" title="2、Linux命令格式"></a>2、Linux命令格式</h2><p>什么是Linux 的命令？</p><p>答：就是指在Linux 终端（命令行）中输入的内容就称之为命令。</p><p>一个完整的命令的标准格式：Linux 通用的格式</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令（空格） [选项]（空格）[参数]</span></span><br></pre></td></tr></table></figure><p>但是有些命令比较特殊，可能没有选项也没有参数</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pwd</span></span><br></pre></td></tr></table></figure><p>还有一些命令，有命令有选项，但是没有参数</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -l</span></span><br></pre></td></tr></table></figure><p>还有一些命令，命令+选项+参数全都有</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -n 3 readme.txt</span></span><br></pre></td></tr></table></figure><h2 id="3、扩展：Linux下的命令补全"><a href="#3、扩展：Linux下的命令补全" class="headerlink" title="3、扩展：Linux下的命令补全"></a>3、扩展：Linux下的命令补全</h2><p>键盘上有一个按键：Tab键</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312151903965.png" alt="image-20200312151903965"></p><p>当我们在Linux系统的终端中，输入命令时，可以无需完整的命令，只需要记住命令的前几个字母即可，然后按Tab键，系统会自动进行补全操作。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># syst + Tab键</span></span><br><span class="line"><span class="comment"># systemc + Tab键</span></span><br><span class="line"><span class="comment"># systemctl</span></span><br></pre></td></tr></table></figure><p>有些命令可能都以某几个字母开头，这个时候，只需要按两次Tab键，其就会显示所有命令。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clea + Tab键 + Tab键</span></span><br></pre></td></tr></table></figure><blockquote><p>Tab键的功能特别强大：其不仅可以补全命令还可以补全Linux的文件路径</p></blockquote><h2 id="4、切换用户"><a href="#4、切换用户" class="headerlink" title="4、切换用户"></a>4、切换用户</h2><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - root</span></span><br><span class="line">Password:<span class="number">123456</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># 切换成功</span></span><br></pre></td></tr></table></figure><blockquote><p>扩展：-横杠作用是什么？答：-横杠代表切换用户的同时，切换用户的家目录</p></blockquote><h2 id="5、uname命令"><a href="#5、uname命令" class="headerlink" title="5、uname命令"></a>5、uname命令</h2><p>主要功能：获取计算机操作系统相关信息</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-a</span> ：all缩写，代表显示所有信息，获取全部的系统信息（类型、全部主机名、内核版本、发布时间、开源计划）</span><br></pre></td></tr></table></figure><h2 id="6、ls命令"><a href="#6、ls命令" class="headerlink" title="6、ls命令"></a>6、ls命令</h2><h3 id="☆-用法一"><a href="#☆-用法一" class="headerlink" title="☆ 用法一"></a>☆ 用法一</h3><p>主要功能：ls完整写法list show，以平铺的形式显示当前目录下的文件信息</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls</span></span><br></pre></td></tr></table></figure><h3 id="☆-用法二"><a href="#☆-用法二" class="headerlink" title="☆ 用法二"></a>☆ 用法二</h3><p>主要功能：显示其他目录下的文件信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls 其他目录的绝对路径或相对路径</span></span><br></pre></td></tr></table></figure><blockquote><p>扩展：ls后面跟的路径既可以是绝对路径也可以是相对路径</p></blockquote><p><strong>绝对路径</strong>：不管当前工作路径是在哪，&#x3D;&#x3D;目标路径都会从“&#x2F;”磁盘根下开始&#x3D;&#x3D;。<br>案例：访问itheima用户的家目录，查看有哪些文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls /home/itheima</span></span><br></pre></td></tr></table></figure><p><font color="red">绝对路径必须以左斜杠开头，一级一级向下访问，不能越级</font></p><p><strong>相对路径</strong>：除绝对路径之外的路径称之为相对路径，相对路径得有一个相对物（当前工作路径）。</p><p>只要看到路径以“&#x2F;”开头则表示该路径是绝对路径，除了以“&#x2F;”开头的路径称之为相对路径。</p><p>当前位置：&#x2F;home&#x2F;itheima目录下</p><p>..&#x2F;：表示上级目录（上一级）</p><p>.&#x2F; ：表示当前目录（同级），普通文件.&#x2F;可以省略，可执行文件（绿色）必须加.&#x2F;</p><p>文件夹名称&#x2F;：表示下级目录（下一级），注意这个斜杠&#x2F;</p><h3 id="☆-用法三"><a href="#☆-用法三" class="headerlink" title="☆ 用法三"></a>☆ 用法三</h3><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls [选项] [路径]</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-l</span> ：<span class="built_in">ls</span> <span class="literal">-l</span>，代表以详细列表的形式显示当前或其他目录下的文件信息(简写命令=&gt;ll)</span><br><span class="line"><span class="literal">-h</span> ：<span class="built_in">ls</span> <span class="literal">-lh</span>，通常与<span class="literal">-l</span>结合一起使用，代表以较高的可读性显示文件的大小(kb/mb/gb)</span><br><span class="line"><span class="literal">-a</span> ：<span class="built_in">ls</span> <span class="literal">-a</span>，a是all缩写，代表显示所有文件（也包含隐藏文件=&gt;大部分以.开头）</span><br></pre></td></tr></table></figure><p>计算机中的单位：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1TB = 1024GB</span></span><br><span class="line"><span class="comment"># 1GB = 1024MB</span></span><br><span class="line"><span class="comment"># 1MB = 1024KB</span></span><br><span class="line"><span class="comment"># 1KB（千字节） = 1024B（字节）</span></span><br></pre></td></tr></table></figure><h2 id="7、pwd命令"><a href="#7、pwd命令" class="headerlink" title="7、pwd命令"></a>7、pwd命令</h2><p>主要功能：pwd&#x3D;print working directory，打印当前工作目录（告诉我们，我们当前位置）</p><p>基本语法：</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pwd</span></span><br></pre></td></tr></table></figure><h2 id="8、cd命令"><a href="#8、cd命令" class="headerlink" title="8、cd命令"></a>8、cd命令</h2><p>主要功能：cd全称change directory，切换目录（从一个目录跳转到另外一个目录）</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd [路径]</span></span><br><span class="line">选项说明：</span><br><span class="line">路径既可以是绝对路径，也可以是相对路径</span><br></pre></td></tr></table></figure><p>案例一：切换到&#x2F;usr&#x2F;local这个程序目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local</span></span><br></pre></td></tr></table></figure><p>案例二：比如我们当前在&#x2F;home&#x2F;itheima下，切换到根目录&#x2F;下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /home/itheima</span></span><br><span class="line"><span class="comment"># cd ../../</span></span><br></pre></td></tr></table></figure><p>案例三：当我们在某个路径下，如何快速回到自己的家目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># cd ~</span></span><br></pre></td></tr></table></figure><h2 id="9、clear命令"><a href="#9、clear命令" class="headerlink" title="9、clear命令"></a>9、clear命令</h2><p>主要功能：清屏</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clear</span></span><br></pre></td></tr></table></figure><h2 id="10、reboot命令"><a href="#10、reboot命令" class="headerlink" title="10、reboot命令"></a>10、reboot命令</h2><p>主要功能：立即重启计算机</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h2 id="11、shutdown命令"><a href="#11、shutdown命令" class="headerlink" title="11、shutdown命令"></a>11、shutdown命令</h2><p>主要功能：立即关机或延迟关机</p><p>立即关机基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shutdown -h 0或now</span></span><br><span class="line"><span class="comment"># shutdown -h 0</span></span><br><span class="line"><span class="comment"># shutdown -h now</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-h</span> ：halt缩写，代表关机</span><br></pre></td></tr></table></figure><blockquote><p>在Linux系统中，立即关机除了使用shutdown -h 0以外还可以使用halt -p命令</p></blockquote><p>延迟关机基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shutdown -h 分钟数</span></span><br><span class="line">代表多少分钟后，自动关机</span><br></pre></td></tr></table></figure><p>案例1：10分钟后自动关机</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shutdown -h 10</span></span><br></pre></td></tr></table></figure><p>案例2：后悔了，取消关机</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">光标一直不停的闪，取消关机</span><br><span class="line"><span class="comment"># 按Ctrl + C（CentOS6，中断关机。CentOS7中还需要使用shutdown -c命令）</span></span><br><span class="line"><span class="comment"># shutdown -c</span></span><br></pre></td></tr></table></figure><h2 id="12、type命令"><a href="#12、type命令" class="headerlink" title="12、type命令"></a>12、type命令</h2><p>主要功能：主要用来结合help命令，用于判断命令的类型（属于内部命令还是外部命令）</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># type 命令</span></span><br><span class="line">内部命令：命令 is a shell builtin</span><br><span class="line">外部命令：没有显示以上信息的就是外部命令</span><br></pre></td></tr></table></figure><h2 id="13、history命令"><a href="#13、history命令" class="headerlink" title="13、history命令"></a>13、history命令</h2><p>主要功能：显示系统以前输入的前1000条命令</p><p>基本语法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># history</span></span><br></pre></td></tr></table></figure><h2 id="14、hostnamectl命令"><a href="#14、hostnamectl命令" class="headerlink" title="14、hostnamectl命令"></a>14、hostnamectl命令</h2><p>主要功能：用于设置计算机的主机名称（给计算机起个名字），此命令式CentOS7新增的命令。</p><p>hostnamectl ： hostname + control</p><h3 id="☆-获取计算机的主机名称"><a href="#☆-获取计算机的主机名称" class="headerlink" title="☆ 获取计算机的主机名称"></a>☆ 获取计算机的主机名称</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnameCentOS6</span></span><br><span class="line"><span class="comment"># hostnamectl  CentOS7</span></span><br></pre></td></tr></table></figure><h3 id="☆-设置计算机的主机名称"><a href="#☆-设置计算机的主机名称" class="headerlink" title="☆ 设置计算机的主机名称"></a>☆ 设置计算机的主机名称</h3><p>Centos7中主机名分3类，静态的（static）、瞬态的（transient）、和灵活的（pretty）。</p><p>① 静态static主机名称：电脑关机或重启后，设置的名称亦然有效</p><p>② 瞬态transient主机名称：临时主机名称，电脑关机或重启后，设置的名称就失效了</p><p>③ 灵活pretty主机名称：可以包含一些特殊字符</p><p>CentOS 7中和主机名有关的文件为&#x2F;etc&#x2F;hostname，它是在系统初始化的时候被读取的，并且内核根据它的内容设置瞬态主机名。</p><blockquote><p>更改主机名称，让其永久生效？① 使用静态的 ② 改&#x2F;etc&#x2F;hostname文件</p></blockquote><h4 id="①-瞬态主机名称（临时设置）"><a href="#①-瞬态主机名称（临时设置）" class="headerlink" title="① 瞬态主机名称（临时设置）"></a>① 瞬态主机名称（临时设置）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl --transient set-hostname 主机名称</span></span><br><span class="line">主机名称 建议遵循 FQDN协议（功能+公司域名）</span><br><span class="line">web01.itcast.cn</span><br><span class="line">web02.itcast.cn</span><br></pre></td></tr></table></figure><p>案例：临时设置主机名称为yunwei.itcast.cn</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl --transient set-hostname yunwei.itcast.cn</span></span><br><span class="line"><span class="comment"># su 立即生效</span></span><br></pre></td></tr></table></figure><h4 id="②-静态主机名称（永久生效）"><a href="#②-静态主机名称（永久生效）" class="headerlink" title="② 静态主机名称（永久生效）"></a>② 静态主机名称（永久生效）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl --static set-hostname 主机名称</span></span><br><span class="line">温馨提示：<span class="literal">--static</span>也可以省略不写</span><br></pre></td></tr></table></figure><p>案例：把计算机的主机名称永久设置为yunwei.itcast.cn</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl --static set-hostname yunwei.itcast.cn</span></span><br><span class="line"><span class="comment"># su 立即生效</span></span><br></pre></td></tr></table></figure><h4 id="③-灵活主机名称（主机名称可以添加特殊字符）"><a href="#③-灵活主机名称（主机名称可以添加特殊字符）" class="headerlink" title="③ 灵活主机名称（主机名称可以添加特殊字符）"></a>③ 灵活主机名称（主机名称可以添加特殊字符）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl --pretty set-hostname 主机名称（包含特殊字符）</span></span><br></pre></td></tr></table></figure><p>案例：把计算机的主机名称通过灵活设置，设置为yunwei’s server01</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl --pretty set-hostname &quot;yunwei&#x27;s server01&quot;</span></span><br><span class="line">查看灵活的主机名称</span><br><span class="line"><span class="comment"># hostnamectl --pretty</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客创建完善参考资料</title>
      <link href="/posts/40776.html"/>
      <url>/posts/40776.html</url>
      
        <content type="html"><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>hexo+github搭建博客(超级详细版，精细入微)<a href="https://cloud.tencent.com/developer/article/1577027">hexo+github搭建博客(超级详细版，精细入微)-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>解决问题参考方案：<a href="https://blog.csdn.net/qq_43819439/article/details/118309688">使用hexo&#x2F;git搭建博客时注意的几点_you should configure deployment settings in _confi-CSDN博客</a></p><p>博客搭建参考：<a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#!">博客搭建+美化（巨细版本） | 兴平 (crazyyuchi.github.io)</a></p><p>博客搭建参考：【[教程]Hexo &amp; Github搭建自己的专属博客】 <a href="https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&vd_source=5cd149d1723aac0eeb1b0c9b1ca86059">https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&amp;vd_source=5cd149d1723aac0eeb1b0c9b1ca86059</a></p><p>解决问题参考方案：<a href="https://zhuanlan.zhihu.com/p/339370999?utm_id=0">Github仓库master分支到main分支迁移指南 - 知乎 (zhihu.com)</a></p><p>参考资料：<a href="https://hexo.io/zh-cn/docs/syntax-highlight.html#Highlight-js">代码高亮 | Hexo</a></p><p>参考资料：<a href="https://cloud.tencent.com/developer/article/1952241">6.hexo插件篇（必看）-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>页面：<a href="https://cloud.tencent.com/developer/article/1866822">Hexo-导航页-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>参考资料：<a href="https://liyangzone.com/article/2019-07-22-hexo-blog-add-gallery-tutorial/">hexo博客添加一级分类相册功能 | liyang’s blog (liyangzone.com)</a></p><p><a href="https://akilar.top/posts/8f31c3d0/">♪(^∇^*)欢迎回来！Butterfly主题的PWA实现方案 | Akilarの糖果屋</a></p><p><a href="https://blog.anheyu.com/posts/c248.html">即刻短文（瀑布流）部署方案 | 安知鱼 (anheyu.com)</a></p><p><a href="https://docs.anheyu.com/intro.html">主题简介 | 安知鱼主题官方文档 (anheyu.com)</a></p><p><a href="https://blog.anheyu.com/posts/sdxhu.html">butterfly 重装日记 | 安知鱼 (anheyu.com)</a></p><p><a href="https://www.yyyzyyyz.cn/posts/d3bbe1c52c60/">hexo-butterfly魔改记录大全 | Black Flies (yyyzyyyz.cn)</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后续博客待定补充</title>
      <link href="/posts/23777.html"/>
      <url>/posts/23777.html</url>
      
        <content type="html"><![CDATA[<h2 id="后续待补充："><a href="#后续待补充：" class="headerlink" title="后续待补充："></a>后续待补充：</h2><h3 id="一：相册问题"><a href="#一：相册问题" class="headerlink" title="一：相册问题"></a>一：相册问题</h3><p>参考资料：<a href="https://liyangzone.com/article/2019-07-22-hexo-blog-add-gallery-tutorial/">hexo博客添加一级分类相册功能 | liyang’s blog (liyangzone.com)</a></p><p>遭遇困难：matery不好找到添加相册页面的帮助页面，从大佬那边也没看到</p><h3 id="二：导航网站补充"><a href="#二：导航网站补充" class="headerlink" title="二：导航网站补充"></a>二：导航网站补充</h3><p>个人收藏整理，防止意外遗失</p><h3 id="三：学习资料上传整理"><a href="#三：学习资料上传整理" class="headerlink" title="三：学习资料上传整理"></a>三：学习资料上传整理</h3><p>linux学习资料上传，有问题方便快速搜索</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航页面</title>
      <link href="/posts/62819.html"/>
      <url>/posts/62819.html</url>
      
        <content type="html"><![CDATA[<h1 id="导航页面的创建"><a href="#导航页面的创建" class="headerlink" title="导航页面的创建"></a>导航页面的创建</h1><p>创建缘由：</p><p>1.好玩</p><p>2.用来收藏自己需要的网站链接，防止意外丢失&#x2F;遗忘</p><p>3.练手</p><h1 id="创建步骤："><a href="#创建步骤：" class="headerlink" title="创建步骤："></a>创建步骤：</h1><h2 id="Hexo添加导航页"><a href="#Hexo添加导航页" class="headerlink" title="Hexo添加导航页"></a>Hexo添加导航页</h2><h3 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h3><p>首先新建页面，执行下面的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page navigate</span><br></pre></td></tr></table></figure><p>修改<code>navigate</code>目录下的<code>index.md</code>的格式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="attr">title</span>: 导航</span><br><span class="line"><span class="attr">date</span>: <span class="number">2020</span>-<span class="number">10</span>-<span class="number">18</span> <span class="number">15</span>:<span class="number">19</span>:<span class="number">14</span></span><br><span class="line"><span class="attr">type</span>: <span class="string">&quot;navigate&quot;</span></span><br><span class="line"><span class="attr">layout</span>: <span class="string">&quot;navigate&quot;</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="在主题配置文件中添加导航"><a href="#在主题配置文件中添加导航" class="headerlink" title="在主题配置文件中添加导航"></a>在主题配置文件中添加导航</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># main menu navigation url and icon</span><br><span class="line"># 配置菜单导航的名称、路径和图标icon.</span><br><span class="line"><span class="attr">menu</span>:</span><br><span class="line">  <span class="title class_">Index</span>:</span><br><span class="line">    <span class="attr">url</span>: /</span><br><span class="line">    <span class="attr">icon</span>: fas fa-home</span><br><span class="line">  标签:</span><br><span class="line">    <span class="attr">url</span>: /tags</span><br><span class="line">    <span class="attr">icon</span>: fas fa-tags</span><br><span class="line">  时光轴:</span><br><span class="line">    <span class="attr">url</span>: /archives</span><br><span class="line">    <span class="attr">icon</span>: fas fa-hourglass-half</span><br><span class="line">  留言板:</span><br><span class="line">    <span class="attr">url</span>: /contact</span><br><span class="line">    <span class="attr">icon</span>: fas fa-comments</span><br><span class="line">  关于:</span><br><span class="line">    <span class="attr">url</span>: /about</span><br><span class="line">    <span class="attr">icon</span>: fas fa-user-circle  </span><br><span class="line">  友情链接:</span><br><span class="line">    <span class="attr">url</span>: /friends</span><br><span class="line">    <span class="attr">icon</span>: fas fa-address-book</span><br><span class="line">  <span class="title class_">Select</span>:</span><br><span class="line">    <span class="attr">icon</span>: fas fa-life-ring</span><br><span class="line">    <span class="attr">children</span>:</span><br><span class="line">      - <span class="attr">name</span>: 导航</span><br><span class="line">        <span class="attr">url</span>: /navigate</span><br><span class="line">        <span class="attr">icon</span>: fas fa-location-arrow</span><br><span class="line">      - <span class="attr">name</span>: 相册</span><br><span class="line">        <span class="attr">url</span>: /galleries</span><br><span class="line">        <span class="attr">icon</span>: fas fa-image</span><br></pre></td></tr></table></figure><h3 id="添加navigate-ejs页面"><a href="#添加navigate-ejs页面" class="headerlink" title="添加navigate.ejs页面"></a>添加<code>navigate.ejs</code>页面</h3><p>在 <code>matery/layout</code> 下新建 <code>navigate.ejs</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">dd,dl,dt,form,h1,h2,h3,h4,h5,h6,li,p,ul&#123;<span class="attr">margin</span>:<span class="number">0</span>;<span class="attr">padding</span>:<span class="number">0</span>;font-<span class="attr">size</span>:14px;font-<span class="attr">weight</span>:<span class="number">400</span>&#125;img&#123;border-<span class="attr">style</span>:none&#125;li&#123;list-<span class="attr">style</span>:none;<span class="attr">float</span>:left&#125;a&#123;text-<span class="attr">decoration</span>:none&#125;.<span class="property">card</span>&#123;background-<span class="attr">color</span>:<span class="title function_">rgba</span>(<span class="number">25</span>,<span class="number">240</span>,<span class="number">229</span>,<span class="number">0</span>);<span class="attr">width</span>:<span class="number">96</span>%;margin-<span class="attr">left</span>:<span class="number">2</span>%&#125;.<span class="property">baidu</span>&#123;<span class="attr">float</span>:left;margin-<span class="attr">left</span>:100px&#125;.<span class="property">baidu</span> form&#123;<span class="attr">position</span>:relative&#125;.<span class="property">Select</span>-box ul&#123;<span class="attr">height</span>:40px;<span class="attr">position</span>:absolute;<span class="attr">left</span>:-1px;<span class="attr">top</span>:<span class="number">0</span>;z-<span class="attr">index</span>:<span class="number">9999</span>;<span class="attr">background</span>:#fff;<span class="attr">border</span>:1px solid #ccc;border-<span class="attr">top</span>:none;<span class="attr">overflow</span>:hidden&#125;.<span class="property">Select</span>-box li&#123;<span class="attr">width</span>:60px;line-<span class="attr">height</span>:40px;font-<span class="attr">size</span>:14px;<span class="attr">color</span>:#<span class="number">484848</span>;<span class="attr">border</span>:<span class="number">0</span>;<span class="attr">cursor</span>:pointer&#125;.<span class="property">Select</span>-box <span class="attr">li</span>:hover&#123;<span class="attr">background</span>:#3385ff;<span class="attr">color</span>:#fff&#125;.<span class="property">Select</span>-box .<span class="property">this_s</span>&#123;<span class="attr">color</span>:#317ef3&#125;.<span class="property">Select</span>-box .<span class="property">this_s</span>:hover&#123;<span class="attr">background</span>:#fff;<span class="attr">color</span>:#317ef3&#125;.<span class="property">qingkong</span>&#123;<span class="attr">position</span>:absolute;<span class="attr">right</span>:120px;<span class="attr">top</span>:12px;<span class="attr">width</span>:18px;<span class="attr">height</span>:18px;<span class="attr">background</span>:<span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.1</span>);border-<span class="attr">radius</span>:18px;line-<span class="attr">height</span>:16px;<span class="attr">color</span>:#<span class="number">666</span>;<span class="attr">cursor</span>:pointer;text-<span class="attr">align</span>:center;font-<span class="attr">size</span>:14px;<span class="attr">display</span>:none&#125;.<span class="property">qingkong</span>:hover&#123;<span class="attr">background</span>:<span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.2</span>)&#125;.<span class="property">qingkong</span>:active&#123;<span class="attr">background</span>:<span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.3</span>)&#125;.<span class="property">baidu</span>-<span class="number">2</span>&#123;<span class="attr">width</span>:<span class="number">100</span>%;<span class="attr">height</span>:110px;<span class="attr">margin</span>:<span class="number">0</span> auto;<span class="attr">background</span>:<span class="number">0</span> <span class="number">0</span>;padding-<span class="attr">top</span>:50px&#125;.<span class="property">baidu</span>-<span class="number">2</span> form&#123;<span class="attr">width</span>:520px;<span class="attr">margin</span>:<span class="number">0</span> auto&#125;.<span class="property">baidu</span>-<span class="number">2</span> input&#123;<span class="attr">padding</span>:13px 8px;<span class="attr">opacity</span>:<span class="number">.9</span>;font-<span class="attr">size</span>:15px&#125;#<span class="title class_">Select</span>-<span class="number">2</span>&#123;<span class="attr">float</span>:left&#125;.<span class="property">Select</span>-box-<span class="number">2</span>&#123;text-<span class="attr">align</span>:center;<span class="attr">float</span>:left;<span class="attr">position</span>:relative&#125;.<span class="property">Select</span>-box-<span class="number">2</span> ul&#123;<span class="attr">height</span>:46px;<span class="attr">position</span>:absolute;<span class="attr">left</span>:<span class="number">0</span>;<span class="attr">top</span>:1px;z-<span class="attr">index</span>:<span class="number">9999</span>;<span class="attr">background</span>:<span class="title function_">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.9</span>);<span class="attr">border</span>:1px solid #ccc;border-<span class="attr">top</span>:none;<span class="attr">overflow</span>:hidden&#125;.<span class="property">Select</span>-box-<span class="number">2</span> li&#123;<span class="attr">width</span>:60px;line-<span class="attr">height</span>:46px;font-<span class="attr">size</span>:15px;<span class="attr">color</span>:#<span class="number">484848</span>;<span class="attr">border</span>:<span class="number">0</span>;<span class="attr">cursor</span>:pointer&#125;.<span class="property">Select</span>-box-<span class="number">2</span> <span class="attr">li</span>:hover&#123;<span class="attr">background</span>:#3385ff;<span class="attr">color</span>:#fff&#125;.<span class="property">Select</span>-box-<span class="number">2</span> .<span class="property">this_s</span>&#123;<span class="attr">color</span>:#317ef3&#125;.<span class="property">Select</span>-box-<span class="number">2</span> .<span class="property">this_s</span>:hover&#123;<span class="attr">background</span>:<span class="number">0</span> <span class="number">0</span>;<span class="attr">color</span>:#317ef3&#125;#kw-<span class="number">2</span>&#123;<span class="attr">width</span>:335px;<span class="attr">outline</span>:<span class="number">0</span>;<span class="attr">border</span>:1px solid #ccc;<span class="attr">background</span>:<span class="title function_">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.2</span>);<span class="attr">color</span>:#<span class="number">000</span>;padding-<span class="attr">left</span>:70px;font-<span class="attr">weight</span>:<span class="number">700</span>&#125;#su-<span class="number">2</span>&#123;<span class="attr">width</span>:90px;<span class="attr">background</span>:#00f;<span class="attr">border</span>:none;border-<span class="attr">top</span>:#3385ff 1px solid;border-<span class="attr">bottom</span>:1px solid #2d78f4;<span class="attr">color</span>:#fff;<span class="attr">cursor</span>:pointer;<span class="attr">outline</span>:<span class="number">0</span>&#125;#su-<span class="number">2</span>:hover&#123;<span class="attr">background</span>:#00f;border-<span class="attr">bottom</span>:1px solid #00f&#125;#su-<span class="number">2</span>:active&#123;<span class="attr">background</span>:#00f;box-<span class="attr">shadow</span>:inset 1px 1px 3px #00f;-webkit-box-<span class="attr">shadow</span>:inset 1px 1px 3px #00f&#125;.<span class="property">jj</span>-list-tit&#123;font-<span class="attr">size</span>:16px;line-<span class="attr">height</span>:25px;<span class="attr">color</span>:#fff;<span class="attr">width</span>:<span class="number">100</span>%;padding-<span class="attr">left</span>:<span class="number">38.5</span>%&#125;.<span class="property">jj</span>-list-con&#123;<span class="attr">overflow</span>:hidden;<span class="attr">margin</span>:<span class="number">0</span> auto&#125;.<span class="property">jj</span>-list-con li&#123;<span class="attr">width</span>:<span class="number">31.333</span>%;<span class="attr">margin</span>:<span class="number">1</span>%&#125;.<span class="property">link</span>-<span class="number">3</span>&#123;<span class="attr">display</span>:block;<span class="attr">background</span>:<span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.35</span>);<span class="attr">color</span>:#fff;font-<span class="attr">size</span>:13px;text-<span class="attr">align</span>:center;line-<span class="attr">height</span>:35px;<span class="attr">padding</span>:4px <span class="number">0</span>;border-<span class="attr">radius</span>:2px;<span class="attr">transition</span>:all .2s&#125;.<span class="property">link</span>-<span class="number">3</span>:hover&#123;<span class="attr">background</span>:<span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.45</span>);font-<span class="attr">size</span>:15px;font-<span class="attr">weight</span>:<span class="number">700</span>&#125;@media only screen and (max-<span class="attr">width</span>:584px)&#123;.<span class="property">navi</span>-height&#123;<span class="attr">height</span>:1300px&#125;.<span class="property">link</span>-box&#123;margin-<span class="attr">top</span>:<span class="number">5</span>%&#125;.<span class="property">large</span>-screen&#123;<span class="attr">display</span>:none&#125;&#125;@media only screen and (min-<span class="attr">width</span>:584px) and (max-<span class="attr">width</span>:993px)&#123;.<span class="property">navi</span>-height&#123;<span class="attr">height</span>:800px&#125;.<span class="property">link</span>-box&#123;margin-<span class="attr">top</span>:<span class="number">5</span>%&#125;.<span class="property">large</span>-screen&#123;<span class="attr">display</span>:none&#125;&#125;@media only screen and (min-<span class="attr">width</span>:993px)&#123;.<span class="property">navi</span>-height&#123;<span class="attr">position</span>:absolute;<span class="attr">width</span>:<span class="number">100</span>%;<span class="attr">height</span>:<span class="number">100</span>%&#125;&#125;.<span class="property">page</span>-footer&#123;<span class="attr">display</span>:none&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div class=&quot;navi-height bg-cover pd-header&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;link-box container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;baidu baidu-2 large-screen&quot;&gt;</span><br><span class="line">            &lt;form name=&quot;f&quot; action=&quot;https://www.baidu.com/&quot; target=&quot;_blank&quot;&gt;</span><br><span class="line">                &lt;div id=&quot;Select-2&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;Select-box-2&quot; id=&quot;baidu&quot;&gt;</span><br><span class="line">                        &lt;ul style=&quot;height:46px&quot;&gt;</span><br><span class="line">                            &lt;li class=&quot;this_s&quot;&gt;百 · 度&lt;/li&gt;</span><br><span class="line">                            &lt;li class=&quot;bing_s&quot;&gt;必 · 应&lt;/li&gt;</span><br><span class="line">                            &lt;li class=&quot;google_s&quot;&gt;谷 · 歌&lt;/li&gt;</span><br><span class="line">                            &lt;li class=&quot;baidu_s&quot;&gt;百 · 度&lt;/li&gt;</span><br><span class="line">                        &lt;/ul&gt;</span><br><span class="line">                    &lt;/div&gt; &lt;input name=&quot;wd&quot; id=&quot;kw-2&quot; maxlength=&quot;100&quot; autocomplete=&quot;off&quot; type=&quot;text&quot;&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;qingkong&quot; id=&quot;qingkong&quot; title=&quot;清 · 空&quot; style=&quot;display:none&quot;&gt;x&lt;/div&gt; &lt;input value=&quot;搜 · 索&quot; id=&quot;su-2&quot; type=&quot;submit&quot;&gt;</span><br><span class="line">                &lt;ul class=&quot;keylist&quot;&gt;&lt;/ul&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;row tags-posts&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;col s12 m6 l4 friend-div aos-init&quot; data-aos=&quot;zoom-in-up&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;jj-list-tit&quot;&gt;娱乐 · 影视&lt;/div&gt;</span><br><span class="line">                    &lt;ul class=&quot;jj-list-con&quot;&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.jd.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;京东&lt;/a&gt;</span><br><span class="line">                        &lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.taobao.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;淘宝&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.tmall.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;天猫&lt;/a&gt;&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://v.qq.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;腾讯视频&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://www.iqiyi.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;爱奇艺&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;哔哩哔哩&lt;/a&gt; &lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://music.163.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;网易云音乐&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://y.qq.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;QQ音乐&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://www.kugou.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;酷狗音乐&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;col s12 m6 l4 friend-div aos-init&quot; data-aos=&quot;zoom-in-up&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;jj-list-tit&quot;&gt;社区 · Code&lt;/div&gt;</span><br><span class="line">                    &lt;ul class=&quot;jj-list-con&quot;&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.mobaijun.com/contact/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;留言&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://github.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://coding.net/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Coding&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://juejin.im/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;掘金&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://gitee.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;码云&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.csdn.net/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;CSDN&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;简书&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;思否&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;云+社区&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;col s12 m6 l4 friend-div aos-init&quot; data-aos=&quot;zoom-in-up&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;jj-list-tit&quot;&gt;实用 · 工具&lt;/div&gt;</span><br><span class="line">                    &lt;ul class=&quot;jj-list-con&quot;&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://mdnice.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Markdown编辑器&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://translate.google.cn/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;谷歌翻译&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.uupoop.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;在线PS&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.processon.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;思维导图&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://wallhaven.cc/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;超清壁纸&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://cli.im/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;二维码生成&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://tool.cc/pic-resizer/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;图片在线压缩&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.iconfont.cn/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;阿里巴巴图标库&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://my.openwrite.cn/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;OW分发&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;col s12 m6 l4 friend-div aos-init&quot; data-aos=&quot;zoom-in-up&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;jj-list-tit&quot;&gt;编程 · 学习&lt;/div&gt;</span><br><span class="line">                    &lt;ul class=&quot;jj-list-con&quot;&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;开源中国&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://htmldog.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;HTML狗&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.icourse163.org/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;中国大学慕课&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.imooc.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;慕课网&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://www.wxapp-union.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;小程序&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;菜鸟教程&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://blog.51cto.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;51CTO&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.shiyanlou.com/library/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;实验楼&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://spring.io/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Spring&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;col s12 m6 l4 friend-div aos-init&quot; data-aos=&quot;zoom-in-up&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;jj-list-tit&quot;&gt;资讯 · 趋势&lt;/div&gt;</span><br><span class="line">                    &lt;ul class=&quot;jj-list-con&quot;&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.huxiu.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;虎嗅&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://insights.stackoverflow.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;技术调查&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://www.asciiworld.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;摸鱼&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://sspai.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;少数派&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://zh.wikihow.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;WikeHom&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.awesomes.cn/rank?sort=hot&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;前端趋势&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://github-trending.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;GitHub趋势&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.tiobe.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;编程趋势&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://trends.google.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Google趋势&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;col s12 m6 l4 friend-div aos-init&quot; data-aos=&quot;zoom-in-up&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;jj-list-tit&quot;&gt;搜索 · 其他&lt;/div&gt;</span><br><span class="line">                    &lt;ul class=&quot;jj-list-con&quot;&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://ac.scmor.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;谷歌镜像&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://www.pansoso.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;网盘搜索&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://tool.mkblog.cn/music/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;音乐搜索&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.upyun.com/?utm_source=lianmeng&amp;amp;utm_medium=referral&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;又拍云&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://carbon.now.sh/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;代码图片&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.zhipin.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Boos&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://www.fontawesome.com.cn/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;图标库&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;https://www.qvdv.com/tools/qvdv-guid.html&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;在线工具&lt;/a&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href=&quot;http://zhongguose.com/&quot; rel=&quot;external nofollow noreferrer&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;中国色&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;script&gt;$(&quot;.Select-box ul&quot;).hover(function()&#123;$(this).css(&quot;height&quot;,&quot;auto&quot;)&#125;,function()&#123;$(this).css(&quot;height&quot;,&quot;40px&quot;)&#125;),$(&quot;.Select-box-2 ul&quot;).hover(function()&#123;$(this).css(&quot;height&quot;,&quot;auto&quot;)&#125;,function()&#123;$(this).css(&quot;height&quot;,&quot;46px&quot;)&#125;),$(&quot;.Select-box li&quot;).click(function()&#123;var t=$(this).attr(&quot;class&quot;),s=$(this).html();&quot;baidu_s&quot;==t&amp;&amp;(t=&quot;https://www.baidu.com/s&quot;,_name=&quot;wd&quot;),&quot;google_s&quot;==t&amp;&amp;(t=&quot;https://www.google.com/search&quot;,_name=&quot;q&quot;),&quot;bing_s&quot;==t&amp;&amp;(t=&quot;https://www.bing.com/search&quot;,_name=&quot;q&quot;),$(&quot;.baidu form&quot;).attr(&quot;action&quot;,t),$(&quot;.this_s&quot;).html(s),$(&quot;#kw&quot;).attr(&quot;name&quot;,_name),$(&quot;.Select-box ul&quot;).css(&quot;height&quot;,&quot;40px&quot;)&#125;),$(&quot;.Select-box-2 li&quot;).click(function()&#123;var t=$(this).attr(&quot;class&quot;),s=$(this).html();&quot;baidu_s&quot;==t&amp;&amp;(t=&quot;https://www.baidu.com/s&quot;,_name=&quot;wd&quot;),&quot;google_s&quot;==t&amp;&amp;(t=&quot;https://www.google.com/search&quot;,_name=&quot;q&quot;),&quot;bing_s&quot;==t&amp;&amp;(t=&quot;https://www.bing.com/search&quot;,_name=&quot;q&quot;),$(&quot;.baidu form&quot;).attr(&quot;action&quot;,t),$(&quot;.this_s&quot;).html(s),$(&quot;#kw-2&quot;).attr(&quot;name&quot;,_name),$(&quot;.Select-box-2 ul&quot;).css(&quot;height&quot;,&quot;48px&quot;)&#125;)&lt;/script&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="预览部署"><a href="#预览部署" class="headerlink" title="预览部署"></a>预览部署</h3><p>执行相关命令</p><p>预览</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl&amp;&amp;hexo g&amp;&amp;hexo s</span><br></pre></td></tr></table></figure><p>部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl&amp;&amp;hexo g&amp;&amp;hexo d</span><br></pre></td></tr></table></figure><p>全部步骤摘抄自大佬：闲花手札</p><p>页面：<a href="https://cloud.tencent.com/developer/article/1866822">Hexo-导航页-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建立博客过程中遇到的问题</title>
      <link href="/posts/29243.html"/>
      <url>/posts/29243.html</url>
      
        <content type="html"><![CDATA[<h1 id="建立博客网站时遇到的故障与如何排除掉的方式"><a href="#建立博客网站时遇到的故障与如何排除掉的方式" class="headerlink" title="建立博客网站时遇到的故障与如何排除掉的方式"></a>建立博客网站时遇到的故障与如何排除掉的方式</h1><p>本博客参考了两位up主的创建过程，其中遇到不少阻碍，解决过程有些烦人，故将中途遇到的故障进行记录，防止日后继续出现类似问题。</p><p>本博客搭建参考：<a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#!">博客搭建+美化（巨细版本） | 兴平 (crazyyuchi.github.io)</a></p><p>本博客搭建参考：【[教程]Hexo &amp; Github搭建自己的专属博客】 <a href="https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&vd_source=5cd149d1723aac0eeb1b0c9b1ca86059">https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&amp;vd_source=5cd149d1723aac0eeb1b0c9b1ca86059</a></p><h2 id="故障问题："><a href="#故障问题：" class="headerlink" title="故障问题："></a>故障问题：</h2><h5 id="1-文件同步失败，无反馈"><a href="#1-文件同步失败，无反馈" class="headerlink" title="1.文件同步失败，无反馈"></a>1.文件同步失败，无反馈</h5><p>跟随博客教程，安装软件过程无误，但后续无法与github网站进行上传同步，提示一直卡在_config文件上，经测试；</p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222091004345.png" alt="image-20231222091004345"></p><p>是按照教程操作过程之中，忽略了上传路径的排版，缺少了前面的空格，导致失败，调整格式后正常。</p><p>解决问题参考方案：<a href="https://blog.csdn.net/qq_43819439/article/details/118309688">使用hexo&#x2F;git搭建博客时注意的几点_you should configure deployment settings in _confi-CSDN博客</a></p><h5 id="2-文件上传路径错误，main与master的区分"><a href="#2-文件上传路径错误，main与master的区分" class="headerlink" title="2.文件上传路径错误，main与master的区分"></a>2.文件上传路径错误，main与master的区分</h5><p>上传文件成功之后，访问对应的链接页面仍旧是测试页面，并非上传博客页面，重新排查安装问题与_config文件配置，皆无异常；</p><p>后经观察，上传过程中显示正常，故访问github个人仓库进行查验，最后发现是分支main与分支master的问题；</p><p>创建github测试之时，勾选主分支为main，核对发现教程中设置分支为master分支。</p><p>百度查验，进行更替主分支测试：</p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222091446007.png" alt="image-20231222091446007"></p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222091513382.png" alt="image-20231222091513382"></p><p>已调整后，测试仍旧是之前测试页面，后发现，需要在pages设置上，将域名对应的分支继续进行更替</p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222091648629.png" alt="image-20231222091648629"></p><p>操作完毕，一切回归正常，域名页面可以正常访问上传博客页面，故障排除。</p><p>解决问题参考方案：<a href="https://zhuanlan.zhihu.com/p/339370999?utm_id=0">Github仓库master分支到main分支迁移指南 - 知乎 (zhihu.com)</a></p><h5 id="3-代码高亮插件与默认设置冲突"><a href="#3-代码高亮插件与默认设置冲突" class="headerlink" title="3.代码高亮插件与默认设置冲突"></a>3.代码高亮插件与默认设置冲突</h5><p>代码高亮更替过程之中，产生的故障（处理时长较久，反思应该是基础不扎实导致，无意义浪费了许多时间去排查不相关的地带）</p><p>根据错误提示，故障发生在blog设置_config.yml文件之中，有关于默认高亮设置代码与更替的高亮代码插件之间的冲突。</p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222093952543.png" alt="image-20231222093952543"></p><p>原默认配置全部都在开启中，根据测试反馈结果，冲突在这几行代码之中，参考博客搭建教程之中给出的解决方法并未找到对应的代码行列；</p><p>后经过翻阅资料后，发现7.0版本之后与之前的代码出现差异化，参考文档给出的解决方法是旧版的，即7.0之前；</p><p>解决思路——对比测试</p><p>参考资料：<a href="https://hexo.io/zh-cn/docs/syntax-highlight.html#Highlight-js">代码高亮 | Hexo</a></p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222150641079.png" alt="image-20231222150641079"></p><p>经过不断测试关闭开启的选项，后确认成功。</p><h5 id="4-插件问题"><a href="#4-插件问题" class="headerlink" title="4.插件问题"></a>4.插件问题</h5><p>参考资料：<a href="https://cloud.tencent.com/developer/article/1952241">6.hexo插件篇（必看）-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><h5 id="5-重装主题"><a href="#5-重装主题" class="headerlink" title="5.重装主题"></a>5.重装主题</h5><p>next→hexo-matery→hexo-anzhiyu→hexo-butterfly</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test2</title>
      <link href="/posts/51705.html"/>
      <url>/posts/51705.html</url>
      
        <content type="html"><![CDATA[<hr><h3 id="1-This-is-a-blog-Test"><a href="#1-This-is-a-blog-Test" class="headerlink" title="1. This is a blog Test"></a>1. This is a blog Test</h3><ul><li>First</li><li>Second</li></ul><hr><h3 id="2-Show-Text"><a href="#2-Show-Text" class="headerlink" title="2. Show Text"></a>2. Show Text</h3><ul><li><strong>这是加粗</strong></li></ul><blockquote><p><em>这是斜体</em></p></blockquote><p>:smile:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 雪花特效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">&quot;https://libs.baidu.com/jquery/1.8.3/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">&quot;https://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/snow.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> blog1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03_SHELL编程之嵌套循环+随机数及综合案例.md</title>
      <link href="/posts/64491.html"/>
      <url>/posts/64491.html</url>
      
        <content type="html"><![CDATA[<p>###课程目标</p><ul><li>&#x3D;&#x3D;掌握for循环语句的基本语法结构&#x3D;&#x3D;</li><li>&#x3D;&#x3D;掌握while和until循环语句的基本语法结构&#x3D;&#x3D;</li><li>能会使用RANDOM产生随机数</li><li>理解嵌套循环</li></ul><h3 id="一、随机数"><a href="#一、随机数" class="headerlink" title="一、随机数"></a>一、随机数</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">bash默认有一个<span class="variable">$RANDOM</span>的变量默认是<span class="number">0</span>~<span class="number">32767</span>。使用<span class="built_in">set</span> |grep RANDOM查看上一次产生的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$RANDOM</span></span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">1</span>之间的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">2</span>之间的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">3</span>之间的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">4</span>]</span><br><span class="line">。。。。</span><br><span class="line">产生<span class="number">0</span>~<span class="number">9</span>内的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">100</span>内的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">101</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">产生<span class="number">50</span><span class="literal">-100</span>之内的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">51</span>+<span class="number">50</span>]</span><br><span class="line"></span><br><span class="line">产生三位数的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">900</span>+<span class="number">100</span>]</span><br></pre></td></tr></table></figure><h4 id="实战案例1"><a href="#实战案例1" class="headerlink" title="实战案例1"></a>实战案例1</h4><ol><li>写一个脚本，产生一个phonenum.txt文件，随机产生以139开头的手机号1000个，每个一行。</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">分析：</span><br><span class="line"><span class="number">1</span>. 产生<span class="number">1000</span>个电话号码，脚本需要循环<span class="number">1000</span>次</span><br><span class="line"><span class="number">2</span>. <span class="number">139</span>+<span class="number">8</span>位,后<span class="number">8</span>位随机产生，可以让每一位数字都随机产生，<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>] <span class="number">0</span><span class="literal">-9</span></span><br><span class="line"><span class="number">3</span>. 将随机产生的数字分别保存到变量里，然后加上<span class="number">139</span>保存到文件里</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># random phonenum</span></span><br><span class="line"><span class="comment"># 循环1000次产生电话号码并保存到文件</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">1000</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">n1=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n2=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n3=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n4=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n5=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n6=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n7=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n8=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> &gt;&gt; phonenum.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># random phonenum</span></span><br><span class="line"><span class="comment"># 循环1000次产生电话号码</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> &gt;&gt; phonenum.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">1000</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> &gt;&gt; phonenum.txt</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="keyword">continue</span>:继续，跳过本次循环，执行下一次循环</span><br><span class="line"><span class="keyword">break</span>:打断，执行循环体外的代码do..done外</span><br><span class="line"><span class="keyword">exit</span>:退出程序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">1000</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> &gt;&gt; phonenum.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#create phone num file</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> |<span class="built_in">tee</span> <span class="literal">-a</span> phonenum.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> |<span class="built_in">tee</span> <span class="literal">-a</span> phonenum.txt &amp;&amp; let count++</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$count</span> -<span class="type">eq</span> <span class="number">1000</span> ];then</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ol start="2"><li>在上面的1000个手机号里抽奖5个幸运观众，显示出这5个幸运观众。但只显示头3个数和尾号的4个数，中间的都用*代替</li></ol><p>思路：</p><ul><li>确定幸运观众所在的行随机生成 RANDOM   $[RANDOM%1000+1]</li><li>将电话号码提取出来              head 和 tail</li><li>显示前3个和后4个数到屏幕     最后将电话号码输出到屏幕   echo ${电话号码部分}</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">phone=/shell04/phonenum.txt</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="comment">#定位幸运观众所在行号</span></span><br><span class="line">line=`wc <span class="literal">-l</span> <span class="variable">$phone</span> |cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">luck_line=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="variable">$line</span>+<span class="number">1</span>]</span><br><span class="line"><span class="comment">#取出幸运观众所在行的电话号码</span></span><br><span class="line">luck_num=`head -<span class="variable">$luck_line</span> <span class="variable">$phone</span>|tail <span class="literal">-1</span>`</span><br><span class="line"><span class="comment">#显示到屏幕</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;139****<span class="variable">$</span>&#123;luck_num:7:4&#125;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$luck_num</span> &gt;&gt; luck.txt</span><br><span class="line"><span class="comment">#删除已经被抽取的幸运观众号码</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;/<span class="variable">$luck_num</span>/d&quot;</span> <span class="variable">$phone</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">file=/shell04/phonenum.txt</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">file_num=`wc <span class="literal">-l</span> <span class="variable">$file</span> |cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">line=`echo <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="variable">$file_num</span>+<span class="number">1</span>]`</span><br><span class="line">luck=`head <span class="literal">-n</span> <span class="variable">$line</span>  <span class="variable">$file</span>|tail <span class="literal">-1</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;139****<span class="variable">$</span>&#123;luck:7:4&#125;&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="variable">$luck</span> &gt;&gt; /shell04/luck_num.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">file=phonenum.txt</span><br><span class="line">line=`cat phonenum.txt |wc <span class="literal">-l</span>`<span class="number">1000</span></span><br><span class="line">luckline=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="variable">$line</span>+<span class="number">1</span>]</span><br><span class="line">phone=`cat <span class="variable">$file</span>|head -<span class="variable">$luckline</span>|tail <span class="literal">-1</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;幸运观众为:139****<span class="variable">$</span>&#123;phone:7:4&#125;&quot;</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># choujiang</span></span><br><span class="line">phone=phonenum.txt</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">num=`wc <span class="literal">-l</span> phonenum.txt |cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">line=`echo <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="variable">$num</span>+<span class="number">1</span>]`</span><br><span class="line">luck=`head -<span class="variable">$line</span> <span class="variable">$phone</span> |tail <span class="literal">-1</span>`</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;/<span class="variable">$luck</span>/d&quot;</span> <span class="variable">$phone</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;幸运观众是:139****<span class="variable">$</span>&#123;luck:7:4&#125;&quot;</span></span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>批量创建5个用户，每个用户的密码为一个随机数</li></ol><p>思路：</p><ul><li>循环5次创建用户</li><li>产生一个密码文件来保存用户的随机密码</li><li>从密码文件中取出随机密码赋值给用户</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#crate user and set passwd</span></span><br><span class="line"><span class="comment">#产生一个保存用户名和密码的文件</span></span><br><span class="line"><span class="built_in">echo</span> user0&#123;<span class="number">1</span>..<span class="number">3</span>&#125;:itcast<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">9000</span>+<span class="number">1000</span>]<span class="comment">#@~|tr &#x27; &#x27; &#x27;\n&#x27;&gt;&gt; user_pass.file</span></span><br><span class="line"><span class="comment">#循环创建5个用户</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">user=`head -<span class="variable">$i</span> user_pass.file|tail <span class="literal">-1</span>|cut <span class="literal">-d</span>: <span class="literal">-f1</span>`</span><br><span class="line">pass=`head -<span class="variable">$i</span> user_pass.file|tail <span class="literal">-1</span>|cut <span class="literal">-d</span>: <span class="literal">-f2</span>`</span><br><span class="line">useradd <span class="variable">$user</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$pass</span>|passwd <span class="literal">--stdin</span> <span class="variable">$user</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat user_pass.file`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">user=`echo <span class="variable">$i</span>|cut <span class="literal">-d</span>: <span class="literal">-f1</span>`</span><br><span class="line">pass=`echo <span class="variable">$i</span>|cut <span class="literal">-d</span>: <span class="literal">-f2</span>`</span><br><span class="line">useradd <span class="variable">$user</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$pass</span>|passwd <span class="literal">--stdin</span> <span class="variable">$user</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#crate user and set passwd</span></span><br><span class="line"><span class="comment">#产生一个保存用户名和密码的文件</span></span><br><span class="line"><span class="built_in">echo</span> user0&#123;<span class="number">1</span>..<span class="number">3</span>&#125;:itcast<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">9000</span>+<span class="number">1000</span>]<span class="comment">#@~|tr &#x27; &#x27; &#x27;\n&#x27;|tr &#x27;:&#x27; &#x27; &#x27; &gt;&gt; user_pass.file</span></span><br><span class="line"><span class="comment">#循环创建5个用户</span></span><br><span class="line"><span class="keyword">while</span> read user pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">useradd <span class="variable">$user</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$pass</span>|passwd <span class="literal">--stdin</span> <span class="variable">$user</span></span><br><span class="line">done &lt; user_pass.file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pwgen工具产生随机密码：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell04</span>]<span class="comment"># pwgen -cn1 12</span></span><br><span class="line">Meep5ob1aesa</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell04</span>]<span class="comment"># echo user0&#123;1..3&#125;:$(pwgen -cn1 12)</span></span><br><span class="line">user01:Bahqu9haipho user02:Feiphoh7moo4 user03:eilahj5eth2<span class="built_in">R</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell04</span>]<span class="comment"># echo user0&#123;1..3&#125;:$(pwgen -cn1 12)|tr &#x27; &#x27; &#x27;\n&#x27;</span></span><br><span class="line">user01:eiwaShuZo5hi</span><br><span class="line">user02:eiDeih7aim9k</span><br><span class="line">user03:aeBahwien8co</span><br></pre></td></tr></table></figure><h3 id="二、嵌套循环"><a href="#二、嵌套循环" class="headerlink" title="二、嵌套循环"></a>二、嵌套循环</h3><p>一个&#x3D;&#x3D;循环体&#x3D;&#x3D;内又包含另一个<strong>完整</strong>的循环结构，称为循环的嵌套。在外部循环的每次执行过程中都会触发内部循环，直至内部完成一次循环，才接着执行下一次的外部循环。for循环、while循环和until循环可以<strong>相互</strong>嵌套。</p><p><strong>demo1：打印如下图案</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">X轴：</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++));<span class="keyword">do</span> <span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$i</span>;done</span><br><span class="line">Y轴：</span><br><span class="line">负责打印换行</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">5</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> ((x=<span class="number">1</span>;x&lt;=<span class="variable">$y</span>;x++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">5</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$x</span> -<span class="type">le</span> <span class="variable">$y</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">let x++</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>demo2：打印如下图案</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">54</span></span><br><span class="line"><span class="number">543</span></span><br><span class="line"><span class="number">5432</span></span><br><span class="line"><span class="number">54321</span></span><br><span class="line"></span><br><span class="line">Y轴：打印换行</span><br><span class="line">X轴：打印数字 <span class="number">5</span><span class="literal">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">5</span></span><br><span class="line"><span class="keyword">while</span> (( <span class="variable">$y</span> &gt;= <span class="number">1</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> ((x=<span class="number">5</span>;x&gt;=<span class="variable">$y</span>;x<span class="literal">--</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y<span class="literal">--</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> (( y=<span class="number">5</span>;y&gt;=<span class="number">1</span>;y<span class="literal">--</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> (( x=<span class="number">5</span>;x&gt;=<span class="variable">$y</span>;x<span class="literal">--</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">5</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$y</span> -<span class="type">ge</span> <span class="number">1</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> ((x=<span class="number">5</span>;x&gt;=<span class="variable">$y</span>;x<span class="literal">--</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y<span class="literal">--</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">1</span></span><br><span class="line"><span class="keyword">until</span> (( <span class="variable">$y</span> &gt;<span class="number">5</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (( <span class="variable">$x</span> &lt;= <span class="variable">$y</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$</span>[<span class="number">6</span>-<span class="variable">$x</span>]</span><br><span class="line">let x++</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">课后打印：</span><br><span class="line"><span class="number">54321</span></span><br><span class="line"><span class="number">5432</span></span><br><span class="line"><span class="number">543</span></span><br><span class="line"><span class="number">54</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>课堂练习：打印九九乘法表（三种方法）</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">5</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> ((x=<span class="number">1</span>;x&lt;=<span class="variable">$y</span>;x++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">2</span>=<span class="number">2</span>   <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">3</span>=<span class="number">3</span>   <span class="number">2</span>*<span class="number">3</span>=<span class="number">6</span>   <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">4</span>=<span class="number">4</span>   <span class="number">2</span>*<span class="number">4</span>=<span class="number">8</span>   <span class="number">3</span>*<span class="number">4</span>=<span class="number">12</span>  <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">5</span>=<span class="number">5</span>   <span class="number">2</span>*<span class="number">5</span>=<span class="number">10</span>  <span class="number">3</span>*<span class="number">5</span>=<span class="number">15</span>  <span class="number">4</span>*<span class="number">5</span>=<span class="number">20</span>  <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">6</span>=<span class="number">6</span>   <span class="number">2</span>*<span class="number">6</span>=<span class="number">12</span>  <span class="number">3</span>*<span class="number">6</span>=<span class="number">18</span>  <span class="number">4</span>*<span class="number">6</span>=<span class="number">24</span>  <span class="number">5</span>*<span class="number">6</span>=<span class="number">30</span>  <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">7</span>=<span class="number">7</span>   <span class="number">2</span>*<span class="number">7</span>=<span class="number">14</span>  <span class="number">3</span>*<span class="number">7</span>=<span class="number">21</span>  <span class="number">4</span>*<span class="number">7</span>=<span class="number">28</span>  <span class="number">5</span>*<span class="number">7</span>=<span class="number">35</span>  <span class="number">6</span>*<span class="number">7</span>=<span class="number">42</span>  <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">8</span>=<span class="number">8</span>   <span class="number">2</span>*<span class="number">8</span>=<span class="number">16</span>  <span class="number">3</span>*<span class="number">8</span>=<span class="number">24</span>  <span class="number">4</span>*<span class="number">8</span>=<span class="number">32</span>  <span class="number">5</span>*<span class="number">8</span>=<span class="number">40</span>  <span class="number">6</span>*<span class="number">8</span>=<span class="number">48</span>  <span class="number">7</span>*<span class="number">8</span>=<span class="number">56</span>  <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">9</span>=<span class="number">9</span>   <span class="number">2</span>*<span class="number">9</span>=<span class="number">18</span>  <span class="number">3</span>*<span class="number">9</span>=<span class="number">27</span>  <span class="number">4</span>*<span class="number">9</span>=<span class="number">36</span>  <span class="number">5</span>*<span class="number">9</span>=<span class="number">45</span>  <span class="number">6</span>*<span class="number">9</span>=<span class="number">54</span>  <span class="number">7</span>*<span class="number">9</span>=<span class="number">63</span>  <span class="number">8</span>*<span class="number">9</span>=<span class="number">72</span>  <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Y轴：循环<span class="number">9</span>次，打印<span class="number">9</span>行空行</span><br><span class="line">X轴：循环次数和Y轴相关；打印的是X和Y轴乘积 <span class="variable">$</span>[] <span class="variable">$</span>(())</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">9</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> ((x=<span class="number">1</span>;x&lt;=<span class="variable">$y</span>;x++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="operator">-ne</span> <span class="string">&quot;<span class="variable">$x</span>*<span class="variable">$y</span>=<span class="variable">$</span>[<span class="variable">$x</span>*<span class="variable">$y</span>]\t&quot;</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$y</span> -<span class="type">le</span> <span class="number">9</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        x=<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> [ <span class="variable">$x</span> -<span class="type">le</span> <span class="variable">$y</span> ]</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="operator">-ne</span> <span class="string">&quot;<span class="variable">$x</span>*<span class="variable">$y</span>=<span class="variable">$</span>[<span class="variable">$x</span>*<span class="variable">$y</span>]\t&quot;</span></span><br><span class="line">                let x++</span><br><span class="line">        done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="number">9</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> `seq <span class="variable">$i</span>`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="operator">-ne</span>  <span class="string">&quot;<span class="variable">$j</span>*<span class="variable">$i</span>=<span class="variable">$</span>[<span class="variable">$i</span>*<span class="variable">$j</span>]\t&quot;</span></span><br><span class="line">    done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">1</span></span><br><span class="line"><span class="keyword">until</span> [ <span class="variable">$y</span> -<span class="type">gt</span> <span class="number">9</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        x=<span class="number">1</span></span><br><span class="line">        <span class="keyword">until</span> [ <span class="variable">$x</span> -<span class="type">gt</span> <span class="variable">$y</span> ]</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="operator">-ne</span> <span class="string">&quot;<span class="variable">$x</span>*<span class="variable">$y</span>=<span class="variable">$</span>[ <span class="variable">$x</span>*<span class="variable">$y</span> ]\t&quot;</span></span><br><span class="line">                let x++</span><br><span class="line">        done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y++</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="三、阶段性总结"><a href="#三、阶段性总结" class="headerlink" title="三、阶段性总结"></a>三、阶段性总结</h3><h4 id="1-变量定义"><a href="#1-变量定义" class="headerlink" title="1. 变量定义"></a>1. 变量定义</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">普通变量定义：</span><br><span class="line">变量名=值shell变量默认可以赋予任何类型</span><br><span class="line"><span class="variable">$</span>变量名<span class="variable">$</span>&#123;变量名&#125;<span class="variable">$</span>&#123;变量名:从第几个字符开始:截取几个字符&#125;</span><br><span class="line">unset 变量名</span><br><span class="line"></span><br><span class="line">交互式：</span><br><span class="line">read 变量名</span><br><span class="line"><span class="literal">-p</span></span><br><span class="line"><span class="literal">-t</span></span><br><span class="line"><span class="literal">-s</span></span><br><span class="line"><span class="literal">-n</span></span><br><span class="line"></span><br><span class="line">数组定义：</span><br><span class="line">array=(var1 var2 var3 ...)</span><br><span class="line">array[<span class="number">0</span>]=var1</span><br><span class="line">array[<span class="number">1</span>]=var2</span><br><span class="line">array[<span class="number">2</span>]=var3</span><br><span class="line">普通数组：数组的索引是整数</span><br><span class="line"></span><br><span class="line">定义关联数组</span><br><span class="line">关联数组：索引是字符串</span><br><span class="line"></span><br><span class="line">获取数组里的元素：</span><br><span class="line"><span class="variable">$</span>&#123;array[*]&#125;</span><br><span class="line"><span class="variable">$</span>&#123;array[<span class="number">2</span>]&#125;</span><br><span class="line"><span class="variable">$</span>&#123;array[<span class="selector-tag">@</span>]:<span class="number">1</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="variable">$</span>&#123;!array[<span class="selector-tag">@</span>]&#125;获取数组的索引号（下标）</span><br><span class="line"><span class="variable">$</span>&#123;<span class="comment">#array[@]&#125;获取数组索引号的个数</span></span><br><span class="line"></span><br><span class="line">定义有类型的变量：</span><br><span class="line">declare</span><br><span class="line"><span class="literal">-i</span></span><br><span class="line"><span class="literal">-x</span></span><br><span class="line"><span class="literal">-a</span></span><br><span class="line"><span class="literal">-A</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-循环语句"><a href="#2-循环语句" class="headerlink" title="2. 循环语句"></a>2. 循环语句</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>:</span><br><span class="line">列表循环、非列表循环、类C风格循环次数已知</span><br><span class="line"><span class="keyword">while</span>：</span><br><span class="line">条件为真，进入循环，条件为假，退出循环循环次数跟条件有关</span><br><span class="line"><span class="keyword">until</span>：</span><br><span class="line">条件为假，进入循环，条件为真，退出循环循环次数跟条件有关</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-影响shell程序的内置命令"><a href="#3-影响shell程序的内置命令" class="headerlink" title="3. 影响shell程序的内置命令"></a>3. 影响shell程序的内置命令</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exit</span>退出整个程序</span><br><span class="line"><span class="keyword">break</span>   结束当前循环，或跳出本层循环</span><br><span class="line"><span class="keyword">continue</span> 忽略本次循环剩余的代码，直接进行下一次循环</span><br><span class="line">shift使位置参数向左移动，默认移动<span class="number">1</span>位，可以使用shift <span class="number">2</span></span><br><span class="line"></span><br><span class="line">以下脚本都能够实现用户自定义输入数字，然后脚本计算和：</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># cat shift.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$</span><span class="comment"># -ne 0 ]</span></span><br><span class="line"><span class="type">do</span></span><br><span class="line"><span class="type">let</span> <span class="type">sum</span>=<span class="variable">$sum</span>+<span class="variable">$1</span></span><br><span class="line"><span class="type">shift</span></span><br><span class="line"><span class="type">done</span></span><br><span class="line"><span class="type">echo</span> <span class="type">sum</span>=<span class="variable">$sum</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># cat for3.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="type">sum</span>=<span class="number">0</span></span><br><span class="line"><span class="type">for</span> <span class="type">i</span></span><br><span class="line"><span class="type">do</span></span><br><span class="line"><span class="type">let</span> <span class="type">sum</span>=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line"><span class="type">done</span></span><br><span class="line"><span class="type">echo</span> <span class="type">sum</span>=<span class="variable">$sum</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:</span><br><span class="line"><span class="type">true</span></span><br><span class="line"><span class="type">false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-补充扩展expect"><a href="#4-补充扩展expect" class="headerlink" title="4. 补充扩展expect"></a>4. 补充扩展expect</h4><p>expect 自动应答  tcl语言</p><p><strong>需求1：</strong>A远程登录到server上什么都不做</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="comment"># 开启一个程序</span></span><br><span class="line">spawn ssh root@<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="comment"># 捕获相关内容</span></span><br><span class="line">expect &#123;</span><br><span class="line">        <span class="string">&quot;(yes/no)?&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">        <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;123456\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact   //交互</span><br><span class="line"></span><br><span class="line">脚本执行方式：</span><br><span class="line"><span class="comment"># ./expect1.sh</span></span><br><span class="line"><span class="comment"># /shell04/expect1.sh</span></span><br><span class="line"><span class="comment"># expect -f expect1.sh</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）定义变量</span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> ip <span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line"><span class="built_in">set</span> pass <span class="number">123456</span></span><br><span class="line"><span class="built_in">set</span> timeout <span class="number">5</span></span><br><span class="line">spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）使用位置参数</span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> ip [ <span class="type">lindex</span> <span class="variable">$argv</span> <span class="number">0</span> ]</span><br><span class="line"><span class="built_in">set</span> pass [ <span class="type">lindex</span> <span class="variable">$argv</span> <span class="number">1</span> ]</span><br><span class="line"><span class="built_in">set</span> timeout <span class="number">5</span></span><br><span class="line">spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>需求2：</strong>A远程登录到server上操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> ip <span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="built_in">set</span> pass <span class="number">123456</span></span><br><span class="line"><span class="built_in">set</span> timeout <span class="number">5</span></span><br><span class="line">spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">expect <span class="string">&quot;#&quot;</span></span><br><span class="line">send <span class="string">&quot;rm -rf /tmp/*\r&quot;</span></span><br><span class="line">send <span class="string">&quot;touch /tmp/file&#123;1..3&#125;\r&quot;</span></span><br><span class="line">send <span class="string">&quot;date\r&quot;</span></span><br><span class="line">send <span class="string">&quot;exit\r&quot;</span></span><br><span class="line">expect eof</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>需求3：</strong>shell脚本和expect结合使用，在多台服务器上创建1个用户</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell04</span>]<span class="comment"># cat ip.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> <span class="number">123456</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.2</span> <span class="number">123456</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. 循环</span><br><span class="line"><span class="number">2</span>. 登录远程主机——&gt;ssh——&gt;从ip.txt文件里获取IP和密码分别赋值给两个变量</span><br><span class="line"><span class="number">3</span>. 使用expect程序来解决交互问题</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 循环在指定的服务器上创建用户和文件</span></span><br><span class="line"><span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">/usr/bin/expect &lt;&lt;<span class="literal">-END</span> &amp;&gt;/dev/null</span><br><span class="line">spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect <span class="string">&quot;#&quot;</span> &#123; send <span class="string">&quot;useradd yy1;rm -rf /tmp/*;exit\r&quot;</span> &#125;</span><br><span class="line">expect eof</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">done &lt; ip.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cat</span> ip.txt|<span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        /usr/bin/expect &lt;&lt;<span class="literal">-HOU</span></span><br><span class="line">        spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">        expect &#123;</span><br><span class="line">                <span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">                <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        expect <span class="string">&quot;#&quot;</span></span><br><span class="line">        send <span class="string">&quot;hostname\r&quot;</span></span><br><span class="line">        send <span class="string">&quot;exit\r&quot;</span></span><br><span class="line">        expect eof</span><br><span class="line">        HOU</span><br><span class="line"></span><br><span class="line">        &#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;user is ok....&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        /usr/bin/expect &lt;&lt;<span class="literal">-HOU</span></span><br><span class="line">        spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">        expect &#123;</span><br><span class="line">                <span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">                <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        expect <span class="string">&quot;#&quot;</span></span><br><span class="line">        send <span class="string">&quot;hostname\r&quot;</span></span><br><span class="line">        send <span class="string">&quot;exit\r&quot;</span></span><br><span class="line">        expect eof</span><br><span class="line">        HOU</span><br><span class="line"></span><br><span class="line">        &#125;&amp;</span><br><span class="line">done&lt;ip.txt</span><br><span class="line">wait</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;user is ok....&quot;</span></span><br></pre></td></tr></table></figure><h3 id="四、综合案例"><a href="#四、综合案例" class="headerlink" title="四、综合案例"></a>四、综合案例</h3><h4 id="实战案例2"><a href="#实战案例2" class="headerlink" title="实战案例2"></a>实战案例2</h4><p>写一个脚本，将跳板机上yunwei用户的公钥推送到局域网内可以ping通的所有机器上</p><p>说明：主机和密码文件已经提供</p><p>10.1.1.1:123456</p><p>10.1.1.2:123456</p><h5 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h5><ul><li><p><strong>关闭防火墙和selinux</strong></p></li><li><p>判断ssh服务是否开启（默认ok）</p></li><li><p>&#x3D;&#x3D;循环判断给定密码文件里的哪些IP是可以ping通&#x3D;&#x3D;  ip  pass</p></li><li><p>&#x3D;&#x3D;判断IP是否可以ping通——&gt;$?—&gt;流程控制语句&#x3D;&#x3D;</p></li><li><p>&#x3D;&#x3D;密码文件里获取主机的IP和密码保存变量&#x3D;&#x3D;  ip  pass</p></li><li><p>&#x3D;&#x3D;判断公钥是否存在—&gt;不存在创建它&#x3D;&#x3D;</p></li><li><p>&#x3D;&#x3D;ssh-copy-id 将跳板机上的yunwei用户的公钥推送到远程主机—&gt;expect解决交互&#x3D;&#x3D;</p></li><li><p>&#x3D;&#x3D;将ping通的主机IP单独保存到一个文件&#x3D;&#x3D;</p></li><li><p>&#x3D;&#x3D;测试验证&#x3D;&#x3D;</p></li></ul><h5 id="代码拆分"><a href="#代码拆分" class="headerlink" title="代码拆分"></a>代码拆分</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.判断yunwei用户的公钥是否存在</span><br><span class="line">[ ! -<span class="type">f</span> /<span class="type">hoem</span>/<span class="type">yunwei</span>/<span class="type">.ssh</span>/<span class="type">id_rsa</span> ] &amp;&amp; ssh<span class="literal">-keygen</span> <span class="literal">-P</span> <span class="string">&#x27;&#x27;</span> <span class="operator">-f</span> ./id_rsa</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.获取IP并且判断是否可以ping通</span><br><span class="line"><span class="number">1</span>)主机密码文件ip.txt</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span>:<span class="number">123456</span></span><br><span class="line">   <span class="number">10.1</span>.<span class="number">1.2</span>:<span class="number">123456</span></span><br><span class="line"><span class="number">2</span>) 循环判断主机是否ping通</span><br><span class="line">tr <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27; &#x27;</span> &lt; ip.txt|<span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">ping <span class="literal">-c1</span> <span class="variable">$ip</span> &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">      推送公钥</span><br><span class="line">      fi</span><br><span class="line">done</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>.非交互式推送公钥</span><br><span class="line">/usr/bin/expect &lt;&lt;<span class="literal">-END</span> &amp;&gt;/dev/null</span><br><span class="line">        spawn ssh<span class="literal">-copy-id</span> root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">        expect &#123;</span><br><span class="line">                <span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">                <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        expect eof</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="最终实现"><a href="#最终实现" class="headerlink" title="最终实现"></a>最终实现</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">环境准备：</span><br><span class="line">jumper<span class="literal">-server</span>有yunwei用户</span><br><span class="line"></span><br><span class="line">yunwei用户sudo授权：</span><br><span class="line">visudo</span><br><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">yunwei  ALL=(root)      NOPASSWD:ALL,!/sbin/shutdown,!/sbin/init,!/bin/<span class="built_in">rm</span> <span class="literal">-rf</span> /</span><br><span class="line"></span><br><span class="line">解释说明：</span><br><span class="line"><span class="number">1</span>）第一个字段yunwei指定的是用户：可以是用户名，也可以是别名。每个用户设置一行，多个用户设置多行，也可以将多个用户设置成一个别名后再进行设置。</span><br><span class="line"><span class="number">2</span>）第二个字段ALL指定的是用户所在的主机：可以是ip,也可以是主机名，表示该sudo设置只在该主机上生效，ALL表示在所有主机上都生效！限制的一般都是本机，也就是限制使用这个文件的主机;一般都指定为<span class="string">&quot;ALL&quot;</span>表示所有的主机，不管文件拷到那里都可以用。比如：<span class="number">10.1</span>.<span class="number">1.1</span>=...则表示只在当前主机生效。</span><br><span class="line"><span class="number">3</span>）第三个字段（root）括号里指定的也是用户：指定以什么用户身份执行sudo，即使用sudo后可以享有所有root账号下的权限。如果要排除个别用户，可以在括号内设置，比如ALL=(ALL,!oracle,!pos)。</span><br><span class="line"><span class="number">4</span>）第四个字段ALL指定的是执行的命令：即使用sudo后可以执行所有的命令。除了关机和删除根内容以外；也可以设置别名。NOPASSWD: ALL表示使用sudo的不需要输入密码。</span><br><span class="line"><span class="number">5</span>）也可以授权给一个用户组</span><br><span class="line">%admin ALL=(ALL) ALL表示admin组里的所有成员可以在任何主机上以任何用户身份执行任何命令</span><br><span class="line"></span><br><span class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line">脚本实现：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#判断公钥是否存在</span></span><br><span class="line">[ ! -<span class="type">f</span> /<span class="type">home</span>/<span class="type">yunwei</span>/<span class="type">.ssh</span>/<span class="type">id_rsa</span> ] &amp;&amp; ssh<span class="literal">-keygen</span> <span class="literal">-P</span> <span class="string">&#x27;&#x27;</span> <span class="operator">-f</span> ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment">#循环判断主机是否ping通，如果ping通推送公钥</span></span><br><span class="line">tr <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27; &#x27;</span> &lt; /shell04/ip.txt|<span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">        ping <span class="literal">-c1</span> <span class="variable">$ip</span> &amp;&gt;/dev/null</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$ip</span> &gt;&gt; ~/ip_up.txt</span><br><span class="line">        /usr/bin/expect &lt;&lt;<span class="literal">-END</span> &amp;&gt;/dev/null</span><br><span class="line">         spawn ssh<span class="literal">-copy-id</span> root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">         expect &#123;</span><br><span class="line">                <span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">                <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        expect eof</span><br><span class="line">        <span class="keyword">END</span></span><br><span class="line">        fi</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;公钥已经推送完毕，正在测试....&quot;</span></span><br><span class="line"><span class="comment">#测试验证</span></span><br><span class="line">remote_ip=`tail <span class="literal">-1</span> ~/ip_up.txt`</span><br><span class="line">ssh root<span class="selector-tag">@</span><span class="variable">$remote_ip</span> hostname &amp;&gt;/dev/null</span><br><span class="line">test <span class="variable">$</span>? <span class="operator">-eq</span> <span class="number">0</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;公钥成功推送完毕&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="实战案例3"><a href="#实战案例3" class="headerlink" title="实战案例3"></a>实战案例3</h4><p>写一个脚本，统计web服务的不同&#x3D;&#x3D;连接状态&#x3D;&#x3D;个数</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#count_http_80_state</span></span><br><span class="line"><span class="comment">#统计每个状态的个数</span></span><br><span class="line">declare <span class="literal">-A</span> array1</span><br><span class="line">states=`ss <span class="literal">-ant</span>|grep <span class="number">80</span>|cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$states</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        let array1[<span class="variable">$i</span>]++</span><br><span class="line">done</span><br><span class="line"><span class="comment">#通过遍历数组里的索引和元素打印出来</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="variable">$</span>&#123;!array1[<span class="selector-tag">@</span>]&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$j:</span><span class="variable">$</span>&#123;array1[<span class="variable">$j</span>]&#125;</span><br><span class="line">done</span><br><span class="line">        </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="五、课后作业"><a href="#五、课后作业" class="headerlink" title="五、课后作业"></a>五、课后作业</h3><p>1、将&#x2F;etc&#x2F;passwd里的用户名分类，分为管理员用户，系统用户，普通用户。<br>2、写一个倒计时脚本，要求显示离2019年1月1日（元旦）的凌晨0点，还有多少天，多少时，多少分，多少秒。<br>3、写一个脚本把一个目录内的所有&#x3D;&#x3D;空文件&#x3D;&#x3D;都删除，最后输出删除的文件的个数。</p>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
